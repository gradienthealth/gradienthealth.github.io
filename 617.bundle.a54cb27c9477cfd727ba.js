/*! For license information please see 617.bundle.a54cb27c9477cfd727ba.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([[617],{10074:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>S});var r=n(76805),s=n(8339),a=n(43001),o=(n(3827),n(11358)),i=n(47410),l=n(70179),u=n(17081),c=n(40853);function d(e,t){t?e.setAttribute("aria-hidden","true"):e.removeAttribute("aria-hidden")}function h(e){return parseInt((0,i.Mg)(e).getComputedStyle(e).paddingRight,10)||0}function p(e,t,n,r=[],s){const a=[t,n,...r];[].forEach.call(e.children,(e=>{const t=-1===a.indexOf(e),n=!function(e){const t=-1!==["TEMPLATE","SCRIPT","STYLE","LINK","MAP","META","NOSCRIPT","PICTURE","COL","COLGROUP","PARAM","SLOT","SOURCE","TRACK"].indexOf(e.tagName),n="INPUT"===e.tagName&&"hidden"===e.getAttribute("type");return t||n}(e);t&&n&&d(e,s)}))}function f(e,t){let n=-1;return e.some(((e,r)=>!!t(e)&&(n=r,!0))),n}function m(e,t){const n=[],r=e.container;if(!t.disableScrollLock){if(function(e){const t=(0,i.Bu)(e);return t.body===e?(0,i.Mg)(e).innerWidth>t.documentElement.clientWidth:e.scrollHeight>e.clientHeight}(r)){const e=(0,i.Ok)((0,i.Bu)(r));n.push({value:r.style.paddingRight,property:"padding-right",el:r}),r.style.paddingRight=`${h(r)+e}px`;const t=(0,i.Bu)(r).querySelectorAll(".mui-fixed");[].forEach.call(t,(t=>{n.push({value:t.style.paddingRight,property:"padding-right",el:t}),t.style.paddingRight=`${h(t)+e}px`}))}let e;if(r.parentNode instanceof DocumentFragment)e=(0,i.Bu)(r).body;else{const t=r.parentElement,n=(0,i.Mg)(r);e="HTML"===(null==t?void 0:t.nodeName)&&"scroll"===n.getComputedStyle(t).overflowY?t:r}n.push({value:e.style.overflow,property:"overflow",el:e},{value:e.style.overflowX,property:"overflow-x",el:e},{value:e.style.overflowY,property:"overflow-y",el:e}),e.style.overflow="hidden"}return()=>{n.forEach((({value:e,el:t,property:n})=>{e?t.style.setProperty(n,e):t.style.removeProperty(n)}))}}var g=n(97940),y=n(85005),b=n(42427);function x(e){return(0,b.Z)("MuiModal",e)}(0,y.Z)("MuiModal",["root","hidden"]);var v=n(2574);const w=["children","classes","className","closeAfterTransition","component","components","componentsProps","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","open","onTransitionEnter","onTransitionExited"];const k=new class{constructor(){this.containers=void 0,this.modals=void 0,this.modals=[],this.containers=[]}add(e,t){let n=this.modals.indexOf(e);if(-1!==n)return n;n=this.modals.length,this.modals.push(e),e.modalRef&&d(e.modalRef,!1);const r=function(e){const t=[];return[].forEach.call(e.children,(e=>{"true"===e.getAttribute("aria-hidden")&&t.push(e)})),t}(t);p(t,e.mount,e.modalRef,r,!0);const s=f(this.containers,(e=>e.container===t));return-1!==s?(this.containers[s].modals.push(e),n):(this.containers.push({modals:[e],container:t,restore:null,hiddenSiblings:r}),n)}mount(e,t){const n=f(this.containers,(t=>-1!==t.modals.indexOf(e))),r=this.containers[n];r.restore||(r.restore=m(r,t))}remove(e,t=!0){const n=this.modals.indexOf(e);if(-1===n)return n;const r=f(this.containers,(t=>-1!==t.modals.indexOf(e))),s=this.containers[r];if(s.modals.splice(s.modals.indexOf(e),1),this.modals.splice(n,1),0===s.modals.length)s.restore&&s.restore(),e.modalRef&&d(e.modalRef,t),p(s.container,e.mount,e.modalRef,s.hiddenSiblings,!1),this.containers.splice(r,1);else{const e=s.modals[s.modals.length-1];e.modalRef&&d(e.modalRef,!1)}return n}isTopModal(e){return this.modals.length>0&&this.modals[this.modals.length-1]===e}},S=a.forwardRef((function(e,t){var n,h;const{children:p,classes:f,className:m,closeAfterTransition:y=!1,component:b="div",components:S={},componentsProps:I={},container:N,disableAutoFocus:C=!1,disableEnforceFocus:T=!1,disableEscapeKeyDown:$=!1,disablePortal:E=!1,disableRestoreFocus:R=!1,disableScrollLock:A=!1,hideBackdrop:F=!1,keepMounted:O=!1,manager:D=k,onBackdropClick:_,onClose:M,onKeyDown:L,open:z,onTransitionEnter:P,onTransitionExited:B}=e,W=(0,s.Z)(e,w),[V,U]=a.useState(!0),G=a.useRef({}),Z=a.useRef(null),j=a.useRef(null),H=(0,i.c8)(j,t),q=function(e){return!!e.children&&e.children.props.hasOwnProperty("in")}(e),K=null==(n=e["aria-hidden"])||n,X=()=>(G.current.modalRef=j.current,G.current.mountNode=Z.current,G.current),Y=()=>{D.mount(X(),{disableScrollLock:A}),j.current.scrollTop=0},J=(0,i.Ai)((()=>{const e=function(e){return"function"==typeof e?e():e}(N)||(0,i.Bu)(Z.current).body;D.add(X(),e),j.current&&Y()})),Q=a.useCallback((()=>D.isTopModal(X())),[D]),ee=(0,i.Ai)((e=>{Z.current=e,e&&(z&&Q()?Y():d(j.current,K))})),te=a.useCallback((()=>{D.remove(X(),K)}),[D,K]);a.useEffect((()=>()=>{te()}),[te]),a.useEffect((()=>{z?J():q&&y||te()}),[z,te,q,y,J]);const ne=(0,r.Z)({},e,{classes:f,closeAfterTransition:y,disableAutoFocus:C,disableEnforceFocus:T,disableEscapeKeyDown:$,disablePortal:E,disableRestoreFocus:R,disableScrollLock:A,exited:V,hideBackdrop:F,keepMounted:O}),re=(e=>{const{open:t,exited:n,classes:r}=e,s={root:["root",!t&&n&&"hidden"]};return(0,l.Z)(s,x,r)})(ne);if(!O&&!z&&(!q||V))return null;const se=()=>{U(!1),P&&P()},ae=()=>{U(!0),B&&B(),y&&te()},oe={};void 0===p.props.tabIndex&&(oe.tabIndex="-1"),q&&(oe.onEnter=(0,i.ks)(se,p.props.onEnter),oe.onExited=(0,i.ks)(ae,p.props.onExited));const ie=S.Root||b,le=(0,u.Z)(ie,(0,r.Z)({role:"presentation"},W,I.root,{ref:H,onKeyDown:e=>{L&&L(e),"Escape"===e.key&&Q()&&($||(e.stopPropagation(),M&&M(e,"escapeKeyDown")))},className:(0,o.Z)(re.root,null==(h=I.root)?void 0:h.className,m)}),ne),ue=S.Backdrop,ce=(0,u.Z)(ue,(0,r.Z)({"aria-hidden":!0,open:z,onClick:e=>{e.target===e.currentTarget&&(_&&_(e),M&&M(e,"backdropClick"))}},I.backdrop),ne);return(0,v.jsx)(c.Z,{ref:ee,container:N,disablePortal:E,children:(0,v.jsxs)(ie,(0,r.Z)({},le,{children:[!F&&ue?(0,v.jsx)(ue,(0,r.Z)({},ce)):null,(0,v.jsx)(g.Z,{disableEnforceFocus:T,disableAutoFocus:C,disableRestoreFocus:R,isEnabled:Q,open:z,children:a.cloneElement(p,oe)})]}))})}))},40853:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(43001),s=n(14347),a=(n(3827),n(47410));const o=r.forwardRef((function(e,t){const{children:n,container:o,disablePortal:i=!1}=e,[l,u]=r.useState(null),c=(0,a.c8)(r.isValidElement(n)?n.ref:null,t);return(0,a.Q4)((()=>{i||u(function(e){return"function"==typeof e?e():e}(o)||document.body)}),[o,i]),(0,a.Q4)((()=>{if(l&&!i)return(0,a.X8)(t,l),()=>{(0,a.X8)(t,null)}}),[t,l,i]),i?r.isValidElement(n)?r.cloneElement(n,{ref:c}):n:l?s.createPortal(n,l):l}))},97940:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(43001),s=(n(3827),n(47410)),a=n(2574);const o=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'].join(",");function i(e){const t=[],n=[];return Array.from(e.querySelectorAll(o)).forEach(((e,r)=>{const s=function(e){const t=parseInt(e.getAttribute("tabindex"),10);return Number.isNaN(t)?"true"===e.contentEditable||("AUDIO"===e.nodeName||"VIDEO"===e.nodeName||"DETAILS"===e.nodeName)&&null===e.getAttribute("tabindex")?0:e.tabIndex:t}(e);-1!==s&&function(e){return!(e.disabled||"INPUT"===e.tagName&&"hidden"===e.type||function(e){if("INPUT"!==e.tagName||"radio"!==e.type)return!1;if(!e.name)return!1;const t=t=>e.ownerDocument.querySelector(`input[type="radio"]${t}`);let n=t(`[name="${e.name}"]:checked`);return n||(n=t(`[name="${e.name}"]`)),n!==e}(e))}(e)&&(0===s?t.push(e):n.push({documentOrder:r,tabIndex:s,node:e}))})),n.sort(((e,t)=>e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex)).map((e=>e.node)).concat(t)}function l(){return!0}const u=function(e){const{children:t,disableAutoFocus:n=!1,disableEnforceFocus:o=!1,disableRestoreFocus:u=!1,getTabbable:c=i,isEnabled:d=l,open:h}=e,p=r.useRef(),f=r.useRef(null),m=r.useRef(null),g=r.useRef(null),y=r.useRef(null),b=r.useRef(!1),x=r.useRef(null),v=(0,s.c8)(t.ref,x),w=r.useRef(null);r.useEffect((()=>{h&&x.current&&(b.current=!n)}),[n,h]),r.useEffect((()=>{if(!h||!x.current)return;const e=(0,s.Bu)(x.current);return x.current.contains(e.activeElement)||(x.current.hasAttribute("tabIndex")||x.current.setAttribute("tabIndex",-1),b.current&&x.current.focus()),()=>{u||(g.current&&g.current.focus&&(p.current=!0,g.current.focus()),g.current=null)}}),[h]),r.useEffect((()=>{if(!h||!x.current)return;const e=(0,s.Bu)(x.current),t=t=>{const{current:n}=x;if(null!==n)if(e.hasFocus()&&!o&&d()&&!p.current){if(!n.contains(e.activeElement)){if(t&&y.current!==t.target||e.activeElement!==y.current)y.current=null;else if(null!==y.current)return;if(!b.current)return;let a=[];if(e.activeElement!==f.current&&e.activeElement!==m.current||(a=c(x.current)),a.length>0){var r,s;const e=Boolean((null==(r=w.current)?void 0:r.shiftKey)&&"Tab"===(null==(s=w.current)?void 0:s.key)),t=a[0],n=a[a.length-1];e?n.focus():t.focus()}else n.focus()}}else p.current=!1},n=t=>{w.current=t,!o&&d()&&"Tab"===t.key&&e.activeElement===x.current&&t.shiftKey&&(p.current=!0,m.current.focus())};e.addEventListener("focusin",t),e.addEventListener("keydown",n,!0);const r=setInterval((()=>{"BODY"===e.activeElement.tagName&&t()}),50);return()=>{clearInterval(r),e.removeEventListener("focusin",t),e.removeEventListener("keydown",n,!0)}}),[n,o,u,d,h,c]);const k=e=>{null===g.current&&(g.current=e.relatedTarget),b.current=!0};return(0,a.jsxs)(r.Fragment,{children:[(0,a.jsx)("div",{tabIndex:0,onFocus:k,ref:f,"data-test":"sentinelStart"}),r.cloneElement(t,{ref:v,onFocus:e=>{null===g.current&&(g.current=e.relatedTarget),b.current=!0,y.current=e.target;const n=t.props.onFocus;n&&n(e)}}),(0,a.jsx)("div",{tabIndex:0,onFocus:k,ref:m,"data-test":"sentinelEnd"})]})}},70179:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.V_});var r=n(47410)},42427:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.ZU});var r=n(47410)},85005:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.IO});var r=n(47410)},4647:(e,t,n)=>{"use strict";n.d(t,{uz:()=>v,d6:()=>d.Z,sI:()=>c.Z,Xd:()=>r.Z,V_:()=>u.Z});n(17081);var r=n(85726);var s=n(76805),a=n(8339),o=n(47410);n(11358);var i=n(43001);function l(e){return void 0!==e.normalize?e.normalize("NFD").replace(/[\u0300-\u036f]/g,""):e}!function(e={}){const{ignoreAccents:t=!0,ignoreCase:n=!0,limit:r,matchFrom:s="any",stringify:a,trim:o=!1}=e}();n(3827);var u=n(70179);var c=n(85005),d=n(42427);(0,c.Z)("BaseBadge",["root","badge","invisible"]);var h=n(2574);(0,c.Z)("ButtonUnstyled",["root","active","disabled","focusVisible"]);(0,c.Z)("BaseFormControl",["root","disabled","error","filled","focused","required"]);(0,c.Z)("MuiInput",["root","formControl","focused","disabled","error","multiline","input","inputMultiline","inputTypeSearch","adornedStart","adornedEnd"]);var p;!function(e){e.blur="blur",e.focus="focus",e.keyDown="keyDown",e.optionClick="optionClick",e.optionHover="optionHover",e.optionsChange="optionsChange",e.setValue="setValue",e.setHighlight="setHighlight",e.textNavigation="textNagivation"}(p||(p={}));const f=i.createContext(null);f.displayName="MenuUnstyledContext";(0,c.Z)("MuiMenuUnstyled",["root","listbox","expanded"]);Math.max,Math.min,Math.round;n(40853);(0,c.Z)("MuiMenuItemUnstyled",["root","disabled","focusVisible"]);n(10074);(0,c.Z)("MuiSelectUnstyled",["root","button","listbox","popper","active","expanded","disabled","focusVisible"]);(0,c.Z)("MuiOptionGroupUnstyled",["root","label","list"]);(0,c.Z)("MuiOptionUnstyled",["root","disabled","selected","highlighted"]);(0,c.Z)("MuiSlider",["root","active","focusVisible","disabled","dragging","marked","vertical","trackInverted","trackFalse","rail","track","mark","markActive","markLabel","markLabelActive","thumb","valueLabel","valueLabelOpen","valueLabelCircle","valueLabelLabel"]);(0,c.Z)("MuiSwitch",["root","input","track","thumb","checked","disabled","focusVisible","readOnly"]);(0,c.Z)("TabPanelUnstyled",["root","hidden"]);(0,c.Z)("TabsUnstyled",["root","horizontal","vertical"]);(0,c.Z)("TabsListUnstyled",["root","horizontal","vertical"]);n(65031);(0,c.Z)("TabUnstyled",["root","selected","disabled"]);var m=n(14347);const g=["onChange","maxRows","minRows","style","value"];function y(e,t){return parseInt(e[t],10)||0}const b={visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"};function x(e){return null==e||0===Object.keys(e).length}const v=i.forwardRef((function(e,t){const{onChange:n,maxRows:r,minRows:l=1,style:u,value:c}=e,d=(0,a.Z)(e,g),{current:p}=i.useRef(null!=c),f=i.useRef(null),v=(0,o.c8)(t,f),w=i.useRef(null),k=i.useRef(0),[S,I]=i.useState({}),N=i.useCallback((()=>{const t=f.current,n=(0,o.Mg)(t).getComputedStyle(t);if("0px"===n.width)return{};const s=w.current;s.style.width=n.width,s.value=t.value||e.placeholder||"x","\n"===s.value.slice(-1)&&(s.value+=" ");const a=n["box-sizing"],i=y(n,"padding-bottom")+y(n,"padding-top"),u=y(n,"border-bottom-width")+y(n,"border-top-width"),c=s.scrollHeight;s.value="x";const d=s.scrollHeight;let h=c;l&&(h=Math.max(Number(l)*d,h)),r&&(h=Math.min(Number(r)*d,h)),h=Math.max(h,d);return{outerHeightStyle:h+("border-box"===a?i+u:0),overflow:Math.abs(h-c)<=1}}),[r,l,e.placeholder]),C=(e,t)=>{const{outerHeightStyle:n,overflow:r}=t;return k.current<20&&(n>0&&Math.abs((e.outerHeightStyle||0)-n)>1||e.overflow!==r)?(k.current+=1,{overflow:r,outerHeightStyle:n}):e},T=i.useCallback((()=>{const e=N();x(e)||I((t=>C(t,e)))}),[N]);i.useEffect((()=>{const e=(0,o._v)((()=>{k.current=0,f.current&&(()=>{const e=N();x(e)||(0,m.flushSync)((()=>{I((t=>C(t,e)))}))})()})),t=(0,o.Mg)(f.current);let n;return t.addEventListener("resize",e),"undefined"!=typeof ResizeObserver&&(n=new ResizeObserver(e),n.observe(f.current)),()=>{e.clear(),t.removeEventListener("resize",e),n&&n.disconnect()}})),(0,o.Q4)((()=>{T()})),i.useEffect((()=>{k.current=0}),[c]);return(0,h.jsxs)(i.Fragment,{children:[(0,h.jsx)("textarea",(0,s.Z)({value:c,onChange:e=>{k.current=0,p||T(),n&&n(e)},ref:v,rows:l,style:(0,s.Z)({height:S.outerHeightStyle,overflow:S.overflow?"hidden":null},u)},d)),(0,h.jsx)("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:w,tabIndex:-1,style:(0,s.Z)({},b,u,{padding:0})})]})}));n(97940)},17081:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(76805),s=n(85726);function a(e,t={},n){return(0,s.Z)(e)?t:(0,r.Z)({},t,{ownerState:(0,r.Z)({},t.ownerState,n)})}},85726:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=function(e){return"string"==typeof e}},32122:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),o=(0,s.default)((0,a.jsx)("path",{d:"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"}),"ArrowBack");t.Z=o},46258:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),o=(0,s.default)((0,a.jsx)("path",{d:"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"}),"ArrowForward");t.Z=o},36605:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),o=(0,s.default)((0,a.jsx)("path",{d:"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}),"Star");t.Z=o},21304:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r.createSvgIcon}});var r=n(7103)},58041:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>te});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(47410)),i=n(7103),l=n(4647),u=n(13764);var c=n(81455);n(80734),n(91348);var d=n(66954),h=n(10543);var p=n(35891);const f=["colorSchemes","cssVarPrefix"],m=["palette"],g=[...Array(25)].map(((e,t)=>{if(0===t)return;const n=(0,p.R)(t);return`linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`}));function y(e,t,n){e[t]=e[t]||n}var b=n(46554);const x=function(e={},...t){var n,a,i,l,d,h;const{colorSchemes:p={},cssVarPrefix:b="mui"}=e,x=(0,r.Z)(e,f),v=((e="mui")=>(0,u.so)(e))(b),w=(0,c.Z)((0,s.Z)({},x,p.light&&{palette:null==(n=p.light)?void 0:n.palette})),{palette:k}=w,S=(0,r.Z)(w,m),{palette:I}=(0,c.Z)({palette:(0,s.Z)({mode:"dark"},null==(a=p.dark)?void 0:a.palette)});let N=(0,s.Z)({},S,{cssVarPrefix:b,getCssVar:v,colorSchemes:(0,s.Z)({},p,{light:(0,s.Z)({},p.light,{palette:k,opacity:(0,s.Z)({inputPlaceholder:.42,inputUnderline:.42,switchTrackDisabled:.12,switchTrack:.38},null==(i=p.light)?void 0:i.opacity),overlays:(null==(l=p.light)?void 0:l.overlays)||[]}),dark:(0,s.Z)({},p.dark,{palette:I,opacity:(0,s.Z)({inputPlaceholder:.5,inputUnderline:.7,switchTrackDisabled:.2,switchTrack:.3},null==(d=p.dark)?void 0:d.opacity),overlays:(null==(h=p.dark)?void 0:h.overlays)||g})})});return Object.keys(N.colorSchemes).forEach((e=>{const t=N.colorSchemes[e].palette;var n;if("light"===e?(y(t.common,"background","#fff"),y(t.common,"onBackground","#000")):(y(t.common,"background","#000"),y(t.common,"onBackground","#fff")),n=t,["Alert","AppBar","Avatar","Chip","FilledInput","LinearProgress","Skeleton","Slider","SnackbarContent","SpeedDialAction","StepConnector","StepContent","Switch","TableCell","Tooltip"].forEach((e=>{n[e]||(n[e]={})})),"light"===e){y(t.Alert,"errorColor",(0,u._j)(t.error.light,.6)),y(t.Alert,"infoColor",(0,u._j)(t.info.light,.6)),y(t.Alert,"successColor",(0,u._j)(t.success.light,.6)),y(t.Alert,"warningColor",(0,u._j)(t.warning.light,.6)),y(t.Alert,"errorFilledBg",v("palette-error-main")),y(t.Alert,"infoFilledBg",v("palette-info-main")),y(t.Alert,"successFilledBg",v("palette-success-main")),y(t.Alert,"warningFilledBg",v("palette-warning-main")),y(t.Alert,"errorFilledColor",k.getContrastText(t.error.main)),y(t.Alert,"infoFilledColor",k.getContrastText(t.info.main)),y(t.Alert,"successFilledColor",k.getContrastText(t.success.main)),y(t.Alert,"warningFilledColor",k.getContrastText(t.warning.main)),y(t.Alert,"errorStandardBg",(0,u.$n)(t.error.light,.9)),y(t.Alert,"infoStandardBg",(0,u.$n)(t.info.light,.9)),y(t.Alert,"successStandardBg",(0,u.$n)(t.success.light,.9)),y(t.Alert,"warningStandardBg",(0,u.$n)(t.warning.light,.9)),y(t.Alert,"errorIconColor",v("palette-error-light")),y(t.Alert,"infoIconColor",v("palette-info-light")),y(t.Alert,"successIconColor",v("palette-success-light")),y(t.Alert,"warningIconColor",v("palette-warning-light")),y(t.AppBar,"defaultBg",v("palette-grey-100")),y(t.Avatar,"defaultBg",v("palette-grey-400")),y(t.Chip,"defaultBorder",v("palette-grey-400")),y(t.Chip,"defaultAvatarColor",v("palette-grey-700")),y(t.Chip,"defaultIconColor",v("palette-grey-700")),y(t.FilledInput,"bg","rgba(0, 0, 0, 0.06)"),y(t.FilledInput,"hoverBg","rgba(0, 0, 0, 0.09)"),y(t.FilledInput,"disabledBg","rgba(0, 0, 0, 0.12)"),y(t.LinearProgress,"primaryBg",(0,u.$n)(t.primary.main,.62)),y(t.LinearProgress,"secondaryBg",(0,u.$n)(t.secondary.main,.62)),y(t.LinearProgress,"errorBg",(0,u.$n)(t.error.main,.62)),y(t.LinearProgress,"infoBg",(0,u.$n)(t.info.main,.62)),y(t.LinearProgress,"successBg",(0,u.$n)(t.success.main,.62)),y(t.LinearProgress,"warningBg",(0,u.$n)(t.warning.main,.62)),y(t.Skeleton,"bg",`rgba(${v("palette-text-primaryChannel")} / 0.11)`),y(t.Slider,"primaryTrack",(0,u.$n)(t.primary.main,.62)),y(t.Slider,"secondaryTrack",(0,u.$n)(t.secondary.main,.62)),y(t.Slider,"errorTrack",(0,u.$n)(t.error.main,.62)),y(t.Slider,"infoTrack",(0,u.$n)(t.info.main,.62)),y(t.Slider,"successTrack",(0,u.$n)(t.success.main,.62)),y(t.Slider,"warningTrack",(0,u.$n)(t.warning.main,.62));const e=(0,u._4)(t.background.default,.8);y(t.SnackbarContent,"bg",e),y(t.SnackbarContent,"color",k.getContrastText(e)),y(t.SpeedDialAction,"fabHoverBg",(0,u._4)(t.background.paper,.15)),y(t.StepConnector,"border",v("palette-grey-400")),y(t.StepContent,"border",v("palette-grey-400")),y(t.Switch,"defaultColor",v("palette-common-white")),y(t.Switch,"defaultDisabledColor",v("palette-grey-100")),y(t.Switch,"primaryDisabledColor",(0,u.$n)(t.primary.main,.62)),y(t.Switch,"secondaryDisabledColor",(0,u.$n)(t.secondary.main,.62)),y(t.Switch,"errorDisabledColor",(0,u.$n)(t.error.main,.62)),y(t.Switch,"infoDisabledColor",(0,u.$n)(t.info.main,.62)),y(t.Switch,"successDisabledColor",(0,u.$n)(t.success.main,.62)),y(t.Switch,"warningDisabledColor",(0,u.$n)(t.warning.main,.62)),y(t.TableCell,"border",(0,u.$n)((0,u.Fq)(t.divider,1),.88)),y(t.Tooltip,"bg",(0,u.Fq)(t.grey[700],.92))}else{y(t.Alert,"errorColor",(0,u.$n)(t.error.light,.6)),y(t.Alert,"infoColor",(0,u.$n)(t.info.light,.6)),y(t.Alert,"successColor",(0,u.$n)(t.success.light,.6)),y(t.Alert,"warningColor",(0,u.$n)(t.warning.light,.6)),y(t.Alert,"errorFilledBg",v("palette-error-dark")),y(t.Alert,"infoFilledBg",v("palette-info-dark")),y(t.Alert,"successFilledBg",v("palette-success-dark")),y(t.Alert,"warningFilledBg",v("palette-warning-dark")),y(t.Alert,"errorFilledColor",I.getContrastText(t.error.dark)),y(t.Alert,"infoFilledColor",I.getContrastText(t.info.dark)),y(t.Alert,"successFilledColor",I.getContrastText(t.success.dark)),y(t.Alert,"warningFilledColor",I.getContrastText(t.warning.dark)),y(t.Alert,"errorStandardBg",(0,u._j)(t.error.light,.9)),y(t.Alert,"infoStandardBg",(0,u._j)(t.info.light,.9)),y(t.Alert,"successStandardBg",(0,u._j)(t.success.light,.9)),y(t.Alert,"warningStandardBg",(0,u._j)(t.warning.light,.9)),y(t.Alert,"errorIconColor",v("palette-error-main")),y(t.Alert,"infoIconColor",v("palette-info-main")),y(t.Alert,"successIconColor",v("palette-success-main")),y(t.Alert,"warningIconColor",v("palette-warning-main")),y(t.AppBar,"defaultBg",v("palette-grey-900")),y(t.AppBar,"darkBg",v("palette-background-paper")),y(t.AppBar,"darkColor",v("palette-text-primary")),y(t.Avatar,"defaultBg",v("palette-grey-600")),y(t.Chip,"defaultBorder",v("palette-grey-700")),y(t.Chip,"defaultAvatarColor",v("palette-grey-300")),y(t.Chip,"defaultIconColor",v("palette-grey-300")),y(t.FilledInput,"bg","rgba(255, 255, 255, 0.09)"),y(t.FilledInput,"hoverBg","rgba(255, 255, 255, 0.13)"),y(t.FilledInput,"disabledBg","rgba(255, 255, 255, 0.12)"),y(t.LinearProgress,"primaryBg",(0,u._j)(t.primary.main,.5)),y(t.LinearProgress,"secondaryBg",(0,u._j)(t.secondary.main,.5)),y(t.LinearProgress,"errorBg",(0,u._j)(t.error.main,.5)),y(t.LinearProgress,"infoBg",(0,u._j)(t.info.main,.5)),y(t.LinearProgress,"successBg",(0,u._j)(t.success.main,.5)),y(t.LinearProgress,"warningBg",(0,u._j)(t.warning.main,.5)),y(t.Skeleton,"bg",`rgba(${v("palette-text-primaryChannel")} / 0.13)`),y(t.Slider,"primaryTrack",(0,u._j)(t.primary.main,.5)),y(t.Slider,"secondaryTrack",(0,u._j)(t.secondary.main,.5)),y(t.Slider,"errorTrack",(0,u._j)(t.error.main,.5)),y(t.Slider,"infoTrack",(0,u._j)(t.info.main,.5)),y(t.Slider,"successTrack",(0,u._j)(t.success.main,.5)),y(t.Slider,"warningTrack",(0,u._j)(t.warning.main,.5));const e=(0,u._4)(t.background.default,.98);y(t.SnackbarContent,"bg",e),y(t.SnackbarContent,"color",I.getContrastText(e)),y(t.SpeedDialAction,"fabHoverBg",(0,u._4)(t.background.paper,.15)),y(t.StepConnector,"border",v("palette-grey-600")),y(t.StepContent,"border",v("palette-grey-600")),y(t.Switch,"defaultColor",v("palette-grey-300")),y(t.Switch,"defaultDisabledColor",v("palette-grey-600")),y(t.Switch,"primaryDisabledColor",(0,u._j)(t.primary.main,.55)),y(t.Switch,"secondaryDisabledColor",(0,u._j)(t.secondary.main,.55)),y(t.Switch,"errorDisabledColor",(0,u._j)(t.error.main,.55)),y(t.Switch,"infoDisabledColor",(0,u._j)(t.info.main,.55)),y(t.Switch,"successDisabledColor",(0,u._j)(t.success.main,.55)),y(t.Switch,"warningDisabledColor",(0,u._j)(t.warning.main,.55)),y(t.TableCell,"border",(0,u._j)((0,u.Fq)(t.divider,1),.68)),y(t.Tooltip,"bg",(0,u.Fq)(t.grey[700],.92))}t.common.backgroundChannel=(0,u.n8)(t.common.background),t.common.onBackgroundChannel=(0,u.n8)(t.common.onBackground),t.dividerChannel=(0,u.n8)(t.divider),Object.keys(t).forEach((e=>{const n=t[e];n.main&&(t[e].mainChannel=(0,u.n8)(n.main)),n.light&&(t[e].lightChannel=(0,u.n8)(n.light)),n.dark&&(t[e].darkChannel=(0,u.n8)(n.dark)),n.contrastText&&(t[e].contrastTextChannel=(0,u.n8)(n.contrastText)),n.primary&&(t[e].primaryChannel=(0,u.n8)(n.primary)),n.secondary&&(t[e].secondaryChannel=(0,u.n8)(n.secondary)),n.active&&(t[e].activeChannel=(0,u.n8)(n.active)),n.selected&&(t[e].selectedChannel=(0,u.n8)(n.selected))}))})),N=t.reduce(((e,t)=>(0,o.vb)(e,t)),N),N}(),{CssVarsProvider:v,useColorScheme:w,getInitColorSchemeScript:k}=(0,u.OI)({theme:x,attribute:"data-mui-color-scheme",modeStorageKey:"mui-mode",colorSchemeStorageKey:"mui-color-scheme",defaultColorScheme:{light:"light",dark:"dark"},resolveTheme:e=>(0,s.Z)({},e,{typography:(0,b.Z)(e.palette,e.typography)}),shouldSkipGeneratingVar:e=>{var t;return!!e[0].match(/(typography|mixins|breakpoints|direction|transitions)/)||"palette"===e[0]&&!(null==(t=e[1])||!t.match(/(mode|contrastThreshold|tonalOffset)/))}});var S=n(11358),I=n(36600),N=n(50349);function C(e){return(0,l.d6)("MuiButton",e)}const T=(0,l.sI)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]);var $=n(97745),E=n(2574);const R=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],A=e=>(0,s.Z)({},"small"===e.size&&{"& > *:nth-of-type(1)":{fontSize:18}},"medium"===e.size&&{"& > *:nth-of-type(1)":{fontSize:20}},"large"===e.size&&{"& > *:nth-of-type(1)":{fontSize:22}}),F=(0,h.ZP)(I.ZP,{shouldForwardProp:e=>(0,h.FO)(e)||"classes"===e,name:"MuiButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`${n.variant}${(0,N.Z)(n.color)}`],t[`size${(0,N.Z)(n.size)}`],t[`${n.variant}Size${(0,N.Z)(n.size)}`],"inherit"===n.color&&t.colorInherit,n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth]}})((({theme:e,ownerState:t})=>{var n,r;return(0,s.Z)({},e.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(e.vars||e).shape.borderRadius,transition:e.transitions.create(["background-color","box-shadow","border-color","color"],{duration:e.transitions.duration.short}),"&:hover":(0,s.Z)({textDecoration:"none",backgroundColor:e.vars?`rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"text"===t.variant&&"inherit"!==t.color&&{backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"outlined"===t.variant&&"inherit"!==t.color&&{border:`1px solid ${(e.vars||e).palette[t.color].main}`,backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"contained"===t.variant&&{backgroundColor:(e.vars||e).palette.grey.A100,boxShadow:(e.vars||e).shadows[4],"@media (hover: none)":{boxShadow:(e.vars||e).shadows[2],backgroundColor:(e.vars||e).palette.grey[300]}},"contained"===t.variant&&"inherit"!==t.color&&{backgroundColor:(e.vars||e).palette[t.color].dark,"@media (hover: none)":{backgroundColor:(e.vars||e).palette[t.color].main}}),"&:active":(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[8]}),[`&.${T.focusVisible}`]:(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[6]}),[`&.${T.disabled}`]:(0,s.Z)({color:(e.vars||e).palette.action.disabled},"outlined"===t.variant&&{border:`1px solid ${(e.vars||e).palette.action.disabledBackground}`},"outlined"===t.variant&&"secondary"===t.color&&{border:`1px solid ${(e.vars||e).palette.action.disabled}`},"contained"===t.variant&&{color:(e.vars||e).palette.action.disabled,boxShadow:(e.vars||e).shadows[0],backgroundColor:(e.vars||e).palette.action.disabledBackground})},"text"===t.variant&&{padding:"6px 8px"},"text"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main},"outlined"===t.variant&&{padding:"5px 15px",border:"1px solid currentColor"},"outlined"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main,border:e.vars?`1px solid rgba(${e.vars.palette[t.color].mainChannel} / 0.5)`:`1px solid ${(0,u.Fq)(e.palette[t.color].main,.5)}`},"contained"===t.variant&&{color:e.vars?e.vars.palette.text.primary:null==(n=(r=e.palette).getContrastText)?void 0:n.call(r,e.palette.grey[300]),backgroundColor:(e.vars||e).palette.grey[300],boxShadow:(e.vars||e).shadows[2]},"contained"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].contrastText,backgroundColor:(e.vars||e).palette[t.color].main},"inherit"===t.color&&{color:"inherit",borderColor:"currentColor"},"small"===t.size&&"text"===t.variant&&{padding:"4px 5px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"text"===t.variant&&{padding:"8px 11px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"outlined"===t.variant&&{padding:"3px 9px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"outlined"===t.variant&&{padding:"7px 21px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"contained"===t.variant&&{padding:"4px 10px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"contained"===t.variant&&{padding:"8px 22px",fontSize:e.typography.pxToRem(15)},t.fullWidth&&{width:"100%"})}),(({ownerState:e})=>e.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${T.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${T.disabled}`]:{boxShadow:"none"}})),O=(0,h.ZP)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.startIcon,t[`iconSize${(0,N.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:8,marginLeft:-4},"small"===e.size&&{marginLeft:-2},A(e)))),D=(0,h.ZP)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.endIcon,t[`iconSize${(0,N.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:-4,marginLeft:8},"small"===e.size&&{marginRight:-2},A(e)))),_=a.forwardRef((function(e,t){const n=a.useContext($.Z),i=(0,o.yr)(n,e),u=(0,d.Z)({props:i,name:"MuiButton"}),{children:c,color:h="primary",component:p="button",className:f,disabled:m=!1,disableElevation:g=!1,disableFocusRipple:y=!1,endIcon:b,focusVisibleClassName:x,fullWidth:v=!1,size:w="medium",startIcon:k,type:I,variant:T="text"}=u,A=(0,r.Z)(u,R),_=(0,s.Z)({},u,{color:h,component:p,disabled:m,disableElevation:g,disableFocusRipple:y,fullWidth:v,size:w,type:I,variant:T}),M=(e=>{const{color:t,disableElevation:n,fullWidth:r,size:a,variant:o,classes:i}=e,u={root:["root",o,`${o}${(0,N.Z)(t)}`,`size${(0,N.Z)(a)}`,`${o}Size${(0,N.Z)(a)}`,"inherit"===t&&"colorInherit",n&&"disableElevation",r&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,N.Z)(a)}`],endIcon:["endIcon",`iconSize${(0,N.Z)(a)}`]},c=(0,l.V_)(u,C,i);return(0,s.Z)({},i,c)})(_),L=k&&(0,E.jsx)(O,{className:M.startIcon,ownerState:_,children:k}),z=b&&(0,E.jsx)(D,{className:M.endIcon,ownerState:_,children:b});return(0,E.jsxs)(F,(0,s.Z)({ownerState:_,className:(0,S.Z)(f,n.className),component:p,disabled:m,focusRipple:!y,focusVisibleClassName:(0,S.Z)(M.focusVisible,x),ref:t,type:I},A,{classes:M,children:[L,c,z]}))}));function M(e){return(0,l.d6)("MuiCircularProgress",e)}(0,l.sI)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]);const L=["className","color","disableShrink","size","style","thickness","value","variant"];let z,P,B,W,V=e=>e;const U=44,G=(0,u.F4)(z||(z=V`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),Z=(0,u.F4)(P||(P=V`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),j=(0,h.ZP)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`color${(0,N.Z)(n.color)}`]]}})((({ownerState:e,theme:t})=>(0,s.Z)({display:"inline-block"},"determinate"===e.variant&&{transition:t.transitions.create("transform")},"inherit"!==e.color&&{color:(t.vars||t).palette[e.color].main})),(({ownerState:e})=>"indeterminate"===e.variant&&(0,u.iv)(B||(B=V`
      animation: ${0} 1.4s linear infinite;
    `),G))),H=(0,h.ZP)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(e,t)=>t.svg})({display:"block"}),q=(0,h.ZP)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.circle,t[`circle${(0,N.Z)(n.variant)}`],n.disableShrink&&t.circleDisableShrink]}})((({ownerState:e,theme:t})=>(0,s.Z)({stroke:"currentColor"},"determinate"===e.variant&&{transition:t.transitions.create("stroke-dashoffset")},"indeterminate"===e.variant&&{strokeDasharray:"80px, 200px",strokeDashoffset:0})),(({ownerState:e})=>"indeterminate"===e.variant&&!e.disableShrink&&(0,u.iv)(W||(W=V`
      animation: ${0} 1.4s ease-in-out infinite;
    `),Z))),K=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiCircularProgress"}),{className:a,color:o="primary",disableShrink:i=!1,size:u=40,style:c,thickness:h=3.6,value:p=0,variant:f="indeterminate"}=n,m=(0,r.Z)(n,L),g=(0,s.Z)({},n,{color:o,disableShrink:i,size:u,thickness:h,value:p,variant:f}),y=(e=>{const{classes:t,variant:n,color:r,disableShrink:s}=e,a={root:["root",n,`color${(0,N.Z)(r)}`],svg:["svg"],circle:["circle",`circle${(0,N.Z)(n)}`,s&&"circleDisableShrink"]};return(0,l.V_)(a,M,t)})(g),b={},x={},v={};if("determinate"===f){const e=2*Math.PI*((U-h)/2);b.strokeDasharray=e.toFixed(3),v["aria-valuenow"]=Math.round(p),b.strokeDashoffset=`${((100-p)/100*e).toFixed(3)}px`,x.transform="rotate(-90deg)"}return(0,E.jsx)(j,(0,s.Z)({className:(0,S.Z)(y.root,a),style:(0,s.Z)({width:u,height:u},x,c),ownerState:g,ref:t,role:"progressbar"},v,m,{children:(0,E.jsx)(H,{className:y.svg,ownerState:g,viewBox:"22 22 44 44",children:(0,E.jsx)(q,{className:y.circle,style:b,ownerState:g,cx:U,cy:U,r:(U-h)/2,fill:"none",strokeWidth:h})})}))}));function X(e){return(0,l.d6)("MuiLoadingButton",e)}const Y=(0,l.sI)("MuiLoadingButton",["root","loading","loadingIndicator","loadingIndicatorCenter","loadingIndicatorStart","loadingIndicatorEnd","endIconLoadingEnd","startIconLoadingStart"]),J=["children","disabled","id","loading","loadingIndicator","loadingPosition","variant"],Q=(0,h.ZP)(_,{shouldForwardProp:e=>(e=>"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e&&"classes"!==e)(e)||"classes"===e,name:"MuiLoadingButton",slot:"Root",overridesResolver:(e,t)=>[t.root,t.startIconLoadingStart&&{[`& .${Y.startIconLoadingStart}`]:t.startIconLoadingStart},t.endIconLoadingEnd&&{[`& .${Y.endIconLoadingEnd}`]:t.endIconLoadingEnd}]})((({ownerState:e,theme:t})=>(0,s.Z)({[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0}},"center"===e.loadingPosition&&{transition:t.transitions.create(["background-color","box-shadow","border-color"],{duration:t.transitions.duration.short}),[`&.${Y.loading}`]:{color:"transparent"}},"start"===e.loadingPosition&&e.fullWidth&&{[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0,marginRight:-8}},"end"===e.loadingPosition&&e.fullWidth&&{[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0,marginLeft:-8}}))),ee=(0,h.ZP)("div",{name:"MuiLoadingButton",slot:"LoadingIndicator",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.loadingIndicator,t[`loadingIndicator${(0,i.capitalize)(n.loadingPosition)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({position:"absolute",visibility:"visible",display:"flex"},"start"===t.loadingPosition&&("outlined"===t.variant||"contained"===t.variant)&&{left:"small"===t.size?10:14},"start"===t.loadingPosition&&"text"===t.variant&&{left:6},"center"===t.loadingPosition&&{left:"50%",transform:"translate(-50%)",color:e.palette.action.disabled},"end"===t.loadingPosition&&("outlined"===t.variant||"contained"===t.variant)&&{right:"small"===t.size?10:14},"end"===t.loadingPosition&&"text"===t.variant&&{right:6},"start"===t.loadingPosition&&t.fullWidth&&{position:"relative",left:-10},"end"===t.loadingPosition&&t.fullWidth&&{position:"relative",right:-10}))),te=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiLoadingButton"}),{children:a,disabled:o=!1,id:u,loading:c=!1,loadingIndicator:h,loadingPosition:p="center",variant:f="text"}=n,m=(0,r.Z)(n,J),g=(0,i.unstable_useId)(u),y=null!=h?h:(0,E.jsx)(K,{"aria-labelledby":g,color:"inherit",size:16}),b=(0,s.Z)({},n,{disabled:o,loading:c,loadingIndicator:y,loadingPosition:p,variant:f}),x=(e=>{const{loading:t,loadingPosition:n,classes:r}=e,a={root:["root",t&&"loading"],startIcon:[t&&`startIconLoading${(0,i.capitalize)(n)}`],endIcon:[t&&`endIconLoading${(0,i.capitalize)(n)}`],loadingIndicator:["loadingIndicator",t&&`loadingIndicator${(0,i.capitalize)(n)}`]},o=(0,l.V_)(a,X,r);return(0,s.Z)({},r,o)})(b),v=c?(0,E.jsx)(ee,{className:x.loadingIndicator,ownerState:b,children:y}):null;return(0,E.jsxs)(Q,(0,s.Z)({disabled:o||c,id:g,ref:t},m,{variant:f,classes:x,ownerState:b,children:["end"===b.loadingPosition?a:v,"end"===b.loadingPosition?v:a]}))}))},98925:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(10543),u=n(66954),c=n(57257),d=n(2574);const h=(0,c.Z)((0,d.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person");function p(e){return(0,i.d6)("MuiAvatar",e)}(0,i.sI)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);const f=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],m=(0,l.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],n.colorDefault&&t.colorDefault]}})((({theme:e,ownerState:t})=>(0,s.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===t.variant&&{borderRadius:(e.vars||e).shape.borderRadius},"square"===t.variant&&{borderRadius:0},t.colorDefault&&(0,s.Z)({color:(e.vars||e).palette.background.default},e.vars?{backgroundColor:e.vars.palette.Avatar.defaultBg}:{backgroundColor:"light"===e.palette.mode?e.palette.grey[400]:e.palette.grey[600]})))),g=(0,l.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:(e,t)=>t.img})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),y=(0,l.ZP)(h,{name:"MuiAvatar",slot:"Fallback",overridesResolver:(e,t)=>t.fallback})({width:"75%",height:"75%"});const b=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiAvatar"}),{alt:l,children:c,className:h,component:b="div",imgProps:x,sizes:v,src:w,srcSet:k,variant:S="circular"}=n,I=(0,r.Z)(n,f);let N=null;const C=function({crossOrigin:e,referrerPolicy:t,src:n,srcSet:r}){const[s,o]=a.useState(!1);return a.useEffect((()=>{if(!n&&!r)return;o(!1);let s=!0;const a=new Image;return a.onload=()=>{s&&o("loaded")},a.onerror=()=>{s&&o("error")},a.crossOrigin=e,a.referrerPolicy=t,a.src=n,r&&(a.srcset=r),()=>{s=!1}}),[e,t,n,r]),s}((0,s.Z)({},x,{src:w,srcSet:k})),T=w||k,$=T&&"error"!==C,E=(0,s.Z)({},n,{colorDefault:!$,component:b,variant:S}),R=(e=>{const{classes:t,variant:n,colorDefault:r}=e,s={root:["root",n,r&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,i.V_)(s,p,t)})(E);return N=$?(0,d.jsx)(g,(0,s.Z)({alt:l,src:w,srcSet:k,sizes:v,ownerState:E,className:R.img},x)):null!=c?c:T&&l?l[0]:(0,d.jsx)(y,{className:R.fallback}),(0,d.jsx)(m,(0,s.Z)({as:b,ownerState:E,className:(0,o.Z)(R.root,h),ref:t},I,{children:N}))}))},36600:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>_});var r=n(76805),s=n(8339),a=n(43001),o=(n(3827),n(11358)),i=(n(47410),n(70179)),l=n(10543),u=n(66954),c=n(901),d=n(15976),h=n(59832),p=n(20499),f=n(13764),m=n(2574);const g=function(e){const{className:t,classes:n,pulsate:r=!1,rippleX:s,rippleY:i,rippleSize:l,in:u,onExited:c,timeout:d}=e,[h,p]=a.useState(!1),f=(0,o.Z)(t,n.ripple,n.rippleVisible,r&&n.ripplePulsate),g={width:l,height:l,top:-l/2+i,left:-l/2+s},y=(0,o.Z)(n.child,h&&n.childLeaving,r&&n.childPulsate);return u||h||p(!0),a.useEffect((()=>{if(!u&&null!=c){const e=setTimeout(c,d);return()=>{clearTimeout(e)}}}),[c,u,d]),(0,m.jsx)("span",{className:f,style:g,children:(0,m.jsx)("span",{className:y})})};var y=n(4647);const b=(0,y.sI)("MuiTouchRipple",["root","ripple","rippleVisible","ripplePulsate","child","childLeaving","childPulsate"]),x=["center","classes","className"];let v,w,k,S,I=e=>e;const N=(0,f.F4)(v||(v=I`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)),C=(0,f.F4)(w||(w=I`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)),T=(0,f.F4)(k||(k=I`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)),$=(0,l.ZP)("span",{name:"MuiTouchRipple",slot:"Root"})({overflow:"hidden",pointerEvents:"none",position:"absolute",zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:"inherit"}),E=(0,l.ZP)(g,{name:"MuiTouchRipple",slot:"Ripple"})(S||(S=I`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`),b.rippleVisible,N,550,(({theme:e})=>e.transitions.easing.easeInOut),b.ripplePulsate,(({theme:e})=>e.transitions.duration.shorter),b.child,b.childLeaving,C,550,(({theme:e})=>e.transitions.easing.easeInOut),b.childPulsate,T,(({theme:e})=>e.transitions.easing.easeInOut)),R=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiTouchRipple"}),{center:i=!1,classes:l={},className:c}=n,d=(0,s.Z)(n,x),[h,f]=a.useState([]),g=a.useRef(0),y=a.useRef(null);a.useEffect((()=>{y.current&&(y.current(),y.current=null)}),[h]);const v=a.useRef(!1),w=a.useRef(null),k=a.useRef(null),S=a.useRef(null);a.useEffect((()=>()=>{clearTimeout(w.current)}),[]);const I=a.useCallback((e=>{const{pulsate:t,rippleX:n,rippleY:r,rippleSize:s,cb:a}=e;f((e=>[...e,(0,m.jsx)(E,{classes:{ripple:(0,o.Z)(l.ripple,b.ripple),rippleVisible:(0,o.Z)(l.rippleVisible,b.rippleVisible),ripplePulsate:(0,o.Z)(l.ripplePulsate,b.ripplePulsate),child:(0,o.Z)(l.child,b.child),childLeaving:(0,o.Z)(l.childLeaving,b.childLeaving),childPulsate:(0,o.Z)(l.childPulsate,b.childPulsate)},timeout:550,pulsate:t,rippleX:n,rippleY:r,rippleSize:s},g.current)])),g.current+=1,y.current=a}),[l]),N=a.useCallback(((e={},t={},n)=>{const{pulsate:r=!1,center:s=i||t.pulsate,fakeElement:a=!1}=t;if("mousedown"===(null==e?void 0:e.type)&&v.current)return void(v.current=!1);"touchstart"===(null==e?void 0:e.type)&&(v.current=!0);const o=a?null:S.current,l=o?o.getBoundingClientRect():{width:0,height:0,left:0,top:0};let u,c,d;if(s||void 0===e||0===e.clientX&&0===e.clientY||!e.clientX&&!e.touches)u=Math.round(l.width/2),c=Math.round(l.height/2);else{const{clientX:t,clientY:n}=e.touches?e.touches[0]:e;u=Math.round(t-l.left),c=Math.round(n-l.top)}if(s)d=Math.sqrt((2*l.width**2+l.height**2)/3),d%2==0&&(d+=1);else{const e=2*Math.max(Math.abs((o?o.clientWidth:0)-u),u)+2,t=2*Math.max(Math.abs((o?o.clientHeight:0)-c),c)+2;d=Math.sqrt(e**2+t**2)}null!=e&&e.touches?null===k.current&&(k.current=()=>{I({pulsate:r,rippleX:u,rippleY:c,rippleSize:d,cb:n})},w.current=setTimeout((()=>{k.current&&(k.current(),k.current=null)}),80)):I({pulsate:r,rippleX:u,rippleY:c,rippleSize:d,cb:n})}),[i,I]),C=a.useCallback((()=>{N({},{pulsate:!0})}),[N]),T=a.useCallback(((e,t)=>{if(clearTimeout(w.current),"touchend"===(null==e?void 0:e.type)&&k.current)return k.current(),k.current=null,void(w.current=setTimeout((()=>{T(e,t)})));k.current=null,f((e=>e.length>0?e.slice(1):e)),y.current=t}),[]);return a.useImperativeHandle(t,(()=>({pulsate:C,start:N,stop:T})),[C,N,T]),(0,m.jsx)($,(0,r.Z)({className:(0,o.Z)(l.root,b.root,c),ref:S},d,{children:(0,m.jsx)(p.W3,{component:null,exit:!0,children:h})}))}));function A(e){return(0,y.d6)("MuiButtonBase",e)}const F=(0,y.sI)("MuiButtonBase",["root","disabled","focusVisible"]),O=["action","centerRipple","children","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type"],D=(0,l.ZP)("button",{name:"MuiButtonBase",slot:"Root",overridesResolver:(e,t)=>t.root})({display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",boxSizing:"border-box",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},[`&.${F.disabled}`]:{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}}),_=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiButtonBase"}),{action:l,centerRipple:p=!1,children:f,className:g,component:y="button",disabled:b=!1,disableRipple:x=!1,disableTouchRipple:v=!1,focusRipple:w=!1,LinkComponent:k="a",onBlur:S,onClick:I,onContextMenu:N,onDragLeave:C,onFocus:T,onFocusVisible:$,onKeyDown:E,onKeyUp:F,onMouseDown:_,onMouseLeave:M,onMouseUp:L,onTouchEnd:z,onTouchMove:P,onTouchStart:B,tabIndex:W=0,TouchRippleProps:V,touchRippleRef:U,type:G}=n,Z=(0,s.Z)(n,O),j=a.useRef(null),H=a.useRef(null),q=(0,c.Z)(H,U),{isFocusVisibleRef:K,onFocus:X,onBlur:Y,ref:J}=(0,h.Z)(),[Q,ee]=a.useState(!1);b&&Q&&ee(!1),a.useImperativeHandle(l,(()=>({focusVisible:()=>{ee(!0),j.current.focus()}})),[]);const[te,ne]=a.useState(!1);a.useEffect((()=>{ne(!0)}),[]);const re=te&&!x&&!b;function se(e,t,n=v){return(0,d.Z)((r=>{t&&t(r);return!n&&H.current&&H.current[e](r),!0}))}a.useEffect((()=>{Q&&w&&!x&&te&&H.current.pulsate()}),[x,w,Q,te]);const ae=se("start",_),oe=se("stop",N),ie=se("stop",C),le=se("stop",L),ue=se("stop",(e=>{Q&&e.preventDefault(),M&&M(e)})),ce=se("start",B),de=se("stop",z),he=se("stop",P),pe=se("stop",(e=>{Y(e),!1===K.current&&ee(!1),S&&S(e)}),!1),fe=(0,d.Z)((e=>{j.current||(j.current=e.currentTarget),X(e),!0===K.current&&(ee(!0),$&&$(e)),T&&T(e)})),me=()=>{const e=j.current;return y&&"button"!==y&&!("A"===e.tagName&&e.href)},ge=a.useRef(!1),ye=(0,d.Z)((e=>{w&&!ge.current&&Q&&H.current&&" "===e.key&&(ge.current=!0,H.current.stop(e,(()=>{H.current.start(e)}))),e.target===e.currentTarget&&me()&&" "===e.key&&e.preventDefault(),E&&E(e),e.target===e.currentTarget&&me()&&"Enter"===e.key&&!b&&(e.preventDefault(),I&&I(e))})),be=(0,d.Z)((e=>{w&&" "===e.key&&H.current&&Q&&!e.defaultPrevented&&(ge.current=!1,H.current.stop(e,(()=>{H.current.pulsate(e)}))),F&&F(e),I&&e.target===e.currentTarget&&me()&&" "===e.key&&!e.defaultPrevented&&I(e)}));let xe=y;"button"===xe&&(Z.href||Z.to)&&(xe=k);const ve={};"button"===xe?(ve.type=void 0===G?"button":G,ve.disabled=b):(Z.href||Z.to||(ve.role="button"),b&&(ve["aria-disabled"]=b));const we=(0,c.Z)(J,j),ke=(0,c.Z)(t,we);const Se=(0,r.Z)({},n,{centerRipple:p,component:y,disabled:b,disableRipple:x,disableTouchRipple:v,focusRipple:w,tabIndex:W,focusVisible:Q}),Ie=(e=>{const{disabled:t,focusVisible:n,focusVisibleClassName:r,classes:s}=e,a={root:["root",t&&"disabled",n&&"focusVisible"]},o=(0,i.Z)(a,A,s);return n&&r&&(o.root+=` ${r}`),o})(Se);return(0,m.jsxs)(D,(0,r.Z)({as:xe,className:(0,o.Z)(Ie.root,g),ownerState:Se,onBlur:pe,onClick:I,onContextMenu:oe,onFocus:fe,onKeyDown:ye,onKeyUp:be,onMouseDown:ae,onMouseLeave:ue,onMouseUp:le,onDragLeave:ie,onTouchEnd:de,onTouchMove:he,onTouchStart:ce,ref:ke,tabIndex:b?-1:W,type:G},ve,Z,{children:[f,re?(0,m.jsx)(R,(0,r.Z)({ref:q,center:p},V)):null]}))}))},97745:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext({})},55545:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(13764),u=n(50349),c=n(10543),d=n(66954);function h(e){return(0,i.d6)("MuiButtonGroup",e)}const p=(0,i.sI)("MuiButtonGroup",["root","contained","outlined","text","disableElevation","disabled","fullWidth","vertical","grouped","groupedHorizontal","groupedVertical","groupedText","groupedTextHorizontal","groupedTextVertical","groupedTextPrimary","groupedTextSecondary","groupedOutlined","groupedOutlinedHorizontal","groupedOutlinedVertical","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","groupedContainedVertical","groupedContainedPrimary","groupedContainedSecondary"]);var f=n(97745),m=n(2574);const g=["children","className","color","component","disabled","disableElevation","disableFocusRipple","disableRipple","fullWidth","orientation","size","variant"],y=(0,c.ZP)("div",{name:"MuiButtonGroup",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${p.grouped}`]:t.grouped},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.orientation)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}${(0,u.Z)(n.orientation)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}${(0,u.Z)(n.color)}`]},t.root,t[n.variant],!0===n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth,"vertical"===n.orientation&&t.vertical]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",borderRadius:(e.vars||e).shape.borderRadius},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[2]},t.disableElevation&&{boxShadow:"none"},t.fullWidth&&{width:"100%"},"vertical"===t.orientation&&{flexDirection:"column"},{[`& .${p.grouped}`]:(0,s.Z)({minWidth:40,"&:not(:first-of-type)":(0,s.Z)({},"horizontal"===t.orientation&&{borderTopLeftRadius:0,borderBottomLeftRadius:0},"vertical"===t.orientation&&{borderTopRightRadius:0,borderTopLeftRadius:0},"outlined"===t.variant&&"horizontal"===t.orientation&&{marginLeft:-1},"outlined"===t.variant&&"vertical"===t.orientation&&{marginTop:-1}),"&:not(:last-of-type)":(0,s.Z)({},"horizontal"===t.orientation&&{borderTopRightRadius:0,borderBottomRightRadius:0},"vertical"===t.orientation&&{borderBottomRightRadius:0,borderBottomLeftRadius:0},"text"===t.variant&&"horizontal"===t.orientation&&{borderRight:e.vars?`1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:"1px solid "+("light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)")},"text"===t.variant&&"vertical"===t.orientation&&{borderBottom:e.vars?`1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:"1px solid "+("light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)")},"text"===t.variant&&"inherit"!==t.color&&{borderColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / 0.5)`:(0,l.Fq)(e.palette[t.color].main,.5)},"outlined"===t.variant&&"horizontal"===t.orientation&&{borderRightColor:"transparent"},"outlined"===t.variant&&"vertical"===t.orientation&&{borderBottomColor:"transparent"},"contained"===t.variant&&"horizontal"===t.orientation&&{borderRight:`1px solid ${(e.vars||e).palette.grey[400]}`,[`&.${p.disabled}`]:{borderRight:`1px solid ${(e.vars||e).palette.action.disabled}`}},"contained"===t.variant&&"vertical"===t.orientation&&{borderBottom:`1px solid ${(e.vars||e).palette.grey[400]}`,[`&.${p.disabled}`]:{borderBottom:`1px solid ${(e.vars||e).palette.action.disabled}`}},"contained"===t.variant&&"inherit"!==t.color&&{borderColor:(e.vars||e).palette[t.color].dark},{"&:hover":(0,s.Z)({},"outlined"===t.variant&&"horizontal"===t.orientation&&{borderRightColor:"currentColor"},"outlined"===t.variant&&"vertical"===t.orientation&&{borderBottomColor:"currentColor"})}),"&:hover":(0,s.Z)({},"contained"===t.variant&&{boxShadow:"none"})},"contained"===t.variant&&{boxShadow:"none"})}))),b=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiButtonGroup"}),{children:l,className:c,color:p="primary",component:b="div",disabled:x=!1,disableElevation:v=!1,disableFocusRipple:w=!1,disableRipple:k=!1,fullWidth:S=!1,orientation:I="horizontal",size:N="medium",variant:C="outlined"}=n,T=(0,r.Z)(n,g),$=(0,s.Z)({},n,{color:p,component:b,disabled:x,disableElevation:v,disableFocusRipple:w,disableRipple:k,fullWidth:S,orientation:I,size:N,variant:C}),E=(e=>{const{classes:t,color:n,disabled:r,disableElevation:s,fullWidth:a,orientation:o,variant:l}=e,c={root:["root",l,"vertical"===o&&"vertical",a&&"fullWidth",s&&"disableElevation"],grouped:["grouped",`grouped${(0,u.Z)(o)}`,`grouped${(0,u.Z)(l)}`,`grouped${(0,u.Z)(l)}${(0,u.Z)(o)}`,`grouped${(0,u.Z)(l)}${(0,u.Z)(n)}`,r&&"disabled"]};return(0,i.V_)(c,h,t)})($),R=a.useMemo((()=>({className:E.grouped,color:p,disabled:x,disableElevation:v,disableFocusRipple:w,disableRipple:k,fullWidth:S,size:N,variant:C})),[p,x,v,w,k,S,N,C,E.grouped]);return(0,m.jsx)(y,(0,s.Z)({as:b,role:"group",className:(0,o.Z)(E.root,c),ref:t,ownerState:$},T,{children:(0,m.jsx)(f.Z.Provider,{value:R,children:l})}))}))},15471:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>x});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(47706),u=n(66954),c=n(10543);function d(e){return(0,i.d6)("MuiCardHeader",e)}const h=(0,i.sI)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var p=n(2574);const f=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],m=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,t)=>(0,s.Z)({[`& .${h.title}`]:t.title,[`& .${h.subheader}`]:t.subheader},t.root)})({display:"flex",alignItems:"center",padding:16}),g=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,t)=>t.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),y=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,t)=>t.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),b=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,t)=>t.content})({flex:"1 1 auto"}),x=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiCardHeader"}),{action:a,avatar:c,className:h,component:x="div",disableTypography:v=!1,subheader:w,subheaderTypographyProps:k,title:S,titleTypographyProps:I}=n,N=(0,r.Z)(n,f),C=(0,s.Z)({},n,{component:x,disableTypography:v}),T=(e=>{const{classes:t}=e;return(0,i.V_)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},d,t)})(C);let $=S;null==$||$.type===l.ZP||v||($=(0,p.jsx)(l.ZP,(0,s.Z)({variant:c?"body2":"h5",className:T.title,component:"span",display:"block"},I,{children:$})));let E=w;return null==E||E.type===l.ZP||v||(E=(0,p.jsx)(l.ZP,(0,s.Z)({variant:c?"body2":"body1",className:T.subheader,color:"text.secondary",component:"span",display:"block"},k,{children:E}))),(0,p.jsxs)(m,(0,s.Z)({className:(0,o.Z)(T.root,h),as:x,ref:t,ownerState:C},N,{children:[c&&(0,p.jsx)(g,{className:T.avatar,ownerState:C,children:c}),(0,p.jsxs)(b,{className:T.content,ownerState:C,children:[$,E]}),a&&(0,p.jsx)(y,{className:T.action,ownerState:C,children:a})]}))}))},50417:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>I});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(47410),n(4647)),i=n(13764),l=n(45195),u=n(57257),c=n(2574);const d=(0,u.Z)((0,c.jsx)("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),h=(0,u.Z)((0,c.jsx)("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),p=(0,u.Z)((0,c.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox");var f=n(50349),m=n(66954),g=n(10543);function y(e){return(0,o.d6)("MuiCheckbox",e)}const b=(0,o.sI)("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"]),x=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size"],v=(0,g.ZP)(l.Z,{shouldForwardProp:e=>(0,g.FO)(e)||"classes"===e,name:"MuiCheckbox",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.indeterminate&&t.indeterminate,"default"!==n.color&&t[`color${(0,f.Z)(n.color)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({color:(e.vars||e).palette.text.secondary},!t.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${"default"===t.color?e.vars.palette.action.activeChannel:e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,i.Fq)("default"===t.color?e.palette.action.active:e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&{[`&.${b.checked}, &.${b.indeterminate}`]:{color:(e.vars||e).palette[t.color].main},[`&.${b.disabled}`]:{color:(e.vars||e).palette.action.disabled}}))),w=(0,c.jsx)(h,{}),k=(0,c.jsx)(d,{}),S=(0,c.jsx)(p,{}),I=a.forwardRef((function(e,t){var n,i;const l=(0,m.Z)({props:e,name:"MuiCheckbox"}),{checkedIcon:u=w,color:d="primary",icon:h=k,indeterminate:p=!1,indeterminateIcon:g=S,inputProps:b,size:I="medium"}=l,N=(0,r.Z)(l,x),C=p?g:h,T=p?g:u,$=(0,s.Z)({},l,{color:d,indeterminate:p,size:I}),E=(e=>{const{classes:t,indeterminate:n,color:r}=e,a={root:["root",n&&"indeterminate",`color${(0,f.Z)(r)}`]},i=(0,o.V_)(a,y,t);return(0,s.Z)({},t,i)})($);return(0,c.jsx)(v,(0,s.Z)({type:"checkbox",inputProps:(0,s.Z)({"data-indeterminate":p},b),icon:a.cloneElement(C,{fontSize:null!=(n=C.props.fontSize)?n:I}),checkedIcon:a.cloneElement(T,{fontSize:null!=(i=T.props.fontSize)?i:I}),ownerState:$,ref:t},N,{classes:E}))}))},73289:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>g});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(13764),u=n(10543),c=n(66954);function d(e){return(0,i.d6)("MuiDivider",e)}(0,i.sI)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var h=n(2574);const p=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],f=(0,u.ZP)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((({theme:e,ownerState:t})=>(0,s.Z)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin"},t.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},t.light&&{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,l.Fq)(e.palette.divider,.08)},"inset"===t.variant&&{marginLeft:72},"middle"===t.variant&&"horizontal"===t.orientation&&{marginLeft:e.spacing(2),marginRight:e.spacing(2)},"middle"===t.variant&&"vertical"===t.orientation&&{marginTop:e.spacing(1),marginBottom:e.spacing(1)},"vertical"===t.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},t.flexItem&&{alignSelf:"stretch",height:"auto"})),(({theme:e,ownerState:t})=>(0,s.Z)({},t.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{position:"relative",width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,top:"50%",content:'""',transform:"translateY(50%)"}})),(({theme:e,ownerState:t})=>(0,s.Z)({},t.children&&"vertical"===t.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",top:"0%",left:"50%",borderTop:0,borderLeft:`thin solid ${(e.vars||e).palette.divider}`,transform:"translateX(0%)"}})),(({ownerState:e})=>(0,s.Z)({},"right"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}}))),m=(0,u.ZP)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`},"vertical"===t.orientation&&{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}))),g=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiDivider"}),{absolute:a=!1,children:l,className:u,component:g=(l?"div":"hr"),flexItem:y=!1,light:b=!1,orientation:x="horizontal",role:v=("hr"!==g?"separator":void 0),textAlign:w="center",variant:k="fullWidth"}=n,S=(0,r.Z)(n,p),I=(0,s.Z)({},n,{absolute:a,component:g,flexItem:y,light:b,orientation:x,role:v,textAlign:w,variant:k}),N=(e=>{const{absolute:t,children:n,classes:r,flexItem:s,light:a,orientation:o,textAlign:l,variant:u}=e,c={root:["root",t&&"absolute",u,a&&"light","vertical"===o&&"vertical",s&&"flexItem",n&&"withChildren",n&&"vertical"===o&&"withChildrenVertical","right"===l&&"vertical"!==o&&"textAlignRight","left"===l&&"vertical"!==o&&"textAlignLeft"],wrapper:["wrapper","vertical"===o&&"wrapperVertical"]};return(0,i.V_)(c,d,r)})(I);return(0,h.jsx)(f,(0,s.Z)({as:g,className:(0,o.Z)(N.root,u),role:v,ref:t,ownerState:I},S,{children:l?(0,h.jsx)(m,{className:N.wrapper,ownerState:I,children:l}):null}))}))},79191:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext()},52880:(e,t,n)=>{"use strict";function r({props:e,states:t,muiFormControl:n}){return t.reduce(((t,r)=>(t[r]=e[r],n&&void 0===e[r]&&(t[r]=n[r]),t)),{})}n.d(t,{Z:()=>r})},25738:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b,Yp:()=>x.Z});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(66954),u=n(10543),c=n(64089),d=n(50349),h=n(55772),p=n(79191);function f(e){return(0,i.d6)("MuiFormControl",e)}(0,i.sI)("MuiFormControl",["root","marginNone","marginNormal","marginDense","fullWidth","disabled"]);var m=n(2574);const g=["children","className","color","component","disabled","error","focused","fullWidth","hiddenLabel","margin","required","size","variant"],y=(0,u.ZP)("div",{name:"MuiFormControl",slot:"Root",overridesResolver:({ownerState:e},t)=>(0,s.Z)({},t.root,t[`margin${(0,d.Z)(e.margin)}`],e.fullWidth&&t.fullWidth)})((({ownerState:e})=>(0,s.Z)({display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},"normal"===e.margin&&{marginTop:16,marginBottom:8},"dense"===e.margin&&{marginTop:8,marginBottom:4},e.fullWidth&&{width:"100%"}))),b=a.forwardRef((function(e,t){const n=(0,l.Z)({props:e,name:"MuiFormControl"}),{children:u,className:b,color:x="primary",component:v="div",disabled:w=!1,error:k=!1,focused:S,fullWidth:I=!1,hiddenLabel:N=!1,margin:C="none",required:T=!1,size:$="medium",variant:E="outlined"}=n,R=(0,r.Z)(n,g),A=(0,s.Z)({},n,{color:x,component:v,disabled:w,error:k,fullWidth:I,hiddenLabel:N,margin:C,required:T,size:$,variant:E}),F=(e=>{const{classes:t,margin:n,fullWidth:r}=e,s={root:["root","none"!==n&&`margin${(0,d.Z)(n)}`,r&&"fullWidth"]};return(0,i.V_)(s,f,t)})(A),[O,D]=a.useState((()=>{let e=!1;return u&&a.Children.forEach(u,(t=>{if(!(0,h.Z)(t,["Input","Select"]))return;const n=(0,h.Z)(t,["Select"])?t.props.input:t;n&&(0,c.B7)(n.props)&&(e=!0)})),e})),[_,M]=a.useState((()=>{let e=!1;return u&&a.Children.forEach(u,(t=>{(0,h.Z)(t,["Input","Select"])&&(0,c.vd)(t.props,!0)&&(e=!0)})),e})),[L,z]=a.useState(!1);w&&L&&z(!1);const P=void 0===S||w?L:S;const B=a.useCallback((()=>{M(!0)}),[]),W={adornedStart:O,setAdornedStart:D,color:x,disabled:w,error:k,filled:_,focused:P,fullWidth:I,hiddenLabel:N,size:$,onBlur:()=>{z(!1)},onEmpty:a.useCallback((()=>{M(!1)}),[]),onFilled:B,onFocus:()=>{z(!0)},registerEffect:undefined,required:T,variant:E};return(0,m.jsx)(p.Z.Provider,{value:W,children:(0,m.jsx)(y,(0,s.Z)({as:v,ownerState:A,className:(0,o.Z)(F.root,b),ref:t},R,{children:u}))})}));var x=n(93304)},93304:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(43001),s=n(79191);function a(){return r.useContext(s.Z)}},65877:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>x});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=(n(47410),n(4647)),l=n(25738),u=n(47706),c=n(50349),d=n(10543),h=n(66954);function p(e){return(0,i.d6)("MuiFormControlLabel",e)}const f=(0,i.sI)("MuiFormControlLabel",["root","labelPlacementStart","labelPlacementTop","labelPlacementBottom","disabled","label","error"]);var m=n(52880),g=n(2574);const y=["checked","className","componentsProps","control","disabled","disableTypography","inputRef","label","labelPlacement","name","onChange","value"],b=(0,d.ZP)("label",{name:"MuiFormControlLabel",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${f.label}`]:t.label},t.root,t[`labelPlacement${(0,c.Z)(n.labelPlacement)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,[`&.${f.disabled}`]:{cursor:"default"}},"start"===t.labelPlacement&&{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},"top"===t.labelPlacement&&{flexDirection:"column-reverse",marginLeft:16},"bottom"===t.labelPlacement&&{flexDirection:"column",marginLeft:16},{[`& .${f.label}`]:{[`&.${f.disabled}`]:{color:(e.vars||e).palette.text.disabled}}}))),x=a.forwardRef((function(e,t){const n=(0,h.Z)({props:e,name:"MuiFormControlLabel"}),{className:d,componentsProps:f={},control:x,disabled:v,disableTypography:w,label:k,labelPlacement:S="end"}=n,I=(0,r.Z)(n,y),N=(0,l.Yp)();let C=v;void 0===C&&void 0!==x.props.disabled&&(C=x.props.disabled),void 0===C&&N&&(C=N.disabled);const T={disabled:C};["checked","name","onChange","value","inputRef"].forEach((e=>{void 0===x.props[e]&&void 0!==n[e]&&(T[e]=n[e])}));const $=(0,m.Z)({props:n,muiFormControl:N,states:["error"]}),E=(0,s.Z)({},n,{disabled:C,labelPlacement:S,error:$.error}),R=(e=>{const{classes:t,disabled:n,labelPlacement:r,error:s}=e,a={root:["root",n&&"disabled",`labelPlacement${(0,c.Z)(r)}`,s&&"error"],label:["label",n&&"disabled"]};return(0,i.V_)(a,p,t)})(E);let A=k;return null==A||A.type===u.ZP||w||(A=(0,g.jsx)(u.ZP,(0,s.Z)({component:"span",className:R.label},f.typography,{children:A}))),(0,g.jsxs)(b,(0,s.Z)({className:(0,o.Z)(R.root,d),ownerState:E,ref:t},I,{children:[a.cloneElement(x,T),A]}))}))},47180:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>g});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(10543),u=n(66954);function c(e){return(0,i.d6)("MuiFormGroup",e)}(0,i.sI)("MuiFormGroup",["root","row","error"]);var d=n(93304),h=n(52880),p=n(2574);const f=["className","row"],m=(0,l.ZP)("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.row&&t.row]}})((({ownerState:e})=>(0,s.Z)({display:"flex",flexDirection:"column",flexWrap:"wrap"},e.row&&{flexDirection:"row"}))),g=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiFormGroup"}),{className:a,row:l=!1}=n,g=(0,r.Z)(n,f),y=(0,d.Z)(),b=(0,h.Z)({props:n,muiFormControl:y,states:["error"]}),x=(0,s.Z)({},n,{row:l,error:b.error}),v=(e=>{const{classes:t,row:n,error:r}=e,s={root:["root",n&&"row",r&&"error"]};return(0,i.V_)(s,c,t)})(x);return(0,p.jsx)(m,(0,s.Z)({className:(0,o.Z)(v.root,a),ownerState:x,ref:t},g))}))},64089:(e,t,n)=>{"use strict";function r(e){return null!=e&&!(Array.isArray(e)&&0===e.length)}function s(e,t=!1){return e&&(r(e.value)&&""!==e.value||t&&r(e.defaultValue)&&""!==e.defaultValue)}function a(e){return e.startAdornment}n.d(t,{B7:()=>a,vd:()=>s})},3366:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>A});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(13764),u=n(50349),c=n(91348),d=n(10543),h=n(66954);function p(e){return(0,i.d6)("MuiLinearProgress",e)}(0,i.sI)("MuiLinearProgress",["root","colorPrimary","colorSecondary","determinate","indeterminate","buffer","query","dashed","dashedColorPrimary","dashedColorSecondary","bar","barColorPrimary","barColorSecondary","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer"]);var f=n(2574);const m=["className","color","value","valueBuffer","variant"];let g,y,b,x,v,w,k=e=>e;const S=(0,l.F4)(g||(g=k`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)),I=(0,l.F4)(y||(y=k`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)),N=(0,l.F4)(b||(b=k`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)),C=(e,t)=>"inherit"===t?"currentColor":e.vars?e.vars.palette.LinearProgress[`${t}Bg`]:"light"===e.palette.mode?(0,l.$n)(e.palette[t].main,.62):(0,l._j)(e.palette[t].main,.5),T=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`color${(0,u.Z)(n.color)}`],t[n.variant]]}})((({ownerState:e,theme:t})=>(0,s.Z)({position:"relative",overflow:"hidden",display:"block",height:4,zIndex:0,"@media print":{colorAdjust:"exact"},backgroundColor:C(t,e.color)},"inherit"===e.color&&"buffer"!==e.variant&&{backgroundColor:"none","&::before":{content:'""',position:"absolute",left:0,top:0,right:0,bottom:0,backgroundColor:"currentColor",opacity:.3}},"buffer"===e.variant&&{backgroundColor:"transparent"},"query"===e.variant&&{transform:"rotate(180deg)"}))),$=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Dashed",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.dashed,t[`dashedColor${(0,u.Z)(n.color)}`]]}})((({ownerState:e,theme:t})=>{const n=C(t,e.color);return(0,s.Z)({position:"absolute",marginTop:0,height:"100%",width:"100%"},"inherit"===e.color&&{opacity:.3},{backgroundImage:`radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`,backgroundSize:"10px 10px",backgroundPosition:"0 -23px"})}),(0,l.iv)(x||(x=k`
    animation: ${0} 3s infinite linear;
  `),N)),E=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Bar1",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.bar,t[`barColor${(0,u.Z)(n.color)}`],("indeterminate"===n.variant||"query"===n.variant)&&t.bar1Indeterminate,"determinate"===n.variant&&t.bar1Determinate,"buffer"===n.variant&&t.bar1Buffer]}})((({ownerState:e,theme:t})=>(0,s.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left",backgroundColor:"inherit"===e.color?"currentColor":(t.vars||t).palette[e.color].main},"determinate"===e.variant&&{transition:"transform .4s linear"},"buffer"===e.variant&&{zIndex:1,transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,l.iv)(v||(v=k`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `),S))),R=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Bar2",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.bar,t[`barColor${(0,u.Z)(n.color)}`],("indeterminate"===n.variant||"query"===n.variant)&&t.bar2Indeterminate,"buffer"===n.variant&&t.bar2Buffer]}})((({ownerState:e,theme:t})=>(0,s.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left"},"buffer"!==e.variant&&{backgroundColor:"inherit"===e.color?"currentColor":(t.vars||t).palette[e.color].main},"inherit"===e.color&&{opacity:.3},"buffer"===e.variant&&{backgroundColor:C(t,e.color),transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,l.iv)(w||(w=k`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `),I))),A=a.forwardRef((function(e,t){const n=(0,h.Z)({props:e,name:"MuiLinearProgress"}),{className:a,color:l="primary",value:d,valueBuffer:g,variant:y="indeterminate"}=n,b=(0,r.Z)(n,m),x=(0,s.Z)({},n,{color:l,variant:y}),v=(e=>{const{classes:t,variant:n,color:r}=e,s={root:["root",`color${(0,u.Z)(r)}`,n],dashed:["dashed",`dashedColor${(0,u.Z)(r)}`],bar1:["bar",`barColor${(0,u.Z)(r)}`,("indeterminate"===n||"query"===n)&&"bar1Indeterminate","determinate"===n&&"bar1Determinate","buffer"===n&&"bar1Buffer"],bar2:["bar","buffer"!==n&&`barColor${(0,u.Z)(r)}`,"buffer"===n&&`color${(0,u.Z)(r)}`,("indeterminate"===n||"query"===n)&&"bar2Indeterminate","buffer"===n&&"bar2Buffer"]};return(0,i.V_)(s,p,t)})(x),w=(0,c.Z)(),k={},S={bar1:{},bar2:{}};if("determinate"===y||"buffer"===y)if(void 0!==d){k["aria-valuenow"]=Math.round(d),k["aria-valuemin"]=0,k["aria-valuemax"]=100;let e=d-100;"rtl"===w.direction&&(e=-e),S.bar1.transform=`translateX(${e}%)`}else 0;if("buffer"===y)if(void 0!==g){let e=(g||0)-100;"rtl"===w.direction&&(e=-e),S.bar2.transform=`translateX(${e}%)`}else 0;return(0,f.jsxs)(T,(0,s.Z)({className:(0,o.Z)(v.root,a),ownerState:x,role:"progressbar"},k,{ref:t},b,{children:["buffer"===y?(0,f.jsx)($,{className:v.dashed,ownerState:x}):null,(0,f.jsx)(E,{className:v.bar1,ownerState:x,style:S.bar1}),"determinate"===y?null:(0,f.jsx)(R,{className:v.bar2,ownerState:x,style:S.bar2})]}))}))},35891:(e,t,n)=>{"use strict";n.d(t,{R:()=>f,Z:()=>g});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=(n(47410),n(4647)),l=n(13764),u=n(10543),c=n(66954),d=(n(91348),n(63262)),h=n(2574);const p=["className","component","elevation","square","variant"],f=e=>{let t;return t=e<1?5.11916*e**2:4.5*Math.log(e+1)+2,(t/100).toFixed(2)},m=(0,u.ZP)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],!n.square&&t.rounded,"elevation"===n.variant&&t[`elevation${n.elevation}`]]}})((({theme:e,ownerState:t})=>{var n;return(0,s.Z)({backgroundColor:(e.vars||e).palette.background.paper,color:(e.vars||e).palette.text.primary,transition:e.transitions.create("box-shadow")},!t.square&&{borderRadius:e.shape.borderRadius},"outlined"===t.variant&&{border:`1px solid ${(e.vars||e).palette.divider}`},"elevation"===t.variant&&(0,s.Z)({boxShadow:(e.vars||e).shadows[t.elevation]},!e.vars&&"dark"===e.palette.mode&&{backgroundImage:`linear-gradient(${(0,l.Fq)("#fff",f(t.elevation))}, ${(0,l.Fq)("#fff",f(t.elevation))})`},e.vars&&{backgroundImage:null==(n=e.vars.overlays)?void 0:n[t.elevation]}))})),g=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiPaper"}),{className:a,component:l="div",elevation:u=1,square:f=!1,variant:g="elevation"}=n,y=(0,r.Z)(n,p),b=(0,s.Z)({},n,{component:l,elevation:u,square:f,variant:g}),x=(e=>{const{square:t,elevation:n,variant:r,classes:s}=e,a={root:["root",r,!t&&"rounded","elevation"===r&&`elevation${n}`]};return(0,i.V_)(a,d.J,s)})(b);return(0,h.jsx)(m,(0,s.Z)({as:l,ownerState:b,className:(0,o.Z)(x.root,a),ref:t},y))}))},14446:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>r.Z});var r=n(35891);n(63262)},63262:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var r=n(4647);function s(e){return(0,r.d6)("MuiPaper",e)}(0,r.sI)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"])},69985:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>$});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(47410),n(4647)),i=n(13764),l=n(45195),u=n(66954),c=n(57257),d=n(2574);const h=(0,c.Z)((0,d.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),p=(0,c.Z)((0,d.jsx)("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked");var f=n(10543);const m=(0,f.ZP)("span")({position:"relative",display:"flex"}),g=(0,f.ZP)(h)({transform:"scale(1)"}),y=(0,f.ZP)(p)((({theme:e,ownerState:t})=>(0,s.Z)({left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest})},t.checked&&{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})})));const b=function(e){const{checked:t=!1,classes:n={},fontSize:r}=e,a=(0,s.Z)({},e,{checked:t});return(0,d.jsxs)(m,{className:n.root,ownerState:a,children:[(0,d.jsx)(g,{fontSize:r,className:n.background,ownerState:a}),(0,d.jsx)(y,{fontSize:r,className:n.dot,ownerState:a})]})};var x=n(50349),v=n(39143),w=n(72721);function k(e){return(0,o.d6)("MuiRadio",e)}const S=(0,o.sI)("MuiRadio",["root","checked","disabled","colorPrimary","colorSecondary"]),I=["checked","checkedIcon","color","icon","name","onChange","size"],N=(0,f.ZP)(l.Z,{shouldForwardProp:e=>(0,f.FO)(e)||"classes"===e,name:"MuiRadio",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`color${(0,x.Z)(n.color)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({color:(e.vars||e).palette.text.secondary,"&:hover":{backgroundColor:e.vars?`rgba(${"default"===t.color?e.vars.palette.action.activeChannel:e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,i.Fq)("default"===t.color?e.palette.action.active:e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&{[`&.${S.checked}`]:{color:(e.vars||e).palette[t.color].main}},{[`&.${S.disabled}`]:{color:(e.vars||e).palette.action.disabled}})));const C=(0,d.jsx)(b,{checked:!0}),T=(0,d.jsx)(b,{}),$=a.forwardRef((function(e,t){var n,i;const l=(0,u.Z)({props:e,name:"MuiRadio"}),{checked:c,checkedIcon:h=C,color:p="primary",icon:f=T,name:m,onChange:g,size:y="medium"}=l,b=(0,r.Z)(l,I),S=(0,s.Z)({},l,{color:p,size:y}),$=(e=>{const{classes:t,color:n}=e,r={root:["root",`color${(0,x.Z)(n)}`]};return(0,s.Z)({},t,(0,o.V_)(r,k,t))})(S),E=(0,w.Z)();let R=c;const A=(0,v.Z)(g,E&&E.onChange);let F=m;var O,D;return E&&(void 0===R&&(O=E.value,R="object"==typeof(D=l.value)&&null!==D?O===D:String(O)===String(D)),void 0===F&&(F=E.name)),(0,d.jsx)(N,(0,s.Z)({type:"radio",icon:a.cloneElement(f,{fontSize:null!=(n=T.props.fontSize)?n:y}),checkedIcon:a.cloneElement(h,{fontSize:null!=(i=C.props.fontSize)?i:y}),ownerState:S,classes:$,name:F,checked:R,onChange:A,ref:t},b))}))},69543:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext(void 0)},60792:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var r=n(76805),s=n(8339),a=n(43001),o=(n(3827),n(47180)),i=n(901),l=n(11133),u=n(69543),c=n(28701),d=n(2574);const h=["actions","children","defaultValue","name","onChange","value"],p=a.forwardRef((function(e,t){const{actions:n,children:p,defaultValue:f,name:m,onChange:g,value:y}=e,b=(0,s.Z)(e,h),x=a.useRef(null),[v,w]=(0,l.Z)({controlled:y,default:f,name:"RadioGroup"});a.useImperativeHandle(n,(()=>({focus:()=>{let e=x.current.querySelector("input:not(:disabled):checked");e||(e=x.current.querySelector("input:not(:disabled)")),e&&e.focus()}})),[]);const k=(0,i.Z)(t,x),S=(0,c.Z)(m);return(0,d.jsx)(u.Z.Provider,{value:{name:S,onChange:e=>{w(e.target.value),g&&g(e,e.target.value)},value:v},children:(0,d.jsx)(o.ZP,(0,r.Z)({role:"radiogroup",ref:k},b,{children:p}))})}));n(72721)},72721:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(43001),s=n(69543);function a(){return r.useContext(s.Z)}},63403:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>A});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(47410),l=n(4647),u=n(91348),c=n(7103),d=n(57257),h=n(2574);const p=(0,d.Z)((0,h.jsx)("path",{d:"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}),"Star"),f=(0,d.Z)((0,h.jsx)("path",{d:"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"}),"StarBorder");var m=n(66954),g=n(10543);function y(e){return(0,l.d6)("MuiRating",e)}const b=(0,l.sI)("MuiRating",["root","sizeSmall","sizeMedium","sizeLarge","readOnly","disabled","focusVisible","visuallyHidden","pristine","label","labelEmptyValueActive","icon","iconEmpty","iconFilled","iconHover","iconFocus","iconActive","decimal"]),x=["value"],v=["className","defaultValue","disabled","emptyIcon","emptyLabelText","getLabelText","highlightSelectedOnly","icon","IconContainerComponent","max","name","onChange","onChangeActive","onMouseLeave","onMouseMove","precision","readOnly","size","value"];function w(e,t){if(null==e)return e;const n=Math.round(e/t)*t;return Number(n.toFixed(function(e){const t=e.toString().split(".")[1];return t?t.length:0}(t)))}const k=(0,g.ZP)("span",{name:"MuiRating",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${b.visuallyHidden}`]:t.visuallyHidden},t.root,t[`size${(0,c.capitalize)(n.size)}`],n.readOnly&&t.readOnly]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",position:"relative",fontSize:e.typography.pxToRem(24),color:"#faaf00",cursor:"pointer",textAlign:"left",WebkitTapHighlightColor:"transparent",[`&.${b.disabled}`]:{opacity:(e.vars||e).palette.action.disabledOpacity,pointerEvents:"none"},[`&.${b.focusVisible} .${b.iconActive}`]:{outline:"1px solid #999"},[`& .${b.visuallyHidden}`]:i.jy},"small"===t.size&&{fontSize:e.typography.pxToRem(18)},"large"===t.size&&{fontSize:e.typography.pxToRem(30)},t.readOnly&&{pointerEvents:"none"}))),S=(0,g.ZP)("label",{name:"MuiRating",slot:"Label",overridesResolver:(e,t)=>t.label})((({ownerState:e})=>(0,s.Z)({cursor:"inherit"},e.emptyValueFocused&&{top:0,bottom:0,position:"absolute",outline:"1px solid #999",width:"100%"}))),I=(0,g.ZP)("span",{name:"MuiRating",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.iconEmpty&&t.iconEmpty,n.iconFilled&&t.iconFilled,n.iconHover&&t.iconHover,n.iconFocus&&t.iconFocus,n.iconActive&&t.iconActive]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"flex",transition:e.transitions.create("transform",{duration:e.transitions.duration.shortest}),pointerEvents:"none"},t.iconActive&&{transform:"scale(1.2)"},t.iconEmpty&&{color:(e.vars||e).palette.action.disabled}))),N=(0,g.ZP)("span",{name:"MuiRating",slot:"Decimal",shouldForwardProp:e=>(0,g.Dz)(e)&&"iconActive"!==e,overridesResolver:(e,t)=>{const{iconActive:n}=e;return[t.decimal,n&&t.iconActive]}})((({iconActive:e})=>(0,s.Z)({position:"relative"},e&&{transform:"scale(1.2)"})));function C(e){const t=(0,r.Z)(e,x);return(0,h.jsx)("span",(0,s.Z)({},t))}function T(e){const{classes:t,disabled:n,emptyIcon:r,focus:i,getLabelText:l,highlightSelectedOnly:u,hover:d,icon:p,IconContainerComponent:f,isActive:m,itemValue:g,labelProps:y,name:b,onBlur:x,onChange:v,onClick:w,onFocus:k,readOnly:N,ownerState:C,ratingValue:T,ratingValueRounded:$}=e,E=u?g===T:g<=T,R=g<=d,A=g<=i,F=g===$,O=(0,c.unstable_useId)(),D=(0,h.jsx)(I,{as:f,value:g,className:(0,o.Z)(t.icon,E?t.iconFilled:t.iconEmpty,R&&t.iconHover,A&&t.iconFocus,m&&t.iconActive),ownerState:(0,s.Z)({},C,{iconEmpty:!E,iconFilled:E,iconHover:R,iconFocus:A,iconActive:m}),children:r&&!E?r:p});return N?(0,h.jsx)("span",(0,s.Z)({},y,{children:D})):(0,h.jsxs)(a.Fragment,{children:[(0,h.jsxs)(S,(0,s.Z)({ownerState:(0,s.Z)({},C,{emptyValueFocused:void 0}),htmlFor:O},y,{children:[D,(0,h.jsx)("span",{className:t.visuallyHidden,children:l(g)})]})),(0,h.jsx)("input",{className:t.visuallyHidden,onFocus:k,onBlur:x,onChange:v,onClick:w,disabled:n,value:g,id:O,type:"radio",name:b,checked:F})]})}const $=(0,h.jsx)(p,{fontSize:"inherit"}),E=(0,h.jsx)(f,{fontSize:"inherit"});function R(e){return`${e} Star${1!==e?"s":""}`}const A=a.forwardRef((function(e,t){const n=(0,m.Z)({name:"MuiRating",props:e}),{className:i,defaultValue:d=null,disabled:p=!1,emptyIcon:f=E,emptyLabelText:g="Empty",getLabelText:b=R,highlightSelectedOnly:x=!1,icon:I=$,IconContainerComponent:A=C,max:F=5,name:O,onChange:D,onChangeActive:_,onMouseLeave:M,onMouseMove:L,precision:z=1,readOnly:P=!1,size:B="medium",value:W}=n,V=(0,r.Z)(n,v),U=(0,c.unstable_useId)(O),[G,Z]=(0,c.useControlled)({controlled:W,default:d,name:"Rating"}),j=w(G,z),H=(0,u.Z)(),[{hover:q,focus:K},X]=a.useState({hover:-1,focus:-1});let Y=j;-1!==q&&(Y=q),-1!==K&&(Y=K);const{isFocusVisibleRef:J,onBlur:Q,onFocus:ee,ref:te}=(0,c.useIsFocusVisible)(),[ne,re]=a.useState(!1),se=a.useRef(),ae=(0,c.useForkRef)(te,se),oe=(0,c.useForkRef)(ae,t),ie=e=>{let t=""===e.target.value?null:parseFloat(e.target.value);-1!==q&&(t=q),Z(t),D&&D(e,t)},le=e=>{0===e.clientX&&0===e.clientY||(X({hover:-1,focus:-1}),Z(null),D&&parseFloat(e.target.value)===j&&D(e,null))},ue=e=>{ee(e),!0===J.current&&re(!0);const t=parseFloat(e.target.value);X((e=>({hover:e.hover,focus:t})))},ce=e=>{if(-1!==q)return;Q(e),!1===J.current&&re(!1);X((e=>({hover:e.hover,focus:-1})))},[de,he]=a.useState(!1),pe=(0,s.Z)({},n,{defaultValue:d,disabled:p,emptyIcon:f,emptyLabelText:g,emptyValueFocused:de,focusVisible:ne,getLabelText:b,icon:I,IconContainerComponent:A,max:F,precision:z,readOnly:P,size:B}),fe=(e=>{const{classes:t,size:n,readOnly:r,disabled:s,emptyValueFocused:a,focusVisible:o}=e,i={root:["root",`size${(0,c.capitalize)(n)}`,s&&"disabled",o&&"focusVisible",r&&"readyOnly"],label:["label","pristine"],labelEmptyValue:[a&&"labelEmptyValueActive"],icon:["icon"],iconEmpty:["iconEmpty"],iconFilled:["iconFilled"],iconHover:["iconHover"],iconFocus:["iconFocus"],iconActive:["iconActive"],decimal:["decimal"],visuallyHidden:["visuallyHidden"]};return(0,l.V_)(i,y,t)})(pe);return(0,h.jsxs)(k,(0,s.Z)({ref:oe,onMouseMove:e=>{L&&L(e);const t=se.current,{right:n,left:r}=t.getBoundingClientRect(),{width:s}=t.firstChild.getBoundingClientRect();let a;a="rtl"===H.direction?(n-e.clientX)/(s*F):(e.clientX-r)/(s*F);let o=w(F*a+z/2,z);o=function(e,t,n){return e<t?t:e>n?n:e}(o,z,F),X((e=>e.hover===o&&e.focus===o?e:{hover:o,focus:o})),re(!1),_&&q!==o&&_(e,o)},onMouseLeave:e=>{M&&M(e);X({hover:-1,focus:-1}),_&&-1!==q&&_(e,-1)},className:(0,o.Z)(fe.root,i),ownerState:pe,role:P?"img":null,"aria-label":P?b(Y):null},V,{children:[Array.from(new Array(F)).map(((e,t)=>{const n=t+1,r={classes:fe,disabled:p,emptyIcon:f,focus:K,getLabelText:b,highlightSelectedOnly:x,hover:q,icon:I,IconContainerComponent:A,name:U,onBlur:ce,onChange:ie,onClick:le,onFocus:ue,ratingValue:Y,ratingValueRounded:j,readOnly:P,ownerState:pe},a=n===Math.ceil(Y)&&(-1!==q||-1!==K);if(z<1){const e=Array.from(new Array(1/z));return(0,h.jsx)(N,{className:(0,o.Z)(fe.decimal,a&&fe.iconActive),ownerState:pe,iconActive:a,children:e.map(((t,a)=>{const o=w(n-1+(a+1)*z,z);return(0,h.jsx)(T,(0,s.Z)({},r,{isActive:!1,itemValue:o,labelProps:{style:e.length-1===a?{}:{width:o===Y?(a+1)*z*100+"%":"0%",overflow:"hidden",position:"absolute"}}}),o)}))},n)}return(0,h.jsx)(T,(0,s.Z)({},r,{isActive:a,itemValue:n}),n)})),!P&&!p&&(0,h.jsxs)(S,{className:(0,o.Z)(fe.label,fe.labelEmptyValue),ownerState:pe,children:[(0,h.jsx)("input",{className:fe.visuallyHidden,value:"",id:`${U}-empty`,type:"radio",name:U,checked:null==j,onFocus:()=>he(!0),onBlur:()=>he(!1),onChange:ie}),(0,h.jsx)("span",{className:fe.visuallyHidden,children:g})]})]}))}))},85985:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>rn});var r=n(76805),s=n(8339),a=n(43001),o=(n(3827),n(11358)),i=n(4647),l=n(47410),u=n(10543),c=n(66954),d=n(52880),h=n(79191),p=n(93304),f=n(50349),m=n(901),g=n(62056),y=n(13764),b=n(21590),x=n(2574);const v=function(e){return(0,x.jsx)(y.nz,(0,r.Z)({},e,{defaultTheme:b.Z}))};var w=n(64089);function k(e){return(0,i.d6)("MuiInputBase",e)}const S=(0,i.sI)("MuiInputBase",["root","formControl","focused","disabled","adornedStart","adornedEnd","error","sizeSmall","multiline","colorSecondary","fullWidth","hiddenLabel","input","inputSizeSmall","inputMultiline","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel"]),I=["aria-describedby","autoComplete","autoFocus","className","color","components","componentsProps","defaultValue","disabled","disableInjectingGlobalStyles","endAdornment","error","fullWidth","id","inputComponent","inputProps","inputRef","margin","maxRows","minRows","multiline","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","placeholder","readOnly","renderSuffix","rows","size","startAdornment","type","value"],N=(e,t)=>{const{ownerState:n}=e;return[t.root,n.formControl&&t.formControl,n.startAdornment&&t.adornedStart,n.endAdornment&&t.adornedEnd,n.error&&t.error,"small"===n.size&&t.sizeSmall,n.multiline&&t.multiline,n.color&&t[`color${(0,f.Z)(n.color)}`],n.fullWidth&&t.fullWidth,n.hiddenLabel&&t.hiddenLabel]},C=(e,t)=>{const{ownerState:n}=e;return[t.input,"small"===n.size&&t.inputSizeSmall,n.multiline&&t.inputMultiline,"search"===n.type&&t.inputTypeSearch,n.startAdornment&&t.inputAdornedStart,n.endAdornment&&t.inputAdornedEnd,n.hiddenLabel&&t.inputHiddenLabel]},T=(0,u.ZP)("div",{name:"MuiInputBase",slot:"Root",overridesResolver:N})((({theme:e,ownerState:t})=>(0,r.Z)({},e.typography.body1,{color:(e.vars||e).palette.text.primary,lineHeight:"1.4375em",boxSizing:"border-box",position:"relative",cursor:"text",display:"inline-flex",alignItems:"center",[`&.${S.disabled}`]:{color:(e.vars||e).palette.text.disabled,cursor:"default"}},t.multiline&&(0,r.Z)({padding:"4px 0 5px"},"small"===t.size&&{paddingTop:1}),t.fullWidth&&{width:"100%"}))),$=(0,u.ZP)("input",{name:"MuiInputBase",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>{const n="light"===e.palette.mode,s=(0,r.Z)({color:"currentColor"},e.vars?{opacity:e.vars.opacity.inputPlaceholder}:{opacity:n?.42:.5},{transition:e.transitions.create("opacity",{duration:e.transitions.duration.shorter})}),a={opacity:"0 !important"},o=e.vars?{opacity:e.vars.opacity.inputPlaceholder}:{opacity:n?.42:.5};return(0,r.Z)({font:"inherit",letterSpacing:"inherit",color:"currentColor",padding:"4px 0 5px",border:0,boxSizing:"content-box",background:"none",height:"1.4375em",margin:0,WebkitTapHighlightColor:"transparent",display:"block",minWidth:0,width:"100%",animationName:"mui-auto-fill-cancel",animationDuration:"10ms","&::-webkit-input-placeholder":s,"&::-moz-placeholder":s,"&:-ms-input-placeholder":s,"&::-ms-input-placeholder":s,"&:focus":{outline:0},"&:invalid":{boxShadow:"none"},"&::-webkit-search-decoration":{WebkitAppearance:"none"},[`label[data-shrink=false] + .${S.formControl} &`]:{"&::-webkit-input-placeholder":a,"&::-moz-placeholder":a,"&:-ms-input-placeholder":a,"&::-ms-input-placeholder":a,"&:focus::-webkit-input-placeholder":o,"&:focus::-moz-placeholder":o,"&:focus:-ms-input-placeholder":o,"&:focus::-ms-input-placeholder":o},[`&.${S.disabled}`]:{opacity:1,WebkitTextFillColor:(e.vars||e).palette.text.disabled},"&:-webkit-autofill":{animationDuration:"5000s",animationName:"mui-auto-fill"}},"small"===t.size&&{paddingTop:1},t.multiline&&{height:"auto",resize:"none",padding:0,paddingTop:0},"search"===t.type&&{MozAppearance:"textfield"})})),E=(0,x.jsx)(v,{styles:{"@keyframes mui-auto-fill":{from:{display:"block"}},"@keyframes mui-auto-fill-cancel":{from:{display:"block"}}}}),R=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiInputBase"}),{"aria-describedby":u,autoComplete:y,autoFocus:b,className:v,components:S={},componentsProps:N={},defaultValue:C,disabled:R,disableInjectingGlobalStyles:A,endAdornment:F,fullWidth:O=!1,id:D,inputComponent:_="input",inputProps:M={},inputRef:L,maxRows:z,minRows:P,multiline:B=!1,name:W,onBlur:V,onChange:U,onClick:G,onFocus:Z,onKeyDown:j,onKeyUp:H,placeholder:q,readOnly:K,renderSuffix:X,rows:Y,startAdornment:J,type:Q="text",value:ee}=n,te=(0,s.Z)(n,I),ne=null!=M.value?M.value:ee,{current:re}=a.useRef(null!=ne),se=a.useRef(),ae=a.useCallback((e=>{0}),[]),oe=(0,m.Z)(M.ref,ae),ie=(0,m.Z)(L,oe),le=(0,m.Z)(se,ie),[ue,ce]=a.useState(!1),de=(0,p.Z)();const he=(0,d.Z)({props:n,muiFormControl:de,states:["color","disabled","error","hiddenLabel","size","required","filled"]});he.focused=de?de.focused:ue,a.useEffect((()=>{!de&&R&&ue&&(ce(!1),V&&V())}),[de,R,ue,V]);const pe=de&&de.onFilled,fe=de&&de.onEmpty,me=a.useCallback((e=>{(0,w.vd)(e)?pe&&pe():fe&&fe()}),[pe,fe]);(0,g.Z)((()=>{re&&me({value:ne})}),[ne,me,re]);a.useEffect((()=>{me(se.current)}),[]);let ge=_,ye=M;B&&"input"===ge&&(ye=Y?(0,r.Z)({type:void 0,minRows:Y,maxRows:Y},ye):(0,r.Z)({type:void 0,maxRows:z,minRows:P},ye),ge=i.uz);a.useEffect((()=>{de&&de.setAdornedStart(Boolean(J))}),[de,J]);const be=(0,r.Z)({},n,{color:he.color||"primary",disabled:he.disabled,endAdornment:F,error:he.error,focused:he.focused,formControl:de,fullWidth:O,hiddenLabel:he.hiddenLabel,multiline:B,size:he.size,startAdornment:J,type:Q}),xe=(e=>{const{classes:t,color:n,disabled:r,error:s,endAdornment:a,focused:o,formControl:l,fullWidth:u,hiddenLabel:c,multiline:d,size:h,startAdornment:p,type:m}=e,g={root:["root",`color${(0,f.Z)(n)}`,r&&"disabled",s&&"error",u&&"fullWidth",o&&"focused",l&&"formControl","small"===h&&"sizeSmall",d&&"multiline",p&&"adornedStart",a&&"adornedEnd",c&&"hiddenLabel"],input:["input",r&&"disabled","search"===m&&"inputTypeSearch",d&&"inputMultiline","small"===h&&"inputSizeSmall",c&&"inputHiddenLabel",p&&"inputAdornedStart",a&&"inputAdornedEnd"]};return(0,i.V_)(g,k,t)})(be),ve=S.Root||T,we=N.root||{},ke=S.Input||$;return ye=(0,r.Z)({},ye,N.input),(0,x.jsxs)(a.Fragment,{children:[!A&&E,(0,x.jsxs)(ve,(0,r.Z)({},we,!(0,i.Xd)(ve)&&{ownerState:(0,r.Z)({},be,we.ownerState)},{ref:t,onClick:e=>{se.current&&e.currentTarget===e.target&&se.current.focus(),G&&G(e)}},te,{className:(0,o.Z)(xe.root,we.className,v),children:[J,(0,x.jsx)(h.Z.Provider,{value:null,children:(0,x.jsx)(ke,(0,r.Z)({ownerState:be,"aria-invalid":he.error,"aria-describedby":u,autoComplete:y,autoFocus:b,defaultValue:C,disabled:he.disabled,id:D,onAnimationStart:e=>{me("mui-auto-fill-cancel"===e.animationName?se.current:{value:"x"})},name:W,placeholder:q,readOnly:K,required:he.required,rows:Y,value:ne,onKeyDown:j,onKeyUp:H,type:Q},ye,!(0,i.Xd)(ke)&&{as:ge,ownerState:(0,r.Z)({},be,ye.ownerState)},{ref:le,className:(0,o.Z)(xe.input,ye.className),onBlur:e=>{V&&V(e),M.onBlur&&M.onBlur(e),de&&de.onBlur?de.onBlur(e):ce(!1)},onChange:(e,...t)=>{if(!re){const t=e.target||se.current;if(null==t)throw new Error((0,l.fe)(1));me({value:t.value})}M.onChange&&M.onChange(e,...t),U&&U(e,...t)},onFocus:e=>{he.disabled?e.stopPropagation():(Z&&Z(e),M.onFocus&&M.onFocus(e),de&&de.onFocus?de.onFocus(e):ce(!0))}}))}),F,X?X((0,r.Z)({},he,{startAdornment:J})):null]}))]})})),A=R;function F(e){return(0,i.d6)("MuiInput",e)}const O=(0,r.Z)({},S,(0,i.sI)("MuiInput",["root","underline","input"])),D=["disableUnderline","components","componentsProps","fullWidth","inputComponent","multiline","type"],_=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...N(e,t),!n.disableUnderline&&t.underline]}})((({theme:e,ownerState:t})=>{let n="light"===e.palette.mode?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)";return e.vars&&(n=`rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`),(0,r.Z)({position:"relative"},t.formControl&&{"label + &":{marginTop:16}},!t.disableUnderline&&{"&:after":{borderBottom:`2px solid ${(e.vars||e).palette[t.color].main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${O.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${O.error}:after`]:{borderBottomColor:(e.vars||e).palette.error.main,transform:"scaleX(1)"},"&:before":{borderBottom:`1px solid ${n}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:e.transitions.create("border-bottom-color",{duration:e.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${O.disabled}):before`]:{borderBottom:`2px solid ${(e.vars||e).palette.text.primary}`,"@media (hover: none)":{borderBottom:`1px solid ${n}`}},[`&.${O.disabled}:before`]:{borderBottomStyle:"dotted"}})})),M=(0,u.ZP)($,{name:"MuiInput",slot:"Input",overridesResolver:C})({}),L=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiInput"}),{disableUnderline:a,components:o={},componentsProps:u,fullWidth:d=!1,inputComponent:h="input",multiline:p=!1,type:f="text"}=n,m=(0,s.Z)(n,D),g=(e=>{const{classes:t,disableUnderline:n}=e,s={root:["root",!n&&"underline"],input:["input"]},a=(0,i.V_)(s,F,t);return(0,r.Z)({},t,a)})(n),y={root:{ownerState:{disableUnderline:a}}},b=u?(0,l.vb)(u,y):y;return(0,x.jsx)(A,(0,r.Z)({components:(0,r.Z)({Root:_,Input:M},o),componentsProps:b,fullWidth:d,inputComponent:h,multiline:p,ref:t,type:f},m,{classes:g}))}));L.muiName="Input";const z=L;function P(e){return(0,i.d6)("MuiFilledInput",e)}const B=(0,r.Z)({},S,(0,i.sI)("MuiFilledInput",["root","underline","input"])),W=["disableUnderline","components","componentsProps","fullWidth","hiddenLabel","inputComponent","multiline","type"],V=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiFilledInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...N(e,t),!n.disableUnderline&&t.underline]}})((({theme:e,ownerState:t})=>{var n;const s="light"===e.palette.mode,a=s?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)",o=s?"rgba(0, 0, 0, 0.06)":"rgba(255, 255, 255, 0.09)",i=s?"rgba(0, 0, 0, 0.09)":"rgba(255, 255, 255, 0.13)",l=s?"rgba(0, 0, 0, 0.12)":"rgba(255, 255, 255, 0.12)";return(0,r.Z)({position:"relative",backgroundColor:e.vars?e.vars.palette.FilledInput.bg:o,borderTopLeftRadius:(e.vars||e).shape.borderRadius,borderTopRightRadius:(e.vars||e).shape.borderRadius,transition:e.transitions.create("background-color",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),"&:hover":{backgroundColor:e.vars?e.vars.palette.FilledInput.hoverBg:i,"@media (hover: none)":{backgroundColor:e.vars?e.vars.palette.FilledInput.bg:o}},[`&.${B.focused}`]:{backgroundColor:e.vars?e.vars.palette.FilledInput.bg:o},[`&.${B.disabled}`]:{backgroundColor:e.vars?e.vars.palette.FilledInput.disabledBg:l}},!t.disableUnderline&&{"&:after":{borderBottom:`2px solid ${null==(n=(e.vars||e).palette[t.color||"primary"])?void 0:n.main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${B.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${B.error}:after`]:{borderBottomColor:(e.vars||e).palette.error.main,transform:"scaleX(1)"},"&:before":{borderBottom:`1px solid ${e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`:a}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:e.transitions.create("border-bottom-color",{duration:e.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${B.disabled}):before`]:{borderBottom:`1px solid ${(e.vars||e).palette.text.primary}`},[`&.${B.disabled}:before`]:{borderBottomStyle:"dotted"}},t.startAdornment&&{paddingLeft:12},t.endAdornment&&{paddingRight:12},t.multiline&&(0,r.Z)({padding:"25px 12px 8px"},"small"===t.size&&{paddingTop:21,paddingBottom:4},t.hiddenLabel&&{paddingTop:16,paddingBottom:17}))})),U=(0,u.ZP)($,{name:"MuiFilledInput",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>(0,r.Z)({paddingTop:25,paddingRight:12,paddingBottom:8,paddingLeft:12},!e.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===e.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===e.palette.mode?null:"#fff",caretColor:"light"===e.palette.mode?null:"#fff",borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"}},e.vars&&{"&:-webkit-autofill":{borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"},[e.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===t.size&&{paddingTop:21,paddingBottom:4},t.hiddenLabel&&{paddingTop:16,paddingBottom:17},t.multiline&&{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:0},t.startAdornment&&{paddingLeft:0},t.endAdornment&&{paddingRight:0},t.hiddenLabel&&"small"===t.size&&{paddingTop:8,paddingBottom:9}))),G=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFilledInput"}),{components:a={},componentsProps:o,fullWidth:u=!1,inputComponent:d="input",multiline:h=!1,type:p="text"}=n,f=(0,s.Z)(n,W),m=(0,r.Z)({},n,{fullWidth:u,inputComponent:d,multiline:h,type:p}),g=(e=>{const{classes:t,disableUnderline:n}=e,s={root:["root",!n&&"underline"],input:["input"]},a=(0,i.V_)(s,P,t);return(0,r.Z)({},t,a)})(n),y={root:{ownerState:m},input:{ownerState:m}},b=o?(0,l.vb)(o,y):y;return(0,x.jsx)(A,(0,r.Z)({components:(0,r.Z)({Root:V,Input:U},a),componentsProps:b,fullWidth:u,inputComponent:d,multiline:h,ref:t,type:p},f,{classes:g}))}));G.muiName="Input";const Z=G;var j;const H=["children","classes","className","label","notched"],q=(0,u.ZP)("fieldset")({textAlign:"left",position:"absolute",bottom:0,right:0,top:-5,left:0,margin:0,padding:"0 8px",pointerEvents:"none",borderRadius:"inherit",borderStyle:"solid",borderWidth:1,overflow:"hidden",minWidth:"0%"}),K=(0,u.ZP)("legend")((({ownerState:e,theme:t})=>(0,r.Z)({float:"unset",overflow:"hidden"},!e.withLabel&&{padding:0,lineHeight:"11px",transition:t.transitions.create("width",{duration:150,easing:t.transitions.easing.easeOut})},e.withLabel&&(0,r.Z)({display:"block",width:"auto",padding:0,height:11,fontSize:"0.75em",visibility:"hidden",maxWidth:.01,transition:t.transitions.create("max-width",{duration:50,easing:t.transitions.easing.easeOut}),whiteSpace:"nowrap","& > span":{paddingLeft:5,paddingRight:5,display:"inline-block",opacity:0,visibility:"visible"}},e.notched&&{maxWidth:"100%",transition:t.transitions.create("max-width",{duration:100,easing:t.transitions.easing.easeOut,delay:50})}))));function X(e){return(0,i.d6)("MuiOutlinedInput",e)}const Y=(0,r.Z)({},S,(0,i.sI)("MuiOutlinedInput",["root","notchedOutline","input"])),J=["components","fullWidth","inputComponent","label","multiline","notched","type"],Q=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiOutlinedInput",slot:"Root",overridesResolver:N})((({theme:e,ownerState:t})=>{const n="light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return(0,r.Z)({position:"relative",borderRadius:(e.vars||e).shape.borderRadius,[`&:hover .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.text.primary},"@media (hover: none)":{[`&:hover .${Y.notchedOutline}`]:{borderColor:e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:n}},[`&.${Y.focused} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette[t.color].main,borderWidth:2},[`&.${Y.error} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.error.main},[`&.${Y.disabled} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.action.disabled}},t.startAdornment&&{paddingLeft:14},t.endAdornment&&{paddingRight:14},t.multiline&&(0,r.Z)({padding:"16.5px 14px"},"small"===t.size&&{padding:"8.5px 14px"}))})),ee=(0,u.ZP)((function(e){const{className:t,label:n,notched:a}=e,o=(0,s.Z)(e,H),i=null!=n&&""!==n,l=(0,r.Z)({},e,{notched:a,withLabel:i});return(0,x.jsx)(q,(0,r.Z)({"aria-hidden":!0,className:t,ownerState:l},o,{children:(0,x.jsx)(K,{ownerState:l,children:i?(0,x.jsx)("span",{children:n}):j||(j=(0,x.jsx)("span",{className:"notranslate",children:"​"}))})}))}),{name:"MuiOutlinedInput",slot:"NotchedOutline",overridesResolver:(e,t)=>t.notchedOutline})((({theme:e})=>{const t="light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return{borderColor:e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:t}})),te=(0,u.ZP)($,{name:"MuiOutlinedInput",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>(0,r.Z)({padding:"16.5px 14px"},!e.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===e.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===e.palette.mode?null:"#fff",caretColor:"light"===e.palette.mode?null:"#fff",borderRadius:"inherit"}},e.vars&&{"&:-webkit-autofill":{borderRadius:"inherit"},[e.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===t.size&&{padding:"8.5px 14px"},t.multiline&&{padding:0},t.startAdornment&&{paddingLeft:0},t.endAdornment&&{paddingRight:0}))),ne=a.forwardRef((function(e,t){var n;const o=(0,c.Z)({props:e,name:"MuiOutlinedInput"}),{components:l={},fullWidth:u=!1,inputComponent:h="input",label:f,multiline:m=!1,notched:g,type:y="text"}=o,b=(0,s.Z)(o,J),v=(e=>{const{classes:t}=e,n=(0,i.V_)({root:["root"],notchedOutline:["notchedOutline"],input:["input"]},X,t);return(0,r.Z)({},t,n)})(o),w=(0,p.Z)(),k=(0,d.Z)({props:o,muiFormControl:w,states:["required"]}),S=(0,r.Z)({},o,{color:k.color||"primary",disabled:k.disabled,error:k.error,focused:k.focused,formControl:w,fullWidth:u,hiddenLabel:k.hiddenLabel,multiline:m,size:k.size,type:y});return(0,x.jsx)(A,(0,r.Z)({components:(0,r.Z)({Root:Q,Input:te},l),renderSuffix:e=>(0,x.jsx)(ee,{ownerState:S,className:v.notchedOutline,label:null!=f&&""!==f&&k.required?n||(n=(0,x.jsxs)(a.Fragment,{children:[f," ","*"]})):f,notched:void 0!==g?g:Boolean(e.startAdornment||e.filled||e.focused)}),fullWidth:u,inputComponent:h,multiline:m,ref:t,type:y},b,{classes:(0,r.Z)({},v,{notchedOutline:null})}))}));ne.muiName="Input";const re=ne;function se(e){return(0,i.d6)("MuiFormLabel",e)}const ae=(0,i.sI)("MuiFormLabel",["root","colorSecondary","focused","disabled","error","filled","required","asterisk"]),oe=["children","className","color","component","disabled","error","filled","focused","required"],ie=(0,u.ZP)("label",{name:"MuiFormLabel",slot:"Root",overridesResolver:({ownerState:e},t)=>(0,r.Z)({},t.root,"secondary"===e.color&&t.colorSecondary,e.filled&&t.filled)})((({theme:e,ownerState:t})=>(0,r.Z)({color:(e.vars||e).palette.text.secondary},e.typography.body1,{lineHeight:"1.4375em",padding:0,position:"relative",[`&.${ae.focused}`]:{color:(e.vars||e).palette[t.color].main},[`&.${ae.disabled}`]:{color:(e.vars||e).palette.text.disabled},[`&.${ae.error}`]:{color:(e.vars||e).palette.error.main}}))),le=(0,u.ZP)("span",{name:"MuiFormLabel",slot:"Asterisk",overridesResolver:(e,t)=>t.asterisk})((({theme:e})=>({[`&.${ae.error}`]:{color:(e.vars||e).palette.error.main}}))),ue=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFormLabel"}),{children:a,className:l,component:u="label"}=n,h=(0,s.Z)(n,oe),m=(0,p.Z)(),g=(0,d.Z)({props:n,muiFormControl:m,states:["color","required","focused","disabled","error","filled"]}),y=(0,r.Z)({},n,{color:g.color||"primary",component:u,disabled:g.disabled,error:g.error,filled:g.filled,focused:g.focused,required:g.required}),b=(e=>{const{classes:t,color:n,focused:r,disabled:s,error:a,filled:o,required:l}=e,u={root:["root",`color${(0,f.Z)(n)}`,s&&"disabled",a&&"error",o&&"filled",r&&"focused",l&&"required"],asterisk:["asterisk",a&&"error"]};return(0,i.V_)(u,se,t)})(y);return(0,x.jsxs)(ie,(0,r.Z)({as:u,ownerState:y,className:(0,o.Z)(b.root,l),ref:t},h,{children:[a,g.required&&(0,x.jsxs)(le,{ownerState:y,"aria-hidden":!0,className:b.asterisk,children:[" ","*"]})]}))}));function ce(e){return(0,i.d6)("MuiInputLabel",e)}(0,i.sI)("MuiInputLabel",["root","focused","disabled","error","required","asterisk","formControl","sizeSmall","shrink","animated","standard","filled","outlined"]);const de=["disableAnimation","margin","shrink","variant"],he=(0,u.ZP)(ue,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiInputLabel",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${ae.asterisk}`]:t.asterisk},t.root,n.formControl&&t.formControl,"small"===n.size&&t.sizeSmall,n.shrink&&t.shrink,!n.disableAnimation&&t.animated,t[n.variant]]}})((({theme:e,ownerState:t})=>(0,r.Z)({display:"block",transformOrigin:"top left",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",maxWidth:"100%"},t.formControl&&{position:"absolute",left:0,top:0,transform:"translate(0, 20px) scale(1)"},"small"===t.size&&{transform:"translate(0, 17px) scale(1)"},t.shrink&&{transform:"translate(0, -1.5px) scale(0.75)",transformOrigin:"top left",maxWidth:"133%"},!t.disableAnimation&&{transition:e.transitions.create(["color","transform","max-width"],{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut})},"filled"===t.variant&&(0,r.Z)({zIndex:1,pointerEvents:"none",transform:"translate(12px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===t.size&&{transform:"translate(12px, 13px) scale(1)"},t.shrink&&(0,r.Z)({userSelect:"none",pointerEvents:"auto",transform:"translate(12px, 7px) scale(0.75)",maxWidth:"calc(133% - 24px)"},"small"===t.size&&{transform:"translate(12px, 4px) scale(0.75)"})),"outlined"===t.variant&&(0,r.Z)({zIndex:1,pointerEvents:"none",transform:"translate(14px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===t.size&&{transform:"translate(14px, 9px) scale(1)"},t.shrink&&{userSelect:"none",pointerEvents:"auto",maxWidth:"calc(133% - 24px)",transform:"translate(14px, -9px) scale(0.75)"})))),pe=a.forwardRef((function(e,t){const n=(0,c.Z)({name:"MuiInputLabel",props:e}),{disableAnimation:a=!1,shrink:o}=n,l=(0,s.Z)(n,de),u=(0,p.Z)();let h=o;void 0===h&&u&&(h=u.filled||u.focused||u.adornedStart);const f=(0,d.Z)({props:n,muiFormControl:u,states:["size","variant","required"]}),m=(0,r.Z)({},n,{disableAnimation:a,formControl:u,shrink:h,size:f.size,variant:f.variant,required:f.required}),g=(e=>{const{classes:t,formControl:n,size:s,shrink:a,disableAnimation:o,variant:l,required:u}=e,c={root:["root",n&&"formControl",!o&&"animated",a&&"shrink","small"===s&&"sizeSmall",l],asterisk:[u&&"asterisk"]},d=(0,i.V_)(c,ce,t);return(0,r.Z)({},t,d)})(m);return(0,x.jsx)(he,(0,r.Z)({"data-shrink":h,ownerState:m,ref:t},l,{classes:g}))}));var fe=n(25738);function me(e){return(0,i.d6)("MuiFormHelperText",e)}const ge=(0,i.sI)("MuiFormHelperText",["root","error","disabled","sizeSmall","sizeMedium","contained","focused","filled","required"]);var ye;const be=["children","className","component","disabled","error","filled","focused","margin","required","variant"],xe=(0,u.ZP)("p",{name:"MuiFormHelperText",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.size&&t[`size${(0,f.Z)(n.size)}`],n.contained&&t.contained,n.filled&&t.filled]}})((({theme:e,ownerState:t})=>(0,r.Z)({color:(e.vars||e).palette.text.secondary},e.typography.caption,{textAlign:"left",marginTop:3,marginRight:0,marginBottom:0,marginLeft:0,[`&.${ge.disabled}`]:{color:(e.vars||e).palette.text.disabled},[`&.${ge.error}`]:{color:(e.vars||e).palette.error.main}},"small"===t.size&&{marginTop:4},t.contained&&{marginLeft:14,marginRight:14}))),ve=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFormHelperText"}),{children:a,className:l,component:u="p"}=n,h=(0,s.Z)(n,be),m=(0,p.Z)(),g=(0,d.Z)({props:n,muiFormControl:m,states:["variant","size","disabled","error","filled","focused","required"]}),y=(0,r.Z)({},n,{component:u,contained:"filled"===g.variant||"outlined"===g.variant,variant:g.variant,size:g.size,disabled:g.disabled,error:g.error,filled:g.filled,focused:g.focused,required:g.required}),b=(e=>{const{classes:t,contained:n,size:r,disabled:s,error:a,filled:o,focused:l,required:u}=e,c={root:["root",s&&"disabled",a&&"error",r&&`size${(0,f.Z)(r)}`,n&&"contained",l&&"focused",o&&"filled",u&&"required"]};return(0,i.V_)(c,me,t)})(y);return(0,x.jsx)(xe,(0,r.Z)({as:u,ownerState:y,className:(0,o.Z)(b.root,l),ref:t},h,{children:" "===a?ye||(ye=(0,x.jsx)("span",{className:"notranslate",children:"​"})):a}))}));n(65031);var we=n(36847);const ke=a.createContext({});function Se(e){return(0,i.d6)("MuiList",e)}(0,i.sI)("MuiList",["root","padding","dense","subheader"]);const Ie=["children","className","component","dense","disablePadding","subheader"],Ne=(0,u.ZP)("ul",{name:"MuiList",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.disablePadding&&t.padding,n.dense&&t.dense,n.subheader&&t.subheader]}})((({ownerState:e})=>(0,r.Z)({listStyle:"none",margin:0,padding:0,position:"relative"},!e.disablePadding&&{paddingTop:8,paddingBottom:8},e.subheader&&{paddingTop:0}))),Ce=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiList"}),{children:l,className:u,component:d="ul",dense:h=!1,disablePadding:p=!1,subheader:f}=n,m=(0,s.Z)(n,Ie),g=a.useMemo((()=>({dense:h})),[h]),y=(0,r.Z)({},n,{component:d,dense:h,disablePadding:p}),b=(e=>{const{classes:t,disablePadding:n,dense:r,subheader:s}=e,a={root:["root",!n&&"padding",r&&"dense",s&&"subheader"]};return(0,i.V_)(a,Se,t)})(y);return(0,x.jsx)(ke.Provider,{value:g,children:(0,x.jsxs)(Ne,(0,r.Z)({as:d,className:(0,o.Z)(b.root,u),ref:t,ownerState:y},m,{children:[f,l]}))})})),Te=l.Ok,$e=["actions","autoFocus","autoFocusItem","children","className","disabledItemsFocusable","disableListWrap","onKeyDown","variant"];function Ee(e,t,n){return e===t?e.firstChild:t&&t.nextElementSibling?t.nextElementSibling:n?null:e.firstChild}function Re(e,t,n){return e===t?n?e.firstChild:e.lastChild:t&&t.previousElementSibling?t.previousElementSibling:n?null:e.lastChild}function Ae(e,t){if(void 0===t)return!0;let n=e.innerText;return void 0===n&&(n=e.textContent),n=n.trim().toLowerCase(),0!==n.length&&(t.repeating?n[0]===t.keys[0]:0===n.indexOf(t.keys.join("")))}function Fe(e,t,n,r,s,a){let o=!1,i=s(e,t,!!t&&n);for(;i;){if(i===e.firstChild){if(o)return!1;o=!0}const t=!r&&(i.disabled||"true"===i.getAttribute("aria-disabled"));if(i.hasAttribute("tabindex")&&Ae(i,a)&&!t)return i.focus(),!0;i=s(e,i,n)}return!1}const Oe=a.forwardRef((function(e,t){const{actions:n,autoFocus:o=!1,autoFocusItem:i=!1,children:l,className:u,disabledItemsFocusable:c=!1,disableListWrap:d=!1,onKeyDown:h,variant:p="selectedMenu"}=e,f=(0,s.Z)(e,$e),y=a.useRef(null),b=a.useRef({keys:[],repeating:!0,previousKeyMatched:!0,lastTime:null});(0,g.Z)((()=>{o&&y.current.focus()}),[o]),a.useImperativeHandle(n,(()=>({adjustStyleForScrollbar:(e,t)=>{const n=!y.current.style.width;if(e.clientHeight<y.current.clientHeight&&n){const n=`${Te((0,we.Z)(e))}px`;y.current.style["rtl"===t.direction?"paddingLeft":"paddingRight"]=n,y.current.style.width=`calc(100% + ${n})`}return y.current}})),[]);const v=(0,m.Z)(y,t);let w=-1;a.Children.forEach(l,((e,t)=>{a.isValidElement(e)&&(e.props.disabled||("selectedMenu"===p&&e.props.selected||-1===w)&&(w=t))}));const k=a.Children.map(l,((e,t)=>{if(t===w){const t={};return i&&(t.autoFocus=!0),void 0===e.props.tabIndex&&"selectedMenu"===p&&(t.tabIndex=0),a.cloneElement(e,t)}return e}));return(0,x.jsx)(Ce,(0,r.Z)({role:"menu",ref:v,className:u,onKeyDown:e=>{const t=y.current,n=e.key,r=(0,we.Z)(t).activeElement;if("ArrowDown"===n)e.preventDefault(),Fe(t,r,d,c,Ee);else if("ArrowUp"===n)e.preventDefault(),Fe(t,r,d,c,Re);else if("Home"===n)e.preventDefault(),Fe(t,null,d,c,Ee);else if("End"===n)e.preventDefault(),Fe(t,null,d,c,Re);else if(1===n.length){const s=b.current,a=n.toLowerCase(),o=performance.now();s.keys.length>0&&(o-s.lastTime>500?(s.keys=[],s.repeating=!0,s.previousKeyMatched=!0):s.repeating&&a!==s.keys[0]&&(s.repeating=!1)),s.lastTime=o,s.keys.push(a);const i=r&&!s.repeating&&Ae(r,s);s.previousKeyMatched&&(i||Fe(t,r,!1,c,Ee,s))?e.preventDefault():s.previousKeyMatched=!1}h&&h(e)},tabIndex:o?0:-1},f,{children:k}))}));var De=n(14446),_e=n(93874),Me=n(8751),Le=n(20499),ze=n(91348);const Pe=e=>e.scrollTop;function Be(e,t){var n,r;const{timeout:s,easing:a,style:o={}}=e;return{duration:null!=(n=o.transitionDuration)?n:"number"==typeof s?s:s[t.mode]||0,easing:null!=(r=o.transitionTimingFunction)?r:"object"==typeof a?a[t.mode]:a,delay:o.transitionDelay}}const We=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];function Ve(e){return`scale(${e}, ${e**2})`}const Ue={entering:{opacity:1,transform:Ve(1)},entered:{opacity:1,transform:"none"}},Ge="undefined"!=typeof navigator&&/^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent)&&/(os |version\/)15(.|_)4/i.test(navigator.userAgent),Ze=a.forwardRef((function(e,t){const{addEndListener:n,appear:o=!0,children:i,easing:l,in:u,onEnter:c,onEntered:d,onEntering:h,onExit:p,onExited:f,onExiting:g,style:y,timeout:b="auto",TransitionComponent:v=Le.uT}=e,w=(0,s.Z)(e,We),k=a.useRef(),S=a.useRef(),I=(0,ze.Z)(),N=a.useRef(null),C=(0,m.Z)(i.ref,t),T=(0,m.Z)(N,C),$=e=>t=>{if(e){const n=N.current;void 0===t?e(n):e(n,t)}},E=$(h),R=$(((e,t)=>{Pe(e);const{duration:n,delay:r,easing:s}=Be({style:y,timeout:b,easing:l},{mode:"enter"});let a;"auto"===b?(a=I.transitions.getAutoHeightDuration(e.clientHeight),S.current=a):a=n,e.style.transition=[I.transitions.create("opacity",{duration:a,delay:r}),I.transitions.create("transform",{duration:Ge?a:.666*a,delay:r,easing:s})].join(","),c&&c(e,t)})),A=$(d),F=$(g),O=$((e=>{const{duration:t,delay:n,easing:r}=Be({style:y,timeout:b,easing:l},{mode:"exit"});let s;"auto"===b?(s=I.transitions.getAutoHeightDuration(e.clientHeight),S.current=s):s=t,e.style.transition=[I.transitions.create("opacity",{duration:s,delay:n}),I.transitions.create("transform",{duration:Ge?s:.666*s,delay:Ge?n:n||.333*s,easing:r})].join(","),e.style.opacity=0,e.style.transform=Ve(.75),p&&p(e)})),D=$(f);return a.useEffect((()=>()=>{clearTimeout(k.current)}),[]),(0,x.jsx)(v,(0,r.Z)({appear:o,in:u,nodeRef:N,onEnter:R,onEntered:A,onEntering:E,onExit:O,onExited:D,onExiting:F,addEndListener:e=>{"auto"===b&&(k.current=setTimeout(e,S.current||0)),n&&n(N.current,e)},timeout:"auto"===b?null:b},w,{children:(e,t)=>a.cloneElement(i,(0,r.Z)({style:(0,r.Z)({opacity:0,transform:Ve(.75),visibility:"exited"!==e||u?void 0:"hidden"},Ue[e],y,i.props.style),ref:T},t))}))}));Ze.muiSupportAuto=!0;const je=Ze;var He=n(10074);const qe=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"],Ke={entering:{opacity:1},entered:{opacity:1}},Xe=a.forwardRef((function(e,t){const n=(0,ze.Z)(),o={enter:n.transitions.duration.enteringScreen,exit:n.transitions.duration.leavingScreen},{addEndListener:i,appear:l=!0,children:u,easing:c,in:d,onEnter:h,onEntered:p,onEntering:f,onExit:g,onExited:y,onExiting:b,style:v,timeout:w=o,TransitionComponent:k=Le.uT}=e,S=(0,s.Z)(e,qe),I=a.useRef(null),N=(0,m.Z)(u.ref,t),C=(0,m.Z)(I,N),T=e=>t=>{if(e){const n=I.current;void 0===t?e(n):e(n,t)}},$=T(f),E=T(((e,t)=>{Pe(e);const r=Be({style:v,timeout:w,easing:c},{mode:"enter"});e.style.webkitTransition=n.transitions.create("opacity",r),e.style.transition=n.transitions.create("opacity",r),h&&h(e,t)})),R=T(p),A=T(b),F=T((e=>{const t=Be({style:v,timeout:w,easing:c},{mode:"exit"});e.style.webkitTransition=n.transitions.create("opacity",t),e.style.transition=n.transitions.create("opacity",t),g&&g(e)})),O=T(y);return(0,x.jsx)(k,(0,r.Z)({appear:l,in:d,nodeRef:I,onEnter:E,onEntered:R,onEntering:$,onExit:F,onExited:O,onExiting:A,addEndListener:e=>{i&&i(I.current,e)},timeout:w},S,{children:(e,t)=>a.cloneElement(u,(0,r.Z)({style:(0,r.Z)({opacity:0,visibility:"exited"!==e||d?void 0:"hidden"},Ke[e],v,u.props.style),ref:C},t))}))}));function Ye(e){return(0,i.d6)("MuiBackdrop",e)}(0,i.sI)("MuiBackdrop",["root","invisible"]);const Je=["children","component","components","componentsProps","className","invisible","open","transitionDuration","TransitionComponent"],Qe=(0,u.ZP)("div",{name:"MuiBackdrop",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.invisible&&t.invisible]}})((({ownerState:e})=>(0,r.Z)({position:"fixed",display:"flex",alignItems:"center",justifyContent:"center",right:0,bottom:0,top:0,left:0,backgroundColor:"rgba(0, 0, 0, 0.5)",WebkitTapHighlightColor:"transparent"},e.invisible&&{backgroundColor:"transparent"}))),et=a.forwardRef((function(e,t){var n,a;const l=(0,c.Z)({props:e,name:"MuiBackdrop"}),{children:u,component:d="div",components:h={},componentsProps:p={},className:f,invisible:m=!1,open:g,transitionDuration:y,TransitionComponent:b=Xe}=l,v=(0,s.Z)(l,Je),w=(0,r.Z)({},l,{component:d,invisible:m}),k=(e=>{const{classes:t,invisible:n}=e,r={root:["root",n&&"invisible"]};return(0,i.V_)(r,Ye,t)})(w);return(0,x.jsx)(b,(0,r.Z)({in:g,timeout:y},v,{children:(0,x.jsx)(Qe,{"aria-hidden":!0,as:null!=(n=h.Root)?n:d,className:(0,o.Z)(k.root,f),ownerState:(0,r.Z)({},w,null==(a=p.root)?void 0:a.ownerState),classes:k,ref:t,children:u})}))})),tt=["BackdropComponent","BackdropProps","closeAfterTransition","children","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","theme"],nt=(0,u.ZP)("div",{name:"MuiModal",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.open&&n.exited&&t.hidden]}})((({theme:e,ownerState:t})=>(0,r.Z)({position:"fixed",zIndex:(e.vars||e).zIndex.modal,right:0,bottom:0,top:0,left:0},!t.open&&t.exited&&{visibility:"hidden"}))),rt=(0,u.ZP)(et,{name:"MuiModal",slot:"Backdrop",overridesResolver:(e,t)=>t.backdrop})({zIndex:-1}),st=a.forwardRef((function(e,t){var n,o;const l=(0,c.Z)({name:"MuiModal",props:e}),{BackdropComponent:u=rt,BackdropProps:d,closeAfterTransition:h=!1,children:p,component:f,components:m={},componentsProps:g={},disableAutoFocus:y=!1,disableEnforceFocus:b=!1,disableEscapeKeyDown:v=!1,disablePortal:w=!1,disableRestoreFocus:k=!1,disableScrollLock:S=!1,hideBackdrop:I=!1,keepMounted:N=!1,theme:C}=l,T=(0,s.Z)(l,tt),[$,E]=a.useState(!0),R={closeAfterTransition:h,disableAutoFocus:y,disableEnforceFocus:b,disableEscapeKeyDown:v,disablePortal:w,disableRestoreFocus:k,disableScrollLock:S,hideBackdrop:I,keepMounted:N},A=(e=>e.classes)((0,r.Z)({},l,R,{exited:$})),F=null!=(n=null!=(o=m.Root)?o:f)?n:nt;return(0,x.jsx)(He.ZP,(0,r.Z)({components:(0,r.Z)({Root:F,Backdrop:u},m),componentsProps:{root:(0,r.Z)({},g.root,!(0,i.Xd)(F)&&{as:f,theme:C}),backdrop:(0,r.Z)({},d,g.backdrop)},onTransitionEnter:()=>E(!1),onTransitionExited:()=>E(!0),ref:t},T,{classes:A},R,{children:p}))}));function at(e){return(0,i.d6)("MuiPopover",e)}(0,i.sI)("MuiPopover",["root","paper"]);const ot=["onEntering"],it=["action","anchorEl","anchorOrigin","anchorPosition","anchorReference","children","className","container","elevation","marginThreshold","open","PaperProps","transformOrigin","TransitionComponent","transitionDuration","TransitionProps"];function lt(e,t){let n=0;return"number"==typeof t?n=t:"center"===t?n=e.height/2:"bottom"===t&&(n=e.height),n}function ut(e,t){let n=0;return"number"==typeof t?n=t:"center"===t?n=e.width/2:"right"===t&&(n=e.width),n}function ct(e){return[e.horizontal,e.vertical].map((e=>"number"==typeof e?`${e}px`:e)).join(" ")}function dt(e){return"function"==typeof e?e():e}const ht=(0,u.ZP)(st,{name:"MuiPopover",slot:"Root",overridesResolver:(e,t)=>t.root})({}),pt=(0,u.ZP)(De.ZP,{name:"MuiPopover",slot:"Paper",overridesResolver:(e,t)=>t.paper})({position:"absolute",overflowY:"auto",overflowX:"hidden",minWidth:16,minHeight:16,maxWidth:"calc(100% - 32px)",maxHeight:"calc(100% - 32px)",outline:0}),ft=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiPopover"}),{action:l,anchorEl:u,anchorOrigin:d={vertical:"top",horizontal:"left"},anchorPosition:h,anchorReference:p="anchorEl",children:f,className:g,container:y,elevation:b=8,marginThreshold:v=16,open:w,PaperProps:k={},transformOrigin:S={vertical:"top",horizontal:"left"},TransitionComponent:I=je,transitionDuration:N="auto",TransitionProps:{onEntering:C}={}}=n,T=(0,s.Z)(n.TransitionProps,ot),$=(0,s.Z)(n,it),E=a.useRef(),R=(0,m.Z)(E,k.ref),A=(0,r.Z)({},n,{anchorOrigin:d,anchorReference:p,elevation:b,marginThreshold:v,PaperProps:k,transformOrigin:S,TransitionComponent:I,transitionDuration:N,TransitionProps:T}),F=(e=>{const{classes:t}=e;return(0,i.V_)({root:["root"],paper:["paper"]},at,t)})(A),O=a.useCallback((()=>{if("anchorPosition"===p)return h;const e=dt(u),t=(e&&1===e.nodeType?e:(0,we.Z)(E.current).body).getBoundingClientRect();return{top:t.top+lt(t,d.vertical),left:t.left+ut(t,d.horizontal)}}),[u,d.horizontal,d.vertical,h,p]),D=a.useCallback((e=>({vertical:lt(e,S.vertical),horizontal:ut(e,S.horizontal)})),[S.horizontal,S.vertical]),_=a.useCallback((e=>{const t={width:e.offsetWidth,height:e.offsetHeight},n=D(t);if("none"===p)return{top:null,left:null,transformOrigin:ct(n)};const r=O();let s=r.top-n.vertical,a=r.left-n.horizontal;const o=s+t.height,i=a+t.width,l=(0,Me.Z)(dt(u)),c=l.innerHeight-v,d=l.innerWidth-v;if(s<v){const e=s-v;s-=e,n.vertical+=e}else if(o>c){const e=o-c;s-=e,n.vertical+=e}if(a<v){const e=a-v;a-=e,n.horizontal+=e}else if(i>d){const e=i-d;a-=e,n.horizontal+=e}return{top:`${Math.round(s)}px`,left:`${Math.round(a)}px`,transformOrigin:ct(n)}}),[u,p,O,D,v]),M=a.useCallback((()=>{const e=E.current;if(!e)return;const t=_(e);null!==t.top&&(e.style.top=t.top),null!==t.left&&(e.style.left=t.left),e.style.transformOrigin=t.transformOrigin}),[_]);a.useEffect((()=>{w&&M()})),a.useImperativeHandle(l,(()=>w?{updatePosition:()=>{M()}}:null),[w,M]),a.useEffect((()=>{if(!w)return;const e=(0,_e.Z)((()=>{M()})),t=(0,Me.Z)(u);return t.addEventListener("resize",e),()=>{e.clear(),t.removeEventListener("resize",e)}}),[u,w,M]);let L=N;"auto"!==N||I.muiSupportAuto||(L=void 0);const z=y||(u?(0,we.Z)(dt(u)).body:void 0);return(0,x.jsx)(ht,(0,r.Z)({BackdropProps:{invisible:!0},className:(0,o.Z)(F.root,g),container:z,open:w,ref:t,ownerState:A},$,{children:(0,x.jsx)(I,(0,r.Z)({appear:!0,in:w,onEntering:(e,t)=>{C&&C(e,t),M()},timeout:L},T,{children:(0,x.jsx)(pt,(0,r.Z)({elevation:b},k,{ref:R,className:(0,o.Z)(F.paper,k.className),children:f}))}))}))}));function mt(e){return(0,i.d6)("MuiMenu",e)}(0,i.sI)("MuiMenu",["root","paper","list"]);const gt=["onEntering"],yt=["autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant"],bt={vertical:"top",horizontal:"right"},xt={vertical:"top",horizontal:"left"},vt=(0,u.ZP)(ft,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiMenu",slot:"Root",overridesResolver:(e,t)=>t.root})({}),wt=(0,u.ZP)(De.ZP,{name:"MuiMenu",slot:"Paper",overridesResolver:(e,t)=>t.paper})({maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"}),kt=(0,u.ZP)(Oe,{name:"MuiMenu",slot:"List",overridesResolver:(e,t)=>t.list})({outline:0}),St=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiMenu"}),{autoFocus:l=!0,children:u,disableAutoFocusItem:d=!1,MenuListProps:h={},onClose:p,open:f,PaperProps:m={},PopoverClasses:g,transitionDuration:y="auto",TransitionProps:{onEntering:b}={},variant:v="selectedMenu"}=n,w=(0,s.Z)(n.TransitionProps,gt),k=(0,s.Z)(n,yt),S=(0,ze.Z)(),I="rtl"===S.direction,N=(0,r.Z)({},n,{autoFocus:l,disableAutoFocusItem:d,MenuListProps:h,onEntering:b,PaperProps:m,transitionDuration:y,TransitionProps:w,variant:v}),C=(e=>{const{classes:t}=e;return(0,i.V_)({root:["root"],paper:["paper"],list:["list"]},mt,t)})(N),T=l&&!d&&f,$=a.useRef(null);let E=-1;return a.Children.map(u,((e,t)=>{a.isValidElement(e)&&(e.props.disabled||("selectedMenu"===v&&e.props.selected||-1===E)&&(E=t))})),(0,x.jsx)(vt,(0,r.Z)({classes:g,onClose:p,anchorOrigin:{vertical:"bottom",horizontal:I?"right":"left"},transformOrigin:I?bt:xt,PaperProps:(0,r.Z)({component:wt},m,{classes:(0,r.Z)({},m.classes,{root:C.paper})}),className:C.root,open:f,ref:t,transitionDuration:y,TransitionProps:(0,r.Z)({onEntering:(e,t)=>{$.current&&$.current.adjustStyleForScrollbar(e,S),b&&b(e,t)}},w),ownerState:N},k,{children:(0,x.jsx)(kt,(0,r.Z)({onKeyDown:e=>{"Tab"===e.key&&(e.preventDefault(),p&&p(e,"tabKeyDown"))},actions:$,autoFocus:l&&(-1===E||d),autoFocusItem:T,variant:v},h,{className:(0,o.Z)(C.list,h.className),children:u}))}))}));function It(e){return(0,i.d6)("MuiNativeSelect",e)}const Nt=(0,i.sI)("MuiNativeSelect",["root","select","multiple","filled","outlined","standard","disabled","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput"]),Ct=["className","disabled","IconComponent","inputRef","variant"],Tt=({ownerState:e,theme:t})=>(0,r.Z)({MozAppearance:"none",WebkitAppearance:"none",userSelect:"none",borderRadius:0,cursor:"pointer","&:focus":{backgroundColor:"light"===t.palette.mode?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",borderRadius:0},"&::-ms-expand":{display:"none"},[`&.${Nt.disabled}`]:{cursor:"default"},"&[multiple]":{height:"auto"},"&:not([multiple]) option, &:not([multiple]) optgroup":{backgroundColor:t.palette.background.paper},"&&&":{paddingRight:24,minWidth:16}},"filled"===e.variant&&{"&&&":{paddingRight:32}},"outlined"===e.variant&&{borderRadius:t.shape.borderRadius,"&:focus":{borderRadius:t.shape.borderRadius},"&&&":{paddingRight:32}}),$t=(0,u.ZP)("select",{name:"MuiNativeSelect",slot:"Select",shouldForwardProp:u.FO,overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.select,t[n.variant],{[`&.${Nt.multiple}`]:t.multiple}]}})(Tt),Et=({ownerState:e,theme:t})=>(0,r.Z)({position:"absolute",right:0,top:"calc(50% - .5em)",pointerEvents:"none",color:t.palette.action.active,[`&.${Nt.disabled}`]:{color:t.palette.action.disabled}},e.open&&{transform:"rotate(180deg)"},"filled"===e.variant&&{right:7},"outlined"===e.variant&&{right:7}),Rt=(0,u.ZP)("svg",{name:"MuiNativeSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,f.Z)(n.variant)}`],n.open&&t.iconOpen]}})(Et),At=a.forwardRef((function(e,t){const{className:n,disabled:l,IconComponent:u,inputRef:c,variant:d="standard"}=e,h=(0,s.Z)(e,Ct),p=(0,r.Z)({},e,{disabled:l,variant:d}),m=(e=>{const{classes:t,variant:n,disabled:r,multiple:s,open:a}=e,o={select:["select",n,r&&"disabled",s&&"multiple"],icon:["icon",`icon${(0,f.Z)(n)}`,a&&"iconOpen",r&&"disabled"]};return(0,i.V_)(o,It,t)})(p);return(0,x.jsxs)(a.Fragment,{children:[(0,x.jsx)($t,(0,r.Z)({ownerState:p,className:(0,o.Z)(m.select,n),disabled:l,ref:c||t},h)),e.multiple?null:(0,x.jsx)(Rt,{as:u,ownerState:p,className:m.icon})]})}));var Ft=n(11133);function Ot(e){return(0,i.d6)("MuiSelect",e)}const Dt=(0,i.sI)("MuiSelect",["select","multiple","filled","outlined","standard","disabled","focused","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput"]);var _t;const Mt=["aria-describedby","aria-label","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"],Lt=(0,u.ZP)("div",{name:"MuiSelect",slot:"Select",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`&.${Dt.select}`]:t.select},{[`&.${Dt.select}`]:t[n.variant]},{[`&.${Dt.multiple}`]:t.multiple}]}})(Tt,{[`&.${Dt.select}`]:{height:"auto",minHeight:"1.4375em",textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden"}}),zt=(0,u.ZP)("svg",{name:"MuiSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,f.Z)(n.variant)}`],n.open&&t.iconOpen]}})(Et),Pt=(0,u.ZP)("input",{shouldForwardProp:e=>(0,u.Dz)(e)&&"classes"!==e,name:"MuiSelect",slot:"NativeInput",overridesResolver:(e,t)=>t.nativeInput})({bottom:0,left:0,position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"});function Bt(e,t){return"object"==typeof t&&null!==t?e===t:String(e)===String(t)}function Wt(e){return null==e||"string"==typeof e&&!e.trim()}const Vt=a.forwardRef((function(e,t){const{"aria-describedby":n,"aria-label":u,autoFocus:c,autoWidth:d,children:h,className:p,defaultOpen:g,defaultValue:y,disabled:b,displayEmpty:v,IconComponent:k,inputRef:S,labelId:I,MenuProps:N={},multiple:C,name:T,onBlur:$,onChange:E,onClose:R,onFocus:A,onOpen:F,open:O,readOnly:D,renderValue:_,SelectDisplayProps:M={},tabIndex:L,value:z,variant:P="standard"}=e,B=(0,s.Z)(e,Mt),[W,V]=(0,Ft.Z)({controlled:z,default:y,name:"Select"}),[U,G]=(0,Ft.Z)({controlled:O,default:g,name:"Select"}),Z=a.useRef(null),j=a.useRef(null),[H,q]=a.useState(null),{current:K}=a.useRef(null!=O),[X,Y]=a.useState(),J=(0,m.Z)(t,S),Q=a.useCallback((e=>{j.current=e,e&&q(e)}),[]);a.useImperativeHandle(J,(()=>({focus:()=>{j.current.focus()},node:Z.current,value:W})),[W]),a.useEffect((()=>{g&&U&&H&&!K&&(Y(d?null:H.clientWidth),j.current.focus())}),[H,d]),a.useEffect((()=>{c&&j.current.focus()}),[c]),a.useEffect((()=>{if(!I)return;const e=(0,we.Z)(j.current).getElementById(I);if(e){const t=()=>{getSelection().isCollapsed&&j.current.focus()};return e.addEventListener("click",t),()=>{e.removeEventListener("click",t)}}}),[I]);const ee=(e,t)=>{e?F&&F(t):R&&R(t),K||(Y(d?null:H.clientWidth),G(e))},te=a.Children.toArray(h),ne=e=>t=>{let n;if(t.currentTarget.hasAttribute("tabindex")){if(C){n=Array.isArray(W)?W.slice():[];const t=W.indexOf(e.props.value);-1===t?n.push(e.props.value):n.splice(t,1)}else n=e.props.value;if(e.props.onClick&&e.props.onClick(t),W!==n&&(V(n),E)){const r=t.nativeEvent||t,s=new r.constructor(r.type,r);Object.defineProperty(s,"target",{writable:!0,value:{value:n,name:T}}),E(s,e)}C||ee(!1,t)}},re=null!==H&&U;let se,ae;delete B["aria-invalid"];const oe=[];let ie=!1,le=!1;((0,w.vd)({value:W})||v)&&(_?se=_(W):ie=!0);const ue=te.map(((e,t,n)=>{if(!a.isValidElement(e))return null;let r;if(C){if(!Array.isArray(W))throw new Error((0,l.fe)(2));r=W.some((t=>Bt(t,e.props.value))),r&&ie&&oe.push(e.props.children)}else r=Bt(W,e.props.value),r&&ie&&(ae=e.props.children);if(r&&(le=!0),void 0===e.props.value)return a.cloneElement(e,{"aria-readonly":!0,role:"option"});return a.cloneElement(e,{"aria-selected":r?"true":"false",onClick:ne(e),onKeyUp:t=>{" "===t.key&&t.preventDefault(),e.props.onKeyUp&&e.props.onKeyUp(t)},role:"option",selected:void 0===n[0].props.value||!0===n[0].props.disabled?(()=>{if(W)return r;const t=n.find((e=>void 0!==e.props.value&&!0!==e.props.disabled));return e===t||r})():r,value:void 0,"data-value":e.props.value})}));ie&&(se=C?0===oe.length?null:oe.reduce(((e,t,n)=>(e.push(t),n<oe.length-1&&e.push(", "),e)),[]):ae);let ce,de=X;!d&&K&&H&&(de=H.clientWidth),ce=void 0!==L?L:b?null:0;const he=M.id||(T?`mui-component-select-${T}`:void 0),pe=(0,r.Z)({},e,{variant:P,value:W,open:re}),fe=(e=>{const{classes:t,variant:n,disabled:r,multiple:s,open:a}=e,o={select:["select",n,r&&"disabled",s&&"multiple"],icon:["icon",`icon${(0,f.Z)(n)}`,a&&"iconOpen",r&&"disabled"],nativeInput:["nativeInput"]};return(0,i.V_)(o,Ot,t)})(pe);return(0,x.jsxs)(a.Fragment,{children:[(0,x.jsx)(Lt,(0,r.Z)({ref:Q,tabIndex:ce,role:"button","aria-disabled":b?"true":void 0,"aria-expanded":re?"true":"false","aria-haspopup":"listbox","aria-label":u,"aria-labelledby":[I,he].filter(Boolean).join(" ")||void 0,"aria-describedby":n,onKeyDown:e=>{if(!D){-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),ee(!0,e))}},onMouseDown:b||D?null:e=>{0===e.button&&(e.preventDefault(),j.current.focus(),ee(!0,e))},onBlur:e=>{!re&&$&&(Object.defineProperty(e,"target",{writable:!0,value:{value:W,name:T}}),$(e))},onFocus:A},M,{ownerState:pe,className:(0,o.Z)(fe.select,p,M.className),id:he,children:Wt(se)?_t||(_t=(0,x.jsx)("span",{className:"notranslate",children:"​"})):se})),(0,x.jsx)(Pt,(0,r.Z)({value:Array.isArray(W)?W.join(","):W,name:T,ref:Z,"aria-hidden":!0,onChange:e=>{const t=te.map((e=>e.props.value)).indexOf(e.target.value);if(-1===t)return;const n=te[t];V(n.props.value),E&&E(e,n)},tabIndex:-1,disabled:b,className:fe.nativeInput,autoFocus:c,ownerState:pe},B)),(0,x.jsx)(zt,{as:k,className:fe.icon,ownerState:pe}),(0,x.jsx)(St,(0,r.Z)({id:`menu-${T||""}`,anchorEl:H,open:re,onClose:e=>{ee(!1,e)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},N,{MenuListProps:(0,r.Z)({"aria-labelledby":I,role:"listbox",disableListWrap:!0},N.MenuListProps),PaperProps:(0,r.Z)({},N.PaperProps,{style:(0,r.Z)({minWidth:de},null!=N.PaperProps?N.PaperProps.style:null)}),children:ue}))]})}));const Ut=(0,n(57257).Z)((0,x.jsx)("path",{d:"M7 10l5 5 5-5z"}),"ArrowDropDown");var Gt,Zt;const jt=["autoWidth","children","classes","className","defaultOpen","displayEmpty","IconComponent","id","input","inputProps","label","labelId","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant"],Ht={name:"MuiSelect",overridesResolver:(e,t)=>t.root,shouldForwardProp:e=>(0,u.FO)(e)&&"variant"!==e,slot:"Root"},qt=(0,u.ZP)(z,Ht)(""),Kt=(0,u.ZP)(re,Ht)(""),Xt=(0,u.ZP)(Z,Ht)(""),Yt=a.forwardRef((function(e,t){const n=(0,c.Z)({name:"MuiSelect",props:e}),{autoWidth:i=!1,children:u,classes:h={},className:f,defaultOpen:g=!1,displayEmpty:y=!1,IconComponent:b=Ut,id:v,input:w,inputProps:k,label:S,labelId:I,MenuProps:N,multiple:C=!1,native:T=!1,onClose:$,onOpen:E,open:R,renderValue:A,SelectDisplayProps:F,variant:O="outlined"}=n,D=(0,s.Z)(n,jt),_=T?At:Vt,M=(0,p.Z)(),L=(0,d.Z)({props:n,muiFormControl:M,states:["variant"]}).variant||O,z=w||{standard:Gt||(Gt=(0,x.jsx)(qt,{})),outlined:(0,x.jsx)(Kt,{label:S}),filled:Zt||(Zt=(0,x.jsx)(Xt,{}))}[L],P=(e=>{const{classes:t}=e;return t})((0,r.Z)({},n,{variant:L,classes:h})),B=(0,m.Z)(t,z.ref);return a.cloneElement(z,(0,r.Z)({inputComponent:_,inputProps:(0,r.Z)({children:u,IconComponent:b,variant:L,type:void 0,multiple:C},T?{id:v}:{autoWidth:i,defaultOpen:g,displayEmpty:y,labelId:I,MenuProps:N,onClose:$,onOpen:E,open:R,renderValue:A,SelectDisplayProps:(0,r.Z)({id:v},F)},k,{classes:k?(0,l.vb)(P,k.classes):P},w?w.props.inputProps:{})},C&&T&&"outlined"===L?{notched:!0}:{},{ref:B,className:(0,o.Z)(z.props.className,f),variant:L},D))}));Yt.muiName="Select";const Jt=Yt;function Qt(e){return(0,i.d6)("MuiTextField",e)}(0,i.sI)("MuiTextField",["root"]);const en=["autoComplete","autoFocus","children","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","variant"],tn={standard:z,filled:Z,outlined:re},nn=(0,u.ZP)(fe.ZP,{name:"MuiTextField",slot:"Root",overridesResolver:(e,t)=>t.root})({}),rn=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiTextField"}),{autoComplete:a,autoFocus:u=!1,children:d,className:h,color:p="primary",defaultValue:f,disabled:m=!1,error:g=!1,FormHelperTextProps:y,fullWidth:b=!1,helperText:v,id:w,InputLabelProps:k,inputProps:S,InputProps:I,inputRef:N,label:C,maxRows:T,minRows:$,multiline:E=!1,name:R,onBlur:A,onChange:F,onFocus:O,placeholder:D,required:_=!1,rows:M,select:L=!1,SelectProps:z,type:P,value:B,variant:W="outlined"}=n,V=(0,s.Z)(n,en),U=(0,r.Z)({},n,{autoFocus:u,color:p,disabled:m,error:g,fullWidth:b,multiline:E,required:_,select:L,variant:W}),G=(e=>{const{classes:t}=e;return(0,i.V_)({root:["root"]},Qt,t)})(U);const Z={};"outlined"===W&&(k&&void 0!==k.shrink&&(Z.notched=k.shrink),Z.label=C),L&&(z&&z.native||(Z.id=void 0),Z["aria-describedby"]=void 0);const j=(0,l.ii)(w),H=v&&j?`${j}-helper-text`:void 0,q=C&&j?`${j}-label`:void 0,K=tn[W],X=(0,x.jsx)(K,(0,r.Z)({"aria-describedby":H,autoComplete:a,autoFocus:u,defaultValue:f,fullWidth:b,multiline:E,name:R,rows:M,maxRows:T,minRows:$,type:P,value:B,id:j,inputRef:N,onBlur:A,onChange:F,onFocus:O,placeholder:D,inputProps:S},Z,I));return(0,x.jsxs)(nn,(0,r.Z)({className:(0,o.Z)(G.root,h),disabled:m,error:g,fullWidth:b,ref:t,required:_,color:p,variant:W,ownerState:U},V,{children:[null!=C&&""!==C&&(0,x.jsx)(pe,(0,r.Z)({htmlFor:j,id:q},k,{children:C})),L?(0,x.jsx)(Jt,(0,r.Z)({"aria-describedby":H,id:j,labelId:q,value:B,input:X},z,{children:d})):X,v&&(0,x.jsx)(ve,(0,r.Z)({id:H},y,{children:v}))]}))}))},47706:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=n(13764),l=n(4647),u=n(10543),c=n(66954),d=n(50349);function h(e){return(0,l.d6)("MuiTypography",e)}(0,l.sI)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var p=n(2574);const f=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],m=(0,u.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.variant&&t[n.variant],"inherit"!==n.align&&t[`align${(0,d.Z)(n.align)}`],n.noWrap&&t.noWrap,n.gutterBottom&&t.gutterBottom,n.paragraph&&t.paragraph]}})((({theme:e,ownerState:t})=>(0,s.Z)({margin:0},t.variant&&e.typography[t.variant],"inherit"!==t.align&&{textAlign:t.align},t.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.gutterBottom&&{marginBottom:"0.35em"},t.paragraph&&{marginBottom:16}))),g={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},y={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},b=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiTypography"}),a=(e=>y[e]||e)(n.color),u=(0,i.mX)((0,s.Z)({},n,{color:a})),{align:b="inherit",className:x,component:v,gutterBottom:w=!1,noWrap:k=!1,paragraph:S=!1,variant:I="body1",variantMapping:N=g}=u,C=(0,r.Z)(u,f),T=(0,s.Z)({},u,{align:b,color:a,className:x,component:v,gutterBottom:w,noWrap:k,paragraph:S,variant:I,variantMapping:N}),$=v||(S?"p":N[I]||g[I])||"span",E=(e=>{const{align:t,gutterBottom:n,noWrap:r,paragraph:s,variant:a,classes:o}=e,i={root:["root",a,"inherit"!==e.align&&`align${(0,d.Z)(t)}`,n&&"gutterBottom",r&&"noWrap",s&&"paragraph"]};return(0,l.V_)(i,h,o)})(T);return(0,p.jsx)(m,(0,s.Z)({as:$,ref:t,ownerState:T,className:(0,o.Z)(E.root,x)},C))}))},45195:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var r=n(8339),s=n(76805),a=n(43001),o=(n(3827),n(11358)),i=(n(47410),n(4647)),l=n(50349),u=n(10543),c=n(11133),d=n(93304),h=n(36600);function p(e){return(0,i.d6)("PrivateSwitchBase",e)}(0,i.sI)("PrivateSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"]);var f=n(2574);const m=["autoFocus","checked","checkedIcon","className","defaultChecked","disabled","disableFocusRipple","edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"],g=(0,u.ZP)(h.ZP)((({ownerState:e})=>(0,s.Z)({padding:9,borderRadius:"50%"},"start"===e.edge&&{marginLeft:"small"===e.size?-3:-12},"end"===e.edge&&{marginRight:"small"===e.size?-3:-12}))),y=(0,u.ZP)("input")({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),b=a.forwardRef((function(e,t){const{autoFocus:n,checked:a,checkedIcon:u,className:h,defaultChecked:b,disabled:x,disableFocusRipple:v=!1,edge:w=!1,icon:k,id:S,inputProps:I,inputRef:N,name:C,onBlur:T,onChange:$,onFocus:E,readOnly:R,required:A,tabIndex:F,type:O,value:D}=e,_=(0,r.Z)(e,m),[M,L]=(0,c.Z)({controlled:a,default:Boolean(b),name:"SwitchBase",state:"checked"}),z=(0,d.Z)();let P=x;z&&void 0===P&&(P=z.disabled);const B="checkbox"===O||"radio"===O,W=(0,s.Z)({},e,{checked:M,disabled:P,disableFocusRipple:v,edge:w}),V=(e=>{const{classes:t,checked:n,disabled:r,edge:s}=e,a={root:["root",n&&"checked",r&&"disabled",s&&`edge${(0,l.Z)(s)}`],input:["input"]};return(0,i.V_)(a,p,t)})(W);return(0,f.jsxs)(g,(0,s.Z)({component:"span",className:(0,o.Z)(V.root,h),centerRipple:!0,focusRipple:!v,disabled:P,tabIndex:null,role:void 0,onFocus:e=>{E&&E(e),z&&z.onFocus&&z.onFocus(e)},onBlur:e=>{T&&T(e),z&&z.onBlur&&z.onBlur(e)},ownerState:W,ref:t},_,{children:[(0,f.jsx)(y,(0,s.Z)({autoFocus:n,checked:a,defaultChecked:b,className:V.input,disabled:P,id:B&&S,name:C,onChange:e=>{if(e.nativeEvent.defaultPrevented)return;const t=e.target.checked;L(t),$&&$(e,t)},readOnly:R,ref:N,required:A,ownerState:W,tabIndex:F,type:O},"checkbox"===O&&void 0===D?{}:{value:D},I)),M?u:k]}))}))},81455:(e,t,n)=>{"use strict";n.d(t,{Z:()=>T});var r=n(76805),s=n(8339),a=n(47410),o=(n(4647),n(13764));const i={black:"#000",white:"#fff"},l={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"},u={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"},c={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"},d={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"},h={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"},p={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"},f={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"},m=["mode","contrastThreshold","tonalOffset"],g={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:i.white,default:i.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},y={text:{primary:i.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:i.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function b(e,t,n,r){const s=r.light||r,a=r.dark||1.5*r;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=(0,o.$n)(e.main,s):"dark"===t&&(e.dark=(0,o._j)(e.main,a)))}function x(e){const{mode:t="light",contrastThreshold:n=3,tonalOffset:x=.2}=e,v=(0,s.Z)(e,m),w=e.primary||function(e="light"){return"dark"===e?{main:h[200],light:h[50],dark:h[400]}:{main:h[700],light:h[400],dark:h[800]}}(t),k=e.secondary||function(e="light"){return"dark"===e?{main:u[200],light:u[50],dark:u[400]}:{main:u[500],light:u[300],dark:u[700]}}(t),S=e.error||function(e="light"){return"dark"===e?{main:c[500],light:c[300],dark:c[700]}:{main:c[700],light:c[400],dark:c[800]}}(t),I=e.info||function(e="light"){return"dark"===e?{main:p[400],light:p[300],dark:p[700]}:{main:p[700],light:p[500],dark:p[900]}}(t),N=e.success||function(e="light"){return"dark"===e?{main:f[400],light:f[300],dark:f[700]}:{main:f[800],light:f[500],dark:f[900]}}(t),C=e.warning||function(e="light"){return"dark"===e?{main:d[400],light:d[300],dark:d[700]}:{main:"#ed6c02",light:d[500],dark:d[900]}}(t);function T(e){return(0,o.mi)(e,y.text.primary)>=n?y.text.primary:g.text.primary}const $=({color:e,name:t,mainShade:n=500,lightShade:s=300,darkShade:o=700})=>{if(!(e=(0,r.Z)({},e)).main&&e[n]&&(e.main=e[n]),!e.hasOwnProperty("main"))throw new Error((0,a.fe)(11,t?` (${t})`:"",n));if("string"!=typeof e.main)throw new Error((0,a.fe)(12,t?` (${t})`:"",JSON.stringify(e.main)));return b(e,"light",s,x),b(e,"dark",o,x),e.contrastText||(e.contrastText=T(e.main)),e},E={dark:y,light:g};return(0,a.vb)((0,r.Z)({common:(0,r.Z)({},i),mode:t,primary:$({color:w,name:"primary"}),secondary:$({color:k,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:$({color:S,name:"error"}),warning:$({color:C,name:"warning"}),info:$({color:I,name:"info"}),success:$({color:N,name:"success"}),grey:l,contrastThreshold:n,getContrastText:T,augmentColor:$,tonalOffset:x},E[t]),v)}var v=n(46554);function w(...e){return[`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,0.2)`,`${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,0.14)`,`${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,0.12)`].join(",")}const k=["none",w(0,2,1,-1,0,1,1,0,0,1,3,0),w(0,3,1,-2,0,2,2,0,0,1,5,0),w(0,3,3,-2,0,3,4,0,0,1,8,0),w(0,2,4,-1,0,4,5,0,0,1,10,0),w(0,3,5,-1,0,5,8,0,0,1,14,0),w(0,3,5,-1,0,6,10,0,0,1,18,0),w(0,4,5,-2,0,7,10,1,0,2,16,1),w(0,5,5,-3,0,8,10,1,0,3,14,2),w(0,5,6,-3,0,9,12,1,0,3,16,2),w(0,6,6,-3,0,10,14,1,0,4,18,3),w(0,6,7,-4,0,11,15,1,0,4,20,3),w(0,7,8,-4,0,12,17,2,0,5,22,4),w(0,7,8,-4,0,13,19,2,0,5,24,4),w(0,7,9,-4,0,14,21,2,0,5,26,4),w(0,8,9,-5,0,15,22,2,0,6,28,5),w(0,8,10,-5,0,16,24,2,0,6,30,5),w(0,8,11,-5,0,17,26,2,0,6,32,5),w(0,9,11,-5,0,18,28,2,0,7,34,6),w(0,9,12,-6,0,19,29,2,0,7,36,6),w(0,10,13,-6,0,20,31,3,0,8,38,7),w(0,10,13,-6,0,21,33,3,0,8,40,7),w(0,10,14,-6,0,22,35,3,0,8,42,7),w(0,11,14,-7,0,23,36,3,0,9,44,8),w(0,11,15,-7,0,24,38,3,0,9,46,8)];var S=n(80734);const I={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500},N=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function C(e={},...t){const{mixins:n={},palette:i={},transitions:l={},typography:u={}}=e,c=(0,s.Z)(e,N),d=x(i),h=(0,o.jG)(e);let p=(0,a.vb)(h,{mixins:(f=h.breakpoints,m=n,(0,r.Z)({toolbar:{minHeight:56,[f.up("xs")]:{"@media (orientation: landscape)":{minHeight:48}},[f.up("sm")]:{minHeight:64}}},m)),palette:d,shadows:k.slice(),typography:(0,v.Z)(d,u),transitions:(0,S.ZP)(l),zIndex:(0,r.Z)({},I)});var f,m;return p=(0,a.vb)(p,c),p=t.reduce(((e,t)=>(0,a.vb)(e,t)),p),p}const T=C},80734:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>c});var r=n(8339),s=n(76805);const a=["duration","easing","delay"],o={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},i={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function l(e){return`${Math.round(e)}ms`}function u(e){if(!e)return 0;const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}function c(e){const t=(0,s.Z)({},o,e.easing),n=(0,s.Z)({},i,e.duration);return(0,s.Z)({getAutoHeightDuration:u,create:(e=["all"],s={})=>{const{duration:o=n.standard,easing:i=t.easeInOut,delay:u=0}=s;(0,r.Z)(s,a);return(Array.isArray(e)?e:[e]).map((e=>`${e} ${"string"==typeof o?o:l(o)} ${i} ${"string"==typeof u?u:l(u)}`)).join(",")}},e,{easing:t,duration:n})}},46554:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(76805),s=n(8339),a=n(47410);const o=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];const i={textTransform:"uppercase"},l='"Roboto", "Helvetica", "Arial", sans-serif';function u(e,t){const n="function"==typeof t?t(e):t,{fontFamily:u=l,fontSize:c=14,fontWeightLight:d=300,fontWeightRegular:h=400,fontWeightMedium:p=500,fontWeightBold:f=700,htmlFontSize:m=16,allVariants:g,pxToRem:y}=n,b=(0,s.Z)(n,o);const x=c/14,v=y||(e=>e/m*x+"rem"),w=(e,t,n,s,a)=>{return(0,r.Z)({fontFamily:u,fontWeight:e,fontSize:v(t),lineHeight:n},u===l?{letterSpacing:(o=s/t,Math.round(1e5*o)/1e5)+"em"}:{},a,g);var o},k={h1:w(d,96,1.167,-1.5),h2:w(d,60,1.2,-.5),h3:w(h,48,1.167,0),h4:w(h,34,1.235,.25),h5:w(h,24,1.334,0),h6:w(p,20,1.6,.15),subtitle1:w(h,16,1.75,.15),subtitle2:w(p,14,1.57,.1),body1:w(h,16,1.5,.15),body2:w(h,14,1.43,.15),button:w(p,14,1.75,.4,i),caption:w(h,12,1.66,.4),overline:w(h,12,2.66,1,i)};return(0,a.vb)((0,r.Z)({htmlFontSize:m,pxToRem:v,fontFamily:u,fontSize:c,fontWeightLight:d,fontWeightRegular:h,fontWeightMedium:p,fontWeightBold:f},k),b,{clone:!1})}},21590:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=(0,n(81455).Z)()},10543:(e,t,n)=>{"use strict";n.d(t,{Dz:()=>o,FO:()=>a,ZP:()=>i});var r=n(13764),s=n(21590);const a=e=>(0,r.x9)(e)&&"classes"!==e,o=r.x9,i=(0,r.Se)({defaultTheme:s.Z,rootShouldForwardProp:a})},91348:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});n(43001);var r=n(13764),s=n(21590);function a(){return(0,r.Fg)(s.Z)}},66954:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(13764),s=n(21590);function a({props:e,name:t}){return(0,r.eU)({props:e,name:t,defaultTheme:s.Z})}},50349:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).vc},39143:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).ks},57257:(e,t,n)=>{"use strict";n.d(t,{Z:()=>y});var r=n(76805),s=n(43001),a=n(8339),o=(n(3827),n(11358)),i=n(4647),l=n(50349),u=n(66954),c=n(10543);function d(e){return(0,i.d6)("MuiSvgIcon",e)}(0,i.sI)("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);var h=n(2574);const p=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],f=(0,c.ZP)("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,"inherit"!==n.color&&t[`color${(0,l.Z)(n.color)}`],t[`fontSize${(0,l.Z)(n.fontSize)}`]]}})((({theme:e,ownerState:t})=>{var n,r,s,a,o,i,l,u,c,d,h,p,f,m,g,y,b;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0,transition:null==(n=e.transitions)||null==(r=n.create)?void 0:r.call(n,"fill",{duration:null==(s=e.transitions)||null==(a=s.duration)?void 0:a.shorter}),fontSize:{inherit:"inherit",small:(null==(o=e.typography)||null==(i=o.pxToRem)?void 0:i.call(o,20))||"1.25rem",medium:(null==(l=e.typography)||null==(u=l.pxToRem)?void 0:u.call(l,24))||"1.5rem",large:(null==(c=e.typography)||null==(d=c.pxToRem)?void 0:d.call(c,35))||"2.1875"}[t.fontSize],color:null!=(h=null==(p=(e.vars||e).palette)||null==(f=p[t.color])?void 0:f.main)?h:{action:null==(m=(e.vars||e).palette)||null==(g=m.action)?void 0:g.active,disabled:null==(y=(e.vars||e).palette)||null==(b=y.action)?void 0:b.disabled,inherit:void 0}[t.color]}})),m=s.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiSvgIcon"}),{children:s,className:c,color:m="inherit",component:g="svg",fontSize:y="medium",htmlColor:b,inheritViewBox:x=!1,titleAccess:v,viewBox:w="0 0 24 24"}=n,k=(0,a.Z)(n,p),S=(0,r.Z)({},n,{color:m,component:g,fontSize:y,instanceFontSize:e.fontSize,inheritViewBox:x,viewBox:w}),I={};x||(I.viewBox=w);const N=(e=>{const{color:t,fontSize:n,classes:r}=e,s={root:["root","inherit"!==t&&`color${(0,l.Z)(t)}`,`fontSize${(0,l.Z)(n)}`]};return(0,i.V_)(s,d,r)})(S);return(0,h.jsxs)(f,(0,r.Z)({as:g,className:(0,o.Z)(N.root,c),ownerState:S,focusable:"false",color:b,"aria-hidden":!v||void 0,role:v?"img":void 0,ref:t},I,k,{children:[s,v?(0,h.jsx)("title",{children:v}):null]}))}));m.muiName="SvgIcon";const g=m;function y(e,t){const n=(n,s)=>(0,h.jsx)(g,(0,r.Z)({"data-testid":`${t}Icon`,ref:s},n,{children:e}));return n.muiName=g.muiName,s.memo(s.forwardRef(n))}},93874:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410)._v},7103:(e,t,n)=>{"use strict";n.r(t),n.d(t,{capitalize:()=>s.Z,createChainedFunction:()=>a.Z,createSvgIcon:()=>o.Z,debounce:()=>i.Z,deprecatedPropType:()=>l,isMuiElement:()=>u.Z,ownerDocument:()=>c.Z,ownerWindow:()=>d.Z,requirePropFactory:()=>h,setRef:()=>p,unstable_ClassNameGenerator:()=>w,unstable_useEnhancedEffect:()=>f.Z,unstable_useId:()=>m.Z,unsupportedProp:()=>g,useControlled:()=>y.Z,useEventCallback:()=>b.Z,useForkRef:()=>x.Z,useIsFocusVisible:()=>v.Z});var r=n(47410),s=n(50349),a=n(39143),o=n(57257),i=n(93874);const l=r.E8;var u=n(55772),c=n(36847),d=n(8751);const h=r.qB,p=r.X8;var f=n(62056),m=n(28701);const g=r.NI;var y=n(11133),b=n(15976),x=n(901),v=n(59832);const w={configure:e=>{console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.","","You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead","","The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401","","The updated documentation: https://mui.com/guides/classname-generator/"].join("\n")),r.$g.configure(e)}}},55772:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).oq},36847:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).Bu},8751:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).Mg},11133:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).bQ},62056:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).Q4},15976:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).Ai},901:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).c8},28701:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).ii},59832:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(47410).W7},13764:(e,t,n)=>{"use strict";n.d(t,{nz:()=>ze,Fq:()=>Et,n8:()=>Nt,Se:()=>vt,jG:()=>De,iv:()=>u.iv,_j:()=>Rt,_4:()=>Ft,mi:()=>$t,F4:()=>u.F4,$n:()=>At,x9:()=>ft,OI:()=>Kt,so:()=>Xt,mX:()=>et,Fg:()=>Le,eU:()=>kt});var r=n(47410),s=n(76805),a=n(43001),o=n(80171),i=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,l=(0,o.Z)((function(e){return i.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),u=n(68118),c=n(11652),d=n(45613),h=l,p=function(e){return"theme"!==e},f=function(e){return"string"==typeof e&&e.charCodeAt(0)>96?h:p},m=function(e,t,n){var r;if(t){var s=t.shouldForwardProp;r=e.__emotion_forwardProp&&s?function(t){return e.__emotion_forwardProp(t)&&s(t)}:s}return"function"!=typeof r&&n&&(r=e.__emotion_forwardProp),r},g=function(){return null};const y=function e(t,n){var r,o,i=t.__emotion_real===t,l=i&&t.__emotion_base||t;void 0!==n&&(r=n.label,o=n.target);var h=m(t,n,i),p=h||f(l),y=!p("as");return function(){var b=arguments,x=i&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==r&&x.push("label:"+r+";"),null==b[0]||void 0===b[0].raw)x.push.apply(x,b);else{0,x.push(b[0][0]);for(var v=b.length,w=1;w<v;w++)x.push(b[w],b[0][w])}var k=(0,u.Xn)((function(e,t,n){var r=y&&e.as||l,s="",i=[],m=e;if(null==e.theme){for(var b in m={},e)m[b]=e[b];m.theme=(0,a.useContext)(u.Ni)}"string"==typeof e.className?s=(0,c.fp)(t.registered,i,e.className):null!=e.className&&(s=e.className+" ");var v=(0,d.O)(x.concat(i),t.registered,m);(0,c.My)(t,v,"string"==typeof r);s+=t.key+"-"+v.name,void 0!==o&&(s+=" "+o);var w=y&&void 0===h?f(r):p,k={};for(var S in e)y&&"as"===S||w(S)&&(k[S]=e[S]);k.className=s,k.ref=n;var I=(0,a.createElement)(r,k),N=(0,a.createElement)(g,null);return(0,a.createElement)(a.Fragment,null,N,I)}));return k.displayName=void 0!==r?r:"Styled("+("string"==typeof l?l:l.displayName||l.name||"Component")+")",k.defaultProps=t.defaultProps,k.__emotion_real=k,k.__emotion_base=l,k.__emotion_styles=x,k.__emotion_forwardProp=h,Object.defineProperty(k,"toString",{value:function(){return"."+o}}),k.withComponent=function(t,r){return e(t,(0,s.Z)({},n,r,{shouldForwardProp:m(k,r,!0)})).apply(void 0,x)},k}};var b=y.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){b[e]=b(e)}));const x=b;n(3827);var v=n(24445),w=n(2574);let k;function S(e){const{styles:t,defaultTheme:n={}}=e,r="function"==typeof t?e=>{return t(null==(r=e)||0===Object.keys(r).length?n:e);var r}:t;return(0,w.jsx)(u.xB,{styles:r})}function I(e,t){return x(e,t)}"object"==typeof document&&(k=(0,v.Z)({key:"css",prepend:!0}));const N=(e,t)=>{Array.isArray(e.__emotion_styles)&&(e.__emotion_styles=t(e.__emotion_styles))};var C=n(8339);const T=["values","unit","step"],$=e=>{const t=Object.keys(e).map((t=>({key:t,val:e[t]})))||[];return t.sort(((e,t)=>e.val-t.val)),t.reduce(((e,t)=>(0,s.Z)({},e,{[t.key]:t.val})),{})};const E={borderRadius:4};const R=function(e,t){return t?(0,r.vb)(e,t,{clone:!1}):e},A={xs:0,sm:600,md:900,lg:1200,xl:1536},F={keys:["xs","sm","md","lg","xl"],up:e=>`@media (min-width:${A[e]}px)`};function O(e,t,n){const r=e.theme||{};if(Array.isArray(t)){const e=r.breakpoints||F;return t.reduce(((r,s,a)=>(r[e.up(e.keys[a])]=n(t[a]),r)),{})}if("object"==typeof t){const e=r.breakpoints||F;return Object.keys(t).reduce(((r,s)=>{if(-1!==Object.keys(e.values||A).indexOf(s)){r[e.up(s)]=n(t[s],s)}else{const e=s;r[e]=t[e]}return r}),{})}return n(t)}function D(e={}){var t;return(null==(t=e.keys)?void 0:t.reduce(((t,n)=>(t[e.up(n)]={},t)),{}))||{}}function _(e,t){return e.reduce(((e,t)=>{const n=e[t];return(!n||0===Object.keys(n).length)&&delete e[t],e}),t)}function M({values:e,breakpoints:t,base:n}){const r=n||function(e,t){if("object"!=typeof e)return{};const n={},r=Object.keys(t);return Array.isArray(e)?r.forEach(((t,r)=>{r<e.length&&(n[t]=!0)})):r.forEach((t=>{null!=e[t]&&(n[t]=!0)})),n}(e,t),s=Object.keys(r);if(0===s.length)return e;let a;return s.reduce(((t,n,r)=>(Array.isArray(e)?(t[n]=null!=e[r]?e[r]:e[a],a=r):"object"==typeof e?(t[n]=null!=e[n]?e[n]:e[a],a=n):t[n]=e,t)),{})}function L(e,t,n=!0){if(!t||"string"!=typeof t)return null;if(e&&e.vars&&n){const n=`vars.${t}`.split(".").reduce(((e,t)=>e&&e[t]?e[t]:null),e);if(null!=n)return n}return t.split(".").reduce(((e,t)=>e&&null!=e[t]?e[t]:null),e)}function z(e,t,n,r=n){let s;return s="function"==typeof e?e(n):Array.isArray(e)?e[n]||r:L(e,n)||r,t&&(s=t(s,r,e)),s}const P=function(e){const{prop:t,cssProperty:n=e.prop,themeKey:s,transform:a}=e,o=e=>{if(null==e[t])return null;const o=e[t],i=L(e.theme,s)||{};return O(e,o,(e=>{let s=z(i,a,e);return e===s&&"string"==typeof e&&(s=z(i,a,`${t}${"default"===e?"":(0,r.vc)(e)}`,e)),!1===n?s:{[n]:s}}))};return o.propTypes={},o.filterProps=[t],o};const B={m:"margin",p:"padding"},W={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},V={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},U=function(e){const t={};return n=>(void 0===t[n]&&(t[n]=e(n)),t[n])}((e=>{if(e.length>2){if(!V[e])return[e];e=V[e]}const[t,n]=e.split(""),r=B[t],s=W[n]||"";return Array.isArray(s)?s.map((e=>r+e)):[r+s]})),G=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],Z=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],j=[...G,...Z];function H(e,t,n,r){var s;const a=null!=(s=L(e,t,!1))?s:n;return"number"==typeof a?e=>"string"==typeof e?e:a*e:Array.isArray(a)?e=>"string"==typeof e?e:a[e]:"function"==typeof a?a:()=>{}}function q(e){return H(e,"spacing",8)}function K(e,t){if("string"==typeof t||null==t)return t;const n=e(Math.abs(t));return t>=0?n:"number"==typeof n?-n:`-${n}`}function X(e,t,n,r){if(-1===t.indexOf(n))return null;const s=function(e,t){return n=>e.reduce(((e,r)=>(e[r]=K(t,n),e)),{})}(U(n),r);return O(e,e[n],s)}function Y(e,t){const n=q(e.theme);return Object.keys(e).map((r=>X(e,t,r,n))).reduce(R,{})}function J(e){return Y(e,G)}function Q(e){return Y(e,Z)}function ee(e){return Y(e,j)}J.propTypes={},J.filterProps=G,Q.propTypes={},Q.filterProps=Z,ee.propTypes={},ee.filterProps=j;const te=ee;const ne=function(...e){const t=e.reduce(((e,t)=>(t.filterProps.forEach((n=>{e[n]=t})),e)),{}),n=e=>Object.keys(e).reduce(((n,r)=>t[r]?R(n,t[r](e)):n),{});return n.propTypes={},n.filterProps=e.reduce(((e,t)=>e.concat(t.filterProps)),[]),n};function re(e){return"number"!=typeof e?e:`${e}px solid`}const se=P({prop:"border",themeKey:"borders",transform:re}),ae=P({prop:"borderTop",themeKey:"borders",transform:re}),oe=P({prop:"borderRight",themeKey:"borders",transform:re}),ie=P({prop:"borderBottom",themeKey:"borders",transform:re}),le=P({prop:"borderLeft",themeKey:"borders",transform:re}),ue=P({prop:"borderColor",themeKey:"palette"}),ce=P({prop:"borderTopColor",themeKey:"palette"}),de=P({prop:"borderRightColor",themeKey:"palette"}),he=P({prop:"borderBottomColor",themeKey:"palette"}),pe=P({prop:"borderLeftColor",themeKey:"palette"}),fe=e=>{if(void 0!==e.borderRadius&&null!==e.borderRadius){const t=H(e.theme,"shape.borderRadius",4),n=e=>({borderRadius:K(t,e)});return O(e,e.borderRadius,n)}return null};fe.propTypes={},fe.filterProps=["borderRadius"];const me=ne(se,ae,oe,ie,le,ue,ce,de,he,pe,fe),ge=e=>{if(void 0!==e.gap&&null!==e.gap){const t=H(e.theme,"spacing",8),n=e=>({gap:K(t,e)});return O(e,e.gap,n)}return null};ge.propTypes={},ge.filterProps=["gap"];const ye=e=>{if(void 0!==e.columnGap&&null!==e.columnGap){const t=H(e.theme,"spacing",8),n=e=>({columnGap:K(t,e)});return O(e,e.columnGap,n)}return null};ye.propTypes={},ye.filterProps=["columnGap"];const be=e=>{if(void 0!==e.rowGap&&null!==e.rowGap){const t=H(e.theme,"spacing",8),n=e=>({rowGap:K(t,e)});return O(e,e.rowGap,n)}return null};be.propTypes={},be.filterProps=["rowGap"];const xe=ne(ge,ye,be,P({prop:"gridColumn"}),P({prop:"gridRow"}),P({prop:"gridAutoFlow"}),P({prop:"gridAutoColumns"}),P({prop:"gridAutoRows"}),P({prop:"gridTemplateColumns"}),P({prop:"gridTemplateRows"}),P({prop:"gridTemplateAreas"}),P({prop:"gridArea"}));function ve(e,t){return"grey"===t?t:e}const we=ne(P({prop:"color",themeKey:"palette",transform:ve}),P({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette",transform:ve}),P({prop:"backgroundColor",themeKey:"palette",transform:ve}));function ke(e){return e<=1&&0!==e?100*e+"%":e}const Se=P({prop:"width",transform:ke}),Ie=e=>{if(void 0!==e.maxWidth&&null!==e.maxWidth){const t=t=>{var n,r;const s=(null==(n=e.theme)||null==(n=n.breakpoints)||null==(n=n.values)?void 0:n[t])||A[t];return s?"px"!==(null==(r=e.theme)||null==(r=r.breakpoints)?void 0:r.unit)?{maxWidth:`${s}${e.theme.breakpoints.unit}`}:{maxWidth:s}:{maxWidth:ke(t)}};return O(e,e.maxWidth,t)}return null};Ie.filterProps=["maxWidth"];const Ne=P({prop:"minWidth",transform:ke}),Ce=P({prop:"height",transform:ke}),Te=P({prop:"maxHeight",transform:ke}),$e=P({prop:"minHeight",transform:ke}),Ee=(P({prop:"size",cssProperty:"width",transform:ke}),P({prop:"size",cssProperty:"height",transform:ke}),ne(Se,Ie,Ne,Ce,Te,$e,P({prop:"boxSizing"}))),Re={border:{themeKey:"borders",transform:re},borderTop:{themeKey:"borders",transform:re},borderRight:{themeKey:"borders",transform:re},borderBottom:{themeKey:"borders",transform:re},borderLeft:{themeKey:"borders",transform:re},borderColor:{themeKey:"palette"},borderTopColor:{themeKey:"palette"},borderRightColor:{themeKey:"palette"},borderBottomColor:{themeKey:"palette"},borderLeftColor:{themeKey:"palette"},borderRadius:{themeKey:"shape.borderRadius",style:fe},color:{themeKey:"palette",transform:ve},bgcolor:{themeKey:"palette",cssProperty:"backgroundColor",transform:ve},backgroundColor:{themeKey:"palette",transform:ve},p:{style:Q},pt:{style:Q},pr:{style:Q},pb:{style:Q},pl:{style:Q},px:{style:Q},py:{style:Q},padding:{style:Q},paddingTop:{style:Q},paddingRight:{style:Q},paddingBottom:{style:Q},paddingLeft:{style:Q},paddingX:{style:Q},paddingY:{style:Q},paddingInline:{style:Q},paddingInlineStart:{style:Q},paddingInlineEnd:{style:Q},paddingBlock:{style:Q},paddingBlockStart:{style:Q},paddingBlockEnd:{style:Q},m:{style:J},mt:{style:J},mr:{style:J},mb:{style:J},ml:{style:J},mx:{style:J},my:{style:J},margin:{style:J},marginTop:{style:J},marginRight:{style:J},marginBottom:{style:J},marginLeft:{style:J},marginX:{style:J},marginY:{style:J},marginInline:{style:J},marginInlineStart:{style:J},marginInlineEnd:{style:J},marginBlock:{style:J},marginBlockStart:{style:J},marginBlockEnd:{style:J},displayPrint:{cssProperty:!1,transform:e=>({"@media print":{display:e}})},display:{},overflow:{},textOverflow:{},visibility:{},whiteSpace:{},flexBasis:{},flexDirection:{},flexWrap:{},justifyContent:{},alignItems:{},alignContent:{},order:{},flex:{},flexGrow:{},flexShrink:{},alignSelf:{},justifyItems:{},justifySelf:{},gap:{style:ge},rowGap:{style:be},columnGap:{style:ye},gridColumn:{},gridRow:{},gridAutoFlow:{},gridAutoColumns:{},gridAutoRows:{},gridTemplateColumns:{},gridTemplateRows:{},gridTemplateAreas:{},gridArea:{},position:{},zIndex:{themeKey:"zIndex"},top:{},right:{},bottom:{},left:{},boxShadow:{themeKey:"shadows"},width:{transform:ke},maxWidth:{style:Ie},minWidth:{transform:ke},height:{transform:ke},maxHeight:{transform:ke},minHeight:{transform:ke},boxSizing:{},fontFamily:{themeKey:"typography"},fontSize:{themeKey:"typography"},fontStyle:{themeKey:"typography"},fontWeight:{themeKey:"typography"},letterSpacing:{},textTransform:{},lineHeight:{},textAlign:{},typography:{cssProperty:!1,themeKey:"typography"}};const Ae=function(){function e(e,t,n,s){const a={[e]:t,theme:n},o=s[e];if(!o)return{[e]:t};const{cssProperty:i=e,themeKey:l,transform:u,style:c}=o;if(null==t)return null;if("typography"===l&&"inherit"===t)return{[e]:t};const d=L(n,l)||{};if(c)return c(a);return O(a,t,(t=>{let n=z(d,u,t);return t===n&&"string"==typeof t&&(n=z(d,u,`${e}${"default"===t?"":(0,r.vc)(t)}`,t)),!1===i?n:{[i]:n}}))}return function t(n){var r;const{sx:s,theme:a={}}=n||{};if(!s)return null;const o=null!=(r=a.unstable_sxConfig)?r:Re;function i(n){let r=n;if("function"==typeof n)r=n(a);else if("object"!=typeof n)return n;if(!r)return null;const s=D(a.breakpoints),i=Object.keys(s);let l=s;return Object.keys(r).forEach((n=>{const s=(i=r[n],u=a,"function"==typeof i?i(u):i);var i,u;if(null!=s)if("object"==typeof s)if(o[n])l=R(l,e(n,s,a,o));else{const e=O({theme:a},s,(e=>({[n]:e})));!function(...e){const t=e.reduce(((e,t)=>e.concat(Object.keys(t))),[]),n=new Set(t);return e.every((e=>n.size===Object.keys(e).length))}(e,s)?l=R(l,e):l[n]=t({sx:s,theme:a})}else l=R(l,e(n,s,a,o))})),_(i,l)}return Array.isArray(s)?s.map(i):i(s)}}();Ae.filterProps=["sx"];const Fe=Ae,Oe=["breakpoints","palette","spacing","shape"];const De=function(e={},...t){const{breakpoints:n={},palette:a={},spacing:o,shape:i={}}=e,l=(0,C.Z)(e,Oe),u=function(e){const{values:t={xs:0,sm:600,md:900,lg:1200,xl:1536},unit:n="px",step:r=5}=e,a=(0,C.Z)(e,T),o=$(t),i=Object.keys(o);function l(e){return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n})`}function u(e){return`@media (max-width:${("number"==typeof t[e]?t[e]:e)-r/100}${n})`}function c(e,s){const a=i.indexOf(s);return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n}) and (max-width:${(-1!==a&&"number"==typeof t[i[a]]?t[i[a]]:s)-r/100}${n})`}return(0,s.Z)({keys:i,values:o,up:l,down:u,between:c,only:function(e){return i.indexOf(e)+1<i.length?c(e,i[i.indexOf(e)+1]):l(e)},not:function(e){const t=i.indexOf(e);return 0===t?l(i[1]):t===i.length-1?u(i[t]):c(e,i[i.indexOf(e)+1]).replace("@media","@media not all and")},unit:n},a)}(n),c=function(e=8){if(e.mui)return e;const t=q({spacing:e}),n=(...e)=>(0===e.length?[1]:e).map((e=>{const n=t(e);return"number"==typeof n?`${n}px`:n})).join(" ");return n.mui=!0,n}(o);let d=(0,r.vb)({breakpoints:u,direction:"ltr",components:{},palette:(0,s.Z)({mode:"light"},a),spacing:c,shape:(0,s.Z)({},E,i)},l);return d=t.reduce(((e,t)=>(0,r.vb)(e,t)),d),d.unstable_sxConfig=(0,s.Z)({},Re,null==l?void 0:l.unstable_sxConfig),d.unstable_sx=function(e){return Fe({sx:e,theme:this})},d};const _e=function(e=null){const t=a.useContext(u.Ni);return t&&(n=t,0!==Object.keys(n).length)?t:e;var n},Me=De();const Le=function(e=Me){return _e(e)};const ze=function({styles:e,themeId:t,defaultTheme:n={}}){const r=Le(n),s="function"==typeof e?e(t&&r[t]||r):e;return(0,w.jsx)(S,{styles:s})},Pe=ne(P({prop:"displayPrint",cssProperty:!1,transform:e=>({"@media print":{display:e}})}),P({prop:"display"}),P({prop:"overflow"}),P({prop:"textOverflow"}),P({prop:"visibility"}),P({prop:"whiteSpace"})),Be=ne(P({prop:"flexBasis"}),P({prop:"flexDirection"}),P({prop:"flexWrap"}),P({prop:"justifyContent"}),P({prop:"alignItems"}),P({prop:"alignContent"}),P({prop:"order"}),P({prop:"flex"}),P({prop:"flexGrow"}),P({prop:"flexShrink"}),P({prop:"alignSelf"}),P({prop:"justifyItems"}),P({prop:"justifySelf"})),We=ne(P({prop:"position"}),P({prop:"zIndex",themeKey:"zIndex"}),P({prop:"top"}),P({prop:"right"}),P({prop:"bottom"}),P({prop:"left"})),Ve=P({prop:"boxShadow",themeKey:"shadows"}),Ue=P({prop:"fontFamily",themeKey:"typography"}),Ge=P({prop:"fontSize",themeKey:"typography"}),Ze=P({prop:"fontStyle",themeKey:"typography"}),je=P({prop:"fontWeight",themeKey:"typography"}),He=P({prop:"letterSpacing"}),qe=P({prop:"textTransform"}),Ke=P({prop:"lineHeight"}),Xe=P({prop:"textAlign"}),Ye=ne(P({prop:"typography",cssProperty:!1,themeKey:"typography"}),Ue,Ge,Ze,je,He,Ke,Xe,qe),Je=["sx"],Qe=e=>{var t,n;const r={systemProps:{},otherProps:{}},s=null!=(t=null==e||null==(n=e.theme)?void 0:n.unstable_sxConfig)?t:Re;return Object.keys(e).forEach((t=>{s[t]?r.systemProps[t]=e[t]:r.otherProps[t]=e[t]})),r};function et(e){const{sx:t}=e,n=(0,C.Z)(e,Je),{systemProps:a,otherProps:o}=Qe(n);let i;return i=Array.isArray(t)?[a,...t]:"function"==typeof t?(...e)=>{const n=t(...e);return(0,r.PO)(n)?(0,s.Z)({},a,n):a}:(0,s.Z)({},a,t),(0,s.Z)({},o,{sx:i})}const tt={borders:me.filterProps,display:Pe.filterProps,flexbox:Be.filterProps,grid:xe.filterProps,positions:We.filterProps,palette:we.filterProps,shadows:Ve.filterProps,sizing:Ee.filterProps,spacing:te.filterProps,typography:Ye.filterProps},nt={borders:me,display:Pe,flexbox:Be,grid:xe,positions:We,palette:we,shadows:Ve,sizing:Ee,spacing:te,typography:Ye};Object.keys(tt).reduce(((e,t)=>(tt[t].forEach((n=>{e[n]=nt[t]})),e)),{});var rt=n(11358);const st=["className","component"];!function(e={}){const{themeId:t,defaultTheme:n,defaultClassName:r="MuiBox-root",generateClassName:s}=e,a=I("div",{shouldForwardProp:e=>"theme"!==e&&"sx"!==e&&"as"!==e})(Fe)}();const at=["variant"];function ot(e){return 0===e.length}function it(e){const{variant:t}=e,n=(0,C.Z)(e,at);let s=t||"";return Object.keys(n).sort().forEach((t=>{s+="color"===t?ot(s)?e[t]:(0,r.vc)(e[t]):`${ot(s)?t:(0,r.vc)(t)}${(0,r.vc)(e[t].toString())}`})),s}const lt=["name","slot","skipVariantsResolver","skipSx","overridesResolver"];const ut=(e,t)=>t.components&&t.components[e]&&t.components[e].styleOverrides?t.components[e].styleOverrides:null,ct=e=>{const t={};return e&&e.forEach((e=>{const n=it(e.props);t[n]=e.style})),t},dt=(e,t)=>{let n=[];return t&&t.components&&t.components[e]&&t.components[e].variants&&(n=t.components[e].variants),ct(n)},ht=(e,t,n)=>{const{ownerState:r={}}=e,s=[];return n&&n.forEach((n=>{let a=!0;Object.keys(n.props).forEach((t=>{r[t]!==n.props[t]&&e[t]!==n.props[t]&&(a=!1)})),a&&s.push(t[it(n.props)])})),s},pt=(e,t,n,r)=>{var s;const a=null==n||null==(s=n.components)||null==(s=s[r])?void 0:s.variants;return ht(e,t,a)};function ft(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}const mt=De(),gt=e=>e?e.charAt(0).toLowerCase()+e.slice(1):e;function yt({defaultTheme:e,theme:t,themeId:n}){return r=t,0===Object.keys(r).length?e:t[n]||t;var r}function bt(e){return e?(t,n)=>n[e]:null}const xt=({styledArg:e,props:t,defaultTheme:n,themeId:r})=>{const a=e((0,s.Z)({},t,{theme:yt((0,s.Z)({},t,{defaultTheme:n,themeId:r}))}));let o;if(a&&a.variants&&(o=a.variants,delete a.variants),o){return[a,...ht(t,ct(o),o)]}return a};function vt(e={}){const{themeId:t,defaultTheme:n=mt,rootShouldForwardProp:a=ft,slotShouldForwardProp:o=ft}=e,i=e=>Fe((0,s.Z)({},e,{theme:yt((0,s.Z)({},e,{defaultTheme:n,themeId:t}))}));return i.__mui_systemSx=!0,(e,l={})=>{N(e,(e=>e.filter((e=>!(null!=e&&e.__mui_systemSx)))));const{name:u,slot:c,skipVariantsResolver:d,skipSx:h,overridesResolver:p=bt(gt(c))}=l,f=(0,C.Z)(l,lt),m=void 0!==d?d:c&&"Root"!==c&&"root"!==c||!1,g=h||!1;let y=ft;"Root"===c||"root"===c?y=a:c?y=o:function(e){return"string"==typeof e&&e.charCodeAt(0)>96}(e)&&(y=void 0);const b=I(e,(0,s.Z)({shouldForwardProp:y,label:undefined},f)),x=(a,...o)=>{const l=o?o.map((e=>{if("function"==typeof e&&e.__emotion_real!==e)return r=>xt({styledArg:e,props:r,defaultTheme:n,themeId:t});if((0,r.PO)(e)){let t,n=e;return e&&e.variants&&(t=e.variants,delete n.variants,n=n=>{let s=e;return ht(n,ct(t),t).forEach((e=>{s=(0,r.vb)(s,e)})),s}),n}return e})):[];let c=a;if((0,r.PO)(a)){let e;a&&a.variants&&(e=a.variants,delete c.variants,c=t=>{let n=a;return ht(t,ct(e),e).forEach((e=>{n=(0,r.vb)(n,e)})),n})}else"function"==typeof a&&a.__emotion_real!==a&&(c=e=>xt({styledArg:a,props:e,defaultTheme:n,themeId:t}));u&&p&&l.push((e=>{const r=yt((0,s.Z)({},e,{defaultTheme:n,themeId:t})),a=ut(u,r);if(a){const t={};return Object.entries(a).forEach((([n,a])=>{t[n]="function"==typeof a?a((0,s.Z)({},e,{theme:r})):a})),p(e,t)}return null})),u&&!m&&l.push((e=>{const r=yt((0,s.Z)({},e,{defaultTheme:n,themeId:t}));return pt(e,dt(u,r),r,u)})),g||l.push(i);const d=l.length-o.length;if(Array.isArray(a)&&d>0){const e=new Array(d).fill("");c=[...a,...e],c.raw=[...a.raw,...e]}const h=b(c,...l);return e.muiName&&(h.muiName=e.muiName),h};return b.withConfig&&(x.withConfig=b.withConfig),x}}const wt=vt();function kt({props:e,name:t,defaultTheme:n,themeId:s}){let a=Le(n);s&&(a=a[s]||a);const o=function(e){const{theme:t,name:n,props:s}=e;return t&&t.components&&t.components[n]&&t.components[n].defaultProps?(0,r.yr)(t.components[n].defaultProps,s):s}({theme:a,name:t,props:e});return o}function St(e,t=0,n=1){return Math.min(Math.max(t,e),n)}function It(e){if(e.type)return e;if("#"===e.charAt(0))return It(function(e){e=e.slice(1);const t=new RegExp(`.{1,${e.length>=6?2:1}}`,"g");let n=e.match(t);return n&&1===n[0].length&&(n=n.map((e=>e+e))),n?`rgb${4===n.length?"a":""}(${n.map(((e,t)=>t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3)).join(", ")})`:""}(e));const t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error((0,r.fe)(9,e));let s,a=e.substring(t+1,e.length-1);if("color"===n){if(a=a.split(" "),s=a.shift(),4===a.length&&"/"===a[3].charAt(0)&&(a[3]=a[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(s))throw new Error((0,r.fe)(10,s))}else a=a.split(",");return a=a.map((e=>parseFloat(e))),{type:n,values:a,colorSpace:s}}const Nt=e=>{const t=It(e);return t.values.slice(0,3).map(((e,n)=>-1!==t.type.indexOf("hsl")&&0!==n?`${e}%`:e)).join(" ")};function Ct(e){const{type:t,colorSpace:n}=e;let{values:r}=e;return-1!==t.indexOf("rgb")?r=r.map(((e,t)=>t<3?parseInt(e,10):e)):-1!==t.indexOf("hsl")&&(r[1]=`${r[1]}%`,r[2]=`${r[2]}%`),r=-1!==t.indexOf("color")?`${n} ${r.join(" ")}`:`${r.join(", ")}`,`${t}(${r})`}function Tt(e){let t="hsl"===(e=It(e)).type||"hsla"===e.type?It(function(e){e=It(e);const{values:t}=e,n=t[0],r=t[1]/100,s=t[2]/100,a=r*Math.min(s,1-s),o=(e,t=(e+n/30)%12)=>s-a*Math.max(Math.min(t-3,9-t,1),-1);let i="rgb";const l=[Math.round(255*o(0)),Math.round(255*o(8)),Math.round(255*o(4))];return"hsla"===e.type&&(i+="a",l.push(t[3])),Ct({type:i,values:l})}(e)).values:e.values;return t=t.map((t=>("color"!==e.type&&(t/=255),t<=.03928?t/12.92:((t+.055)/1.055)**2.4))),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function $t(e,t){const n=Tt(e),r=Tt(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)}function Et(e,t){return e=It(e),t=St(t),"rgb"!==e.type&&"hsl"!==e.type||(e.type+="a"),"color"===e.type?e.values[3]=`/${t}`:e.values[3]=t,Ct(e)}function Rt(e,t){if(e=It(e),t=St(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]*=1-t;return Ct(e)}function At(e,t){if(e=It(e),t=St(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(let n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]+=(1-e.values[n])*t;return Ct(e)}function Ft(e,t=.15){return Tt(e)>.5?Rt(e,t):At(e,t)}const Ot=a.createContext(null);function Dt(){return a.useContext(Ot)}const _t="function"==typeof Symbol&&Symbol.for?Symbol.for("mui.nested"):"__THEME_NESTED__";const Mt=function(e){const{children:t,theme:n}=e,r=Dt(),o=a.useMemo((()=>{const e=null===r?n:function(e,t){if("function"==typeof t)return t(e);return(0,s.Z)({},e,t)}(r,n);return null!=e&&(e[_t]=null!==r),e}),[n,r]);return(0,w.jsx)(Ot.Provider,{value:o,children:t})},Lt={};function zt(e,t,n,r=!1){return a.useMemo((()=>{const a=e&&t[e]||t;if("function"==typeof n){const o=n(a),i=e?(0,s.Z)({},t,{[e]:o}):o;return r?()=>i:i}return e?(0,s.Z)({},t,{[e]:n}):(0,s.Z)({},t,n)}),[e,t,n,r])}const Pt=function(e){const{children:t,theme:n,themeId:r}=e,s=_e(Lt),a=Dt()||Lt,o=zt(r,s,n),i=zt(r,a,n,!0);return(0,w.jsx)(Mt,{theme:i,children:(0,w.jsx)(u.Ni.Provider,{value:o,children:t})})},Bt="mode",Wt="color-scheme",Vt="data-color-scheme";function Ut(e){if("undefined"!=typeof window&&"system"===e){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}}function Gt(e,t){return"light"===e.mode||"system"===e.mode&&"light"===e.systemMode?t("light"):"dark"===e.mode||"system"===e.mode&&"dark"===e.systemMode?t("dark"):void 0}function Zt(e,t){if("undefined"==typeof window)return;let n;try{n=localStorage.getItem(e)||void 0,n||localStorage.setItem(e,t)}catch(e){}return n||t}function jt(e){const{defaultMode:t="light",defaultLightColorScheme:n,defaultDarkColorScheme:r,supportedColorSchemes:o=[],modeStorageKey:i=Bt,colorSchemeStorageKey:l=Wt,storageWindow:u=("undefined"==typeof window?void 0:window)}=e,c=o.join(","),[d,h]=a.useState((()=>{const e=Zt(i,t),s=Zt(`${l}-light`,n),a=Zt(`${l}-dark`,r);return{mode:e,systemMode:Ut(e),lightColorScheme:s,darkColorScheme:a}})),p=function(e){return Gt(e,(t=>"light"===t?e.lightColorScheme:"dark"===t?e.darkColorScheme:void 0))}(d),f=a.useCallback((e=>{h((n=>{if(e===n.mode)return n;const r=e||t;try{localStorage.setItem(i,r)}catch(e){}return(0,s.Z)({},n,{mode:r,systemMode:Ut(r)})}))}),[i,t]),m=a.useCallback((e=>{e?"string"==typeof e?e&&!c.includes(e)?console.error(`\`${e}\` does not exist in \`theme.colorSchemes\`.`):h((t=>{const n=(0,s.Z)({},t);return Gt(t,(t=>{try{localStorage.setItem(`${l}-${t}`,e)}catch(e){}"light"===t&&(n.lightColorScheme=e),"dark"===t&&(n.darkColorScheme=e)})),n})):h((t=>{const a=(0,s.Z)({},t),o=null===e.light?n:e.light,i=null===e.dark?r:e.dark;if(o)if(c.includes(o)){a.lightColorScheme=o;try{localStorage.setItem(`${l}-light`,o)}catch(e){}}else console.error(`\`${o}\` does not exist in \`theme.colorSchemes\`.`);if(i)if(c.includes(i)){a.darkColorScheme=i;try{localStorage.setItem(`${l}-dark`,i)}catch(e){}}else console.error(`\`${i}\` does not exist in \`theme.colorSchemes\`.`);return a})):h((e=>{try{localStorage.setItem(`${l}-light`,n),localStorage.setItem(`${l}-dark`,r)}catch(e){}return(0,s.Z)({},e,{lightColorScheme:n,darkColorScheme:r})}))}),[c,l,n,r]),g=a.useCallback((e=>{"system"===d.mode&&h((t=>(0,s.Z)({},t,{systemMode:null!=e&&e.matches?"dark":"light"})))}),[d.mode]),y=a.useRef(g);return y.current=g,a.useEffect((()=>{const e=(...e)=>y.current(...e),t=window.matchMedia("(prefers-color-scheme: dark)");return t.addListener(e),e(t),()=>t.removeListener(e)}),[]),a.useEffect((()=>{const e=e=>{const n=e.newValue;"string"!=typeof e.key||!e.key.startsWith(l)||n&&!c.match(n)||(e.key.endsWith("light")&&m({light:n}),e.key.endsWith("dark")&&m({dark:n})),e.key!==i||n&&!["light","dark","system"].includes(n)||f(n||t)};if(u)return u.addEventListener("storage",e),()=>u.removeEventListener("storage",e)}),[m,f,i,l,c,t,u]),(0,s.Z)({},d,{colorScheme:p,setMode:f,setColorScheme:m})}const Ht=["colorSchemes","components","generateCssVars","cssVarPrefix"],qt="*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";function Kt(e){const{themeId:t,theme:n={},attribute:o=Vt,modeStorageKey:i=Bt,colorSchemeStorageKey:l=Wt,defaultMode:u="light",defaultColorScheme:c,disableTransitionOnChange:d=!1,resolveTheme:h,excludeVariablesFromRoot:p}=e;(!n.colorSchemes||"string"==typeof c&&!n.colorSchemes[c]||"object"==typeof c&&!n.colorSchemes[null==c?void 0:c.light]||"object"==typeof c&&!n.colorSchemes[null==c?void 0:c.dark])&&console.error(`MUI: \`${c}\` does not exist in \`theme.colorSchemes\`.`);const f=a.createContext(void 0);const m="string"==typeof c?c:c.light,g="string"==typeof c?c:c.dark;return{CssVarsProvider:function({children:e,theme:m=n,modeStorageKey:g=i,colorSchemeStorageKey:y=l,attribute:b=o,defaultMode:x=u,defaultColorScheme:v=c,disableTransitionOnChange:k=d,storageWindow:I=("undefined"==typeof window?void 0:window),documentNode:N=("undefined"==typeof document?void 0:document),colorSchemeNode:T=("undefined"==typeof document?void 0:document.documentElement),colorSchemeSelector:$=":root",disableNestedContext:E=!1,disableStyleSheetGeneration:R=!1}){const A=a.useRef(!1),F=Dt(),O=a.useContext(f),D=!!O&&!E,_=m[t],M=_||m,{colorSchemes:L={},components:z={},generateCssVars:P=(()=>({vars:{},css:{}})),cssVarPrefix:B}=M,W=(0,C.Z)(M,Ht),V=Object.keys(L),U="string"==typeof v?v:v.light,G="string"==typeof v?v:v.dark,{mode:Z,setMode:j,systemMode:H,lightColorScheme:q,darkColorScheme:K,colorScheme:X,setColorScheme:Y}=jt({supportedColorSchemes:V,defaultLightColorScheme:U,defaultDarkColorScheme:G,modeStorageKey:g,colorSchemeStorageKey:y,defaultMode:x,storageWindow:I});let J=Z,Q=X;D&&(J=O.mode,Q=O.colorScheme);const ee=Q||("dark"===(J||("system"===x?u:x))?G:U),{css:te,vars:ne}=P(),re=(0,s.Z)({},W,{components:z,colorSchemes:L,cssVarPrefix:B,vars:ne,getColorSchemeSelector:e=>`[${b}="${e}"] &`}),se={},ae={};Object.entries(L).forEach((([e,t])=>{const{css:n,vars:a}=P(e);re.vars=(0,r.vb)(re.vars,a),e===ee&&(Object.keys(t).forEach((e=>{t[e]&&"object"==typeof t[e]?re[e]=(0,s.Z)({},re[e],t[e]):re[e]=t[e]})),re.palette&&(re.palette.colorScheme=e));if(e===("string"==typeof v?v:"dark"===x?v.dark:v.light)){if(p){const t={};p(B).forEach((e=>{t[e]=n[e],delete n[e]})),se[`[${b}="${e}"]`]=t}se[`${$}, [${b}="${e}"]`]=n}else ae[`${":root"===$?"":$}[${b}="${e}"]`]=n})),re.vars=(0,r.vb)(re.vars,ne),a.useEffect((()=>{Q&&T&&T.setAttribute(b,Q)}),[Q,b,T]),a.useEffect((()=>{let e;if(k&&A.current&&N){const t=N.createElement("style");t.appendChild(N.createTextNode(qt)),N.head.appendChild(t),window.getComputedStyle(N.body),e=setTimeout((()=>{N.head.removeChild(t)}),1)}return()=>{clearTimeout(e)}}),[Q,k,N]),a.useEffect((()=>(A.current=!0,()=>{A.current=!1})),[]);const oe=a.useMemo((()=>({mode:J,systemMode:H,setMode:j,lightColorScheme:q,darkColorScheme:K,colorScheme:Q,setColorScheme:Y,allColorSchemes:V})),[V,Q,K,q,J,Y,j,H]);let ie=!0;(R||D&&(null==F?void 0:F.cssVarPrefix)===B)&&(ie=!1);const le=(0,w.jsxs)(a.Fragment,{children:[ie&&(0,w.jsxs)(a.Fragment,{children:[(0,w.jsx)(S,{styles:{[$]:te}}),(0,w.jsx)(S,{styles:se}),(0,w.jsx)(S,{styles:ae})]}),(0,w.jsx)(Pt,{themeId:_?t:void 0,theme:h?h(re):re,children:e})]});return D?le:(0,w.jsx)(f.Provider,{value:oe,children:le})},useColorScheme:()=>{const e=a.useContext(f);if(!e)throw new Error((0,r.fe)(19));return e},getInitColorSchemeScript:e=>function(e){const{defaultMode:t="light",defaultLightColorScheme:n="light",defaultDarkColorScheme:r="dark",modeStorageKey:s=Bt,colorSchemeStorageKey:a=Wt,attribute:o=Vt,colorSchemeNode:i="document.documentElement"}=e||{};return(0,w.jsx)("script",{dangerouslySetInnerHTML:{__html:`(function() {\ntry {\n  var mode = localStorage.getItem('${s}') || '${t}';\n  var colorScheme = '';\n  if (mode === 'system') {\n    // handle system mode\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = localStorage.getItem('${a}-dark') || '${r}';\n    } else {\n      colorScheme = localStorage.getItem('${a}-light') || '${n}';\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = localStorage.getItem('${a}-light') || '${n}';\n  }\n  if (mode === 'dark') {\n    colorScheme = localStorage.getItem('${a}-dark') || '${r}';\n  }\n  if (colorScheme) {\n    ${i}.setAttribute('${o}', colorScheme);\n  }\n} catch(e){}})();`}},"mui-color-scheme-init")}((0,s.Z)({attribute:o,colorSchemeStorageKey:l,defaultMode:u,defaultLightColorScheme:m,defaultDarkColorScheme:g,modeStorageKey:i},e))}}function Xt(e=""){function t(...n){if(!n.length)return"";const r=n[0];return"string"!=typeof r||r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/)?`, ${r}`:`, var(--${e?`${e}-`:""}${r}${t(...n.slice(1))})`}return(n,...r)=>`var(--${e?`${e}-`:""}${n}${t(...r)})`}const Yt=["className","component","disableGutters","fixed","maxWidth","classes"],Jt=De(),Qt=wt("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`maxWidth${(0,r.vc)(String(n.maxWidth))}`],n.fixed&&t.fixed,n.disableGutters&&t.disableGutters]}}),en=e=>kt({props:e,name:"MuiContainer",defaultTheme:Jt});!function(e={}){const{createStyledComponent:t=Qt,useThemeProps:n=en,componentName:o="MuiContainer"}=e,i=t((({theme:e,ownerState:t})=>(0,s.Z)({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",display:"block"},!t.disableGutters&&{paddingLeft:e.spacing(2),paddingRight:e.spacing(2),[e.breakpoints.up("sm")]:{paddingLeft:e.spacing(3),paddingRight:e.spacing(3)}})),(({theme:e,ownerState:t})=>t.fixed&&Object.keys(e.breakpoints.values).reduce(((t,n)=>{const r=n,s=e.breakpoints.values[r];return 0!==s&&(t[e.breakpoints.up(r)]={maxWidth:`${s}${e.breakpoints.unit}`}),t}),{})),(({theme:e,ownerState:t})=>(0,s.Z)({},"xs"===t.maxWidth&&{[e.breakpoints.up("xs")]:{maxWidth:Math.max(e.breakpoints.values.xs,444)}},t.maxWidth&&"xs"!==t.maxWidth&&{[e.breakpoints.up(t.maxWidth)]:{maxWidth:`${e.breakpoints.values[t.maxWidth]}${e.breakpoints.unit}`}}))),l=a.forwardRef((function(e,t){const a=n(e),{className:l,component:u="div",disableGutters:c=!1,fixed:d=!1,maxWidth:h="lg"}=a,p=(0,C.Z)(a,Yt),f=(0,s.Z)({},a,{component:u,disableGutters:c,fixed:d,maxWidth:h}),m=((e,t)=>{const{classes:n,fixed:s,disableGutters:a,maxWidth:o}=e,i={root:["root",o&&`maxWidth${(0,r.vc)(String(o))}`,s&&"fixed",a&&"disableGutters"]};return(0,r.V_)(i,(e=>(0,r.ZU)(t,e)),n)})(f,o);return(0,w.jsx)(i,(0,s.Z)({as:u,ownerState:f,className:(0,rt.Z)(m.root,l),ref:t},p))}))}();(0,r.IO)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]);const tn=(e,t,n)=>{const r=e.keys[0];if(Array.isArray(t))t.forEach(((t,r)=>{n(((t,n)=>{r<=e.keys.length-1&&(0===r?Object.assign(t,n):t[e.up(e.keys[r])]=n)}),t)}));else if(t&&"object"==typeof t){(Object.keys(t).length>e.keys.length?e.keys:(s=e.keys,a=Object.keys(t),s.filter((e=>a.includes(e))))).forEach((s=>{if(-1!==e.keys.indexOf(s)){const a=t[s];void 0!==a&&n(((t,n)=>{r===s?Object.assign(t,n):t[e.up(s)]=n}),a)}}))}else"number"!=typeof t&&"string"!=typeof t||n(((e,t)=>{Object.assign(e,t)}),t);var s,a};function nn(e){return e?`Level${e}`:""}function rn(e){return e.unstable_level>0&&e.container}function sn(e){return function(t){return`var(--Grid-${t}Spacing${nn(e.unstable_level)})`}}function an(e){return function(t){return 0===e.unstable_level?`var(--Grid-${t}Spacing)`:`var(--Grid-${t}Spacing${nn(e.unstable_level-1)})`}}function on(e){return 0===e.unstable_level?"var(--Grid-columns)":`var(--Grid-columns${nn(e.unstable_level-1)})`}const ln=({theme:e,ownerState:t})=>{const n=sn(t),r={};return tn(e.breakpoints,t.gridSize,((e,s)=>{let a={};!0===s&&(a={flexBasis:0,flexGrow:1,maxWidth:"100%"}),"auto"===s&&(a={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"}),"number"==typeof s&&(a={flexGrow:0,flexBasis:"auto",width:`calc(100% * ${s} / ${on(t)}${rn(t)?` + ${n("column")}`:""})`}),e(r,a)})),r},un=({theme:e,ownerState:t})=>{const n={};return tn(e.breakpoints,t.gridOffset,((e,r)=>{let s={};"auto"===r&&(s={marginLeft:"auto"}),"number"==typeof r&&(s={marginLeft:0===r?"0px":`calc(100% * ${r} / ${on(t)})`}),e(n,s)})),n},cn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=rn(t)?{[`--Grid-columns${nn(t.unstable_level)}`]:on(t)}:{"--Grid-columns":12};return tn(e.breakpoints,t.columns,((e,r)=>{e(n,{[`--Grid-columns${nn(t.unstable_level)}`]:r})})),n},dn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=an(t),r=rn(t)?{[`--Grid-rowSpacing${nn(t.unstable_level)}`]:n("row")}:{};return tn(e.breakpoints,t.rowSpacing,((n,s)=>{var a;n(r,{[`--Grid-rowSpacing${nn(t.unstable_level)}`]:"string"==typeof s?s:null==(a=e.spacing)?void 0:a.call(e,s)})})),r},hn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=an(t),r=rn(t)?{[`--Grid-columnSpacing${nn(t.unstable_level)}`]:n("column")}:{};return tn(e.breakpoints,t.columnSpacing,((n,s)=>{var a;n(r,{[`--Grid-columnSpacing${nn(t.unstable_level)}`]:"string"==typeof s?s:null==(a=e.spacing)?void 0:a.call(e,s)})})),r},pn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n={};return tn(e.breakpoints,t.direction,((e,t)=>{e(n,{flexDirection:t})})),n},fn=({ownerState:e})=>{const t=sn(e),n=an(e);return(0,s.Z)({minWidth:0,boxSizing:"border-box"},e.container&&(0,s.Z)({display:"flex",flexWrap:"wrap"},e.wrap&&"wrap"!==e.wrap&&{flexWrap:e.wrap},{margin:`calc(${t("row")} / -2) calc(${t("column")} / -2)`},e.disableEqualOverflow&&{margin:`calc(${t("row")} * -1) 0px 0px calc(${t("column")} * -1)`}),(!e.container||rn(e))&&(0,s.Z)({padding:`calc(${n("row")} / 2) calc(${n("column")} / 2)`},(e.disableEqualOverflow||e.parentDisableEqualOverflow)&&{padding:`${n("row")} 0px 0px ${n("column")}`}))},mn=e=>{const t=[];return Object.entries(e).forEach((([e,n])=>{!1!==n&&void 0!==n&&t.push(`grid-${e}-${String(n)}`)})),t},gn=(e,t="xs")=>{function n(e){return void 0!==e&&("string"==typeof e&&!Number.isNaN(Number(e))||"number"==typeof e&&e>0)}if(n(e))return[`spacing-${t}-${String(e)}`];if("object"==typeof e&&!Array.isArray(e)){const t=[];return Object.entries(e).forEach((([e,r])=>{n(r)&&t.push(`spacing-${e}-${String(r)}`)})),t}return[]},yn=e=>void 0===e?[]:"object"==typeof e?Object.entries(e).map((([e,t])=>`direction-${e}-${t}`)):[`direction-xs-${String(e)}`],bn=["className","children","columns","container","component","direction","wrap","spacing","rowSpacing","columnSpacing","disableEqualOverflow","unstable_level"],xn=De(),vn=wt("div",{name:"MuiGrid",slot:"Root",overridesResolver:(e,t)=>t.root});function wn(e){return kt({props:e,name:"MuiGrid",defaultTheme:xn})}!function(e={}){const{createStyledComponent:t=vn,useThemeProps:n=wn,componentName:o="MuiGrid"}=e,i=a.createContext(void 0),l=t(cn,hn,dn,ln,pn,fn,un),u=a.forwardRef((function(e,t){var u,c,d,h,p,f,m,g;const y=Le(),b=et(n(e)),x=a.useContext(i),{className:v,children:k,columns:S=12,container:I=!1,component:N="div",direction:T="row",wrap:$="wrap",spacing:E=0,rowSpacing:R=E,columnSpacing:A=E,disableEqualOverflow:F,unstable_level:O=0}=b,D=(0,C.Z)(b,bn);let _=F;O&&void 0!==F&&(_=e.disableEqualOverflow);const M={},L={},z={};Object.entries(D).forEach((([e,t])=>{void 0!==y.breakpoints.values[e]?M[e]=t:void 0!==y.breakpoints.values[e.replace("Offset","")]?L[e.replace("Offset","")]=t:z[e]=t}));const P=null!=(u=e.columns)?u:O?void 0:S,B=null!=(c=e.spacing)?c:O?void 0:E,W=null!=(d=null!=(h=e.rowSpacing)?h:e.spacing)?d:O?void 0:R,V=null!=(p=null!=(f=e.columnSpacing)?f:e.spacing)?p:O?void 0:A,U=(0,s.Z)({},b,{level:O,columns:P,container:I,direction:T,wrap:$,spacing:B,rowSpacing:W,columnSpacing:V,gridSize:M,gridOffset:L,disableEqualOverflow:null!=(m=null!=(g=_)?g:x)&&m,parentDisableEqualOverflow:x}),G=((e,t)=>{const{container:n,direction:s,spacing:a,wrap:i,gridSize:l}=e,u={root:["root",n&&"container","wrap"!==i&&`wrap-xs-${String(i)}`,...yn(s),...mn(l),...n?gn(a,t.breakpoints.keys[0]):[]]};return(0,r.V_)(u,(e=>(0,r.ZU)(o,e)),{})})(U,y);let Z=(0,w.jsx)(l,(0,s.Z)({ref:t,as:N,ownerState:U,className:(0,rt.Z)(G.root,v)},z,{children:a.Children.map(k,(e=>{var t;return a.isValidElement(e)&&(0,r.oq)(e,["Grid"])?a.cloneElement(e,{unstable_level:null!=(t=e.props.unstable_level)?t:O+1}):e}))}));return void 0!==_&&_!==(null!=x&&x)&&(Z=(0,w.jsx)(i.Provider,{value:_,children:Z})),Z}));u.muiName="Grid"}();const kn=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],Sn=((0,r.IO)("MuiGrid",["root","container","item",...[0,1,2,3,4,5,6,7,8,9,10].map((e=>`spacing-xs-${e}`)),...["column-reverse","column","row-reverse","row"].map((e=>`direction-xs-${e}`)),...["nowrap","wrap-reverse","wrap"].map((e=>`wrap-xs-${e}`)),...kn.map((e=>`grid-xs-${e}`)),...kn.map((e=>`grid-sm-${e}`)),...kn.map((e=>`grid-md-${e}`)),...kn.map((e=>`grid-lg-${e}`)),...kn.map((e=>`grid-xl-${e}`))]),["component","direction","spacing","divider","children","className","useFlexGap"]),In=De(),Nn=wt("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,t)=>t.root});function Cn(e){return kt({props:e,name:"MuiStack",defaultTheme:In})}function Tn(e,t){const n=a.Children.toArray(e).filter(Boolean);return n.reduce(((e,r,s)=>(e.push(r),s<n.length-1&&e.push(a.cloneElement(t,{key:`separator-${s}`})),e)),[])}const $n=({ownerState:e,theme:t})=>{let n=(0,s.Z)({display:"flex",flexDirection:"column"},O({theme:t},M({values:e.direction,breakpoints:t.breakpoints.values}),(e=>({flexDirection:e}))));if(e.spacing){const s=q(t),a=Object.keys(t.breakpoints.values).reduce(((t,n)=>(("object"==typeof e.spacing&&null!=e.spacing[n]||"object"==typeof e.direction&&null!=e.direction[n])&&(t[n]=!0),t)),{}),o=M({values:e.direction,base:a}),i=M({values:e.spacing,base:a});"object"==typeof o&&Object.keys(o).forEach(((e,t,n)=>{if(!o[e]){const r=t>0?o[n[t-1]]:"column";o[e]=r}}));const l=(t,n)=>{return e.useFlexGap?{gap:K(s,t)}:{"& > :not(style):not(style)":{margin:0},"& > :not(style) ~ :not(style)":{[`margin${r=n?o[n]:e.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[r]}`]:K(s,t)}};var r};n=(0,r.vb)(n,O({theme:t},i,l))}return n=function(e,...t){const n=D(e),s=[n,...t].reduce(((e,t)=>(0,r.vb)(e,t)),{});return _(Object.keys(n),s)}(t.breakpoints,n),n};!function(e={}){const{createStyledComponent:t=Nn,useThemeProps:n=Cn,componentName:o="MuiStack"}=e,i=t($n),l=a.forwardRef((function(e,t){const a=et(n(e)),{component:l="div",direction:u="column",spacing:c=0,divider:d,children:h,className:p,useFlexGap:f=!1}=a,m=(0,C.Z)(a,Sn),g={direction:u,spacing:c,useFlexGap:f},y=(0,r.V_)({root:["root"]},(e=>(0,r.ZU)(o,e)),{});return(0,w.jsx)(i,(0,s.Z)({as:l,ownerState:g,ref:t,className:(0,rt.Z)(y.root,p)},m,{children:d?Tn(h,d):h}))}))}();(0,r.IO)("MuiStack",["root"])},47410:(e,t,n)=>{"use strict";n.d(t,{vb:()=>o,fe:()=>c,yr:()=>V,PO:()=>s,$g:()=>Z,vc:()=>d,V_:()=>U,ks:()=>h,_v:()=>p,E8:()=>f,ZU:()=>H,IO:()=>q,Ok:()=>P,oq:()=>y,Bu:()=>b,Mg:()=>x,qB:()=>v,X8:()=>w,NI:()=>C,bQ:()=>T,Q4:()=>k,Ai:()=>$,c8:()=>E,ii:()=>N,W7:()=>z,jy:()=>B});var r=n(76805);function s(e){return null!==e&&"object"==typeof e&&e.constructor===Object}function a(e){if(!s(e))return e;const t={};return Object.keys(e).forEach((n=>{t[n]=a(e[n])})),t}function o(e,t,n={clone:!0}){const i=n.clone?(0,r.Z)({},e):e;return s(e)&&s(t)&&Object.keys(t).forEach((r=>{"__proto__"!==r&&(s(t[r])&&r in e&&s(e[r])?i[r]=o(e[r],t[r],n):n.clone?i[r]=s(t[r])?a(t[r]):t[r]:i[r]=t[r])})),i}var i=n(3827),l=n.n(i);const u=(l().element,()=>null);u.isRequired=(l().element.isRequired,()=>null);l().elementType;function c(e){let t="https://mui.com/production-error/?code="+e;for(let e=1;e<arguments.length;e+=1)t+="&args[]="+encodeURIComponent(arguments[e]);return"Minified MUI error #"+e+"; visit "+t+" for the full message."}n(65031);"undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),l().oneOfType([l().func,l().object]);function d(e){if("string"!=typeof e)throw new Error(c(7));return e.charAt(0).toUpperCase()+e.slice(1)}function h(...e){return e.reduce(((e,t)=>null==t?e:function(...n){e.apply(this,n),t.apply(this,n)}),(()=>{}))}function p(e,t=166){let n;function r(...r){clearTimeout(n),n=setTimeout((()=>{e.apply(this,r)}),t)}return r.clear=()=>{clearTimeout(n)},r}function f(e,t){return()=>null}var m=n(43001),g=n.t(m,2);function y(e,t){var n,r;return m.isValidElement(e)&&-1!==t.indexOf(null!=(n=e.type.muiName)?n:null==(r=e.type)||null==(r=r._payload)||null==(r=r.value)?void 0:r.muiName)}function b(e){return e&&e.ownerDocument||document}function x(e){return b(e).defaultView||window}function v(e,t){return()=>null}function w(e,t){"function"==typeof e?e(t):e&&(e.current=t)}const k="undefined"!=typeof window?m.useLayoutEffect:m.useEffect;let S=0;const I=g["useId".toString()];function N(e){if(void 0!==I){const t=I();return null!=e?e:t}return function(e){const[t,n]=m.useState(e),r=e||t;return m.useEffect((()=>{null==t&&(S+=1,n(`mui-${S}`))}),[t]),r}(e)}function C(e,t,n,r,s){return null}function T({controlled:e,default:t,name:n,state:r="value"}){const{current:s}=m.useRef(void 0!==e),[a,o]=m.useState(t);return[s?e:a,m.useCallback((e=>{s||o(e)}),[])]}const $=function(e){const t=m.useRef(e);return k((()=>{t.current=e})),m.useCallback(((...e)=>(0,t.current)(...e)),[])};function E(...e){return m.useMemo((()=>e.every((e=>null==e))?null:t=>{e.forEach((e=>{w(e,t)}))}),e)}let R,A=!0,F=!1;const O={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function D(e){e.metaKey||e.altKey||e.ctrlKey||(A=!0)}function _(){A=!1}function M(){"hidden"===this.visibilityState&&F&&(A=!0)}function L(e){const{target:t}=e;try{return t.matches(":focus-visible")}catch(e){}return A||function(e){const{type:t,tagName:n}=e;return!("INPUT"!==n||!O[t]||e.readOnly)||"TEXTAREA"===n&&!e.readOnly||!!e.isContentEditable}(t)}function z(){const e=m.useCallback((e=>{var t;null!=e&&((t=e.ownerDocument).addEventListener("keydown",D,!0),t.addEventListener("mousedown",_,!0),t.addEventListener("pointerdown",_,!0),t.addEventListener("touchstart",_,!0),t.addEventListener("visibilitychange",M,!0))}),[]),t=m.useRef(!1);return{isFocusVisibleRef:t,onFocus:function(e){return!!L(e)&&(t.current=!0,!0)},onBlur:function(){return!!t.current&&(F=!0,window.clearTimeout(R),R=window.setTimeout((()=>{F=!1}),100),t.current=!1,!0)},ref:e}}function P(e){const t=e.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}const B={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:-1,overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"};Number.isInteger;function W(){return null}W.isRequired=W;function V(e,t){const n=(0,r.Z)({},t);return Object.keys(e).forEach((s=>{if(s.toString().match(/^(components|slots)$/))n[s]=(0,r.Z)({},e[s],n[s]);else if(s.toString().match(/^(componentsProps|slotProps)$/)){const a=e[s]||{},o=t[s];n[s]={},o&&Object.keys(o)?a&&Object.keys(a)?(n[s]=(0,r.Z)({},o),Object.keys(a).forEach((e=>{n[s][e]=V(a[e],o[e])}))):n[s]=o:n[s]=a}else void 0===n[s]&&(n[s]=e[s])})),n}function U(e,t,n=void 0){const r={};return Object.keys(e).forEach((s=>{r[s]=e[s].reduce(((e,r)=>{if(r){const s=t(r);""!==s&&e.push(s),n&&n[r]&&e.push(n[r])}return e}),[]).join(" ")})),r}const G=e=>e,Z=(()=>{let e=G;return{configure(t){e=t},generate:t=>e(t),reset(){e=G}}})(),j={active:"active",checked:"checked",completed:"completed",disabled:"disabled",error:"error",expanded:"expanded",focused:"focused",focusVisible:"focusVisible",open:"open",readOnly:"readOnly",required:"required",selected:"selected"};function H(e,t,n="Mui"){const r=j[t];return r?`${n}-${r}`:`${Z.generate(e)}-${t}`}function q(e,t,n="Mui"){const r={};return t.forEach((t=>{r[t]=H(e,t,n)})),r}},22239:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>et,Acos:()=>tt,Acosh:()=>nt,AdadeltaOptimizer:()=>Pp,AdagradOptimizer:()=>Bp,AdamOptimizer:()=>Wp,AdamaxOptimizer:()=>Vp,Add:()=>rt,AddN:()=>st,All:()=>at,Any:()=>ot,ArgMax:()=>it,ArgMin:()=>lt,Asin:()=>ut,Asinh:()=>ct,Atan:()=>dt,Atan2:()=>pt,Atanh:()=>ht,AvgPool:()=>ft,AvgPool3D:()=>gt,AvgPool3DGrad:()=>yt,AvgPoolGrad:()=>mt,BatchMatMul:()=>bt,BatchToSpaceND:()=>xt,Bincount:()=>vt,BitwiseAnd:()=>wt,BroadcastArgs:()=>St,BroadcastTo:()=>kt,Callback:()=>wN,CallbackList:()=>tv,Cast:()=>It,Ceil:()=>Nt,ClipByValue:()=>Ct,Complex:()=>Tt,ComplexAbs:()=>$t,Concat:()=>Et,Conv2D:()=>Rt,Conv2DBackpropFilter:()=>At,Conv2DBackpropInput:()=>Ft,Conv3D:()=>Ot,Conv3DBackpropFilterV2:()=>Dt,Conv3DBackpropInputV2:()=>_t,Cos:()=>Mt,Cosh:()=>Lt,CropAndResize:()=>Bt,Cumprod:()=>zt,Cumsum:()=>Pt,CustomCallback:()=>sv,DataStorage:()=>K,DenseBincount:()=>Wt,DepthToSpace:()=>Vt,DepthwiseConv2dNative:()=>Ut,DepthwiseConv2dNativeBackpropFilter:()=>Gt,DepthwiseConv2dNativeBackpropInput:()=>Zt,Diag:()=>jt,Dilation2D:()=>Ht,Dilation2DBackpropFilter:()=>Kt,Dilation2DBackpropInput:()=>qt,Draw:()=>Xt,ENV:()=>Ye,EarlyStopping:()=>IN,Einsum:()=>Jt,Elu:()=>Qt,EluGrad:()=>en,Environment:()=>He,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>sn,Expm1:()=>an,FFT:()=>on,Fill:()=>ln,FlipLeftRight:()=>un,Floor:()=>cn,FloorDiv:()=>dn,FromPixels:()=>fs,FusedBatchNorm:()=>hn,FusedConv2D:()=>ys,FusedDepthwiseConv2D:()=>bs,GPGPUContext:()=>JM,GatherNd:()=>fn,GatherV2:()=>pn,GraphModel:()=>HC,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>rv,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>ox,IsFinite:()=>vn,IsInf:()=>wn,IsNan:()=>kn,KernelBackend:()=>X,LRN:()=>_n,LRNGrad:()=>Mn,LayerVariable:()=>rx,LayersModel:()=>uw,LeakyRelu:()=>Sn,Less:()=>In,LessEqual:()=>Nn,LinSpace:()=>Cn,Log:()=>Tn,Log1p:()=>$n,LogSoftmax:()=>On,LogicalAnd:()=>En,LogicalNot:()=>Rn,LogicalOr:()=>An,LogicalXor:()=>Fn,LowerBound:()=>Dn,MathBackendCPU:()=>c$,MathBackendWebGL:()=>wz,MatrixBandPart:()=>Ln,Max:()=>zn,MaxPool:()=>Bn,MaxPool3D:()=>Vn,MaxPool3DGrad:()=>Un,MaxPoolGrad:()=>Wn,MaxPoolWithArgmax:()=>Gn,Maximum:()=>Pn,Mean:()=>Zn,Min:()=>jn,Minimum:()=>Hn,MirrorPad:()=>qn,Mod:()=>Kn,MomentumOptimizer:()=>Gp,Multinomial:()=>Xn,Multiply:()=>Yn,Neg:()=>Jn,NonMaxSuppressionV3:()=>er,NonMaxSuppressionV4:()=>tr,NonMaxSuppressionV5:()=>nr,NotEqual:()=>Qn,OP_SCOPE_SUFFIX:()=>Xa,OneHot:()=>sr,OnesLike:()=>rr,Optimizer:()=>zp,OptimizerConstructors:()=>Zf,Pack:()=>ar,PadV2:()=>or,Pool:()=>ir,Pow:()=>lr,Prelu:()=>ur,Prod:()=>cr,RMSPropOptimizer:()=>Zp,RNN:()=>yk,RaggedGather:()=>dr,RaggedRange:()=>hr,RaggedTensorToTensor:()=>pr,Range:()=>fr,Rank:()=>xa,Real:()=>mr,RealDiv:()=>Yt,Reciprocal:()=>gr,Reduction:()=>ip,Relu:()=>yr,Relu6:()=>Sr,Reshape:()=>br,ResizeBilinear:()=>wr,ResizeBilinearGrad:()=>kr,ResizeNearestNeighbor:()=>xr,ResizeNearestNeighborGrad:()=>vr,Reverse:()=>Ir,RotateWithOffset:()=>ms,Round:()=>Nr,Rsqrt:()=>Cr,SGDOptimizer:()=>Up,ScatterNd:()=>Tr,SearchSorted:()=>Er,Select:()=>Rr,Selu:()=>Ar,Sequential:()=>pw,Sigmoid:()=>Mr,Sign:()=>_r,Sin:()=>Or,Sinh:()=>Dr,Slice:()=>Fr,Softmax:()=>Vr,Softplus:()=>Lr,SpaceToBatchND:()=>Br,SparseFillEmptyRows:()=>Ur,SparseReshape:()=>Gr,SparseSegmentMean:()=>Zr,SparseSegmentSum:()=>jr,SparseToDense:()=>Hr,SplitV:()=>Wr,Sqrt:()=>zr,Square:()=>Kr,SquaredDifference:()=>qr,StaticRegexReplace:()=>Xr,Step:()=>ps,StridedSlice:()=>Yr,StringNGrams:()=>Jr,StringSplit:()=>Qr,StringToHashBucketFast:()=>es,Sub:()=>ts,Sum:()=>Pr,SymbolicTensor:()=>ix,Tan:()=>ns,Tanh:()=>rs,Tensor:()=>ga,TensorBuffer:()=>ha,TensorScatterUpdate:()=>$r,Tile:()=>ss,TopK:()=>as,Transform:()=>os,Transpose:()=>is,Unique:()=>ls,Unpack:()=>us,UnsortedSegmentSum:()=>cs,UpperBound:()=>ds,Variable:()=>ba,ZerosLike:()=>hs,_FusedMatMul:()=>gs,abs:()=>Fi,acos:()=>Oi,acosh:()=>Di,add:()=>$i,addN:()=>_i,all:()=>Mi,any:()=>Li,argMax:()=>zi,argMin:()=>Pi,asin:()=>Bi,asinh:()=>Wi,atan:()=>Vi,atan2:()=>Ui,atanh:()=>Gi,avgPool:()=>il,avgPool3d:()=>ll,backend:()=>Ci,backend_util:()=>y,basicLSTMCell:()=>fl,batchNorm:()=>gl,batchNorm2d:()=>yl,batchNorm3d:()=>bl,batchNorm4d:()=>xl,batchToSpaceND:()=>ml,bincount:()=>vl,bitwiseAnd:()=>wl,booleanMaskAsync:()=>lh,broadcastArgs:()=>kl,broadcastTo:()=>Sl,broadcast_util:()=>o,browser:()=>p,buffer:()=>ri,callbacks:()=>NN,cast:()=>si,ceil:()=>Il,clipByValue:()=>Cl,clone:()=>ai,complex:()=>Ja,concat:()=>ul,concat1d:()=>Tl,concat2d:()=>$l,concat3d:()=>El,concat4d:()=>Rl,constraints:()=>x,conv1d:()=>Fl,conv2d:()=>Al,conv2dTranspose:()=>Dl,conv3d:()=>_l,conv3dTranspose:()=>Ll,copyRegisteredKernels:()=>Rs,cos:()=>zl,cosh:()=>Pl,cosineWindow:()=>gh,cumprod:()=>Bl,cumsum:()=>Wl,customGrad:()=>qu,data:()=>Z,denseBincount:()=>Vl,deprecationWarn:()=>ci,depthToSpace:()=>Ul,depthwiseConv2d:()=>Gl,deregisterOp:()=>AN,device_util:()=>a,diag:()=>Zl,dilation2d:()=>jl,disableDeprecationWarnings:()=>ui,dispose:()=>gi,disposeVariables:()=>di,div:()=>Ri,divNoNan:()=>Ql,dot:()=>eu,dropout:()=>fh,einsum:()=>tu,elu:()=>nu,enableDebugMode:()=>li,enableProdMode:()=>ii,enclosingPowerOfTwo:()=>mh,engine:()=>hi,ensureShape:()=>ru,env:()=>Ke,equal:()=>Xl,erf:()=>su,euclideanNorm:()=>ku,exp:()=>Su,expandDims:()=>Iu,expm1:()=>Nu,eye:()=>Tu,fft:()=>Fd,fill:()=>Nl,findBackend:()=>Si,findBackendFactory:()=>Ii,floor:()=>$u,floorDiv:()=>Ei,forceHalfFloat:()=>Sz,fused:()=>u,gather:()=>Eu,gatherND:()=>ph,gather_util:()=>f,getBackend:()=>wi,getGradient:()=>Is,getKernel:()=>Ss,getKernelsForBackend:()=>Ns,gpgpu_util:()=>q,grad:()=>Uu,grads:()=>Gu,greater:()=>Ru,greaterEqual:()=>Au,ifft:()=>Od,imag:()=>Fu,image:()=>Tp,inTopKAsync:()=>yh,initializers:()=>v,input:()=>gw,io:()=>d,irfft:()=>Dd,isFinite:()=>Ou,isInf:()=>Du,isNaN:()=>_u,keep:()=>yi,kernel_impls:()=>b,layers:()=>w,leakyRelu:()=>Mu,less:()=>Lu,lessEqual:()=>zu,linalg:()=>$p,linspace:()=>Pu,loadGraphModel:()=>qC,loadGraphModelSync:()=>KC,loadLayersModel:()=>hw,localResponseNormalization:()=>Bu,log:()=>Wu,log1p:()=>Vu,logSigmoid:()=>Ju,logSoftmax:()=>ec,logSumExp:()=>tc,logicalAnd:()=>nc,logicalNot:()=>rc,logicalOr:()=>sc,logicalXor:()=>ac,losses:()=>Ep,lowerBound:()=>lc,matMul:()=>cl,math:()=>h,max:()=>pu,maxPool:()=>uc,maxPool3d:()=>cc,maxPoolWithArgmax:()=>dc,maximum:()=>hc,mean:()=>pc,memory:()=>pi,meshgrid:()=>gc,metrics:()=>k,min:()=>fu,minimum:()=>yc,mirrorPad:()=>bc,mod:()=>xc,model:()=>fw,models:()=>S,moments:()=>vc,movingAverage:()=>ch,mul:()=>Ai,multiRNNCell:()=>wc,multinomial:()=>kc,neg:()=>Xu,nextFrame:()=>qf,norm:()=>wu,notEqual:()=>Sc,oneHot:()=>Ic,ones:()=>mc,onesLike:()=>Nc,op:()=>Ya,outerProduct:()=>Cc,pad:()=>Tc,pad1d:()=>$c,pad2d:()=>Ec,pad3d:()=>Rc,pad4d:()=>Ac,pool:()=>Oc,pow:()=>mu,prelu:()=>Dc,print:()=>oi,prod:()=>_c,profile:()=>fi,raggedGather:()=>Mc,raggedRange:()=>Lc,raggedTensorToTensor:()=>zc,rand:()=>Pc,randomGamma:()=>sd,randomNormal:()=>ad,randomStandardNormal:()=>od,randomUniform:()=>id,randomUniformInt:()=>ld,range:()=>ud,ready:()=>vi,real:()=>cd,reciprocal:()=>dd,registerBackend:()=>Ni,registerCallbackConstructor:()=>yw,registerGradient:()=>Ts,registerKernel:()=>Cs,registerOp:()=>EN,regularizers:()=>I,relu:()=>hd,relu6:()=>pd,removeBackend:()=>ki,reshape:()=>ol,reverse:()=>fd,reverse1d:()=>md,reverse2d:()=>gd,reverse3d:()=>yd,reverse4d:()=>bd,rfft:()=>Md,round:()=>xd,rsqrt:()=>vd,scalar:()=>gu,scatterND:()=>dh,scatter_util:()=>l,searchSorted:()=>ic,selu:()=>wd,separableConv2d:()=>kd,sequential:()=>mw,serialization:()=>c,setBackend:()=>xi,setPlatform:()=>Ti,setWebGLContext:()=>ZD,setdiff1dAsync:()=>Sd,shared:()=>j,sigmoid:()=>dl,sign:()=>Id,signal:()=>Cp,sin:()=>Nd,sinh:()=>Cd,slice:()=>hl,slice1d:()=>Td,slice2d:()=>$d,slice3d:()=>Ed,slice4d:()=>Rd,slice_util:()=>m,softmax:()=>Ad,softplus:()=>Yu,spaceToBatchND:()=>Fc,sparse:()=>Rp,sparseToDense:()=>hh,spectral:()=>Np,split:()=>_d,sqrt:()=>yu,square:()=>bu,squaredDifference:()=>Ld,squeeze:()=>zd,stack:()=>Pd,step:()=>Bd,stridedSlice:()=>Wd,string:()=>Ap,sub:()=>Qu,sum:()=>xu,sumOutType:()=>Ca,tan:()=>Vd,tanh:()=>pl,tensor:()=>eo,tensor1d:()=>Ud,tensor2d:()=>Gd,tensor3d:()=>Zd,tensor4d:()=>jd,tensor5d:()=>Hd,tensor6d:()=>qd,tensorScatterUpdate:()=>Jd,tensor_util:()=>s,test_util:()=>i,tidy:()=>mi,tile:()=>Cu,time:()=>bi,topk:()=>Qd,train:()=>jf,transpose:()=>uh,truncatedNormal:()=>eh,unique:()=>th,unregisterGradient:()=>Es,unregisterKernel:()=>$s,unsortedSegmentSum:()=>nh,unstack:()=>rh,upcastType:()=>Na,upperBound:()=>sh,util:()=>r,valueAndGrad:()=>Zu,valueAndGrads:()=>ju,variable:()=>ah,variableGrads:()=>Hu,version:()=>bZ,version_converter:()=>XC,version_core:()=>Gf,version_cpu:()=>LR,version_layers:()=>Uv,version_webgl:()=>kz,webgl:()=>Iz,webgl_util:()=>H,where:()=>Yl,whereAsync:()=>ih,zeros:()=>fc,zerosLike:()=>Jl});var r={};n.r(r),n.d(r,{arraysEqual:()=>he,arraysEqualWithNull:()=>de,assert:()=>oe,assertNonNegativeIntegerDimensions:()=>Ve,assertNonNull:()=>le,assertShapesMatch:()=>ie,bytesFromStringArray:()=>$e,bytesPerElement:()=>Te,checkConversionForErrors:()=>Ie,clamp:()=>ee,computeStrides:()=>_e,convertBackendValuesAndArrayBuffer:()=>ze,createScalarValue:()=>Hs,createShuffledIndices:()=>ge,decodeString:()=>Js,distSquared:()=>ae,encodeString:()=>Ys,fetch:()=>Xs,fingerPrint64:()=>js,flatten:()=>ea,getArrayFromDType:()=>Se,getTypedArrayFromDType:()=>ke,hasEncodingLoss:()=>Ce,hexToLong:()=>_s,indexToLoc:()=>Ge,inferDtype:()=>Fe,inferFromImplicitShape:()=>xe,isBoolean:()=>Re,isFunction:()=>Oe,isInt:()=>pe,isNumber:()=>Ae,isPromise:()=>Ze,isScalarShape:()=>ce,isString:()=>Ee,isTypedArray:()=>Qs,isValidDtype:()=>Ne,locToIndex:()=>Ue,makeOnesTypedArray:()=>Pe,makeZerosNestedTypedArray:()=>We,makeZerosTypedArray:()=>Be,nearestDivisor:()=>De,nearestLargerEven:()=>te,now:()=>Ks,parseAxisParam:()=>ve,randUniform:()=>se,repeatedTry:()=>be,rightPad:()=>ye,shuffle:()=>J,shuffleCombo:()=>Q,sizeFromShape:()=>ue,sizeToSquarishShape:()=>me,squeezeShape:()=>we,sum:()=>re,swap:()=>ne,tanh:()=>fe,toNestedArray:()=>Le,toTypedArray:()=>qs});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ra,getTensorsInContainer:()=>Fa,isTensorInList:()=>Aa,makeTypesMatch:()=>Ea});var a={};n.r(a),n.d(a,{isBrowser:()=>Ua,isMobile:()=>Va,mockIsMobile:()=>Wa});var o={};n.r(o),n.d(o,{assertAndGetBroadcastShape:()=>Kl,getBroadcastDims:()=>Hl,getReductionAxes:()=>ql});var i={};n.r(i),n.d(i,{TEST_EPSILON_FLOAT16:()=>Vc,createVideoElement:()=>Qc,encodeStrings:()=>Jc,expectArrayBuffersEqual:()=>Yc,expectArraysClose:()=>Uc,expectArraysEqual:()=>Hc,expectNumbersClose:()=>qc,expectPromiseToFail:()=>jc,expectValuesInRange:()=>Xc,play:()=>ed,testEpsilon:()=>Gc});var l={};n.r(l),n.d(l,{calculateShapes:()=>Yd,validateInput:()=>Xd,validateUpdateShape:()=>Kd});var u={};n.r(u),n.d(u,{conv2d:()=>Sh,depthwiseConv2d:()=>Ch,matMul:()=>Th});var c={};n.r(c),n.d(c,{Serializable:()=>Dp,SerializationMap:()=>_p,getRegisteredName:()=>Lp,registerClass:()=>Mp});var d={};n.r(d),n.d(d,{CompositeArrayBuffer:()=>no,browserFiles:()=>Xp,browserHTTPRequest:()=>af,concatenateArrayBuffers:()=>co,copyModel:()=>Yo,decodeWeights:()=>oo,encodeWeights:()=>ao,fromMemory:()=>cf,fromMemorySync:()=>df,getLoadHandlers:()=>So,getModelArtifactsForJSON:()=>mo,getModelArtifactsForJSONSync:()=>fo,getModelArtifactsInfoForJSON:()=>go,getSaveHandlers:()=>ko,getWeightSpecs:()=>yo,http:()=>sf,isHTTPScheme:()=>nf,listModels:()=>Ko,loadWeights:()=>Qp,moveModel:()=>Jo,registerLoadRouter:()=>wo,registerSaveRouter:()=>vo,removeModel:()=>Xo,weightsLoaderFactory:()=>ef,withSaveHandler:()=>hf,withSaveHandlerSync:()=>pf});var h={};n.r(h),n.d(h,{confusionMatrix:()=>ff});var p={};n.r(p),n.d(p,{draw:()=>kf,fromPixels:()=>Sf,fromPixelsAsync:()=>xf,toPixels:()=>wf});var f={};n.r(f),n.d(f,{prepareAndValidate:()=>If});var m={};n.r(m),n.d(m,{assertParamsValid:()=>Tf,computeFlatOffset:()=>Bf,computeOutShape:()=>Ef,getNormalizedAxes:()=>Of,isSliceContinous:()=>Pf,maskToAxes:()=>$f,parseSliceParams:()=>Wf,sliceInfo:()=>Vf,startForAxis:()=>Lf,startIndicesWithElidedDims:()=>Df,stopForAxis:()=>zf,stopIndicesWithElidedDims:()=>_f,stridesForAxis:()=>Mf,stridesWithElidedDims:()=>Rf});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Ym,computeOutShape:()=>Xm,segOpComputeOptimalWindowSize:()=>Km});var y={};n.r(y),n.d(y,{ERF_A1:()=>pm,ERF_A2:()=>fm,ERF_A3:()=>mm,ERF_A4:()=>gm,ERF_A5:()=>ym,ERF_P:()=>hm,PARALLELIZE_THRESHOLD:()=>nm,RowPartitionType:()=>Yf,SELU_SCALE:()=>dm,SELU_SCALEALPHA:()=>cm,applyActivation:()=>wh,assertAndGetBroadcastShape:()=>Kl,assertAxesAreInnerMostDims:()=>uu,assertParamsConsistent:()=>Kf,assignToTypedArray:()=>Sm,axesAreInnerMostDims:()=>au,calculateShapes:()=>Yd,checkEinsumDimSizes:()=>Fm,checkPadOnDimRoundingMode:()=>al,combineLocations:()=>ou,combineRaggedTensorToTensorShapes:()=>Jf,complexWithEvenIndex:()=>vm,complexWithOddIndex:()=>wm,computeConv2DInfo:()=>qi,computeConv3DInfo:()=>Ki,computeDefaultPad:()=>Xi,computeDilation2DInfo:()=>Zi,computeOptimalWindowSize:()=>rm,computeOutAndReduceShapes:()=>iu,computeOutShape:()=>Xf,computePool2DInfo:()=>ji,computePool3DInfo:()=>Hi,convertConv2DDataFormat:()=>sl,decodeEinsumEquation:()=>Rm,eitherStridesOrDilationsAreOne:()=>nl,expandShapeToKeepDim:()=>lu,exponent:()=>Nm,exponents:()=>Im,fromStringArrayToUint8:()=>Qm,fromUint8ToStringArray:()=>Jm,getAxesPermutation:()=>cu,getBroadcastDims:()=>Hl,getComplexWithIndex:()=>km,getEinsumComputePath:()=>Om,getEinsumPermutation:()=>Am,getFusedBiasGradient:()=>vh,getFusedDyActivation:()=>xh,getImageCenter:()=>sm,getInnerMostAxes:()=>hu,getPermuted:()=>om,getRaggedRank:()=>em,getReductionAxes:()=>ql,getReshaped:()=>am,getReshapedPermuted:()=>im,getRowPartitionTypesHelper:()=>Qf,getSliceBeginCoords:()=>lm,getSliceSize:()=>um,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Lm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>zm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Pm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Vm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Gm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Um,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Bm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Wm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>qm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Zm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>jm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Hm,getUndoAxesPermutation:()=>du,isIdentityPermutation:()=>Dm,log:()=>vs,mergeRealAndImagArrays:()=>bm,prepareAndValidate:()=>If,prepareSplitSize:()=>Mm,segment_util:()=>g,shouldFuse:()=>kh,slice_util:()=>m,splitRealAndImagArrays:()=>xm,stridesOrDilationsArePositive:()=>rl,tupleValuesAreOne:()=>tl,upcastType:()=>Na,validateDefaultValueShape:()=>tm,validateInput:()=>Xd,validateUpdateShape:()=>Kd,warn:()=>xs});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>Wh,nonMaxSuppressionV4Impl:()=>Vh,nonMaxSuppressionV5Impl:()=>Uh,whereImpl:()=>oh});var x={};n.r(x),n.d(x,{maxNorm:()=>Fx,minMaxNorm:()=>_x,nonNeg:()=>Dx,unitNorm:()=>Ox});var v={};n.r(v),n.d(v,{constant:()=>zx,glorotNormal:()=>Zx,glorotUniform:()=>Gx,heNormal:()=>jx,heUniform:()=>Hx,identity:()=>Vx,leCunNormal:()=>qx,leCunUniform:()=>Kx,ones:()=>Lx,orthogonal:()=>Xx,randomNormal:()=>Bx,randomUniform:()=>Px,truncatedNormal:()=>Wx,varianceScaling:()=>Ux,zeros:()=>Mx});var w={};n.r(w),n.d(w,{Layer:()=>dx,RNN:()=>yk,RNNCell:()=>bk,activation:()=>YS,add:()=>oI,alphaDropout:()=>XI,average:()=>iI,averagePooling1d:()=>gI,averagePooling2d:()=>xI,averagePooling3d:()=>kI,avgPool1d:()=>yI,avgPool2d:()=>vI,avgPool3d:()=>SI,avgPooling1d:()=>bI,avgPooling2d:()=>wI,avgPooling3d:()=>II,batchNormalization:()=>pI,bidirectional:()=>VI,categoryEncoding:()=>tN,centerCrop:()=>QI,concatenate:()=>lI,conv1d:()=>VS,conv2d:()=>US,conv2dTranspose:()=>GS,conv3d:()=>ZS,conv3dTranspose:()=>jS,convLstm2d:()=>zI,convLstm2dCell:()=>PI,cropping2D:()=>qS,dense:()=>JS,depthwiseConv2d:()=>XS,dot:()=>hI,dropout:()=>QS,elu:()=>MS,embedding:()=>aI,flatten:()=>tI,gaussianDropout:()=>KI,gaussianNoise:()=>qI,globalAveragePooling1d:()=>NI,globalAveragePooling2d:()=>CI,globalMaxPool1d:()=>GI,globalMaxPool2d:()=>ZI,globalMaxPooling1d:()=>TI,globalMaxPooling2d:()=>$I,gru:()=>FI,gruCell:()=>OI,input:()=>gw,inputLayer:()=>_S,layerNormalization:()=>fI,leakyReLU:()=>zS,lstm:()=>DI,lstmCell:()=>_I,masking:()=>YI,maxPool1d:()=>jI,maxPool2d:()=>HI,maxPooling1d:()=>EI,maxPooling2d:()=>RI,maxPooling3d:()=>AI,maximum:()=>uI,minimum:()=>cI,multiply:()=>dI,permute:()=>sI,prelu:()=>PS,randomWidth:()=>nN,reLU:()=>LS,repeatVector:()=>nI,rescaling:()=>JI,reshape:()=>rI,resizing:()=>eN,rnn:()=>BI,separableConv2d:()=>HS,simpleRNN:()=>MI,simpleRNNCell:()=>LI,softmax:()=>BS,spatialDropout1d:()=>eI,stackedRNNCells:()=>WI,thresholdedReLU:()=>WS,timeDistributed:()=>UI,upSampling2d:()=>KS,zeroPadding2d:()=>mI});var k={};n.r(k),n.d(k,{MAPE:()=>pN,MSE:()=>gN,binaryAccuracy:()=>rN,binaryCrossentropy:()=>sN,categoricalAccuracy:()=>oN,categoricalCrossentropy:()=>iN,cosineProximity:()=>cN,mape:()=>fN,meanAbsoluteError:()=>dN,meanAbsolutePercentageError:()=>hN,meanSquaredError:()=>mN,mse:()=>yN,precision:()=>lN,recall:()=>uN,sparseCategoricalAccuracy:()=>aN});var S={};n.r(S),n.d(S,{modelFromJSON:()=>dw});var I={};n.r(I),n.d(I,{l1:()=>xN,l1l2:()=>bN,l2:()=>vN});var N={};n.r(N),n.d(N,{json:()=>BN});var C={};n.r(C),n.d(C,{json:()=>WN});var T={};n.r(T),n.d(T,{json:()=>VN});var $={};n.r($),n.d($,{json:()=>UN});var E={};n.r(E),n.d(E,{json:()=>GN});var R={};n.r(R),n.d(R,{json:()=>ZN});var A={};n.r(A),n.d(A,{json:()=>jN});var F={};n.r(F),n.d(F,{json:()=>HN});var O={};n.r(O),n.d(O,{json:()=>qN});var D={};n.r(D),n.d(D,{json:()=>KN});var _={};n.r(_),n.d(_,{json:()=>XN});var M={};n.r(M),n.d(M,{json:()=>YN});var L={};n.r(L),n.d(L,{json:()=>JN});var z={};n.r(z),n.d(z,{json:()=>QN});var P={};n.r(P),n.d(P,{json:()=>eC});var B={};n.r(B),n.d(B,{json:()=>tC});var W={};n.r(W),n.d(W,{json:()=>nC});var V={};n.r(V),n.d(V,{json:()=>rC});var U={};n.r(U),n.d(U,{json:()=>sC});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:()=>Xa,abs:()=>Fi,acos:()=>Oi,acosh:()=>Di,add:()=>$i,addN:()=>_i,all:()=>Mi,any:()=>Li,argMax:()=>zi,argMin:()=>Pi,asin:()=>Bi,asinh:()=>Wi,atan:()=>Vi,atan2:()=>Ui,atanh:()=>Gi,avgPool:()=>il,avgPool3d:()=>ll,basicLSTMCell:()=>fl,batchNorm:()=>gl,batchNorm2d:()=>yl,batchNorm3d:()=>bl,batchNorm4d:()=>xl,batchToSpaceND:()=>ml,bincount:()=>vl,bitwiseAnd:()=>wl,booleanMaskAsync:()=>lh,broadcastArgs:()=>kl,broadcastTo:()=>Sl,buffer:()=>ri,cast:()=>si,ceil:()=>Il,clipByValue:()=>Cl,clone:()=>ai,complex:()=>Ja,concat:()=>ul,concat1d:()=>Tl,concat2d:()=>$l,concat3d:()=>El,concat4d:()=>Rl,conv1d:()=>Fl,conv2d:()=>Al,conv2dTranspose:()=>Dl,conv3d:()=>_l,conv3dTranspose:()=>Ll,cos:()=>zl,cosh:()=>Pl,cosineWindow:()=>gh,cumprod:()=>Bl,cumsum:()=>Wl,denseBincount:()=>Vl,depthToSpace:()=>Ul,depthwiseConv2d:()=>Gl,diag:()=>Zl,dilation2d:()=>jl,div:()=>Ri,divNoNan:()=>Ql,dot:()=>eu,dropout:()=>fh,einsum:()=>tu,elu:()=>nu,enclosingPowerOfTwo:()=>mh,ensureShape:()=>ru,equal:()=>Xl,erf:()=>su,euclideanNorm:()=>ku,exp:()=>Su,expandDims:()=>Iu,expm1:()=>Nu,eye:()=>Tu,fft:()=>Fd,fill:()=>Nl,floor:()=>$u,floorDiv:()=>Ei,fused:()=>u,gather:()=>Eu,gatherND:()=>ph,greater:()=>Ru,greaterEqual:()=>Au,ifft:()=>Od,imag:()=>Fu,image:()=>Tp,inTopKAsync:()=>yh,irfft:()=>Dd,isFinite:()=>Ou,isInf:()=>Du,isNaN:()=>_u,leakyRelu:()=>Mu,less:()=>Lu,lessEqual:()=>zu,linalg:()=>$p,linspace:()=>Pu,localResponseNormalization:()=>Bu,log:()=>Wu,log1p:()=>Vu,logSigmoid:()=>Ju,logSoftmax:()=>ec,logSumExp:()=>tc,logicalAnd:()=>nc,logicalNot:()=>rc,logicalOr:()=>sc,logicalXor:()=>ac,losses:()=>Ep,lowerBound:()=>lc,matMul:()=>cl,max:()=>pu,maxPool:()=>uc,maxPool3d:()=>cc,maxPoolWithArgmax:()=>dc,maximum:()=>hc,mean:()=>pc,meshgrid:()=>gc,min:()=>fu,minimum:()=>yc,mirrorPad:()=>bc,mod:()=>xc,moments:()=>vc,movingAverage:()=>ch,mul:()=>Ai,multiRNNCell:()=>wc,multinomial:()=>kc,neg:()=>Xu,norm:()=>wu,notEqual:()=>Sc,oneHot:()=>Ic,ones:()=>mc,onesLike:()=>Nc,op:()=>Ya,outerProduct:()=>Cc,pad:()=>Tc,pad1d:()=>$c,pad2d:()=>Ec,pad3d:()=>Rc,pad4d:()=>Ac,pool:()=>Oc,pow:()=>mu,prelu:()=>Dc,print:()=>oi,prod:()=>_c,raggedGather:()=>Mc,raggedRange:()=>Lc,raggedTensorToTensor:()=>zc,rand:()=>Pc,randomGamma:()=>sd,randomNormal:()=>ad,randomStandardNormal:()=>od,randomUniform:()=>id,randomUniformInt:()=>ld,range:()=>ud,real:()=>cd,reciprocal:()=>dd,relu:()=>hd,relu6:()=>pd,reshape:()=>ol,reverse:()=>fd,reverse1d:()=>md,reverse2d:()=>gd,reverse3d:()=>yd,reverse4d:()=>bd,rfft:()=>Md,round:()=>xd,rsqrt:()=>vd,scalar:()=>gu,scatterND:()=>dh,searchSorted:()=>ic,selu:()=>wd,separableConv2d:()=>kd,setdiff1dAsync:()=>Sd,sigmoid:()=>dl,sign:()=>Id,signal:()=>Cp,sin:()=>Nd,sinh:()=>Cd,slice:()=>hl,slice1d:()=>Td,slice2d:()=>$d,slice3d:()=>Ed,slice4d:()=>Rd,softmax:()=>Ad,softplus:()=>Yu,spaceToBatchND:()=>Fc,sparse:()=>Rp,sparseToDense:()=>hh,spectral:()=>Np,split:()=>_d,sqrt:()=>yu,square:()=>bu,squaredDifference:()=>Ld,squeeze:()=>zd,stack:()=>Pd,step:()=>Bd,stridedSlice:()=>Wd,string:()=>Ap,sub:()=>Qu,sum:()=>xu,tan:()=>Vd,tanh:()=>pl,tensor:()=>eo,tensor1d:()=>Ud,tensor2d:()=>Gd,tensor3d:()=>Zd,tensor4d:()=>jd,tensor5d:()=>Hd,tensor6d:()=>qd,tensorScatterUpdate:()=>Jd,tile:()=>Cu,topk:()=>Qd,transpose:()=>uh,truncatedNormal:()=>eh,unique:()=>th,unsortedSegmentSum:()=>nh,unstack:()=>rh,upperBound:()=>sh,variable:()=>ah,where:()=>Yl,whereAsync:()=>ih,zeros:()=>fc,zerosLike:()=>Jl});var Z={};n.r(Z),n.d(Z,{CSVDataset:()=>BT,Dataset:()=>$T,FileDataSource:()=>e$,TextLineDataset:()=>OT,URLDataSource:()=>t$,array:()=>RT,csv:()=>n$,func:()=>r$,generator:()=>s$,microphone:()=>o$,version_data:()=>i$,webcam:()=>a$,zip:()=>AT});var j={};n.r(j),n.d(j,{addImpl:()=>C$,bincountImpl:()=>R$,bincountReduceImpl:()=>A$,bitwiseAndImpl:()=>F$,castImpl:()=>w$,ceilImpl:()=>z$,concatImpl:()=>W$,equalImpl:()=>V$,expImpl:()=>Z$,expm1Impl:()=>q$,floorDivImpl:()=>eE,floorImpl:()=>Y$,gatherNdImpl:()=>rE,gatherV2Impl:()=>sE,greaterEqualImpl:()=>lE,greaterImpl:()=>aE,lessEqualImpl:()=>fE,lessImpl:()=>dE,linSpaceImpl:()=>yE,logImpl:()=>bE,maxImpl:()=>wE,maximumImpl:()=>kE,minimumImpl:()=>NE,multiplyImpl:()=>$E,negImpl:()=>FE,notEqualImpl:()=>DE,prodImpl:()=>BE,raggedGatherImpl:()=>ZE,raggedRangeImpl:()=>HE,raggedTensorToTensorImpl:()=>JE,rangeImpl:()=>QE,rsqrtImpl:()=>eR,scatterImpl:()=>rR,sigmoidImpl:()=>sR,simpleAbsImpl:()=>d$,sliceImpl:()=>iR,sparseFillEmptyRowsImpl:()=>cR,sparseReshapeImpl:()=>dR,sparseSegmentReductionImpl:()=>hR,sqrtImpl:()=>pR,squaredDifferenceImpl:()=>gR,staticRegexReplaceImpl:()=>xR,stridedSliceImpl:()=>kR,stringNGramsImpl:()=>IR,stringSplitImpl:()=>CR,stringToHashBucketFastImpl:()=>TR,subImpl:()=>$R,tileImpl:()=>FR,topKImpl:()=>_R,transposeImpl:()=>LE,uniqueImpl:()=>MR});var H={};n.r(H),n.d(H,{assertNotComplex:()=>Y_,bindCanvasToFramebuffer:()=>N_,bindColorTextureToFramebuffer:()=>C_,bindTextureToProgramUniformSampler:()=>I_,bindTextureUnit:()=>v_,bindVertexBufferToProgramAttribute:()=>x_,callAndCheck:()=>e_,canBeRepresented:()=>r_,createFragmentShader:()=>i_,createFramebuffer:()=>b_,createProgram:()=>c_,createStaticIndexBuffer:()=>f_,createStaticVertexBuffer:()=>p_,createTexture:()=>g_,createVertexShader:()=>o_,getBatchDim:()=>F_,getExtensionOrThrow:()=>a_,getFramebufferErrorMessage:()=>E_,getMaxTexturesInShader:()=>U_,getNumChannels:()=>m_,getProgramUniformLocation:()=>S_,getProgramUniformLocationOrThrow:()=>k_,getRowsCols:()=>O_,getShapeAs3D:()=>D_,getTextureShapeFromLogicalShape:()=>__,getWebGLDisjointQueryTimerVersion:()=>G_,getWebGLErrorMessage:()=>s_,getWebGLMaxTextureSize:()=>B_,hasExtension:()=>Z_,isCapableOfRenderingToFloatTexture:()=>H_,isDownloadFloatTextureEnabled:()=>q_,isReshapeFree:()=>L_,isWebGLFenceEnabled:()=>X_,isWebGLVersionEnabled:()=>j_,linkProgram:()=>d_,logShaderSourceAndInfoLog:()=>u_,resetMaxTextureSize:()=>W_,resetMaxTexturesInShader:()=>V_,unbindColorTextureFromFramebuffer:()=>T_,unbindTextureUnit:()=>w_,validateFramebuffer:()=>$_,validateProgram:()=>h_,validateTextureSize:()=>y_});var q={};n.r(q),n.d(q,{bindVertexProgramAttributeStreams:()=>GM,createBufferFromOutputTexture:()=>HM,createFloat16MatrixTexture:()=>LM,createFloat16PackedMatrixTexture:()=>UM,createFloat32MatrixTexture:()=>_M,createIndexBuffer:()=>FM,createPackedMatrixTexture:()=>WM,createUnsignedBytesMatrixTexture:()=>PM,createVertexBuffer:()=>AM,createVertexShader:()=>RM,downloadByteEncodedFloatMatrixFromOutputTexture:()=>KM,downloadFloat32MatrixFromBuffer:()=>qM,downloadMatrixFromPackedOutputTexture:()=>YM,downloadPackedMatrixFromBuffer:()=>XM,getInternalFormatForFloat16MatrixTexture:()=>MM,getInternalFormatForFloat16PackedMatrixTexture:()=>VM,getInternalFormatForFloat32MatrixTexture:()=>DM,getInternalFormatForPackedMatrixTexture:()=>BM,getInternalFormatForUnsignedBytesMatrixTexture:()=>zM,uploadDenseMatrixToTexture:()=>ZM,uploadPixelDataToTexture:()=>jM});class K{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class X{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}readToGPU(e,t){return Y("readToGPU")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,r,s){return Y("move")}createTensorFromGPUData(e,t,n){return Y("createTensorFromGPUData")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Y("dispose")}}function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function J(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ne(e,t,n)}function Q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2==0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function oe(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ie(e,t,n=""){oe(he(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function le(e){oe(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function de(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pe(e){return e%1==0}function fe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function me(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ge(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return J(t),t}function ye(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function be(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let o=0;const i=()=>{if(e())return void s();o++;const l=t(o);null!=n&&o>=n?a():null!=r?r(i,l):setTimeout(i,l)};i()}))}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ve(e,t){const n=t.length;return oe((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),oe(e.every((e=>pe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function we(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ve(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[o]||a[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ke(e,t){return Se(e,t)}function Se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ie(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ne(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ce(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Te(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function $e(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ee(e){return"string"==typeof e||e instanceof String}function Re(e){return"boolean"==typeof e}function Ae(e){return"number"==typeof e}function Fe(e){return Array.isArray(e)?Fe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ae(e)?"float32":Ee(e)?"string":Re(e)?"bool":"float32"}function Oe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function De(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Me(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Me(e+t*i,o,n,r)}return s}function Le(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Me(0,e,t,n)}function ze(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Pe(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function We(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Le(e,new Float32Array(n));if("int32"===t)return Le(e,new Int32Array(n));if("bool"===t)return Le(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ve(e){e.forEach((t=>{oe(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ue(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ge(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Ze(e){return e&&e.then&&"function"==typeof e.then}const je="tfjsflags";class He{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ze(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(je in e){e[je].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function qe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ke(){return Ye}let Xe,Ye=null;function Je(){if(null==Xe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Xe=e}return Xe}function Qe(e,t){const n=function(){const e=Je();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const et="Abs",tt="Acos",nt="Acosh",rt="Add",st="AddN",at="All",ot="Any",it="ArgMax",lt="ArgMin",ut="Asin",ct="Asinh",dt="Atan",ht="Atanh",pt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",yt="AvgPool3DGrad",bt="BatchMatMul",xt="BatchToSpaceND",vt="Bincount",wt="BitwiseAnd",kt="BroadcastTo",St="BroadcastArgs",It="Cast",Nt="Ceil",Ct="ClipByValue",Tt="Complex",$t="ComplexAbs",Et="Concat",Rt="Conv2D",At="Conv2DBackpropFilter",Ft="Conv2DBackpropInput",Ot="Conv3D",Dt="Conv3DBackpropFilterV2",_t="Conv3DBackpropInputV2",Mt="Cos",Lt="Cosh",zt="Cumprod",Pt="Cumsum",Bt="CropAndResize",Wt="DenseBincount",Vt="DepthToSpace",Ut="DepthwiseConv2dNative",Gt="DepthwiseConv2dNativeBackpropFilter",Zt="DepthwiseConv2dNativeBackpropInput",jt="Diag",Ht="Dilation2D",qt="Dilation2DBackpropInput",Kt="Dilation2DBackpropFilter",Xt="Draw",Yt="RealDiv",Jt="Einsum",Qt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",sn="ExpandDims",an="Expm1",on="FFT",ln="Fill",un="FlipLeftRight",cn="Floor",dn="FloorDiv",hn="FusedBatchNorm",pn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",vn="IsFinite",wn="IsInf",kn="IsNan",Sn="LeakyRelu",In="Less",Nn="LessEqual",Cn="LinSpace",Tn="Log",$n="Log1p",En="LogicalAnd",Rn="LogicalNot",An="LogicalOr",Fn="LogicalXor",On="LogSoftmax",Dn="LowerBound",_n="LRN",Mn="LRNGrad",Ln="MatrixBandPart",zn="Max",Pn="Maximum",Bn="MaxPool",Wn="MaxPoolGrad",Vn="MaxPool3D",Un="MaxPool3DGrad",Gn="MaxPoolWithArgmax",Zn="Mean",jn="Min",Hn="Minimum",qn="MirrorPad",Kn="Mod",Xn="Multinomial",Yn="Multiply",Jn="Neg",Qn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",or="PadV2",ir="Pool",lr="Pow",ur="Prelu",cr="Prod",dr="RaggedGather",hr="RaggedRange",pr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",vr="ResizeNearestNeighborGrad",wr="ResizeBilinear",kr="ResizeBilinearGrad",Sr="Relu6",Ir="Reverse",Nr="Round",Cr="Rsqrt",Tr="ScatterNd",$r="TensorScatterUpdate",Er="SearchSorted",Rr="Select",Ar="Selu",Fr="Slice",Or="Sin",Dr="Sinh",_r="Sign",Mr="Sigmoid",Lr="Softplus",zr="Sqrt",Pr="Sum",Br="SpaceToBatchND",Wr="SplitV",Vr="Softmax",Ur="SparseFillEmptyRows",Gr="SparseReshape",Zr="SparseSegmentMean",jr="SparseSegmentSum",Hr="SparseToDense",qr="SquaredDifference",Kr="Square",Xr="StaticRegexReplace",Yr="StridedSlice",Jr="StringNGrams",Qr="StringSplit",es="StringToHashBucketFast",ts="Sub",ns="Tan",rs="Tanh",ss="Tile",as="TopK",os="Transform",is="Transpose",ls="Unique",us="Unpack",cs="UnsortedSegmentSum",ds="UpperBound",hs="ZerosLike",ps="Step",fs="FromPixels",ms="RotateWithOffset",gs="_FusedMatMul",ys="FusedConv2D",bs="FusedDepthwiseConv2D";function xs(...e){Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(...e)}function vs(...e){Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.log(...e)}const ws=Qe("kernelRegistry",(()=>new Map)),ks=Qe("gradRegistry",(()=>new Map));function Ss(e,t){const n=As(e,t);return ws.get(n)}function Is(e){return ks.get(e)}function Ns(e){const t=ws.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Cs(e){const{kernelName:t,backendName:n}=e,r=As(t,n);ws.has(r)&&xs(`The kernel '${t}' for backend '${n}' is already registered`),ws.set(r,e)}function Ts(e){const{kernelName:t}=e;ks.has(t)&&Ke().getBool("DEBUG")&&xs(`Overriding the gradient for '${t}'`),ks.set(t,e)}function $s(e,t){const n=As(e,t);if(!ws.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ws.delete(n)}function Es(e){if(!ks.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ks.delete(e)}function Rs(e,t){Ns(e).forEach((e=>{Cs(Object.assign({},e,{backendName:t}))}))}function As(e,t){return`${t}_${e}`}function Fs(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Os=n(81690);const Ds=n.n(Os)()||Os;function _s(e){return Ds.fromString(e,!0,16)}const Ms=_s("c3a5c85c97cb3127"),Ls=_s("b492b66fbe98f273"),zs=_s("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Bs(e,t,n){const r=e.slice(t,t+n);return Ds.fromBytes(Array.from(r),!0,!0)}function Ws(e,t){return Bs(e,t,8)}function Vs(e,t){return Bs(e,t,4)}function Us(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=_s("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Zs(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Us(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(Us(s,44)),[s.add(r),a.add(o)]}(Ws(e,t),Ws(e,t+8),Ws(e,t+16),Ws(e,t+24),n,r)}function js(e,t=e.length){const n=Ds.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zs.add(2*t),r=Ws(e,0).add(zs),s=Ws(e,t-8);return Gs(Us(s,37).mul(n).add(r),Us(r,25).add(s).mul(n),n)}if(t>=4){const n=zs.add(2*t);return Gs(Vs(e,0).shl(3).add(t),Vs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ps(zs.mul(n).xor(Ms.mul(r))).mul(zs)}return zs}(e,t):function(e,t=e.length){const n=zs.add(2*t),r=Ws(e,0).mul(Ls),s=Ws(e,8),a=Ws(e,t-8).mul(n),o=Ws(e,t-16).mul(zs);return Gs(Us(r.add(s),43).add(Us(a,30)).add(o),r.add(Us(s.add(zs),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zs.add(2*t),r=Ws(e,0).mul(zs),s=Ws(e,8),a=Ws(e,t-8).mul(n),o=Ws(e,t-16).mul(zs),i=Us(r.add(s),43).add(Us(a,30)).add(o),l=Gs(i,r.add(Us(s.add(zs),18)).add(a),n),u=Ws(e,16).mul(n),c=Ws(e,24),d=i.add(Ws(e,t-32)).mul(n),h=l.add(Ws(e,t-24)).mul(n);return Gs(Us(u.add(c),43).add(Us(d,30)).add(h),u.add(Us(c.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(Ls).add(113),a=Ps(s.mul(zs).add(113)).mul(zs),o=[Ds.UZERO,Ds.UZERO],i=[Ds.UZERO,Ds.UZERO];r=r.mul(zs).add(Ws(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Us(r.add(s).add(o[0]).add(Ws(e,l+8)),37).mul(Ls),s=Us(s.add(o[1]).add(Ws(e,l+48)),42).mul(Ls),r=r.xor(i[1]),s=s.add(o[0]).add(Ws(e,l+40)),a=Us(a.add(i[0]),33).mul(Ls),o=Zs(e,l,o[1].mul(Ls),r.add(i[0])),i=Zs(e,l+32,a.add(i[1]),s.add(Ws(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const d=Ls.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Us(r.add(s).add(o[0]).add(Ws(e,l+8)),37).mul(d),s=Us(s.add(o[1]).add(Ws(e,l+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(Ws(e,l+40))),a=Us(a.add(i[0]),33).mul(d),o=Zs(e,l,o[1].mul(d),r.add(i[0])),i=Zs(e,l+32,a.add(i[1]),s.add(Ws(e,l+16))),[a,r]=[r,a],Gs(Gs(o[0],i[0],d).add(Ps(s).mul(Ms)).add(a),Gs(o[1],i[1],d).add(r),d)}function Hs(e,t){return"string"===t?Ys(e):qs([e],t)}function qs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ea(e)),Ke().getBool("DEBUG")&&Ie(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ks(){return Ke().platform.now()}function Xs(e,t){return Ke().platform.fetch(e,t)}function Ys(e,t="utf-8"){return t=t||"utf-8",Ke().platform.encode(e,t)}function Js(e,t="utf-8"){return t=t||"utf-8",Ke().platform.decode(e,t)}function Qs(e){return null!=Ke().platform.isTypedArray?Ke().platform.isTypedArray(e):Fs(e)}function ea(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Ze(e)||null==e||Qs(e)&&n)t.push(e);else if(Array.isArray(e)||Qs(e))for(let r=0;r<e.length;++r)ea(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ea(e[s],t,n)}return t}class ta{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const o=Ks();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Ks()-o})}if(Ke().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{na(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ra{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?ye(`${r}ms`,9):r.error,i=ye(e,25),l=t.rank,u=t.size,c=ye(t.shape.toString(),14);let d="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;d+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${l}D ${c}\t%c${u}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const sa=20,aa=3,oa=7;function ia(e,t,n,r){const s=_e(t),a=function(e,t,n,r){const s=ue(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,l="complex64"===n?da(e):e;if(i>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)o[e]=Math.max(o[e],la(l[t+e],0,n).length)}return o}(e,t,n,s),o=t.length,i=ca(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map((e=>"    "+e)).join("\n")),l.join("\n")}function la(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(oa))} + ${parseFloat(e[1].toFixed(oa))}j`:Ee(e)?`'${e}'`:"bool"===n?ua(e):parseFloat(e.toFixed(oa)).toString(),ye(r,t)}function ua(e){return 0===e?"false":"true"}function ca(e,t,n,r,s,a=!0){const o="complex64"===n?2:1,i=t[0],l=t.length;if(0===l){if("complex64"===n){return[la(da(e)[0],0,n)]}return"bool"===n?[ua(e[0])]:[e[0].toString()]}if(1===l){if(i>sa){const t=aa*o;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((i-aa)*o,i*o));return"complex64"===n&&(r=da(r),a=da(a)),["["+r.map(((e,t)=>la(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>la(e,s[i-aa+t],n))).join(", ")+"]"]}return["["+("complex64"===n?da(e):Array.from(e)).map(((e,t)=>la(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),d=r[0]*o,h=[];if(i>sa){for(let t=0;t<aa;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,!1))}h.push("...");for(let t=i-aa;t<i;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,t===i-1))}}else for(let t=0;t<i;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,t===i-1))}const p=2===l?",":"";h[0]="["+(i>0?h[0]+p:"");for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function da(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ha{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),null!=n){const e=n.length;oe(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Se(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),oe(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pa().makeTensor(this.values,this.shape,this.dtype)}}let pa=null,fa=null,ma=null;class ga{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=_e(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fa.buffer(this.shape,this.dtype,e)}bufferSync(){return fa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Le(this.shape,e,"complex64"===this.dtype)}arraySync(){return Le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=pa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),pa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=pa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),pa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fa.print(this,e)}clone(){return this.throwIfDisposed(),fa.clone(this)}toString(e=!1){return ia(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),pa().makeVariable(this,e,t,n)}}function ya(){return Qe("Tensor",(()=>ga))}Object.defineProperty(ga,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ya();class ba extends ga{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!he(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pa().disposeTensor(this),this.dataId=e.dataId,pa().incRef(this,null)}dispose(){pa().disposeVariable(this),this.isDisposedInternal=!0}}var xa,va,wa,ka,Sa;Object.defineProperty(ba,Symbol.hasInstance,{value:e=>e instanceof ga&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(xa||(xa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(va||(va={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(wa||(wa={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ka||(ka={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Sa||(Sa={}));const Ia={float32:ka,int32:va,bool:wa,complex64:Sa};function Na(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ia[e][t]}function Ca(e){return Na(e,"int32")}function Ta(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function $a(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ea(e,t){if(e.dtype===t.dtype)return[e,t];const n=Na(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ra(e,t){oe(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Aa(e,t){return t.some((t=>t.id===e.id))}function Fa(e){const t=[];return Oa(e,t,new Set),t}function Oa(e,t,n){if(null==e)return;if(e instanceof ga)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Oa(r,t,n))}}function Da(e){return null!=e.kernelName}class _a{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _a}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ta(this.backendInstance),!0}setupRegisteredKernels(){Ns(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ns(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof X||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return xs(`Initialization of backend ${e} failed`),xs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ma.nextTensorId++}nextVariableId(){return Ma.nextVariableId++}clone(e){const t=za.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return za.runKernel(It,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ss(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Da(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Da(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Ss(t,this.backendName);oe(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const u=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,d=Da(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(l,u,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=o()})),r&&this.addTapeNode(l,u,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Is(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(oe(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Ee(e[0])&&(s=e.map((e=>Ys(e))));const a=r.write(s,t,n),o=new ga(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=$e(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new ga(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ba(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Te(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ba||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Te(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Is(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Fa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(oe(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));oe(s instanceof ga,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],o=a.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Pe(ue(e),"float32");return za.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!he(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Pa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return oe(Oe(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;oe(t.every((e=>e instanceof ga)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),oe(n.value instanceof ga,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),oe(Oe(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];oe(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),oe(a.every((e=>e instanceof ga)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ks(),n=await this.backend.time(e);return n.wallMs=Ks()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _a;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function La(){const e=Je();if(null==e._tfengine){const t=new He(e);e._tfengine=new Ma(t)}var t;return t=e._tfengine.ENV,Ye=t,pa=()=>e._tfengine,e._tfengine}Ma.nextTensorId=0,Ma.nextVariableId=0;const za=La();function Pa(e,t){const n={a:e,b:t};return za.runKernel(rt,n)}let Ba;function Wa(e){Ba=e}function Va(e){if(void 0!==Ba)return Ba;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ua(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ga=Ke();function Za(e,t){let n=e;if(Qs(e))return"string"===t?[]:[e.length];if(Ta(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if($a(e))return[e.buffer.size/(null==t?4:Te(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Qs(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ke().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ja(e,r,[]),r}function ja(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qs(e))return void oe(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));oe(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),oe(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ja(e[t],r,n.concat(t))}function Ha(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function qa(e,t,n,r="numeric"){if(e instanceof ga)return Ha(r,e.dtype,t,n),e;let s=Fe(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ha(r,s,t,n),null==e||!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Za(e,s);Qs(e)||Array.isArray(e)||(e=[e]);const o="string"!==s?qs(e,s):ea(e,[],!0);return za.makeTensor(o,a,s)}function Ka(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>qa(e,`${t}[${s}]`,n,r)))}Ga.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ga.registerFlag("IS_BROWSER",(()=>Ua())),Ga.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ga.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ga.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ga.registerFlag("PROD",(()=>!1)),Ga.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ga.getBool("DEBUG"))),Ga.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ga.registerFlag("IS_TEST",(()=>!1)),Ga.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ga.getBool("DEBUG"))),Ga.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ga.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ga.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Xa="__op";function Ya(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Xa;const s=(...e)=>{za.startScope(n);try{const t=r(...e);return Ze(t)&&console.error("Cannot return a Promise inside of tidy."),za.endScope(t),t}catch(e){throw za.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ja=Ya({complex_:function(e,t){const n=qa(e,"real","complex"),r=qa(t,"imag","complex");ie(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return za.runKernel(Tt,s)}});function Qa(e,t,n,r){if(null==r)r=Fe(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if($a(e)||Ta(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return za.backend.createTensorFromGPUData(e,t||n,r)}if(!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ve(t);const e=ue(t),r=ue(n);oe(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==ue(t.slice(e));oe(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Qs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?qs(e,r):ea(e,[],!0),za.makeTensor(e,t,r)}function eo(e,t,n){return Qa(e,t,Za(e,n),n)}const to={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class no{static join(e){return new no(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Qs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],o=e+a-n.start,i=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,o,l-o);if(s.set(u,i),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}var ro=n(58955).lW;const so=4;async function ao(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const l={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+so*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=so,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(l.group=t),n.push(l)}return{data:io(await Promise.all(r)),specs:n}}function oo(e,t){const n=new no(e),r={};let s,a=0;for(const e of t){const t=e.name,o=e.dtype,i=e.shape,l=ue(i);let u;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const i=to[r.dtype],c=n.slice(a,a+l*i),d="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){u=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===s&&(s=bo()),u=s(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);u=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=Math.round(t*r.scale+r.min)}}a+=l*i}else if("string"===o){const t=ue(e.shape);u=[];for(let e=0;e<t;e++){const e=new Uint32Array(n.slice(a,a+so))[0];a+=so;const t=new Uint8Array(n.slice(a,a+e));u.push(t),a+=e}}else{const e=to[o],s=n.slice(a,a+l*e);if("float32"===o)u=new Float32Array(s);else if("int32"===o)u=new Int32Array(s);else if("bool"===o)u=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{u=new Float32Array(s);const e=new Float32Array(u.length/2),n=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],n[t]=u[2*t+1];const a=eo(e,i,"float32"),o=eo(n,i,"float32");r[t]=Ja(a,o),a.dispose(),o.dispose()}}a+=l*e}"complex64"!==o&&(r[t]=eo(u,i,o))}return r}function io(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const lo=void 0!==ro&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function uo(e){return lo?ro.byteLength(e,"utf8"):new Blob([e]).size}function co(e){return no.join(e)}function ho(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function po(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function fo(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function mo(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),fo(e,n,r)}function go(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:uo(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:uo(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new no(e.weightData).byteLength}}function yo(e){const t=[];for(const n of e)t.push(...n.weights);return t}function bo(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],i=e[n[o>>10]+(1023&o)]+t[o>>10];a[s]=i}return new Float32Array(s)}}class xo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==xo.instance&&(xo.instance=new xo),xo.instance}static registerSaveRouter(e){xo.getInstance().saveRouters.push(e)}static registerLoadRouter(e){xo.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return xo.getHandlers(e,"save")}static getLoadHandlers(e,t){return xo.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?xo.getInstance().loadRouters:xo.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const vo=e=>xo.registerSaveRouter(e),wo=e=>xo.registerLoadRouter(e),ko=e=>xo.getSaveHandlers(e),So=(e,t)=>xo.getLoadHandlers(e,t),Io="tensorflowjs",No="models_store",Co="model_info_store";function To(){if(!Ke().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function $o(e){const t=e.result;t.createObjectStore(No,{keyPath:"modelPath"}),t.createObjectStore(Co,{keyPath:"modelPath"})}class Eo{constructor(e){if(this.indexedDB=To(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Io,1);r.onupgradeneeded=()=>$o(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(No,"readonly"),r=t.objectStore(No).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=no.join(t.weightData);const r=go(t),a=s.transaction(Co,"readwrite");let o,i,l=a.objectStore(Co);try{o=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}o.onsuccess=()=>{i=s.transaction(No,"readwrite");const o=i.objectStore(No);let u;try{u=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(Co);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==i?s.close():i.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Eo.URL_SCHEME="indexeddb://";const Ro=e=>{return Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Eo.URL_SCHEME)?(t=e.slice(Eo.URL_SCHEME.length),new Eo(t)):null;var t};xo.registerSaveRouter(Ro),xo.registerLoadRouter(Ro);class Ao{constructor(){this.indexedDB=To()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Io,1);n.onupgradeneeded=()=>$o(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Co,"readonly"),a=s.objectStore(Co).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Eo.URL_SCHEME)?t.slice(Eo.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Io,1);r.onupgradeneeded=()=>$o(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Co,"readwrite"),o=a.objectStore(Co),i=o.get(e);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{l=s.transaction(No,"readwrite");const r=l.objectStore(No).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Fo="/",Oo="tensorflowjs_models",Do="info",_o="model_topology",Mo="weight_specs",Lo="weight_data",zo="model_metadata";function Po(e){return{info:[Oo,e,Do].join(Fo),topology:[Oo,e,_o].join(Fo),weightSpecs:[Oo,e,Mo].join(Fo),weightData:[Oo,e,Lo].join(Fo),modelMetadata:[Oo,e,zo].join(Fo)}}function Bo(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Wo(e){const t=e.split(Fo);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Fo)}class Vo{constructor(e){if(!Ke().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Po(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=go(e),s=no.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(lo)return ro.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Bo(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(lo){const t=ro.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Vo.URL_SCHEME="localstorage://";const Uo=e=>{return Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Vo.URL_SCHEME)?(t=e.slice(Vo.URL_SCHEME.length),new Vo(t)):null;var t};xo.registerSaveRouter(Uo),xo.registerLoadRouter(Uo);class Go{constructor(){oe(Ke().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),oe("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Oo+Fo,n=Fo+Do;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Wo(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Po(e=(t=e).startsWith(Vo.URL_SCHEME)?t.slice(Vo.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Bo(n),r}}const Zo="://";class jo{constructor(){this.managers={}}static getInstance(){return null==jo.instance&&(jo.instance=new jo),jo.instance}static registerManager(e,t){oe(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Zo)&&(e=e.slice(0,e.indexOf(Zo))),oe(e.length>0,(()=>"scheme must not be an empty string."));const n=jo.getInstance();oe(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=jo.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(jo.getInstance().managers)}}function Ho(e){if(-1===e.indexOf(Zo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${jo.getSchemes().join(",")}`);return{scheme:e.split(Zo)[0],path:e.split(Zo)[1]}}async function qo(e,t,n=!1){oe(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=xo.getLoadHandlers(e);oe(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),oe(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=xo.getSaveHandlers(t);oe(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),oe(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=Ho(e).scheme,l=Ho(e).path,u=i===Ho(e).scheme,c=await s.load();n&&u&&await jo.getManager(i).removeModel(l);const d=await o.save(c);return n&&!u&&await jo.getManager(i).removeModel(l),d.modelArtifactsInfo}async function Ko(){const e=jo.getSchemes(),t={};for(const n of e){const e=await jo.getManager(n).listModels();for(const r in e){t[n+Zo+r]=e[r]}}return t}async function Xo(e){const t=Ho(e);return jo.getManager(t.scheme).removeModel(t.path)}async function Yo(e,t){return qo(e,t,!1)}async function Jo(e,t){return qo(e,t,!0)}class Qo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ke().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Fs(e)}}if(Ke().get("IS_BROWSER")){Ke().setPlatform("browser",new Qo);try{jo.registerManager(Vo.URL_SCHEME,new Go)}catch(e){}try{jo.registerManager(Eo.URL_SCHEME,new Ao)}catch(e){}}const ei=()=>n(88658);let ti;class ni{constructor(){this.util=n(7189),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ke().global.fetch?Ke().global.fetch(e,t):(null==ti&&(ti=ei()),ti(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function ri(e,t="float32",n){return t=t||"float32",Ve(e),new ha(e,t,n)}Ke().get("IS_NODE")&&!Ke().get("IS_BROWSER")&&Ke().setPlatform("node",new ni);const si=Ya({cast_:function(e,t){const n=qa(e,"x","cast");if(!Ne(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return za.runKernel(It,r,s)}});const ai=Ya({clone_:function(e){const t={x:qa(e,"x","clone","string_or_numeric")};return za.runKernel(yn,t)}});function oi(e,t=!1){console.log(e.toString(t))}La();function ii(){Ke().set("PROD",!0)}function li(){Ke().set("DEBUG",!0)}function ui(){Ke().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ci(e){Ke().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function di(){za.disposeVariables()}function hi(){return za}function pi(){return za.memory()}function fi(e){return za.profile(e)}function mi(e,t){return za.tidy(e,t)}function gi(e){Fa(e).forEach((e=>e.dispose()))}function yi(e){return za.keep(e)}function bi(e){return za.time(e)}function xi(e){return za.setBackend(e)}function vi(){return za.ready()}function wi(){return za.backendName}function ki(e){za.removeBackend(e)}function Si(e){return za.findBackend(e)}function Ii(e){return za.findBackendFactory(e)}function Ni(e,t,n=1){return za.registerBackend(e,t,n)}function Ci(){return za.backend}function Ti(e,t){Ke().setPlatform(e,t)}fa={buffer:ri,cast:si,clone:ai,print:oi},ma=ci;const $i=Ya({add_:function(e,t){let n=qa(e,"a","add"),r=qa(t,"b","add");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(rt,s)}});const Ei=Ya({floorDiv_:function(e,t){let n=qa(e,"a","floorDiv"),r=qa(t,"b","floorDiv");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(dn,s)}});const Ri=Ya({div_:function(e,t){let n=qa(e,"a","div"),r=qa(t,"b","div");if([n,r]=Ea(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ei(n,r);const s={a:n,b:r};return za.runKernel(Yt,s,{})}});const Ai=Ya({mul_:function(e,t){let n=qa(e,"a","mul"),r=qa(t,"b","mul");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(Yn,s)}});const Fi=Ya({abs_:function(e){const t=qa(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return za.runKernel($t,e)}{const e={x:t};return za.runKernel(et,e)}}});const Oi=Ya({acos_:function(e){const t={x:qa(e,"x","acos")};return za.runKernel(tt,t)}});const Di=Ya({acosh_:function(e){const t={x:qa(e,"x","acosh")};return za.runKernel(nt,t)}});const _i=Ya({addN_:function(e){oe(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),oe(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>qa(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!he(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return za.runKernel(st,r)}});const Mi=Ya({all_:function(e,t=null,n=!1){const r={x:qa(e,"x","all","bool")},s={axis:t,keepDims:n};return za.runKernel(at,r,s)}});const Li=Ya({any_:function(e,t=null,n=!1){const r={x:qa(e,"x","any","bool")},s={axis:t,keepDims:n};return za.runKernel(ot,r,s)}});const zi=Ya({argMax_:function(e,t=0){const n={x:qa(e,"x","argMax")},r={axis:t};return za.runKernel(it,n,r)}});const Pi=Ya({argMin_:function(e,t=0){const n={x:qa(e,"x","argMin")},r={axis:t};return za.runKernel(lt,n,r)}});const Bi=Ya({asin_:function(e){const t={x:qa(e,"x","asin")};return za.runKernel(ut,t)}});const Wi=Ya({asinh_:function(e){const t={x:qa(e,"x","asinh")};return za.runKernel(ct,t)}});const Vi=Ya({atan_:function(e){const t={x:qa(e,"x","atan")};return za.runKernel(dt,t)}});const Ui=Ya({atan2_:function(e,t){let n=qa(e,"a","atan2"),r=qa(t,"b","atan2");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(pt,s)}});const Gi=Ya({atanh_:function(e){const t={x:qa(e,"x","atanh")};return za.runKernel(ht,t)}});function Zi(e,t,n,r,s="NHWC",a){return qi(e,[...t,e[3]],n,a,r,null,null,sl(s))}function ji(e,t,n,r,s,a,o="channelsLast"){const[i,l]=Yi(t);let u;if("channelsLast"===o)u=[i,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[i,l,e[1],e[1]]}return qi(e,u,n,r,s,a,!1,o)}function Hi(e,t,n,r,s,a,o="NDHWC"){const[i,l,u]=Ji(t);let c,d;if("NDHWC"===o)d="channelsLast",c=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",c=[i,l,u,e[1],e[1]]}return Ki(e,c,n,r,s,!1,d,a)}function qi(e,t,n,r,s,a,o=!1,i="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c]=e}const[h,p,,f]=t,[m,g]=Yi(n),[y,b]=Yi(r),x=Qi(h,y),v=Qi(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,r,s,a,o,i,l){let u,c,d;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Xi(e,t,n));const a=e[0],o=e[1],i=el((a-t+2*r)/n+1,s),l=el((o-t+2*r)/n+1,s);return[i,l]}([t,n],a,r,e,i);c=s[0],d=s[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),i=Math.max(0,(d-1)*s+o-n),l=Math.floor(e/2),h=e-l,p=Math.floor(i/2);u={top:l,bottom:h,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),d=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=el((t-a+h+p)/r+1,i),d=el((n-o+f+m)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:d}}(s,u,c,m,g,x,v,a,i),I=o?f*d:f;let N;return"channelsFirst"===i?N=[l,I,k,S]:"channelsLast"===i&&(N=[l,k,S,I]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:d,outHeight:k,outWidth:S,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function Ki(e,t,n,r,s,a=!1,o="channelsLast",i){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c,d]=e}const[p,f,m,,g]=t,[y,b,x]=Ji(n),[v,w,k]=Ji(r),S=Qi(p,v),I=Qi(f,w),N=Qi(m,k),{padInfo:C,outDepth:T,outHeight:$,outWidth:E}=function(e,t,n,r,s,a,o,i,l,u,c){let d,h,p,f;"valid"===e&&(e=0);if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=Xi(e,t[0],r[0]));const o=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(o[n]=el((e[n]-t[n]+2*s)/r[n]+1,a));return o}([t,n,r,1],[i,l,u],1,[s,a,o],e,c);h=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/o);const e=(h-1)*s+i-t,c=(p-1)*a+l-n,m=(f-1)*o+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);d={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(s,u,c,d,y,b,x,S,I,N,i),R=a?g*h:g;let A;return"channelsFirst"===o?A=[l,R,T,$,E]:"channelsLast"===o&&(A=[l,T,$,E,R]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:T,outHeight:$,outWidth:E,outChannels:R,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Xi(e,t,n,r=1){const s=Qi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Yi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ji(e){return"number"==typeof e?[e,e,e]:e}function Qi(e,t){return t<=1?e:e+(e-1)*(t-1)}function el(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function tl(e){const[t,n,r]=Yi(e);return 1===t&&1===n&&1===r}function nl(e,t){return tl(e)||tl(t)}function rl(e){return Yi(e).every((e=>e>0))}function sl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function al(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)oe(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{oe(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const ol=Ya({reshape_:function(e,t){const n={x:qa(e,"x","reshape","string_or_numeric")},r={shape:t};return za.runKernel(br,n,r)}});const il=Ya({avgPool_:function(e,t,n,r,s){const a=qa(e,"x","avgPool","float32");oe(nl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=a,i=!1;3===a.rank&&(i=!0,o=ol(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),al("avgPool",r,s);const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=za.runKernel(ft,l,u);return c=si(c,a.dtype),i?ol(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ll=Ya({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const o=qa(e,"x","avgPool3d","float32");let i=o,l=!1;4===o.rank&&(l=!0,i=ol(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),oe("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),oe("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),al("avgPool3d",r,s);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let d=za.runKernel(gt,u,c);return d=si(d,i.dtype),l?ol(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ul=Ya({concat_:function(e,t=0){oe(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ka(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ai(n[0]);const r=n,s={axis:t};return za.runKernel(Et,r,s)}});const cl=Ya({matMul_:function(e,t,n=!1,r=!1){let s=qa(e,"a","matMul"),a=qa(t,"b","matMul");[s,a]=Ea(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return za.runKernel(bt,o,i)}});const dl=Ya({sigmoid_:function(e){const t={x:qa(e,"x","sigmoid","float32")};return za.runKernel(Mr,t)}});const hl=Ya({slice_:function(e,t,n){const r=qa(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return za.runKernel(Fr,s,a)}});const pl=Ya({tanh_:function(e){const t={x:qa(e,"x","tanh","float32")};return za.runKernel(rs,t)}});const fl=Ya({basicLSTMCell_:function(e,t,n,r,s,a){const o=qa(e,"forgetBias","basicLSTMCell"),i=qa(t,"lstmKernel","basicLSTMCell"),l=qa(n,"lstmBias","basicLSTMCell"),u=qa(r,"data","basicLSTMCell"),c=qa(s,"c","basicLSTMCell"),d=qa(a,"h","basicLSTMCell"),h=ul([u,d],1),p=cl(h,i),f=$i(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=hl(f,[0,0],y),x=hl(f,[0,g],y),v=hl(f,[0,2*g],y),w=hl(f,[0,3*g],y),k=$i(Ai(dl(b),pl(x)),Ai(c,dl($i(o,v))));return[k,Ai(pl(k),dl(w))]}});const ml=Ya({batchToSpaceND_:function(e,t,n){const r=qa(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));oe(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),oe(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),oe(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return za.runKernel(xt,a,o)}});const gl=Ya({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const o=qa(e,"x","batchNorm"),i=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),oe(i.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:function(e){let t;return t=0===e.rank||1===e.rank?ol(e,[1,1,1,e.size]):2===e.rank?ol(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ol(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:u,offset:c,mean:i,variance:l},h={varianceEpsilon:a},p=za.runKernel(hn,d,h);return ol(p,o.shape)}});const yl=Ya({batchNorm2d_:function(e,t,n,r,s,a){const o=qa(e,"x","batchNorm"),i=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),oe(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),oe(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),oe(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),gl(o,i,l,c,u,a)}});const bl=Ya({batchNorm3d_:function(e,t,n,r,s,a){const o=qa(e,"x","batchNorm"),i=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),oe(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),oe(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),oe(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),gl(o,i,l,c,u,a)}});const xl=Ya({batchNorm4d_:function(e,t,n,r,s,a){const o=qa(e,"x","batchNorm"),i=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),oe(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),oe(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),oe(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),gl(o,i,l,c,u,a)}});const vl=Ya({bincount_:function(e,t,n){const r=qa(e,"x","bincount"),s=qa(t,"weights","bincount");oe("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return za.runKernel(vt,a,o)}});const wl=Ya({bitwiseAnd_:function(e,t){const n=qa(e,"x","bitwiseAnd"),r=qa(t,"y","bitwiseAnd");if(!he(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return za.runKernel(wt,s)}});const kl=Ya({broadcastArgs_:function(e,t){const n=qa(e,"s0","broadcastArgs","int32"),r=qa(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return za.runKernel(St,s)}});const Sl=Ya({broadcastTo_:function(e,t){let n=qa(e,"broadcastTo","x");const r=n.shape;if(Ve(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ol(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ai(n);const o={x:n},i={reps:a};return za.runKernel(ss,o,i)}});const Il=Ya({ceil_:function(e){const t={x:qa(e,"x","ceil","float32")};return za.runKernel(Nt,t)}});function Nl(e,t,n){Ve(e);const r={shape:e,value:t,dtype:n=n||Fe(t)};return za.runKernel(ln,{},r)}const Cl=Ya({clipByValue_:function(e,t,n){const r=qa(e,"x","clipByValue");if(oe(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Nl(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return za.runKernel(Ct,s,a)}});const Tl=Ya({concat1d_:function(e){return ul(e,0)}});const $l=Ya({concat2d_:function(e,t){return ul(e,t)}});const El=Ya({concat3d_:function(e,t){return ul(e,t)}});const Rl=Ya({concat4d_:function(e,t){return ul(e,t)}});const Al=Ya({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=qa(e,"x","conv2d","float32"),l=qa(t,"filter","conv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=ol(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),al("conv2d",r,o);const d="NHWC"===s?u.shape[3]:u.shape[1];oe(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),oe(nl(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),oe(rl(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),oe(rl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=za.runKernel(Rt,h,p);return c?ol(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Fl=Ya({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const i=qa(e,"x","conv1d"),l=qa(t,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=ol(i,[1,i.shape[0],i.shape[1]])),oe(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),oe(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),al("conv1d",r,o),oe(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),oe(nl(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),oe(rl(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),oe(rl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),oe("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const d=ol(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=ol(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Al(h,d,[1,n],r,"NHWC",[1,a],o);return ol(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Ol=Ya({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",o){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,l=t,u=!1;3===t.rank&&(u=!0,l=ol(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),oe(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),oe(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),oe(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],d="NHWC"===a?l.shape[3]:l.shape[1];oe(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),oe(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),al("conv2dDerInput",s,o);const h={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=za.runKernel(Ft,h,p);return u?ol(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Dl=Ya({conv2dTranspose_:function(e,t,n,r,s,a){const o=qa(e,"x","conv2dTranspose"),i=qa(t,"filter","conv2dTranspose");return Ol(n,o,i,r,s,"NHWC",a)}});const _l=Ya({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=qa(e,"x","conv3d"),i=qa(t,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=ol(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),oe(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),oe(l.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),oe(nl(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),oe("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),oe(rl(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),oe(rl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:i},d={strides:n,pad:r,dataFormat:s,dilations:a},h=za.runKernel(Ot,c,d);return u?ol(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Ml=Ya({conv3DBackpropInput_:function(e,t,n,r,s){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=ol(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=o.shape[4];oe(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),oe(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),oe(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),oe(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),oe(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},d={pad:s,strides:r,inputShape:a},h=za.runKernel(_t,c,d);return i?ol(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Ll=Ya({conv3dTranspose_:function(e,t,n,r,s){const a=qa(e,"x","conv3dTranspose"),o=qa(t,"filter","conv3dTranspose");return Ml(n,a,o,r,s)}});const zl=Ya({cos_:function(e){const t={x:qa(e,"x","cos","float32")};return za.runKernel(Mt,t)}});const Pl=Ya({cosh_:function(e){const t={x:qa(e,"x","cosh","float32")};return za.runKernel(Lt,t)}});const Bl=Ya({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:qa(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return za.runKernel(zt,s,a)}});const Wl=Ya({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:qa(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return za.runKernel(Pt,s,a)}});const Vl=Ya({denseBincount_:function(e,t,n,r=!1){const s=qa(e,"x","denseBincount"),a=qa(t,"weights","denseBincount");oe("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),oe(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return za.runKernel(Wt,o,i)}});const Ul=Ya({depthToSpace_:function(e,t,n="NHWC"){const r=qa(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];oe(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),oe(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),oe(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),oe(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},l={blockSize:t,dataFormat:n};return za.runKernel(Vt,i,l)}});const Gl=Ya({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=qa(e,"x","depthwiseConv2d","float32"),l=qa(t,"filter","depthwiseConv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=ol(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const d="NHWC"===s?u.shape[3]:u.shape[1];oe(d===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`)),al("depthwiseConv2d",r,o);const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=za.runKernel(Ut,h,p);return c?ol(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Zl=Ya({diag_:function(e){const t={x:qa(e,"x","diag")};return za.runKernel(jt,t)}});const jl=Ya({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const o=qa(e,"x","dilation2d"),i=qa(t,"filter","dilation2d");oe(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),oe(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),oe("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=o,u=!1;3===o.rank&&(l=ol(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0),oe(l.shape[3]===i.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`));const c={x:l,filter:i},d={strides:n,pad:r,dilations:s},h=za.runKernel(Ht,c,d);return u?ol(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});function Hl(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function ql(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Kl(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===a)r[n-s-1]=o;else if(1===o)r[n-s-1]=a;else{if(a!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}const Xl=Ya({equal_:function(e,t){let n=qa(e,"a","equal","string_or_numeric"),r=qa(t,"b","equal","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(nn,s)}});const Yl=Ya({where_:function(e,t,n){const r=qa(t,"a","where"),s=qa(n,"b","where"),a=qa(e,"condition","where","bool"),o=Kl(Kl(a.shape,r.shape),s.shape),i={condition:Sl(a,o),t:Sl(r,o),e:Sl(s,o)};return za.runKernel(Rr,i)}});const Jl=Ya({zerosLike_:function(e){const t={x:qa(e,"x","zerosLike")};return za.runKernel(hs,t)}});const Ql=Ya({divNoNan_:function(e,t){let n=qa(e,"a","div"),r=qa(t,"b","div");[n,r]=Ea(n,r);const s=Ri(n,r),a=Jl(s),o=Xl(r,a);return Yl(o,a,s)}});const eu=Ya({dot_:function(e,t){const n=qa(e,"t1","dot"),r=qa(t,"t2","dot");oe(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(oe(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=ol(n,[1,-1]),t=ol(r,[-1,1]),s=cl(e,t);return ol(s,[])}if(1===n.rank&&2===r.rank){const e=ol(n,[1,-1]),t=ol(r,[r.shape[0],r.shape[1]]),s=cl(e,t);return ol(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ol(r,[-1,1]),t=cl(n,e);return ol(t,[t.size])}{const e=ol(r,[r.shape[0],r.shape[1]]);return cl(n,e)}}});const tu=Ya({einsum_:function(e,...t){const n=t.map(((e,t)=>qa(e,`tensors${t}`,"einsum"))),r={equation:e};return za.runKernel(Jt,n,r)}});const nu=Ya({elu_:function(e){const t={x:qa(e,"x","elu","float32")};return za.runKernel(Qt,t)}});const ru=Ya({ensureShape_:function(e,t){const n=qa(e,"x","ensureShape","string_or_numeric");if(!de(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const su=Ya({erf_:function(e){let t=qa(e,"x","erf");oe("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=si(t,"float32"));const n={x:t};return za.runKernel(tn,n)}});function au(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ou(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function iu(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function lu(e,t){return ou(e,t.map((e=>1)),t)}function uu(e,t,n){oe(au(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function cu(e,t){if(au(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function du(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function hu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const pu=Ya({max_:function(e,t=null,n=!1){const r={x:qa(e,"x","max")},s={reductionIndices:t,keepDims:n};return za.runKernel(zn,r,s)}});const fu=Ya({min_:function(e,t=null,n=!1){const r={x:qa(e,"x","min")},s={axis:t,keepDims:n};return za.runKernel(jn,r,s)}});const mu=Ya({pow_:function(e,t){let n=qa(e,"base","pow"),r=qa(t,"exp","pow");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(lr,s)}});function gu(e,t){if((Qs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qa(e,[],[],t)}const yu=Ya({sqrt_:function(e){const t={x:qa(e,"x","sqrt","float32")};return za.runKernel(zr,t)}});const bu=Ya({square_:function(e){const t=qa(e,"x","square");return za.runKernel("Square",{x:t},{})}});const xu=Ya({sum_:function(e,t=null,n=!1){let r=qa(e,"x","sum");"bool"===r.dtype&&(r=si(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return za.runKernel(Pr,s,a)}});function vu(e,t,n=null){if(0===e.rank)return Fi(e);if(1!==e.rank&&null===n)return vu(ol(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return xu(Fi(e),n);if(t===1/0)return pu(Fi(e),n);if(t===-1/0)return fu(Fi(e),n);if("euclidean"===t||2===t)return yu(xu(mu(Fi(e),gu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return pu(xu(Fi(e),n[0]),n[1]-1);if(t===1/0)return pu(xu(Fi(e),n[1]),n[0]);if(t===-1/0)return fu(xu(Fi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return yu(xu(bu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const wu=Ya({norm_:function(e,t="euclidean",n=null,r=!1){const s=vu(e=qa(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ve(n,e.shape);a=lu(s.shape,t)}return ol(s,a)}});const ku=Ya({euclideanNorm_:function(e,t=null,n=!1){return wu(e,"euclidean",t,n)}});const Su=Ya({exp_:function(e){const t={x:qa(e,"x","exp")};return za.runKernel(rn,t)}});const Iu=Ya({expandDims_:function(e,t=0){const n=qa(e,"x","expandDims","string_or_numeric");oe(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return za.runKernel(sn,r,s)}});const Nu=Ya({expm1_:function(e){const t={x:qa(e,"x","expm1")};return za.runKernel(an,t)}});const Cu=Ya({tile_:function(e,t){const n=qa(e,"x","tile","string_or_numeric");oe(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return za.runKernel(ss,r,s)}});const Tu=Ya({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ri([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const o=ol(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Cu(Iu(o,0),[n[0],1,1]);if(2===n.length)return Cu(Iu(Iu(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Cu(Iu(Iu(Iu(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const $u=Ya({floor_:function(e){const t={x:qa(e,"x","floor","float32")};return za.runKernel(cn,t)}});const Eu=Ya({gather_:function(e,t,n=0,r=0){const s={x:qa(e,"x","gather"),indices:qa(t,"indices","gather","int32")},a={axis:n,batchDims:r};return za.runKernel(pn,s,a)}});const Ru=Ya({greater_:function(e,t){let n=qa(e,"a","greater","string_or_numeric"),r=qa(t,"b","greater","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(mn,s)}});const Au=Ya({greaterEqual_:function(e,t){let n=qa(e,"a","greaterEqual","string_or_numeric"),r=qa(t,"b","greaterEqual","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(gn,s)}});const Fu=Ya({imag_:function(e){const t={input:qa(e,"input","imag")};return za.runKernel(xn,t)}});const Ou=Ya({isFinite_:function(e){const t={x:qa(e,"x","isFinite")};return za.runKernel(vn,t)}});const Du=Ya({isInf_:function(e){const t={x:qa(e,"x","isInf")};return za.runKernel(wn,t)}});const _u=Ya({isNaN_:function(e){const t={x:qa(e,"x","isNaN")};return za.runKernel(kn,t)}});const Mu=Ya({leakyRelu_:function(e,t=.2){const n={x:qa(e,"x","leakyRelu")},r={alpha:t};return za.runKernel(Sn,n,r)}});const Lu=Ya({less_:function(e,t){let n=qa(e,"a","less","string_or_numeric"),r=qa(t,"b","less","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(In,s)}});const zu=Ya({lessEqual_:function(e,t){let n=qa(e,"a","lessEqual","string_or_numeric"),r=qa(t,"b","lessEqual","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Nn,s)}});function Pu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return za.runKernel(Cn,{},r)}const Bu=Ya({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=qa(e,"x","localResponseNormalization");oe(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),oe(pe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=ol(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:o},u={depthRadius:t,bias:n,alpha:r,beta:s},c=za.runKernel(_n,l,u);return i?ol(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Wu=Ya({log_:function(e){const t={x:qa(e,"x","log","float32")};return za.runKernel(Tn,t)}});const Vu=Ya({log1p_:function(e){const t={x:qa(e,"x","log1p")};return za.runKernel($n,t)}});function Uu(e){return oe(Oe(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=qa(t,"x","tf.grad","string_or_numeric"),s=null!=n?qa(n,"dy","tf.grad"):null;return za.tidy((()=>{const{value:t,grads:n}=za.gradients((()=>e(r)),[r],s);return null!=s&&ie(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ku(n),n[0]}))}}function Gu(e){return oe(Oe(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{oe(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ka(t,"args","tf.grads","string_or_numeric"),s=null!=n?qa(n,"dy","tf.grads"):null;return za.tidy((()=>{const{value:t,grads:n}=za.gradients((()=>e(...r)),r,s);return null!=s&&ie(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ku(n),n}))}}function Zu(e){return oe(Oe(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{oe(t instanceof ga,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),oe(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=za.gradients((()=>e(t)),[t],n);return Ku(r),{grad:r[0],value:s}}}function ju(e){return oe(Oe(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{oe(Array.isArray(t)&&t.every((e=>e instanceof ga)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),oe(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=za.gradients((()=>e(...t)),t,n);return null!=n&&ie(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ku(r.grads),r}}function Hu(e,t){oe(Oe(e),(()=>"The f passed in variableGrads(f) must be a function")),oe(null==t||Array.isArray(t)&&t.every((e=>e instanceof ba)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in za.registeredVariables)t.push(za.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),oe(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:o}=za.gradients(e,t,null,!0);oe(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),oe(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:a,grads:i}}function qu(e){return za.customGrad(e)}function Ku(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const Xu=Ya({neg_:function(e){const t={x:qa(e,"x","neg")};return za.runKernel(Jn,t)}});const Yu=Ya({softplus_:function(e){const t={x:qa(e,"x","softplus")};return za.runKernel(Lr,t)}});const Ju=Ya({logSigmoid_:function(e){const t=qa(e,"x","logSigmoid");return qu((e=>({value:Xu(Yu(Xu(e))),gradFunc:t=>Ai(t,dl(Xu(e)))})))(t)}});const Qu=Ya({sub_:function(e,t){let n=qa(e,"a","sub"),r=qa(t,"b","sub");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(ts,s)}});const ec=Ya({logSoftmax_:function(e,t=-1){const n=qa(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=qu(((e,n)=>{const r=pu(e,t,!0),s=Qu(e,r),a=Qu(si(s,"float32"),Wu(xu(Su(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Su(r);return Qu(e,Ai(xu(e,t,!0),s))}}}));return r(n)}});const tc=Ya({logSumExp_:function(e,t=null,n=!1){const r=qa(e,"x","logSumExp"),s=ve(t,r.shape),a=pu(r,s,!0),o=Qu(r,a),i=Su(o),l=xu(i,s),u=Wu(l),c=$i(ol(a,u.shape),u);if(n){const e=lu(c.shape,s);return ol(c,e)}return c}});const nc=Ya({logicalAnd_:function(e,t){const n=qa(e,"a","logicalAnd","bool"),r=qa(t,"b","logicalAnd","bool");Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(En,s)}});const rc=Ya({logicalNot_:function(e){const t={x:qa(e,"x","logicalNot","bool")};return za.runKernel(Rn,t)}});const sc=Ya({logicalOr_:function(e,t){const n=qa(e,"a","logicalOr","bool"),r=qa(t,"b","logicalOr","bool");Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(An,s)}});const ac=Ya({logicalXor_:function(e,t){const n=qa(e,"a","logicalXor","bool"),r=qa(t,"b","logicalXor","bool");return Kl(n.shape,r.shape),nc(sc(e,t),rc(nc(e,t)))}}),oc=2147483648;const ic=Ya({searchSorted_:function(e,t,n="left"){const r=qa(e,"sortedSequence","searchSorted"),s=qa(t,"values","searchSorted"),a=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],i=ol(r,[-1,a]),l=ol(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ue(l.shape)>=oc)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=oc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const u={sortedSequence:i,values:l},c={side:n};return za.runKernel(Er,u,c)}});function lc(e,t){return ic(e,t,"left")}const uc=Ya({maxPool_:function(e,t,n,r,s){const a=qa(e,"x","maxPool");let o=a,i=!1;3===a.rank&&(i=!0,o=ol(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),oe(nl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),al("maxPool",r,s);const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=za.runKernel(Bn,l,u);return i?ol(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const cc=Ya({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const o=qa(e,"x","maxPool3d");let i=o,l=!1;4===o.rank&&(l=!0,i=ol(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),oe("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),al("maxPool3d",r,s);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=za.runKernel(Vn,u,c);return l?ol(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const dc=Ya({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:qa(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=za.runKernel(Gn,a,o);return{result:i[0],indexes:i[1]}}});const hc=Ya({maximum_:function(e,t){let n=qa(e,"a","maximum"),r=qa(t,"b","maximum");[n,r]=Ea(n,r),"bool"===n.dtype&&(n=si(n,"int32"),r=si(r,"int32")),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Pn,s)}});const pc=Ya({mean_:function(e,t=null,n=!1){const r={x:qa(e,"x","mean")},s={axis:t,keepDims:n};return za.runKernel(Zn,r,s)}});function fc(e,t="float32"){if(Ve(e),"complex64"===t){const t=fc(e,"float32"),n=fc(e,"float32");return Ja(t,n)}const n=Be(ue(e),t);return za.makeTensor(n,e,t)}function mc(e,t="float32"){if(Ve(e),"complex64"===t){const t=mc(e,"float32"),n=fc(e,"float32");return Ja(t,n)}const n=Pe(ue(e),t);return za.makeTensor(n,e,t)}function gc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=qa(e,"x","meshgrid",e instanceof ga?e.dtype:"float32");if(void 0===t)return[r];let s=qa(t,"y","meshgrid",t instanceof ga?t.dtype:"float32");const a=ue(r.shape),o=ue(s.shape);return"xy"===n?(r=ol(r,[1,-1]),s=ol(s,[-1,1]),[cl(mc([o,1],r.dtype),r),cl(s,mc([1,a],s.dtype))]):(r=ol(r,[-1,1]),s=ol(s,[1,-1]),[cl(r,mc([1,o],r.dtype)),cl(mc([a,1],s.dtype),s)])}const yc=Ya({minimum_:function(e,t){let n=qa(e,"a","minimum"),r=qa(t,"b","minimum");[n,r]=Ea(n,r),"bool"===n.dtype&&(n=si(n,"int32"),r=si(r,"int32")),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Hn,s)}});const bc=Ya({mirrorPad_:function(e,t,n){oe("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=qa(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");oe(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)oe(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),oe(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return za.runKernel(qn,o,a)}});const xc=Ya({mod_:function(e,t){let n=qa(e,"a","mod"),r=qa(t,"b","mod");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(Kn,s)}});const vc=Ya({moments_:function(e,t=null,n=!1){const r=ve(t,(e=qa(e,"x","moments")).shape),s=pc(e,r,n);let a=s.shape;n||(a=lu(s.shape,r));const o=bu(Qu(si(e,"float32"),ol(s,a)));return{mean:s,variance:pc(o,r,n)}}});const wc=Ya({multiRNNCell_:function(e,t,n,r){const s=qa(t,"data","multiRNNCell"),a=Ka(n,"c","multiRNNCell"),o=Ka(r,"h","multiRNNCell");let i=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](i,a[t],o[t]);l.push(n[0]),l.push(n[1]),i=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});const kc=Ya({multinomial_:function(e,t,n,r=!1){const s=qa(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?ol(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=za.runKernel(Xn,i,l);return 1===o?ol(u,[u.size]):u}});const Sc=Ya({notEqual_:function(e,t){let n=qa(e,"a","notEqual","string_or_numeric"),r=qa(t,"b","notEqual","string_or_numeric");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Qn,s)}});const Ic=Ya({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:qa(e,"indices","oneHot","int32")},o={dtype:s,depth:t,onValue:n,offValue:r};return za.runKernel(sr,a,o)}});const Nc=Ya({onesLike_:function(e){const t={x:qa(e,"x","onesLike")};return za.runKernel(rr,t)}});const Cc=Ya({outerProduct_:function(e,t){const n=qa(e,"v1","outerProduct"),r=qa(t,"v2","outerProduct");oe(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=ol(n,[-1,1]),a=ol(r,[1,-1]);return cl(s,a)}});const Tc=Ya({pad_:function(e,t,n=0){const r=qa(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return za.runKernel(or,a,s)}});const $c=Ya({pad1d_:function(e,t,n=0){return oe(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Tc(e,[t],n)}});const Ec=Ya({pad2d_:function(e,t,n=0){return oe(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tc(e,t,n)}});const Rc=Ya({pad3d_:function(e,t,n=0){return oe(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tc(e,t,n)}});const Ac=Ya({pad4d_:function(e,t,n=0){return oe(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tc(e,t,n)}});const Fc=Ya({spaceToBatchND_:function(e,t,n){const r=qa(e,"x","spaceToBatchND");oe(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),oe(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),oe(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return za.runKernel(Br,s,a)}});const Oc=Ya({pool_:function(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=qa(e,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=ol(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(nl(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=ji(l.shape,t,a,s,r),d=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t])),l=t.map(((e,t)=>[r[t],i[t]])),u=t.map(((e,t)=>[0,o[t]]));return[l,u]}([c.inHeight,c.inWidth],d,h),g=p?r:"valid",y=p?l:Fc(l,d,f),b=("avg"===n?()=>il(y,t,a,g,o):()=>uc(y,t,a,g,o))(),x=p?b:ml(b,d,m);return u?ol(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const Dc=Ya({prelu_:function(e,t){const n={x:qa(e,"x","prelu"),alpha:qa(t,"alpha","prelu")};return za.runKernel(ur,n)}});const _c=Ya({prod_:function(e,t=null,n=!1){let r=qa(e,"x","prod");"bool"===r.dtype&&(r=si(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return za.runKernel(cr,s,a)}});const Mc=Ya({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>qa(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:qa(t,"paramsDenseValues","raggedGather"),indices:qa(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},o=za.runKernel(dr,s,a);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Lc=Ya({raggedRange_:function(e,t,n){const r=qa(e,"starts","raggedRange"),s={starts:r,limits:qa(t,"limits","raggedRange",r.dtype),deltas:qa(n,"deltas","raggedRange",r.dtype)},a=za.runKernel(hr,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const zc=Ya({raggedTensorToTensor_:function(e,t,n,r,s){const a=qa(e,"shape","raggedTensorToTensor","int32"),o=qa(t,"values","raggedTensorToTensor"),i={shape:a,values:o,defaultValue:qa(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map(((e,t)=>qa(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return za.runKernel(pr,i,l)}});const Pc=Ya({rand_:function(e,t,n){Ve(e);const r=ue(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return za.makeTensor(s,e,n)}});var Bc=n(53775);const Wc=.001,Vc=.1;function Uc(e,t,n){return null==n&&(n=Gc()),Zc(e,t,((e,t)=>Kc(e,t,n)))}function Gc(){return 32===za.backend.floatPrecision()?Wc:Vc}function Zc(e,t,n){let r=!0;if((Qs(e)||Qs(t))&&(r=!1),Qs(e)&&Qs(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Za(e),r=Za(t);if(!he(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Qs(e)?e:ea(e),a=Qs(t)?t:ea(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function jc(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Hc(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ee(e)||Ee(e[0])||Ee(t)||Ee(t[0])?Zc(e,n,((e,t)=>e==t)):Zc(e,t,((e,t)=>Kc(e,t,0)))}function qc(e,t,n){if(null==n&&(n=Gc()),!Kc(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Kc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Xc(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Yc(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Jc(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Jc(n):e[t]=Ys(n)}return e}function Qc(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function ed(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}class td{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Bc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class nd{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Bc.alea(s.toString()),this.randn=new td(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class rd{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Bc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const sd=Ya({randomGamma_:function(e,t,n=1,r="float32",s){if(Ve(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new nd(t,n,r,s),o=ri(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const ad=Ya({randomNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new td(t,n,r,!1,s),o=ri(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const od=Ya({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return ad(e,0,1,t,n)}});const id=Ya({randomUniform_:function(e,t=0,n=1,r="float32",s){Ve(e);const a=ri(e,r),o=new rd(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const ld=Ya({randomUniformInt_:function(e,t,n,r){return id(e,t,n,"int32",r)}});function ud(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return za.runKernel(fr,{},s)}const cd=Ya({real_:function(e){const t={input:qa(e,"input","real")};return za.runKernel(mr,t)}});const dd=Ya({reciprocal_:function(e){const t={x:qa(e,"x","reciprocal")};return za.runKernel(gr,t)}});const hd=Ya({relu_:function(e){const t={x:qa(e,"x","relu")};return za.runKernel(yr,t)}});const pd=Ya({relu6_:function(e){const t={x:qa(e,"x","relu6")};return za.runKernel(Sr,t)}});const fd=Ya({reverse_:function(e,t){const n={x:qa(e,"x","reverse")},r={dims:t};return za.runKernel(Ir,n,r)}});const md=Ya({reverse1d_:function(e){const t=qa(e,"x","reverse");return oe(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),fd(t,0)}});const gd=Ya({reverse2d_:function(e,t){const n=qa(e,"x","reverse");return oe(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),fd(n,t)}});const yd=Ya({reverse3d_:function(e,t){const n=qa(e,"x","reverse");return oe(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),fd(n,t)}});const bd=Ya({reverse4d_:function(e,t){const n=qa(e,"x","reverse");return oe(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),fd(n,t)}});const xd=Ya({round_:function(e){const t={x:qa(e,"x","round")};return za.runKernel(Nr,t)}});const vd=Ya({rsqrt_:function(e){const t={x:qa(e,"x","rsqrt","float32")};return za.runKernel(Cr,t)}});const wd=Ya({selu_:function(e){const t={x:qa(e,"x","selu")};return za.runKernel(Ar,t)}});const kd=Ya({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const i=qa(e,"x","separableConv2d"),l=qa(t,"depthwiseFilter","separableConv2d"),u=qa(n,"pointwiseFilter","separableConv2d");let c=i,d=!1;if(3===i.rank&&(d=!0,c=ol(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");oe(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),oe(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),oe(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),oe(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const h=l.shape[2],p=l.shape[3];oe(u.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`));const f=Gl(c,l,r,s,o,a),m=Al(f,u,1,"valid",o);return d?ol(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Sd=async function(e,t){const n=qa(e,"x","setdiff1d"),r=qa(t,"y","setdiff1d");oe(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),oe(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),oe(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let e=0;e<s.length;e++)o.has(s[e])||i++;const l=new ha([i],n.dtype),u=new ha([i],"int32");for(let e=0,t=0;e<s.length;e++)o.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};const Id=Ya({sign_:function(e){const t={x:qa(e,"x","sign")};return za.runKernel(_r,t)}});const Nd=Ya({sin_:function(e){const t={x:qa(e,"x","sin","float32")};return za.runKernel(Or,t)}});const Cd=Ya({sinh_:function(e){const t={x:qa(e,"x","sinh")};return za.runKernel(Dr,t)}});const Td=Ya({slice1d_:function(e,t,n){const r=qa(e,"x","slice1d");return oe(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),hl(r,[t],[n])}});const $d=Ya({slice2d_:function(e,t,n){const r=qa(e,"x","slice2d");return oe(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),hl(r,t,n)}});const Ed=Ya({slice3d_:function(e,t,n){const r=qa(e,"x","slice3d");return oe(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),hl(r,t,n)}});const Rd=Ya({slice4d_:function(e,t,n){const r=qa(e,"x","slice4d");return oe(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),hl(r,t,n)}});const Ad=Ya({softmax_:function(e,t=-1){const n=qa(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return za.runKernel(Vr,r,s)}});const Fd=Ya({fft_:function(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return za.runKernel(on,t)}});const Od=Ya({ifft_:function(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return za.runKernel(bn,t)}});const Dd=Ya({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ol(e,[n,t]);r=Od(s)}else{const s=[n,2*(t-1)],a=ol(cd(e),[n,t]),o=ol(Fu(e),[n,t]),i=fd(hl(a,[0,1],[n,t-2]),1),l=Ai(fd(hl(o,[0,1],[n,t-2]),1),gu(-1)),u=ul([a,i],1),c=ul([o,l],1),d=ol(Ja(u,c),[s[0],s[1]]);r=Od(d)}if(r=cd(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ol(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const _d=Ya({split_:function(e,t,n=0){const r={x:qa(e,"x","split")},s={numOrSizeSplits:t,axis:n};return za.runKernel(Wr,r,s)}});const Md=Ya({rfft_:function(e,t){oe("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=hl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=ul([e,fc(r)],e.shape.length-1),n=t}else s=e;const a=Jl(s),o=ol(Ja(s,a),[r,n]),i=Fd(o),l=Math.floor(n/2)+1,u=cd(i),c=Fu(i),d=_d(u,[l,n-l],u.shape.length-1),h=_d(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,ol(Ja(d[0],h[0]),p)}});const Ld=Ya({squaredDifference_:function(e,t){let n=qa(e,"a","squaredDifference"),r=qa(t,"b","squaredDifference");[n,r]=Ea(n,r),Kl(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(qr,s,{})}});const zd=Ya({squeeze_:function(e,t){const n=qa(e,"x","squeeze","string_or_numeric");return ol(n,we(n.shape,t).newShape)}});const Pd=Ya({stack_:function(e,t=0){const n=Ka(e,"tensors","stack","string_or_numeric");oe(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&oe(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return za.runKernel(ar,r,s)}});const Bd=Ya({step_:function(e,t=0){const n={x:qa(e,"x","step")},r={alpha:t};return za.runKernel(ps,n,r)}});const Wd=Ya({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,l=0){const u={x:qa(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return za.runKernel(Yr,u,c)}});const Vd=Ya({tan_:function(e){const t={x:qa(e,"x","tan","float32")};return za.runKernel(ns,t)}});function Ud(e,t){le(e);const n=Za(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qa(e,null,n,t)}function Gd(e,t,n){if(le(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Za(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qa(e,t,r,n)}function Zd(e,t,n){if(le(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Za(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function jd(e,t,n){if(le(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Za(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function Hd(e,t,n){if(le(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Za(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function qd(e,t,n){if(le(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Za(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Qa(e,t=t||r,r,n)}function Kd(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Xd(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Kd(n,t,e)}function Yd(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let e=s;e<a;++e)o*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:ue(t.shape)/i,sliceSize:o,strides:[..._e(n.slice(0,s)),1],outputSize:ue(n)}}const Jd=Ya({tensorScatterUpdate_:function(e,t,n){const r=qa(e,"tensor","tensorScatterupdate"),s=qa(t,"indices","tensorScatterupdate","int32"),a=qa(n,"updates","tensorScatterupdate");if(Xd(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const o={tensor:r,indices:s,updates:a};return za.runKernel($r,o,{})}});const Qd=Ya({topk_:function(e,t=1,n=!0){const r=qa(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,l]=za.runKernel(as,a,o);return{values:i,indices:l}}});const eh=Ya({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new td(t,n,r,!0,s),o=ri(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const th=Ya({unique_:function(e,t=0){const n=qa(e,"x","unique","string_or_numeric");oe(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=za.runKernel(ls,r,s);return{values:a,indices:o}}});const nh=Ya({unsortedSegmentSum_:function(e,t,n){const r=qa(e,"x","unsortedSegmentSum"),s=qa(t,"segmentIds","unsortedSegmentSum","int32");oe(pe(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return za.runKernel(cs,a,o)}});const rh=Ya({unstack_:function(e,t=0){const n=qa(e,"x","unstack","string_or_numeric");oe(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return za.runKernel(us,r,s)}});function sh(e,t){return ic(e,t,"right")}function ah(e,t=!0,n,r){return za.makeVariable(e,t,n,r)}function oh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ri(e,"int32"),s=ri([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),o=t*e.length;s.values.set(a,o)}return s.toTensor()}const ih=async function(e){const t=qa(e,"condition","whereAsync","bool"),n=await t.data(),r=oh(t.shape,n);return e!==t&&t.dispose(),r};const lh=async function(e,t,n){const r=qa(e,"tensor","boolMask"),s=qa(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;oe(o>0,(()=>"mask cannot be scalar")),ie(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+o;e++)l*=i[e];const u=i.slice(0,a).concat([l],i.slice(a+o)),c=ol(r,u),d=ol(s,[-1]),h=await ih(d),p=zd(h,[1]),f=Eu(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f};const uh=Ya({transpose_:function(e,t,n){const r=qa(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),oe(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{oe(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?mi((()=>{let e=cd(r),t=Fu(r);return e=za.runKernel(is,{x:e},a),t=za.runKernel(is,{x:t},a),n&&(t=Xu(t)),Ja(e,t)})):za.runKernel(is,s,a)}});const ch=Ya({movingAverage_:function(e,t,n,r,s=!0){const a=qa(e,"v","movingAverage"),o=qa(t,"x","movingAverage"),i=qa(n,"decay","movingAverage");Ra(a,o),oe(he(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=gu(1),u=Qu(l,i);let c=Ai(Qu(o,a),u);if(s){oe(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=qa(r,"step","movingAverage");c=Ri(c,Qu(l,mu(i,e)))}return $i(a,c)}});const dh=Ya({scatterND_:function(e,t,n){Ve(n);const r=qa(e,"indices","scatterND","int32"),s=qa(t,"updates","scatterND");Xd(s,r,n);const a={indices:r,updates:s},o={shape:n};return za.runKernel(Tr,a,o)}});const hh=Ya({sparseToDense_:function(e,t,n,r=0){Ve(n);const s=qa(e,"sparseIndices","sparseToDense","int32"),a=qa(t,"sparseValues","sparseToDense","string_or_numeric"),o=qa(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},l={outputShape:n};return za.runKernel(Hr,i,l)}});const ph=Ya({gatherND_:function(e,t){const n=qa(t,"indices","gatherND","int32"),r={params:qa(e,"x","gatherND","string_or_numeric"),indices:n};return za.runKernel(fn,r)}});const fh=Ya({dropout_:function(e,t,n,r){const s=qa(e,"x","dropout");if(oe("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),oe(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ga?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(he(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,i=Ri($u($i(id(a,0,1,"float32",r),o)),o);return Ai(s,i)}});function mh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function gh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Ud(s,"float32")}const yh=async function(e,t,n=1){const r=qa(e,"predictions","inTopK"),s=qa(t,"targets","inTopK");oe(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),oe(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),ie(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];oe(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[l,u]=[o.length/a,a],c=ke("bool",l);for(let e=0;e<l;e++){const t=e*u,r=o.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),eo(c,s.shape,"bool")};const bh=Ya({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=ol(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ol(t,[1,t.shape[0],t.shape[1],t.shape[2]])),oe(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),oe(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),oe(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];oe(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),oe(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),al("conv2dDerFilter",s,o);const d={x:i,dy:l},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return za.runKernel(At,d,h)}});function xh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ai(e,Bd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function vh(e,t){let n=t;const r=ql(e.shape,t.shape);return r.length>0&&(n=xu(n,r)),ol(n,e.shape)}function wh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return hd(e);if("elu"===t)return nu(e);if("relu6"===t)return pd(e);if("prelu"===t)return Dc(e,n);if("leakyrelu"===t)return Mu(e,r);if("sigmoid"===t)return dl(e);throw new Error(`Unknown fused activation ${t}.`)}const kh=(e,t)=>!(e>0)||"linear"===t;const Sh=Ya({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===kh(za.state.gradientDepth,l)){oe("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=Al(e,t,n,r,s,a,o);return null!=i&&(d=$i(d,i)),wh(d,l,u,c)}const d=qa(e,"x","conv2d","float32"),h=qa(t,"filter","conv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=ol(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),oe(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),al("fused conv2d",r,o);const m="NHWC"===s?p.shape[3]:p.shape[1];oe(h.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`)),oe(nl(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=qi(p.shape,h.shape,n,a,r,o);let y,b;if(null!=i&&(y=qa(i,"bias","fused conv2d"),[y]=Ea(y,d),"NHWC"===s?Kl(g.outShape,y.shape):(oe(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),oe(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(oe(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)oe(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Kl(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=qa(u,"prelu weights","fused conv2d")}const x=(e,t)=>{oe("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[o,i,u,c]=t,d=xh(e,u,l);oe(tl(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ol(i.shape,d,o,n,r),bh(i,d,o.shape,n,r)];if(null!=c){const e=vh(c,d);h.push(e)}return h},v={x:p,filter:h,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};if(null==i){const e=qu(((e,t,n)=>{let r=za.runKernel(ys,v,w);return n([t,e,r]),f&&(r=ol(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,h)}{const e=qu(((e,t,n,r)=>{let s=za.runKernel(ys,v,w);return r([t,e,s,n]),f&&(s=ol(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,h,y)}}});const Ih=Ya({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],o){let i=e;3===e.rank&&(i=ol(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ol(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:l},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return za.runKernel(Gt,u,c)}});const Nh=Ya({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],o){let i=t,l=!1;3===t.rank&&(l=!0,i=ol(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},d=za.runKernel(Zt,u,c);return l?ol(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Ch=Ya({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===kh(za.state.gradientDepth,l)){let d=Gl(e,t,n,r,s,a,o);return null!=i&&(d=$i(d,i)),wh(d,l,u,c)}const d=qa(e,"x","depthwiseConv2d","float32"),h=qa(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=ol(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),oe(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),oe(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==a&&(a=[1,1]),oe(nl(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),al("fused depthwiseConv2d",r,o);const m=qi(p.shape,h.shape,n,a,r,o,!0);let g,y;null!=i&&(g=qa(i,"bias","fused conv2d"),[g]=Ea(g,d),Kl(m.outShape,g.shape)),null!=u&&(y=qa(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{oe(tl(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,u,c]=t,d=xh(e,u,l),h=Nh(i.shape,d,s,n,r,a,o),p=Ih(i,d,s.shape,n,r,a,o);if(null!=c){return[h,p,vh(g,d)]}return[h,p]},x={x:p,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};if(null==i){const e=qu(((e,t,n)=>{let r=za.runKernel(bs,x,v);return n([t,e,r]),f&&(r=ol(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,h)}{const e=qu(((e,t,n,r)=>{let s=za.runKernel(bs,x,v);return r([t,e,s,n]),f&&(s=ol(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,h,g)}}});const Th=Ya({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===kh(za.state.gradientDepth,a)){let l=cl(e,t,n,r);return null!=s&&(l=$i(l,s)),wh(l,a,o,i)}let l=qa(e,"a","fused matMul"),u=qa(t,"b","fused matMul");[l,u]=Ea(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ue(f),y=ue(m);oe(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Kl(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),x=ol(l,n?[g,c,h]:[g,h,c]),v=ol(u,r?[y,p,d]:[y,d,p]);let w,k;null!=s&&(w=qa(s,"bias","fused matMul"),[w]=Ea(w,l),Kl(b,w.shape)),null!=o&&(k=qa(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,i,l,u]=t,c=xh(ol(e,l.shape),l,a);let d,h;if(n||r?!n&&r?(d=cl(c,i,!1,!1),h=cl(c,o,!0,!1)):n&&!r?(d=cl(i,c,!1,!0),h=cl(o,c,!1,!1)):(d=cl(i,c,!0,!0),h=cl(c,o,!0,!0)):(d=cl(c,i,!1,!0),h=cl(o,c,!0,!1)),null!=s){return[d,h,vh(u,c)]}return[d,h]},I={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};if(null==s){const e=qu(((e,t,n)=>{const r=za.runKernel(gs,I,N);return n([e,t,r]),{value:ol(r,b),gradFunc:S}}));return e(x,v)}{const e=qu(((e,t,n,r)=>{const s=za.runKernel(gs,I,N);return r([e,t,s,n]),{value:ol(s,b),gradFunc:S}}));return e(x,v,w)}}});const $h=Ya({hammingWindow_:function(e){return gh(e,.54,.46)}});const Eh=Ya({hannWindow_:function(e){return gh(e,.5,.5)}});const Rh=Ya({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(hl(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=ul([hl(e,a,t-r),Nl([r],s)]);o.push(i),a+=n}return 0===o.length?Gd([],[0,t]):ol(ul(o),[o.length,t])}});const Ah=Ya({stft_:function(e,t,n,r,s=Eh){null==r&&(r=mh(t));const a=Rh(e,t,n),o=Ai(a,s(t));return Md(o,r)}});const Fh=Ya({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=qa(e,"image","cropAndResize"),i=qa(t,"boxes","cropAndResize","float32"),l=qa(n,"boxInd","cropAndResize","int32"),u=i.shape[0];oe(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),oe(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`)),oe(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`)),oe(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),oe(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),oe("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:l},d={method:s,extrapolationValue:a,cropSize:r};return za.runKernel(Bt,c,d)}});const Oh=Ya({flipLeftRight_:function(e){const t=qa(e,"image","flipLeftRight","float32");oe(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return za.runKernel(un,n,{})}});const Dh=Ya({grayscaleToRGB_:function(e){const t=qa(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];oe(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),oe(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Cu(t,s)}});const _h=Ya({rgbToGrayscale_:function(e){const t=qa(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];oe(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),oe(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=si(t,"float32"),o=Ud([.2989,.587,.114]);let i;switch(t.rank){case 2:i=tu("ij,j->i",a,o);break;case 3:i=tu("ijk,k->ij",a,o);break;case 4:i=tu("ijkl,l->ijk",a,o);break;case 5:i=tu("ijklm,m->ijkl",a,o);break;case 6:i=tu("ijklmn,n->ijklm",a,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Iu(i,-1),si(i,s)}});const Mh=Ya({rotateWithOffset_:function(e,t,n=0,r=.5){const s=qa(e,"image","rotateWithOffset","float32");oe(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return za.runKernel(ms,a,o)}});function Lh(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),oe(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),oe(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),oe(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),oe(1===t.rank,(()=>"scores must be a 1D tensor")),oe(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),oe(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const zh=Ya({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=qa(e,"boxes","nonMaxSuppression","float32"),o=qa(t,"scores","nonMaxSuppression","float32"),i=Lh(a,o,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return za.runKernel(er,{boxes:a,scores:o},l)}});function Ph(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||Bh)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Bh(e,t){return e>t?1:e<t?-1:0}function Wh(e,t,n,r,s){return Gh(e,t,n,r,s,0)}function Vh(e,t,n,r,s,a){return Gh(e,t,n,r,s,0,!1,a,!0)}function Uh(e,t,n,r,s,a){return Gh(e,t,n,r,s,a,!0)}function Gh(e,t,n,r,s,a,o=!1,i=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Hh);const c=a>0?-.5/a:0,d=[],h=[];for(;d.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let n=d.length-1;n>=o;--n){const o=Zh(e,a,d[n]);if(o>=r){i=!0;break}if(t.score=t.score*jh(r,c,o),t.score<=s)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(a),h.push(t.score)):t.score>s&&Ph(u,t,Hh))}const p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return o&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function Zh(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(i-a)*(l-o),f=(d-u)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,d),b=Math.min(l,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function jh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Hh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const qh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=qa(e,"boxes","nonMaxSuppressionAsync"),o=qa(t,"scores","nonMaxSuppressionAsync"),i=Lh(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:d}=Wh(u,c,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Ud(d,"int32")};const Kh=Ya({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=qa(e,"boxes","nonMaxSuppression"),i=qa(t,"scores","nonMaxSuppression"),l=Lh(o,i,n,r,s,a),u={boxes:o,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},d=za.runKernel(nr,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}});const Xh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=qa(e,"boxes","nonMaxSuppressionAsync"),i=qa(t,"scores","nonMaxSuppressionAsync"),l=Lh(o,i,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Uh(c,d,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ud(h,"int32"),selectedScores:Ud(p)}};const Yh=Ya({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=qa(e,"boxes","nonMaxSuppression"),i=qa(t,"scores","nonMaxSuppression"),l=Lh(o,i,n,r,s,null),u={boxes:o,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},d=za.runKernel(tr,u,c);return{selectedIndices:d[0],validOutputs:d[1]}}});const Jh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=qa(e,"boxes","nonMaxSuppressionAsync"),i=qa(t,"scores","nonMaxSuppressionAsync"),l=Lh(o,i,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Vh(h,p,u,c,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ud(f,"int32"),validOutputs:gu(m,"int32")}};const Qh=Ya({resizeBilinear_:function(e,t,n=!1,r=!1){const s=qa(e,"images","resizeBilinear");oe(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),oe(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),oe(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=ol(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=za.runKernel(wr,i,l);return o?ol(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const ep=Ya({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=qa(e,"images","resizeNearestNeighbor");oe(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),oe(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),oe("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),oe(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=ol(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=za.runKernel(xr,i,l);return o?ol(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const tp=Ya({threshold_:function(e,t="binary",n=!1,r=.5){const s=qa(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,i,l,u,c=Ai(Ud([r]),255);if(oe(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),oe(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),oe("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),oe("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,i,l]=_d(s,[1,1,1],-1);const e=Ai(o,.2989),t=Ai(i,.587),n=Ai(l,.114);u=$i($i(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,s,a,o,i,l=Ud([-1]),u=Ud([0]),c=Ud([0]);for(let d=0;d<e.size-1;d++){n=hl(e,0,d+1),r=hl(e,d+1),o=Ri(xu(n),t),i=Ri(xu(r),t);const h=xu(Ai(n,ud(0,n.size)));s=Ri(h,xu(n));const p=Nl(r.shape,n.size),f=$i(ud(0,r.size),p),m=Ai(r,f);a=Ri(xu(m),xu(r));const g=Qu(s,a),y=Qu(s,a),b=Ai(o,i);c=Ai(Ai(b,g),y);const x=Ru(c,u);u=Yl(x,c,u),l=Yl(x,Ud([d]),l)}return l}(vl(si(xd(u),"int32"),eo([]),256),a)}const d=n?zu(u,c):Ru(u,c);return si(Ai(d,255),"int32")}});const np=Ya({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=qa(e,"image","transform","float32"),i=qa(t,"transforms","transform","float32");oe(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),oe(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),oe(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:o,transforms:i},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return za.runKernel(os,l,u)}});const rp=Ya({bandPart_:function(e,t,n){const r=qa(e,"a","bandPart");oe(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);let i,l;"number"==typeof t?(oe(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),oe(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),i=qa(t<0?a:t,"numLower","bandPart")):(oe("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Yl(Lu(t,0),a,yc(t,a))),"number"==typeof n?(oe(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),oe(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),l=qa(n<0?o:n,"numUpper","bandPart")):(oe("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=Yl(Lu(n,0),o,yc(n,o)));const u=ol(ud(0,a,1,"int32"),[-1,1]),c=ud(0,o,1,"int32"),d=Qu(u,c),h=nc(zu(d,i),Au(d,Xu(l))),p=fc([a,o],r.dtype);return ol(Pd(rh(ol(r,[-1,a,o])).map((e=>Yl(h,e,p)))),s)}});const sp=Ya({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,oe(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)oe(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=_d(e,e.shape[0],0).map((e=>zd(e,[0])));oe(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(za.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ai(xu(Ai(n[r],e)),n[r]);e=Qu(e,t)}return Ri(e,wu(e,"euclidean"))})));return t?Pd(n,0):n}});function ap(e,t=!1){return za.tidy((()=>{oe(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Tu(n),a=ai(e);const o=Gd([[1]],[1,1]);let i=ai(o);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=i,u=s;[i,a,s]=za.tidy((()=>{const t=hl(a,[e,e],[n-e,1]),l=wu(t),u=hl(a,[e,e],[1,1]),c=Yl(Ru(u,0),Gd([[-1]]),Gd([[1]])),d=Qu(u,Ai(c,l)),h=Ri(t,d);i=1===h.shape[0]?ai(o):ul([o,hl(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Xu(Ri(cl(c,d),l)),f=hl(a,[e,0],[n-e,r]),m=Ai(p,i),g=uh(i);if(0===e)a=Qu(f,cl(m,cl(g,f)));else{const t=Qu(f,cl(m,cl(g,f)));a=ul([hl(a,[0,0],[e,r]),t],0)}const y=uh(m),b=hl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Qu(b,cl(cl(b,i),y));else{const t=Qu(b,cl(cl(b,i),y));s=ul([hl(s,[0,0],[n,e]),t],1)}return[i,a,s]})),gi([t,l,u])}return!t&&n>r&&(s=hl(s,[0,0],[n,r]),a=hl(a,[0,0],[r,r])),[s,a]}))}const op=Ya({qr_:function(e,t=!1){if(oe(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ap(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=rh(ol(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=ap(e,t);s.push(n),a.push(r)}));return[ol(Pd(s,0),e.shape),ol(Pd(a,0),e.shape)]}}});var ip;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ip||(ip={}));const lp=Ya({computeWeightedLoss_:function(e,t,n=ip.SUM_BY_NONZERO_WEIGHTS){const r=qa(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=qa(t,"weights","computeWeightedLoss"));const a=null==s?r:Ai(r,s);if(n===ip.NONE)return a;if(n===ip.SUM)return xu(a);if(n===ip.MEAN){if(null==s)return pc(a);{const e=r.size/s.size,t=Ri(xu(a),xu(s));return e>1?Ri(t,gu(e)):t}}if(n===ip.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ri(xu(a),gu(r.size));{const e=Ai(s,mc(r.shape)),t=si(xu(Sc(e,gu(0))),"float32");return Ri(xu(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const up=Ya({absoluteDifference_:function(e,t,n,r=ip.SUM_BY_NONZERO_WEIGHTS){const s=qa(e,"labels","absoluteDifference"),a=qa(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=qa(n,"weights","absoluteDifference")),ie(s.shape,a.shape,"Error in absoluteDifference: ");const i=Fi(Qu(s,a));return lp(i,o,r)}});const cp=Ya({cosineDistance_:function(e,t,n,r,s=ip.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","cosineDistance"),o=qa(t,"predictions","cosineDistance");let i=null;null!=r&&(i=qa(r,"weights","cosineDistance")),ie(a.shape,o.shape,"Error in cosineDistance: ");const l=gu(1),u=Qu(l,xu(Ai(a,o),n,!0));return lp(u,i,s)}});const dp=Ya({hingeLoss_:function(e,t,n,r=ip.SUM_BY_NONZERO_WEIGHTS){let s=qa(e,"labels","hingeLoss");const a=qa(t,"predictions","hingeLoss");let o=null;null!=n&&(o=qa(n,"weights","hingeLoss")),ie(s.shape,a.shape,"Error in hingeLoss: ");const i=gu(1);s=Qu(Ai(gu(2),s),i);const l=hd(Qu(i,Ai(s,a)));return lp(l,o,r)}});const hp=Ya({huberLoss_:function(e,t,n,r=1,s=ip.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","huberLoss"),o=qa(t,"predictions","huberLoss");let i=null;null!=n&&(i=qa(n,"weights","huberLoss")),ie(a.shape,o.shape,"Error in huberLoss: ");const l=gu(r),u=Fi(Qu(o,a)),c=yc(u,l),d=Qu(u,c),h=$i(Ai(gu(.5),bu(c)),Ai(l,d));return lp(h,i,s)}});const pp=Ya({logLoss_:function(e,t,n,r=1e-7,s=ip.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","logLoss"),o=qa(t,"predictions","logLoss");let i=null;null!=n&&(i=qa(n,"weights","logLoss")),ie(a.shape,o.shape,"Error in logLoss: ");const l=gu(1),u=gu(r),c=Xu(Ai(a,Wu($i(o,u)))),d=Ai(Qu(l,a),Wu($i(Qu(l,o),u))),h=Qu(c,d);return lp(h,i,s)}});const fp=Ya({meanSquaredError_:function(e,t,n,r=ip.SUM_BY_NONZERO_WEIGHTS){const s=qa(e,"labels","meanSquaredError"),a=qa(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=qa(n,"weights","meanSquaredError")),ie(s.shape,a.shape,"Error in meanSquaredError: ");const i=Ld(s,a);return lp(i,o,r)}});const mp=Ya({sigmoidCrossEntropy_:function(e,t,n,r=0,s=ip.SUM_BY_NONZERO_WEIGHTS){let a=qa(e,"multiClassLabels","sigmoidCrossEntropy");const o=qa(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=qa(n,"weights","sigmoidCrossEntropy")),ie(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=gu(r),t=gu(1),n=gu(.5);a=$i(Ai(a,Qu(t,e)),Ai(n,e))}const l=function(e,t){const n=qa(e,"labels","sigmoidCrossEntropyWithLogits"),r=qa(t,"logits","sigmoidCrossEntropyWithLogits");ie(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=hd(r),a=Ai(r,n),o=Vu(Su(Xu(Fi(r))));return $i(Qu(s,a),o)}(a,o);return lp(l,i,s)}});const gp=Ya({softmaxCrossEntropy_:function(e,t,n,r=0,s=ip.SUM_BY_NONZERO_WEIGHTS){let a=qa(e,"onehotLabels","softmaxCrossEntropy");const o=qa(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=qa(n,"weights","softmaxCrossEntropy")),ie(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=gu(r),t=gu(1),n=gu(a.shape[1]);a=$i(Ai(a,Qu(t,e)),Ri(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=qu(((e,t,r)=>{const s=tc(t,[n],!0),a=Qu(si(t,"float32"),s);r([e,a]);const o=Xu(Ai(a,e));return{value:xu(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=lu(e.shape,[n]);return[Ai(ol(e,a),Qu(si(r,"float32"),Su(s))),Ai(ol(e,a),Qu(Su(s),si(r,"float32")))]}}}));return r(e,t)}(a,o);return lp(l,i,s)}});const yp=Ya({sparseFillEmptyRows_:function(e,t,n,r){const s=qa(e,"indices","sparseFillEmptyRows","int32"),a=qa(t,"values","sparseFillEmptyRows"),o=qa(n,"denseShape","sparseFillEmptyRows","int32"),i=qa(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:s,values:a,denseShape:o,defaultValue:i},u=za.runKernel(Ur,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const bp=Ya({sparseReshape_:function(e,t,n){const r=qa(e,"inputIndices","sparseReshape","int32"),s=qa(t,"inputShape","sparseReshape","int32"),a=qa(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=za.runKernel(Gr,o);return{outputIndices:i[0],outputShape:i[1]}}});const xp=Ya({sparseSegmentMean_:function(e,t,n){const r=qa(e,"data","sparseSegmentMean"),s=qa(t,"indices","sparseSegmentMean","int32"),a=qa(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return za.runKernel(Zr,o)}});const vp=Ya({sparseSegmentSum_:function(e,t,n){const r=qa(e,"data","sparseSegmentSum"),s=qa(t,"indices","sparseSegmentSum","int32"),a=qa(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return za.runKernel(jr,o)}});const wp=Ya({stringNGrams_:function(e,t,n,r,s,a,o,i){const l=qa(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=qa(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:u},h=za.runKernel(Jr,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}});const kp=Ya({stringSplit_:function(e,t,n=!0){const r=qa(e,"input","stringSplit","string"),s=qa(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=za.runKernel(Qr,o,a);return{indices:i[0],values:i[1],shape:i[2]}}});const Sp=Ya({stringToHashBucketFast_:function(e,t){const n=qa(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return za.runKernel(es,s,r)}});const Ip=Ya({staticRegexReplace_:function(e,t,n,r=!0){const s=qa(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return za.runKernel(Xr,{x:s},a)}}),Np={fft:Fd,ifft:Od,rfft:Md,irfft:Dd},Cp={hammingWindow:$h,hannWindow:Eh,frame:Rh,stft:Ah},Tp={flipLeftRight:Oh,grayscaleToRGB:Dh,resizeNearestNeighbor:ep,resizeBilinear:Qh,rgbToGrayscale:_h,rotateWithOffset:Mh,cropAndResize:Fh,nonMaxSuppression:zh,nonMaxSuppressionAsync:qh,nonMaxSuppressionWithScore:Kh,nonMaxSuppressionWithScoreAsync:Xh,nonMaxSuppressionPadded:Yh,nonMaxSuppressionPaddedAsync:Jh,threshold:tp,transform:np},$p={bandPart:rp,gramSchmidt:sp,qr:op},Ep={absoluteDifference:up,computeWeightedLoss:lp,cosineDistance:cp,hingeLoss:dp,huberLoss:hp,logLoss:pp,meanSquaredError:fp,sigmoidCrossEntropy:mp,softmaxCrossEntropy:gp},Rp={sparseFillEmptyRows:yp,sparseReshape:bp,sparseSegmentMean:xp,sparseSegmentSum:vp},Ap={stringNGrams:wp,stringSplit:kp,stringToHashBucketFast:Sp,staticRegexReplace:Ip},Fp=new Map,Op=new Map;class Dp{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class _p{constructor(){this.classNameMap={}}static getMap(){return null==_p.instance&&(_p.instance=new _p),_p.instance}static register(e){_p.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Mp(e,t,n){oe(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),oe("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),oe(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return _p.register(e),Fp.set(r,e),Op.set(e,r),e}function Lp(e){return Op.has(e)?Op.get(e):e.className}class zp extends Dp{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return gi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Hu(e,t)}dispose(){null!=this.iterations_&&gi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:gu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(zp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Pp extends zp{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=za.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:mi((()=>Jl(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:mi((()=>Jl(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;mi((()=>{const e=$i(Ai(a,this.rho),Ai(bu(s),1-this.rho)),t=Ai(Ri(yu($i(o,this.epsilon)),yu($i(a,this.epsilon))),s),n=$i(Ai(o,this.rho),Ai(bu(t),1-this.rho));a.assign(e),o.assign(n);const i=$i(Ai(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(gi(this.accumulatedGrads.map((e=>e.variable))),gi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}class Bp extends zp{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:mi((()=>Nl(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;mi((()=>{const e=$i(a,bu(s));a.assign(e);const t=$i(Ai(Ri(s,yu($i(e,za.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&gi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}class Wp extends zp{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],mi((()=>{this.accBeta1=gu(t).variable(),this.accBeta2=gu(n).variable()})),null==r&&(this.epsilon=za.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);mi((()=>{const n=Qu(1,this.accBeta1),r=Qu(1,this.accBeta2);t.forEach(((t,s)=>{const a=za.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:mi((()=>Jl(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:mi((()=>Jl(a).variable(false)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=$i(Ai(i,this.beta1),Ai(o,1-this.beta1)),c=$i(Ai(l,this.beta2),Ai(bu(o),1-this.beta2)),d=Ri(u,n),h=Ri(c,r);i.assign(u),l.assign(c);const p=$i(Ai(Ri(d,$i(yu(h),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(Ai(this.accBeta1,this.beta1)),this.accBeta2.assign(Ai(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&gi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),mi((()=>{this.accBeta1.assign(mu(this.beta1,this.iterations_+1)),this.accBeta2.assign(mu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}class Vp extends zp{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],mi((()=>{this.iteration=gu(0).variable(),this.accBeta1=gu(t).variable()})),null==r&&(this.epsilon=za.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);mi((()=>{const n=Qu(1,this.accBeta1),r=Ri(-this.learningRate,$i(Ai(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=za.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Jl(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Jl(a).variable(false)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=$i(Ai(i,this.beta1),Ai(o,1-this.beta1)),c=Ai(l,this.beta2),d=Fi(o),h=hc(c,d);i.assign(u),l.assign(h);const p=$i(Ai(Ri(r,n),Ri(u,$i(h,this.epsilon))),a);a.assign(p)})),this.iteration.assign($i(this.iteration,1)),this.accBeta1.assign(Ai(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&gi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Up extends zp{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=za.registeredVariables[t];mi((()=>{const e=$i(Ai(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=yi(gu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Gp extends Up{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=gu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:mi((()=>Jl(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&mi((()=>{let e;const t=$i(Ai(this.m,s),a);e=this.useNesterov?$i(Ai(this.c,$i(a,Ai(t,this.m))),r):$i(Ai(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&gi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Zp extends zp{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=za.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:mi((()=>Jl(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:mi((()=>Jl(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:mi((()=>Jl(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;mi((()=>{const e=$i(Ai(o,this.decay),Ai(bu(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=$i(Ai(t,this.decay),Ai(a,1-this.decay)),l=Ri(Ai(a,this.learningRate),yu(Qu(e,$i(bu(s),this.epsilon)))),u=$i(Ai(i,this.momentum),l);o.assign(e),t.assign(s),i.assign(u);const c=Qu(r,u);r.assign(c)}else{const e=$i(Ai(o,this.decay),Ai(bu(a),1-this.decay)),t=$i(Ai(i,this.momentum),Ri(Ai(a,this.learningRate),yu($i(e,this.epsilon))));o.assign(e),i.assign(t);const n=Qu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&gi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&gi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&gi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const jp=[Pp,Bp,Wp,Vp,Gp,Zp,Up];function Hp(e){return new Promise((e=>setTimeout(e))).then(e)}class qp{constructor(e){if(!Ke().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(qp.URL_SCHEME)&&(e=e.slice(qp.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=no.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=po(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Hp((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Hp((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:go(e)}}}}qp.URL_SCHEME="downloads://";class Kp{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=mo(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>ho(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=ho(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Xp(e){return new Kp(e)}function Yp(e,t,n,r){!function(e){oe(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){oe(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),oe(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),oe(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Jp(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ke().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Yp(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Yp(s,t.onProgress,.5,1)}async function Qp(e,t="",n,r){return ef((e=>Jp(e,{requestInit:r})))(e,t,n)}function ef(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=to[l]*ue(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=u}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let h=0;return l.forEach((e=>{const n=t[e].paths.length,r=new no(c.slice(h,h+n));a[e].forEach((e=>{const t=oo(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),h+=n})),d}}xo.registerSaveRouter((e=>Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qp.URL_SCHEME)?function(e="model"){return new qp(e)}(e.slice(qp.URL_SCHEME.length)):null));class tf{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(oe("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ke().platform.fetch,oe(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&oe(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=po(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=no.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:go(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return mo(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=yo(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[a,await Jp(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function nf(e){return null!=e.match(tf.URL_SCHEME_REGEX)}tf.URL_SCHEME_REGEX=/^https?:\/\//;const rf=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>nf(e))):nf(e),n)return sf(e,t)}return null};function sf(e,t){return new tf(e,t)}function af(e,t){return sf(e,t)}xo.registerSaveRouter(rf),xo.registerLoadRouter(rf);class of{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class lf{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class uf{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function cf(e,t,n,r){return new uf(df(...arguments))}function df(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new of(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new of({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new of({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function hf(e){return new lf(e)}function pf(e){return new lf(e)}const ff=Ya({confusionMatrix_:function(e,t,n){const r=qa(e,"labels","confusionMatrix"),s=qa(t,"predictions","confusionMatrix");oe(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),oe(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),oe(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),oe(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),oe(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=Ic(si(r,"int32"),n),o=Ic(si(s,"int32"),n),i=uh(a),l=cl(i,o);return si(l,"int32")}});let mf,gf=!1;function yf(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=Ss(fs,za.backendName)){const n={pixels:e},r={numChannels:t};return za.runKernel(fs,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(o)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||i){if(null==mf)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");mf=new OffscreenCanvas(1,1).getContext("2d")}else mf=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});mf.canvas.width=l,mf.canvas.height=u,mf.drawImage(e,0,0,l,u),c=mf.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return Zd(d,[u,l,t],"int32")}function bf(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function xf(e,t=3){let n=null;if(Ke().getBool("WRAP_TO_IMAGEBITMAP")&&bf(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return yf(n,t)}function vf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function wf(e,t){let n=qa(e,"img","toPixels");if(!(e instanceof ga)){const e=n;n=si(e,"int32"),e.dispose()}vf(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=o[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){if(!gf){null!=Ss(Xt,za.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),gf=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function kf(e,t,n){let r=qa(e,"img","draw");if(!(e instanceof ga)){const e=r;r=si(e,"int32"),e.dispose()}vf(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};za.runKernel(Xt,s,a)}const Sf=Ya({fromPixels_:yf});function If(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ue(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let e=0;e<s.length-1;++e)o*=s[e];const i=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=i[e],l.push(i[e]);const c=[..._e(e.shape).map((e=>e/u)),1].slice(0,a);return[l,o,u,c]}const Nf=-2,Cf=-1;function Tf(e,t,n){const r=e.shape.length;oe(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),oe(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)oe(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function $f(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ef(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Rf(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Af(e,t,n){return n<=e?n:n-(t-1)}function Ff(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Of(e,t,n,r,s,a,o,i,l){const u=e.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Df(o,l,u,r,e),d=_f(i,l,u,s,e),h=Rf(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Lf(o,r,a,e,t,l),d[t]=zf(i,s,a,e,t,l),h[t]=Mf(a,t,l);return{begin:c,end:d,strides:h}}function Df(e,t,n,r,s){const a=[...s],o=Ff(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=0;else{const o=Af(t,n,s);let i=r[o];e&1<<o&&(i=0),a[s]=i}return a}function _f(e,t,n,r,s){const a=[...s],o=Ff(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=Af(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ee(0,a[e],s[e])}return a}function Mf(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Lf(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=ee(0,o,l-1),o}function zf(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=i>0?ee(0,o,l):ee(-1,o,l-1),o}function Pf(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Bf(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Wf(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{oe(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(oe(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Vf(e,t,n,r,s,a,o,i,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)c&&0!=(1<<e&i)&&d.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Nf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Cf),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[h.beginMask&1<<t,h.endMask&1<<t],a=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const o=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Uf(h.begin[t],0,h.strides[t],r,s,a),h.end[t]=Uf(h.end[t],1,h.strides[t],r,s,a);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&o,f=f&&(0===t&&1===h.strides[t]||o);let i,l=!1;if(h.beginValid&&h.endValid?(i=h.end[t]-h.begin[t],l=!0):n?(i=1,l=!0):o&&r>=0&&(i=h.strides[t]<0?-r:r,l=!0),l){let e;e=0===i||i<0!=h.strides[t]<0?0:Math.trunc(i/h.strides[t])+(i%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Nf&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>h.finalShapeGatherIndices[t]!==Nf)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Uf(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const Gf="4.11.0";class Zf{static sgd(e){return new Up(e)}static momentum(e,t,n=!1){return new Gp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Zp(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Wp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Pp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Vp(e,t,n,r,s)}static adagrad(e,t=.1){return new Bp(e,t)}}const jf=Zf,Hf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function qf(){return new Promise((e=>Hf((()=>e()))))}function Kf(e,t){const n=e[0].length;e.forEach(((e,t)=>{oe(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),oe(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)oe(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Xf(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Yf;function Jf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],o=r[r.length-n.length+s],i=r[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${i}`)}else r[o]=a}return r}function Qf(e){const t={FIRST_DIM_SIZE:Yf.FIRST_DIM_SIZE,VALUE_ROWIDS:Yf.VALUE_ROWIDS,ROW_LENGTHS:Yf.ROW_LENGTHS,ROW_SPLITS:Yf.ROW_SPLITS,ROW_LIMITS:Yf.ROW_LIMITS,ROW_STARTS:Yf.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function em(e){return 0===e.length?0:e[0]===Yf.FIRST_DIM_SIZE?e.length-1:e.length}function tm(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Yf||(Yf={}));const nm=30;function rm(e){return e<=nm?e:De(e,Math.floor(Math.sqrt(e)))}function sm(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function am(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function om(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function im(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function lm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function um(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const cm=1.7580993408473768,dm=1.0507009873554805,hm=.3275911,pm=.254829592,fm=-.284496736,mm=1.421413741,gm=-1.453152027,ym=1.061405429;function bm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function xm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function vm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function wm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function km(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Sm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Im(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Nm(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Cm="->",Tm=/->/g,$m=",",Em="...";function Rm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Tm,"").length)/Cm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Cm}").`);const[r,s]=e.split(Cm);oe(-1===r.indexOf(Em),(()=>`The ellipsis notation ("${Em}") is not supported yet.`));const a=r.split($m),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&t!==$m&&i.push(t)}const l=new Array(a.length);for(let e=0;e<o;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(i.indexOf(a[e][t]))}const u=i.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:i,summedDims:c,idDims:l}}function Am(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Fm(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:oe(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Om(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=_m(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Dm(e){return e.every(((e,t)=>e===t))}function _m(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Mm(e,t,n=0){let r=[];if("number"==typeof t)oe(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);oe(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}oe(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Lm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function zm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Pm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Bm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Wm(e,t){return`size ${e} must be non-negative, not ${t}`}function Vm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Um(e,t){return`Input to reshape is a SparseTensor with ${ue(e)}\n  dense values, but the requested shape requires a multiple of ${ue(t)}. inputShape=${e} outputShape= ${t}`}function Gm(e,t){return`Input to reshape is a tensor with ${ue(e)} dense values, but the requested shape has ${ue(t)}. inputShape=${e} outputShape=${t}`}function Zm(){return"segment ids must be >= 0"}function jm(){return"segment ids are not increasing"}function Hm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function qm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Km(e,t){let n,r=!1;for(e<=nm?(n=e,r=!0):n=De(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=De(e,n+1);return n}function Xm(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ym(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<a;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function Jm(e){try{return e.map((e=>Js(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Qm(e){return e.map((e=>Ys(e)))}!function(){for(const e of jp)Mp(e)}();const eg={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,Bd(si(n,"float32"),-1))}}},tg={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bu(si(n,"float32")),r=yu(Qu(gu(1),t));return Xu(Ri(e,r))}}}},ng={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=yu(Qu(bu(si(n,"float32")),1));return Ri(e,t)}}}},rg={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{let t=e;const r=ql(n.shape,s);return r.length>0&&(t=xu(t,r)),ol(t,n.shape)},b:()=>{let t=e;const n=ql(r.shape,s);return n.length>0&&(t=xu(t,n)),ol(t,r.shape)}}}},sg={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ag={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Jl(n)}}},og={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Jl(n)}}},ig={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,yu(Qu(gu(1),bu(si(n,"float32")))))}}},lg={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=yu($i(gu(1),bu(si(n,"float32"))));return Ri(e,t)}}}},ug={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{const t=$i(bu(n),bu(r));let a=Ai(e,Ri(r,t));const o=ql(n.shape,s);return o.length>0&&(a=xu(a,o)),ol(a,n.shape)},b:()=>{const t=$i(bu(n),bu(r));let a=Xu(Ai(e,Ri(n,t)));const o=ql(r.shape,s);return o.length>0&&(a=xu(a,o)),ol(a,r.shape)}}}},cg={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,$i(bu(si(n,"float32")),1))}}},dg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Qu(gu(1),bu(si(n,"float32"))))}}};const hg=Ya({avgPool3dGrad_:function(e,t,n,r,s,a){const o=qa(e,"dy","avgPool3dGrad"),i=qa(t,"input","avgPool3dGrad");let l=o,u=i,c=!1;4===i.rank&&(c=!0,l=ol(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=ol(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),oe(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),al("avgPool3dGrad",s,a);const d={dy:l,input:u},h={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=za.runKernel(yt,d,h);return c?ol(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),pg={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>hg(e,r,s,a,o,i)}}};const fg=Ya({avgPoolGrad_:function(e,t,n,r,s){const a=qa(e,"dy","avgPoolGrad"),o=qa(t,"input","avgPoolGrad");oe(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,l=a,u=!1;3===o.rank&&(u=!0,i=ol(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=ol(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),oe(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:l,input:i},d={filterSize:n,strides:r,pad:s},h=za.runKernel(mt,c,d);return u?ol(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),mg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>fg(e,r,s,a,o)}}},gg={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>cl(e,s,!1,!1),b:()=>cl(e,r,!0,!1)}:a&&!o?{a:()=>cl(s,e,!1,!0),b:()=>cl(r,e,!1,!1)}:{a:()=>cl(s,e,!0,!0),b:()=>cl(e,r,!0,!0)}:{a:()=>cl(e,s,!1,!0),b:()=>cl(r,e,!0,!1)}}},yg={kernelName:xt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Fc(e,r,s)}}},bg={kernelName:kt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])o[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>xu(e,i,!0)}}},xg={kernelName:It,gradFunc:e=>({x:()=>e.clone()})},vg={kernelName:Nt,gradFunc:e=>({x:()=>Jl(e)})},wg={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Yl(nc(Au(r,s),zu(r,a)),e,Jl(e))}}},kg={kernelName:$t,inputsToSave:["x"],gradFunc:eg.gradFunc},Sg={kernelName:Et,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=ve(s,t[0].shape)[0],o=r.map((e=>e[a]));return _d(e,o,a).map((e=>()=>e))}},Ig={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return oe(tl(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ol(r.shape,e,s,o,i,l),filter:()=>bh(r,e,s.shape,o,i,l)}}},Ng={kernelName:Ft,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Al(e,s,a,o,i,1,l),filter:()=>bh(e,r,s.shape,a,o,i,l)}}};const Cg=Ya({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ol(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=ol(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),oe(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),oe(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),oe(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),oe(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),oe(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},l={strides:r,pad:s,filterShape:n};return za.runKernel(Dt,i,l)}}),Tg={kernelName:Ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;oe(tl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>Ml(o.shape,e,i,s,a),filter:()=>Cg(o,e,i.shape,s,a)}}},$g={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(Xu(Nd(si(n,"float32"))),e)}}},Eg={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(Cd(si(n,"float32")),e)}}},Rg={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=cu([s],r.rank);let n=Wl(e,s,a,!o);return null!=t&&(n=uh(n,t)),n}}}},Ag={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;oe(tl(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[l,u]=t;return oe(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),oe(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),oe(nl(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),al("depthwiseConv2d",a,o),{x:()=>Nh(l.shape,e,u,s,a,i,o),filter:()=>Ih(l,e,u.shape,s,a,i,o)}}},Fg={kernelName:Ht,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>za.runKernel(qt,a,n),filter:()=>za.runKernel(Kt,o,n)}}},Og={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>za.runKernel(en,r)}}},Dg={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ai(Su(Xu(bu(n))),2/Math.sqrt(Math.PI));return{x:()=>Ai(e,r)}}},_g={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,n)}}},Mg={kernelName:sn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ol(e,n.shape)}}},Lg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,Su(n))}}},zg={kernelName:cn,gradFunc:e=>({x:()=>Jl(e)})},Pg={kernelName:dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{const t=Ri(e,si(r,"float32")),a=ql(n.shape,s);return a.length>0?ol(xu(t,a),n.shape):t},b:()=>{let t=Ai(e,si(n,"float32"));const a=ql(r.shape,s);a.length>0&&(t=ol(xu(t,a),r.shape));const o=bu(r);return Xu(Ri(t,si(o,"float32")))}}}},Bg={kernelName:hn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,l=null==i?gu(1):i,u=ql(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const d=Qu(s,a),h=Ai(e,l),p=vd($i(o,gu(r))),f=Ai(Ai(Ai(p,p),p),gu(-.5));return{x:()=>1===a.rank?ol(Ai(Ai(e,Cu(ol(p,[1,1,1,a.shape[0]]),c)),l),s.shape):ol(Ai(Ai(e,p),l),s.shape),mean:()=>{let e=Ai(Ai(p,gu(-1)),h);return 1===a.rank&&(e=xu(e,u)),ol(e,a.shape)},variance:()=>{let e=Ai(Ai(f,d),h);return 1===a.rank&&(e=xu(e,u)),ol(e,a.shape)},scale:()=>{const t=Ai(d,p);let n=Ai(e,t);return 1===a.rank&&(n=xu(n,u)),ol(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=xu(t,u)),ol(t,a.shape)}}}},Wg={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:o}=n,i=ve(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,o=r.slice(0,i),l=o.length,u=r.slice(a,r.length).slice(1),c=u.length,d=Vg(0,l),h=Vg(l+1,l+1+c),p=Ug([o,[s],u]),f=ol(n,p),m=ol(t,[s]),g=Ug([[l],d,h]),y=uh(f,g);let b=nh(y,m,e.shape[i]);const x=du(g);return b=uh(b,x),b};if(1===o){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=Pd(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function Vg(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ug(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Gg={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Jl(n),b:()=>Jl(r)}}},Zg={kernelName:yn,gradFunc:e=>({x:()=>si(e,"float32")})},jg={kernelName:vn,gradFunc:e=>({x:()=>Jl(e)})},Hg={kernelName:wn,gradFunc:e=>({x:()=>Jl(e)})},qg={kernelName:kn,gradFunc:e=>({x:()=>Jl(e)})},Kg={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Ru(r,0);return{x:()=>Yl(a,e,Ai(e,s))}}},Xg={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,$i(n,1))}}},Yg={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,si(n,"float32"))}}},Jg={kernelName:On,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Su(r);return Qu(e,Ai(xu(e,s,!0),t))}}}};const Qg=Ya({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:o};return za.runKernel(Mn,i,l)}}),ey={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>Qg(r,s,e,a,o,i,l)}}};function ty(e,t,n,r){return t.rank<n.rank&&(t=ol(t,lu(t.shape,r))),e.rank<n.rank&&(e=ol(e,lu(e.shape,r))),{x:()=>Ai(e,si(Xl(n,t),e.dtype))}}const ny={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=ty(e,t[1],a,ve(s,a.shape));return{x:()=>o.x()}}},ry={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ai(e,si(Au(n,r),"float32")),b:()=>Ai(e,si(Lu(n,r),"float32"))}}};const sy=Ya({maxPool3dGrad_:function(e,t,n,r,s,a,o){const i=qa(e,"dy","maxPool3dGrad"),l=qa(t,"input","maxPool3dGrad"),u=qa(n,"output","maxPool3dGrad");let c=i,d=l,h=u,p=!1;4===l.rank&&(p=!0,c=ol(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=ol(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=ol(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),oe(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),oe(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),oe(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),al("maxPool3dGrad",a,o);const f={dy:c,input:d,output:h},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=za.runKernel(Un,f,m);return p?ol(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ay={kernelName:Vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>sy(e,r,s,a,o,i,l)}}};const oy=Ya({maxPoolGrad_:function(e,t,n,r,s,a,o){const i=qa(e,"dy","maxPoolGrad"),l=qa(t,"input","maxPoolGrad"),u=qa(n,"output","maxPoolGrad");oe(l.rank===i.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`)),oe(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),oe(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),al("maxPoolGrad",a,o);const c={dy:i,input:l,output:u},d={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return za.runKernel(Wn,c,d)}}),iy={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>oy(e,r,s,a,o,i)}}},ly={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>hl(e,a,r.shape)}}},uy={kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>hl(e,a,r.shape)}}},cy={kernelName:lr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=Kl(a.shape,o.shape);return{a:()=>{const t=si(o,"float32");let n=Ai(e,Ai(t,mu(a,Qu(t,gu(1)))));const r=ql(a.shape,i);return r.length>0&&(n=xu(n,r)),ol(n,a.shape)},b:()=>{const t=Ru(a,0),n=Yl(t,Wu(a),Jl(a));let r=Ai(e,Ai(s,n));const l=ql(o.shape,i);return l.length>0&&(r=xu(r,l)),ol(r,o.shape)}}}};function dy(e,t,n){const r=e.shape.length,s=r-n.length,a=cu(n,r);let o=e;null!=a&&(o=uh(e,a));const i=o.shape.slice(),l=i.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=ol(t,r),a=Bl(e,n,!0,!1),o=Bl(e,n,!0,!0),i=Ai(a,o);return Ai(s,i)}(o.reshape(i),t,s);if(u=u.reshape(o.shape),null!=a){const e=du(a);u=uh(u,e)}return u}const hy={kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ru(n,gu(0)),r=gu(cm),s=gu(dm),a=Ai(e,s),o=Ai(Ai(e,r),Su(si(n,"float32")));return Yl(t,a,o)}}}},py={kernelName:Br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>ml(e,r,s)}}},fy={kernelName:Wr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>ul(e,r)}}};const my=[eg,tg,ng,rg,sg,ag,og,ig,lg,ug,cg,dg,pg,mg,gg,yg,bg,xg,vg,wg,kg,Sg,Ng,Ig,Tg,$g,Eg,Rg,Ag,Fg,{kernelName:Yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{const t=Ri(e,si(r,"float32")),a=ql(n.shape,s);return a.length>0?ol(xu(t,a),n.shape):t},b:()=>{let t=Ai(e,si(n,"float32"));const a=ql(r.shape,s);a.length>0&&(t=ol(xu(t,a),r.shape));const o=bu(r);return Xu(Ri(t,si(o,"float32")))}}}},Og,Dg,_g,Mg,Lg,Pg,zg,Bg,Wg,Gg,Zg,jg,Hg,qg,Kg,Xg,Yg,Jg,ey,ny,ny,ry,ay,iy,{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ve(s,r.shape),o=ue(iu(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=ol(e,t);return Ri(Ai(n,mc(r.shape,"float32")),o)}}}},{kernelName:jn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=ty(e,o,a,ve(s,a.shape));return{x:()=>i.x()}}},{kernelName:Hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ai(e,si(zu(n,r),"float32")),b:()=>Ai(e,si(Ru(n,r),"float32"))}}},ly,{kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{const t=ql(n.shape,s);return t.length>0?ol(xu(e,t),n.shape):e},b:()=>{const t=Ai(e,Xu($u(Ri(n,r)))),a=ql(r.shape,s);return a.length>0?ol(xu(t,a),r.shape):t}}}},{kernelName:Yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{const t=Ai(e,si(r,"float32")),a=ql(n.shape,s);return a.length>0?ol(xu(t,a),n.shape):t},b:()=>{const t=Ai(e,si(n,"float32")),a=ql(r.shape,s);return a.length>0?ol(xu(t,a),r.shape):t}}}},{kernelName:Jn,gradFunc:e=>({x:()=>Xu(e)})},{kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>fc(n.shape,"float32")}}},{kernelName:rr,gradFunc:e=>({x:()=>Jl(e)})},{kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return rh(e,r).map((e=>()=>e))}},uy,uy,cy,{kernelName:ur,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Ru(n,0);return{x:()=>Yl(s,e,Ai(e,r)),alpha:()=>{let t=Yl(s,Jl(e),Ai(e,n));const a=ql(r.shape,e.shape);return a.length>0&&(t=xu(t,a)),ol(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>dy(r,e,a)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Xu(bu(n)))}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ai(zu(n,6),Bd(n));return{x:()=>Ai(e,si(r,"float32"))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,si(Bd(n),"float32"))}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,n.shape)}}},{kernelName:wr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>za.runKernel(kr,s,n)}}},{kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>za.runKernel(vr,s,n)}}},{kernelName:Ir,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ve(r,e.shape);return{x:()=>fd(e,s)}}},{kernelName:Nr,gradFunc:e=>({x:()=>Jl(e)})},{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xu(Ri(e,Ai(mu(n,1.5),2)))}}},{kernelName:Rr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>si(Jl(n),"float32"),t:()=>Ai(e,si(n,e.dtype)),e:()=>Ai(e,si(rc(n),e.dtype))}}},hy,{kernelName:Mr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,Ai(n,Qu(gu(1),n)))}}},{kernelName:_r,gradFunc:e=>({x:()=>Jl(e)})},{kernelName:Or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(zl(si(n,"float32")),e)}}},{kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(Pl(si(n,"float32")),e)}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,l]=Wf(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([i[t],o[t]-i[t]-l[t]]);return{x:()=>Tc(e,u)}}},{kernelName:Vr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Ai(e,r);return{logits:()=>Qu(a,Ai(xu(a,[s],true),r))}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,dl(n))}}},py,py,fy,fy,{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,Ai(yu(si(n,"float32")),2))}}},{kernelName:qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=gu(2);return{a:()=>Ai(e,Ai(s,Qu(n,r))),b:()=>Ai(e,Ai(s,Qu(r,n)))}}},{kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(e,Ai(si(n,"float32"),2))}}},{kernelName:ps,gradFunc:e=>({x:()=>Jl(e)})},{kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kl(n.shape,r.shape);return{a:()=>{let t=e;const r=ql(n.shape,s);return r.length>0&&(t=xu(t,r)),ol(t,n.shape)},b:()=>{let t=e;const n=ql(r.shape,s);return n.length>0&&(t=xu(t,n)),ol(Xu(t),r.shape)}}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ve(a,r.shape).forEach((e=>{s[e]=1}));const o=ol(e,s),i=Ai(o,mc(r.shape,"float32"));return{x:()=>i}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ri(e,bu(zl(n)))}}},{kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ai(Qu(gu(1),bu(n)),e)}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Jl(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=$i(t,hl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=$i(t,hl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=$i(t,hl(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=$i(t,hl(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:is,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=du(s);return{x:()=>uh(e,a)}}},{kernelName:us,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Pd(e,s)}}},{kernelName:cs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=hc(t,Jl(t)),r=Eu(e,n);let s=Au(t,gu(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Iu(s,e+1);s=nc(s,mc(r.shape,"bool"));const o=Jl(r);return Yl(s,r,o)}(e,n)}}},{kernelName:hs,gradFunc:e=>({x:()=>Jl(e)})}];for(const e of my)Ts(e);ya().prototype.abs=function(){return this.throwIfDisposed(),Fi(this)},ya().prototype.acos=function(){return this.throwIfDisposed(),Oi(this)},ya().prototype.acosh=function(){return this.throwIfDisposed(),Di(this)},ya().prototype.add=function(e){return this.throwIfDisposed(),$i(this,e)},ya().prototype.all=function(e,t){return this.throwIfDisposed(),Mi(this,e,t)},ya().prototype.any=function(e,t){return this.throwIfDisposed(),Li(this,e,t)},ya().prototype.argMax=function(e){return this.throwIfDisposed(),zi(this,e)},ya().prototype.argMin=function(e){return this.throwIfDisposed(),Pi(this,e)},ya().prototype.asScalar=function(){return this.throwIfDisposed(),oe(1===this.size,(()=>"The array must have only 1 element.")),ol(this,[])},ya().prototype.asType=function(e){return this.throwIfDisposed(),si(this,e)},ya().prototype.as1D=function(){return this.throwIfDisposed(),ol(this,[this.size])},ya().prototype.as2D=function(e,t){return this.throwIfDisposed(),ol(this,[e,t])},ya().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ol(this,[e,t,n])},ya().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ol(this,[e,t,n,r])},ya().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ol(this,[e,t,n,r,s])},ya().prototype.asin=function(){return this.throwIfDisposed(),Bi(this)},ya().prototype.asinh=function(){return this.throwIfDisposed(),Wi(this)},ya().prototype.atan=function(){return this.throwIfDisposed(),Vi(this)},ya().prototype.atan2=function(e){return this.throwIfDisposed(),Ui(this,e)},ya().prototype.atanh=function(){return this.throwIfDisposed(),Gi(this)},ya().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),il(this,e,t,n,r)},ya().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},ya().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),gl(this,e,t,n,r,s)},ya().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Sl(this,e)},ya().prototype.cast=function(e){return this.throwIfDisposed(),si(this,e)},ya().prototype.ceil=function(){return this.throwIfDisposed(),Il(this)},ya().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Cl(this,e,t)},ya().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ga&&(e=[e]),ul([this,...e],t)},ya().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Fl(this,e,t,n,r,s,a)},ya().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Dl(this,e,t,n,r,s)},ya().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Al(this,e,t,n,r,s,a)},ya().prototype.cos=function(){return this.throwIfDisposed(),zl(this)},ya().prototype.cosh=function(){return this.throwIfDisposed(),Pl(this)},ya().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Bl(this,e,t,n)},ya().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Wl(this,e,t,n)},ya().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},ya().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Gl(this,e,t,n,r,s,a)},ya().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),jl(this,e,t,n,r,s)},ya().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ql(this,e)},ya().prototype.div=function(e){return this.throwIfDisposed(),Ri(this,e)},ya().prototype.dot=function(e){return this.throwIfDisposed(),eu(this,e)},ya().prototype.elu=function(){return this.throwIfDisposed(),nu(this)},ya().prototype.equal=function(e){return this.throwIfDisposed(),Xl(this,e)},ya().prototype.erf=function(){return this.throwIfDisposed(),su(this)},ya().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ku(this,e,t)},ya().prototype.exp=function(){return this.throwIfDisposed(),Su(this)},ya().prototype.expandDims=function(e){return this.throwIfDisposed(),Iu(this,e)},ya().prototype.expm1=function(){return this.throwIfDisposed(),Nu(this)},ya().prototype.fft=function(){return this.throwIfDisposed(),Fd(this)},ya().prototype.flatten=function(){return this.throwIfDisposed(),ol(this,[this.size])},ya().prototype.floor=function(){return this.throwIfDisposed(),$u(this)},ya().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ei(this,e)},ya().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Eu(this,e,t,n)},ya().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Au(this,e)},ya().prototype.greater=function(e){return this.throwIfDisposed(),Ru(this,e)},ya().prototype.ifft=function(){return this.throwIfDisposed(),Od(this)},ya().prototype.irfft=function(){return this.throwIfDisposed(),Dd(this)},ya().prototype.isFinite=function(){return this.throwIfDisposed(),Ou(this)},ya().prototype.isInf=function(){return this.throwIfDisposed(),Du(this)},ya().prototype.isNaN=function(){return this.throwIfDisposed(),_u(this)},ya().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Mu(this,e)},ya().prototype.lessEqual=function(e){return this.throwIfDisposed(),zu(this,e)},ya().prototype.less=function(e){return this.throwIfDisposed(),Lu(this,e)},ya().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Bu(this,e,t,n,r)},ya().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ju(this)},ya().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ec(this,e)},ya().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),tc(this,e,t)},ya().prototype.log=function(){return this.throwIfDisposed(),Wu(this)},ya().prototype.log1p=function(){return this.throwIfDisposed(),Vu(this)},ya().prototype.logicalAnd=function(e){return this.throwIfDisposed(),nc(this,e)},ya().prototype.logicalNot=function(){return this.throwIfDisposed(),rc(this)},ya().prototype.logicalOr=function(e){return this.throwIfDisposed(),sc(this,e)},ya().prototype.logicalXor=function(e){return this.throwIfDisposed(),ac(this,e)},ya().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),cl(this,e,t,n)},ya().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),uc(this,e,t,n,r)},ya().prototype.max=function(e,t){return this.throwIfDisposed(),pu(this,e,t)},ya().prototype.maximum=function(e){return this.throwIfDisposed(),hc(this,e)},ya().prototype.mean=function(e,t){return this.throwIfDisposed(),pc(this,e,t)},ya().prototype.min=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},ya().prototype.minimum=function(e){return this.throwIfDisposed(),yc(this,e)},ya().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),bc(this,e,t)},ya().prototype.mod=function(e){return this.throwIfDisposed(),xc(this,e)},ya().prototype.mul=function(e){return this.throwIfDisposed(),Ai(this,e)},ya().prototype.neg=function(){return this.throwIfDisposed(),Xu(this)},ya().prototype.norm=function(e,t,n){return this.throwIfDisposed(),wu(this,e,t,n)},ya().prototype.notEqual=function(e){return this.throwIfDisposed(),Sc(this,e)},ya().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ic(this,e,t,n)},ya().prototype.onesLike=function(){return this.throwIfDisposed(),Nc(this)},ya().prototype.pad=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},ya().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Oc(this,e,t,n,r,s,a)},ya().prototype.pow=function(e){return this.throwIfDisposed(),mu(this,e)},ya().prototype.prelu=function(e){return this.throwIfDisposed(),Dc(this,e)},ya().prototype.prod=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},ya().prototype.reciprocal=function(){return this.throwIfDisposed(),dd(this)},ya().prototype.relu=function(){return this.throwIfDisposed(),hd(this)},ya().prototype.relu6=function(){return this.throwIfDisposed(),pd(this)},ya().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ol(this,e.shape)},ya().prototype.reshape=function(e){return this.throwIfDisposed(),ol(this,e)},ya().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Qh(this,e,t,n)},ya().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ep(this,e,t,n)},ya().prototype.reverse=function(e){return this.throwIfDisposed(),fd(this,e)},ya().prototype.rfft=function(){return this.throwIfDisposed(),Md(this)},ya().prototype.round=function(){return this.throwIfDisposed(),xd(this)},ya().prototype.rsqrt=function(){return this.throwIfDisposed(),vd(this)},ya().prototype.selu=function(){return this.throwIfDisposed(),wd(this)},ya().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),kd(this,e,t,n,r,s,a)},ya().prototype.sigmoid=function(){return this.throwIfDisposed(),dl(this)},ya().prototype.sign=function(){return this.throwIfDisposed(),Id(this)},ya().prototype.sin=function(){return this.throwIfDisposed(),Nd(this)},ya().prototype.sinh=function(){return this.throwIfDisposed(),Cd(this)},ya().prototype.slice=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},ya().prototype.softmax=function(e){return this.throwIfDisposed(),Ad(this,e)},ya().prototype.softplus=function(){return this.throwIfDisposed(),Yu(this)},ya().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},ya().prototype.split=function(e,t){return this.throwIfDisposed(),_d(this,e,t)},ya().prototype.sqrt=function(){return this.throwIfDisposed(),yu(this)},ya().prototype.square=function(){return this.throwIfDisposed(),bu(this)},ya().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ld(this,e)},ya().prototype.squeeze=function(e){return this.throwIfDisposed(),zd(this,e)},ya().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ga?[this,e]:[this,...e];return Pd(n,t)},ya().prototype.step=function(e){return this.throwIfDisposed(),Bd(this,e)},ya().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),Wd(this,e,t,n,r,s,a,o,i)},ya().prototype.sub=function(e){return this.throwIfDisposed(),Qu(this,e)},ya().prototype.sum=function(e,t){return this.throwIfDisposed(),xu(this,e,t)},ya().prototype.tan=function(){return this.throwIfDisposed(),Vd(this)},ya().prototype.tanh=function(){return this.throwIfDisposed(),pl(this)},ya().prototype.tile=function(e){return this.throwIfDisposed(),Cu(this,e)},ya().prototype.toBool=function(){return this.throwIfDisposed(),si(this,"bool")},ya().prototype.toFloat=function(){return this.throwIfDisposed(),si(this,"float32")},ya().prototype.toInt=function(){return this.throwIfDisposed(),si(this,"int32")},ya().prototype.topk=function(e,t){return this.throwIfDisposed(),Qd(this,e,t)},ya().prototype.transpose=function(e){return this.throwIfDisposed(),uh(this,e)},ya().prototype.unique=function(e){return this.throwIfDisposed(),th(this,e)},ya().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),nh(this,e,t)},ya().prototype.unstack=function(e){return this.throwIfDisposed(),rh(this,e)},ya().prototype.where=function(e,t){return this.throwIfDisposed(),Yl(e,this,t)},ya().prototype.zerosLike=function(){return this.throwIfDisposed(),Jl(this)};class gy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gy.prototype)}}class yy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yy.prototype)}}class by extends Error{constructor(e){super(e),Object.setPrototypeOf(this,by.prototype)}}class xy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xy.prototype)}}class vy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vy.prototype)}}class wy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function ky(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Sy(e,t){if(!e)throw new vy(t)}function Iy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Ny(e){return 1===e.length?e[0]:e}function Cy(e){return Array.isArray(e)?e:[e]}function Ty(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function $y(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Ey={};function Ry(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ay(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Ay(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Ay(t):e[n]=t.value)}}}function Fy(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Ey)a=Ey[s];else if(a=t[s],null==a)throw new by(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new by(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,l;if(o in n?[i,l]=n[o]:o in Ey?[i,l]=Ey.className:o in t&&([i,l]=t[o]),null==i)throw new by(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Ey))e[t]=Ey[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Ey);for(const e of Object.keys(n))Ey[e]=n[e];Ay(a.config);const r=l(i,a.config,n,s);return Ey=Object.assign({},t),r}{const e=Object.assign({},Ey);for(const e of Object.keys(n))Ey[e]=n[e];const t=new i(a.config);return Ey=Object.assign({},e),t}}}function Oy(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Dy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function _y(e){if(null==e)throw new by(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function My(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new by(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ly(e,t,n=0,r=1/0){return Sy(n>=0),Sy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function zy(e,t){Array.isArray(e)?(oe(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>zy(e,`element ${n+1} of ${t}`)))):oe(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Py(e)}.`))}function Py(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Py(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function By(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Wy=0;function Vy(){return Wy++}const Uy={};function Gy(e=""){return e in Uy||(Uy[e]=0),Uy[e]+=1,e+Uy[e].toString()}const Zy=["channelsFirst","channelsLast"],jy=["nearest","bilinear"],Hy=["valid","same","causal"],qy=["max","avg"],Ky=["sum","mul","concat","ave"],Xy=new Map;function Yy(e){My(Zy,"DataFormat",e)}function Jy(e){My(Hy,"PaddingMode",e)}function Qy(e){My(qy,"PoolMode",e)}const eb=[],tb="/";function nb(e,t){eb.push(e);try{const e=t();return eb.pop(),e}catch(e){throw eb.pop(),e}}function rb(e){if(!ob(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===eb.length?"":eb.join(tb)+tb)+e}function sb(e){if(!ob(e))throw new Error("Not a valid tensor name: '"+e+"'");Xy.has(e)||Xy.set(e,0);const t=Xy.get(e);if(Xy.set(e,Xy.get(e)+1),t>0){const n=`${e}_${t}`;return Xy.set(n,1),n}return e}const ab=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ob(e){return!!e.match(ab)}function ib(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function lb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function ub(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function cb(e,t){if(t<e)throw new by(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let db;function hb(){return null==db&&(db=Ci().epsilon()),db}function pb(e,t){return si(e,t)}function fb(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ol(e,n)}function mb(e,t,n){return mi((()=>{switch(e.rank){case 1:return Td(e,t,n);case 2:return $d(e,[t,0],[n,e.shape[1]]);case 3:return Ed(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Rd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return hl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return hl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new by(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gb(e,t,n){return mi((()=>{switch(e.rank){case 1:return Td(e,t,n);case 2:return $d(e,[0,t],[e.shape[0],n]);case 3:return Ed(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Rd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new by(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yb(e,t,n,r){return mi((()=>{switch(e.rank){case 1:return Td(e,t,n);case 2:switch(r){case 1:return mb(e,t,n);case 2:return gb(e,t,n);default:throw new by(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return mb(e,t,n);case 2:return Ed(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return gb(e,t,n);default:throw new by(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return mb(e,t,n);case 2:return Rd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Rd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return gb(e,t,n);default:throw new by(`The axis is not within the rank of the tensor ${r}`)}default:throw new by(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ul(e,t)}function xb(e,t){switch(e.rank){case 1:return Tl([e,t]);case 2:return $l([e,t],0);case 3:return El([e,t],0);case 4:return Rl([e,t],0);default:throw new by(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new by(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Cu(e,t)}function wb(e,t=0,n=1,r,s){return ad(e,t,n,r,s)}function kb(e,t,n,r){if(e.rank<2||t.rank<2)throw new xy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new xy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return Th({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Nb(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=ol(e,[-1,a]);const o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ol(uh(t,c),[l,-1]);const d=[...s,...u];return ol(Th({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Nb(e.rank,r,"channelsLast"):null,activation:n}),d)}}function Sb(e,t,n){return mi((()=>(t=Array.isArray(t)?Ud(t,"int32"):si(t,"int32"),Eu(e,t,n))))}function Ib(e){return Ai(e,e)}function Nb(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new by(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?ol(t,[1,r[0],1,1,1]):ol(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ol(t,[1,1,1,1,r[0]]):ol(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?ol(t,[1,r[0],1,1]):ol(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ol(t,[1,1,1,r[0]]):ol(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?ol(t,[1,r[0],1]):ol(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ol(t,[1,1,r[0]]):ol(t,[1].concat(r))}else if(e<3)return t;throw new by(`Unsupported input rank by biasAdd: ${t.rank}`)}function Cb(e,t,n){return mi((()=>(null==n&&(n="channelsLast"),Yy(n),$i(e,Nb(e.rank,t,n)))))}function Tb(e,t,n,r){return mi((()=>fh(e,t,n,r)))}function $b(e,t,n=!1){return n?e():t()}const Eb=["fanIn","fanOut","fanAvg"],Rb=["normal","uniform","truncatedNormal"];class Ab extends Dp{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Fb extends Ab{apply(e,t){return fc(e,t)}}Fb.className="Zeros",Mp(Fb);class Ob extends Ab{apply(e,t){return mc(e,t)}}Ob.className="Ones",Mp(Ob);class Db extends Ab{constructor(e){if(super(),"object"!=typeof e)throw new by(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new by(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return mi((()=>Ai(gu(this.value),mc(e,t))))}getConfig(){return{value:this.value}}}Db.className="Constant",Mp(Db);class _b extends Ab{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return id(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}_b.className="RandomUniform",Mp(_b);class Mb extends Ab{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xy(`randomNormal does not support dType ${t}.`);return wb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mb.className="RandomNormal",Mp(Mb);class Lb extends Ab{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xy(`truncatedNormal does not support dType ${t}.`);return eh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lb.className="TruncatedNormal",Mp(Lb);class zb extends Ab{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return mi((()=>{if(2!==e.length||e[0]!==e[1])throw new by("Identity matrix initializer can only be used for 2D square matrices.");return Ai(this.gain,Tu(e[0]))}))}getConfig(){return{gain:this.gain}}}zb.className="Identity",Mp(zb);class Pb extends Ab{constructor(e){if(super(),e.scale<0)throw new by(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,My(Eb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){My(Rb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Yy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ib(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ib(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ib(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xy(`${this.getClassName()} does not support dType ${t}.`);return eh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return id(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Pb.className="VarianceScaling",Mp(Pb);class Bb extends Pb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Bb.className="GlorotUniform",Mp(Bb);class Wb extends Pb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Wb.className="GlorotNormal",Mp(Wb);class Vb extends Pb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Vb.className="HeNormal",Mp(Vb);class Ub extends Pb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Ub.className="HeUniform",Mp(Ub);class Gb extends Pb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Gb.className="LeCunNormal",Mp(Gb);class Zb extends Pb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pb.className}}Zb.className="LeCunUniform",Mp(Zb);class jb extends Ab{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return mi((()=>{if(e.length<2)throw new xy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=ue(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=wb([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),o=$p.qr(a,!1);let i=o[0];const l=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return i=Ai(i,l.sign()),n<r&&(i=i.transpose()),Ai(gu(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}jb.className="Orthogonal",Mp(jb);const Hb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qb(e,t={}){return Fy(e,_p.getMap().classNameMap,t,"initializer")}function Kb(e){return Ry(e)}function Xb(e){if("string"==typeof e){const t=e in Hb?Hb[e]:e;if("GlorotNormal"===t)return new Wb;if("GlorotUniform"===t)return new Bb;if("HeNormal"===t)return new Vb;if("HeUniform"===t)return new Ub;if("LeCunNormal"===t)return new Gb;if("LeCunUniform"===t)return new Zb;{const e={};return e.className=t,e.config={},qb(e)}}return e instanceof Ab?e:qb(e)}function Yb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Jb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Qb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new by(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ex(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new by(`Expected exactly 1 Shape; got ${e.length}`)}return e}function tx(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const nx="Variable";class rx{constructor(e,t="float32",n=nx,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Vy(),n=null==n?nx:n,this.originalName=rb(n),this.name=sb(this.originalName),this.trainable_=r,this.constraint=s,this.val=ah(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function sx(e){return e.map((e=>e.read()))}function ax(e){e.forEach((e=>{e[0].write(e[1])}))}class ox{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ix{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Vy(),null!=a&&(this.originalName=rb(a),this.name=sb(this.originalName)),this.rank=t.length}}let lx=0;class ux{constructor(e,t){this.callArgs=t,this.id=lx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cx=0;class dx extends Dp{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ty(e)+"_"+Gy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new yy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new by(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ny(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ny(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new gy(`Layer ${this.name} is not connected, no input to return.`);return Ny(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new gy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ny(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Cy(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Cy(this.inputSpec);if(t.length!==n.length)throw new by(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new by(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new by(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new by(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new by(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],o=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new by(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new by(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Cy(e),r=function(e){let t=!0;for(const n of Cy(e))if(!(n instanceof ix)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Cy(e))if(n instanceof ix){t=!1;break}return t}(e);if(r===s)throw new by("Arguments to apply() must be all SymbolicTensors or all Tensors");return nb(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Cy(e))t.push(n.shape);this.build(Ny(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Cy(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Ny(a),null!=this.activityRegularizer)throw new xy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Cy(e);const t=[];for(const n of e)t.push(n.shape);return Ny(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ix(a,n,this,Cy(e),t,this.name,r))):new ix(a,r,this,Cy(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new xy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new gy(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new gy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new yy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tx(this.weights)}build(e){this.built=!0}getWeights(e=!1){return sx(e?this.trainableWeights:this.weights)}setWeights(e){mi((()=>{const t=this.weights;if(t.length!==e.length)throw new by(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=sx(t);for(let s=0;s<r.length;++s){const a=r[s],o=t[s],i=e[s];if(!he(a.shape,i.shape))throw new by(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}ax(n)}))}addWeight(e,t,n,r,s,a,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new by(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=i?i():Xb("zeros"));const l=r.apply(t,n),u=new rx(l,n,e,a,o);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Cy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n);if(t instanceof Array&&r instanceof Array){if(t.length!==r.length)throw new Error(`${this.name} outputs ${t.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<t.length;e++)t[e].kerasMask=r[e]}else{if(r instanceof Array)throw new Error(`{this.name} outputs a single tensor but ${r.length} masks`);if(t instanceof Array)throw new Error(`{this.name} outputs ${t.length} tensors but only one mask`);t.kerasMask=r}}addInboundNode(e,t,n,r,s,a,o=null){const i=Cy(e);t=Cy(t),n=Cy(n),r=Cy(r),s=Jb(s),a=Jb(a);const l=[],u=[],c=[];for(const e of i)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new ux({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function hx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=hx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class px extends dx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Gy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new by("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new by("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new by("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ix(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ux({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new by(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function fx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new by("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new px({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}px.className="InputLayer",Mp(px);class mx{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof mx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new by(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return si(t,e.dtype)}catch(n){throw new by(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ix){if(null==this.id2Value[e.id])throw new by(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new by(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ix){if(null==this.id2Value[e.id])throw new by(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new by(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&gi(this.id2Mask)}}const gx=new wy,yx=new wy;function bx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),o=a?e:[e],i=o.map((e=>e.name)),l=[],u=t.names();for(const e of i)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().sort().join(",");let d,h=gx.get(c);if(null==h){const e=function(e,t){oe(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=vx(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:o}=vx(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in o)null==r[e]&&(r[e]=new Set),o[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:xx(r)}}(o,t);h=e.sorted,d=e.recipientCounts,gx.put(c,h),yx.put(c,d)}d={},s||Object.assign(d,yx.get(c));const p=new mx(t);for(let e=0;e<h.length;++e){if(null!=r){const e=pi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],o=a.sourceLayer;if(o instanceof px)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==i.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Cy(o.apply(u,n));let y=null;o.supportsMasking&&(y=o.computeMask(u,c));const b=wx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=i.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||gi(f)}return p.disposeMasks(),a?l:l[0]}function xx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function vx(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],o=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function wx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function kx(e,t){return mi((()=>yu(xu(Ai(e,e),t,!0))))}Ke().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=gx&&gx.setMaxEntries(e),null!=yx&&yx.setMaxEntries(e)}));class Sx extends Dp{getConfig(){return{}}}class Ix extends Sx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return mi((()=>{const t=kx(e,this.axis),n=Cl(t,0,this.maxValue);return Ai(e,Ri(n,$i(hb(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ix.className="MaxNorm",Mp(Ix);class Nx extends Sx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return mi((()=>Ri(e,$i(hb(),kx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Nx.className="UnitNorm",Mp(Nx);class Cx extends Sx{apply(e){return hd(e)}}Cx.className="NonNeg",Mp(Cx);class Tx extends Sx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return mi((()=>{const t=kx(e,this.axis),n=$i(Ai(this.rate,Cl(t,this.minValue,this.maxValue)),Ai(1-this.rate,t));return Ai(e,Ri(n,$i(hb(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Tx.className="MinMaxNorm",Mp(Tx);const $x={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ex(e){return Ry(e)}function Rx(e,t={}){return Fy(e,_p.getMap().classNameMap,t,"constraint")}function Ax(e){if(null==e)return null;if("string"==typeof e){return Rx({className:e in $x?$x[e]:e,config:{}})}return e instanceof Sx?e:Rx(e)}function Fx(e){return new Ix(e)}function Ox(e){return new Nx(e)}function Dx(){return new Cx}function _x(e){return new Tx(e)}function Mx(){return new Fb}function Lx(){return new Ob}function zx(e){return new Db(e)}function Px(e){return new _b(e)}function Bx(e){return new Mb(e)}function Wx(e){return new Lb(e)}function Vx(e){return new zb(e)}function Ux(e){return new Pb(e)}function Gx(e){return new Bb(e)}function Zx(e){return new Wb(e)}function jx(e){return new Vb(e)}function Hx(e){return new Ub(e)}function qx(e){return new Gb(e)}function Kx(e){return new Zb(e)}function Xx(e){return new jb(e)}async function Yx(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];gi(r)}}function Jx(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Qx;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Qx||(Qx={}));class ev{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class tv{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class nv extends ev{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=mi((()=>$i(this.totals[e],Ai(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:mi((()=>{const n=Ai(Ri(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),yi(t[e])})))}}class rv extends ev{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const o=s[a];e.push(o.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class sv extends ev{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||qf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ae(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Ks();return(...a)=>{const o=null!=n?n():Ks();return o-s<t||(s=o,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Yx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Yx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Yx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Yx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Yx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ae(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Yx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Yx(e),await this.trainEnd(e))}}function av(e,t){if(null==e&&(e={}),e instanceof ev)return[e];if(Array.isArray(e)&&e[0]instanceof ev)return e;return Cy(e).map((e=>new sv(e,t)))}class ov{constructor(){}static registerCallbackConstructor(e,t){oe(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ov.checkForDuplicate(t),null==ov.constructors[e]&&(ov.constructors[e]=[]),ov.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ov.constructors){ov.constructors[+t].forEach((t=>{if(t===e)throw new by("Duplicate callback constructor.")}))}}static clear(){ov.constructors={}}static createCallbacks(e){const t=[];for(const n in ov.constructors){const r=+n;e>=r&&t.push(...ov.constructors[r])}return t.map((e=>new e))}}function iv(e,t,n,r,s,a,o,i,l){const u=new rv,c=[new nv,...ov.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new tv(c);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:u}}function lv(e,t={},n=!1){return Fy(e,_p.getMap().classNameMap,t,"layer",n)}function uv(e,t){return mi((()=>{"float32"!==e.dtype&&(e=si(e,"float32"));const n=xu(Ib(e),t,!0),r=Nl(n.shape,hb()),s=yu(hc(n,r));return Ri(e,s)}))}function cv(e,t){return mi((()=>pc(Ib(Qu(t,e)),-1)))}function dv(e,t){return mi((()=>pc(Fi(Qu(t,e)),-1)))}function hv(e,t){return mi((()=>{const n=Qu(e,t),r=Cl(Fi(e),hb(),Number.MAX_VALUE),s=Fi(Ri(n,r));return Ai(100,pc(s,-1))}))}function pv(e,t){return mi((()=>{const n=Cl(t,hb(),Number.MAX_VALUE),r=Wu($i(1,n)),s=Cl(e,hb(),Number.MAX_VALUE),a=Wu($i(1,s));return pc(Ib(Qu(r,a)),-1)}))}function fv(e,t,n=!1){return mi((()=>{if(n)t=Ad(t);else{const e=xu(t,t.shape.length-1,!0);t=Ri(t,e)}return t=Cl(t,hb(),1-hb()),Xu(xu(Ai(si(e,"float32"),Wu(t)),t.shape.length-1))}))}function mv(e,t,n=!1){return mi((()=>{const r=si($u(function(e){const t=[ib(e.shape)];return ol(e,t)}(e)),"int32"),s=(t=Cl(t,hb(),1-hb())).shape;return fv(ol(Ic(r,s[s.length-1]),s),t,n)}))}function gv(e,t){return mi((()=>{let n;return n=Cl(t,hb(),1-hb()),n=Wu(Ri(n,Qu(1,n))),pc(function(e,t){if(!he(e.shape,t.shape))throw new by(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return mi((()=>{const n=hd(t),r=Xu(Fi(t));return $i(Qu(n,Ai(t,e)),Vu(Su(r)))}))}(e,n),-1)}))}function yv(e,t){return mi((()=>{const n=Cl(e,hb(),1),r=Cl(t,hb(),1);return xu(Ai(e,Wu(Ri(n,r))),-1)}))}function bv(e,t){return mi((()=>{const n=uv(e,-1),r=uv(t,-1),s=Ai(n,r);return Xu(xu(s,-1))}))}ov.constructors={};const xv={meanSquaredError:cv,meanAbsoluteError:dv,meanAbsolutePercentageError:hv,meanSquaredLogarithmicError:pv,squaredHinge:function(e,t){return mi((()=>{const n=hc(0,Qu(1,Ai(e,t)));return pc(Ib(n),-1)}))},hinge:function(e,t){return mi((()=>{const n=hc(0,Qu(1,Ai(e,t)));return pc(n,-1)}))},categoricalHinge:function(e,t){return mi((()=>{const n=xu(Ai(e,t),-1),r=pu(Ai(Qu(1,e),t),-1);return hc(0,$i(1,Qu(r,n)))}))},logcosh:function(e,t){return mi((()=>{const n=Math.log(2),r=Qu(t,e),s=Qu($i(r,Yu(Ai(-2,r))),n);return pc(s,-1)}))},categoricalCrossentropy:fv,sparseCategoricalCrossentropy:mv,binaryCrossentropy:gv,kullbackLeiblerDivergence:yv,poisson:function(e,t){return mi((()=>{const n=Wu($i(hb(),t));return pc(Qu(t,Ai(e,n)),-1)}))},cosineProximity:bv};function vv(e){if("string"==typeof e){if(e in xv)return xv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new by(t)}return e}function wv(e,t){return mi((()=>{const n=Ai(.5,Nc(t)),r=pb(Ru(t,n),e.dtype);return pc(Xl(e,r),-1)}))}function kv(e,t){return mi((()=>pb(Xl(zi(e,-1),zi(t,-1)),"float32")))}function Sv(e,t){return mi((()=>si(xu(nc(Xl(e,1),Xl(t,1))),"float32")))}function Iv(e,t){return mi((()=>{const n=Sv(e,t),r=function(e,t){return mi((()=>si(xu(nc(Xl(e,0),Xl(t,1))),"float32")))}(e,t),s=$i(n,r);return si(Yl(Ru(s,0),Ri(n,s),0),"float32")}))}function Nv(e,t){return mi((()=>{const n=Sv(e,t),r=function(e,t){return mi((()=>si(xu(nc(Xl(e,1),Xl(t,0))),"float32")))}(e,t),s=$i(n,r);return si(Yl(Ru(s,0),Ri(n,s),0),"float32")}))}function Cv(e,t){return gv(e,t)}function Tv(e,t){return e.rank===t.rank&&(e=zd(e,[e.rank-1])),(t=zi(t,-1)).dtype!==e.dtype&&(t=si(t,e.dtype)),si(Xl(e,t),"float32")}const $v=fv,Ev=mv,Rv={binaryAccuracy:wv,categoricalAccuracy:kv,precision:Iv,categoricalCrossentropy:$v,sparseCategoricalCrossentropy:Ev,mse:cv,MSE:cv,mae:dv,MAE:dv,mape:hv,MAPE:hv,cosine:bv};function Av(e){if("string"==typeof e&&e in Rv)return Rv[e];if("string"!=typeof e&&null!=e)return e;throw new by(`Unknown metric ${e}`)}function Fv(e){if(Sy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(xv))if(xv[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Rv))if(Rv[n]===e){t=n;break}return void 0!==t?t:e.name}}const Ov=1048576;function Dv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!_v(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Ov&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function _v(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!_v(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!_v(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Mv(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),Lv(a,n,r),r("=".repeat(t));const i=e.layers;for(let e=0;e<i.length;++e)s?zv(i[e],n,r):Pv(i[e],n,o,r),r((e===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?tx(e.collectedTrainableWeights):tx(e.trainableWeights);return t}(e),u=tx(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Lv(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function zv(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Lv([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Pv(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const o=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];o.push(`${n}[${r}][${s}]`)}const i=e.name,l=e.getClassName(),u=0===o.length?"":o[0];Lv([`${i} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<o.length;++e)Lv(["","","","",o[e]],t,r)}function Bv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Wv(e,t){if(null===e)return null;if("string"==typeof e)return $y(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Bv(t,s,r)?n.push(r):n.push(Wv(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=$y(n);t[e]=Wv(r,e)}}return t}}function Vv(e,t){if(null==e)return null;if("string"==typeof e)return Ty(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Bv(t,s,r)?n.push(r):n.push(Vv(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=Ty(n);t[s]="name"!==n&&"className"!==n||"string"!=typeof r?Vv(r,n):r}return t}}const Uv="4.11.0";class Gv extends dx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Gy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Dy(this.inputs).length!==this.inputs.length)throw new by(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Dy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Sy(0===n,"input layer has >1 nodes"),Sy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof px))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},o=[],i=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new yy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Gv.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],o=u.tensorIndices[e];i(r,t,n,s,a,o)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},l=[],u=[];for(const e of this.outputs)i(e,l,u);const c=o.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const o=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,o),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],o=e.nodeIndices[r],i=s.inboundNodes[o],l=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(a+1,l),n[i.id]=i}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(s[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(Oy);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Gv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(Oy);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new yy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new yy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new ux({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new by("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new by(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new by(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new by(`${e.length} of ${r} weights are not set: ${e}`)}ax(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Uv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Vv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return mi((()=>{e=Cy(e);const n=new mx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return bx(this.outputs,n,t)}))}computeMask(e,t){return mi((()=>{let n;return e=Cy(e),n=null==t?ky(null,e.length):Cy(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Jb(e);if(t.length!==this.inputLayers.length)throw new by(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Oy);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],o=e.tensorIndices[t],i=n[`${s.name}_${a}_${o}`];r.push(i)}const s=Jb(t.computeOutputShape(Ny(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n[`${t.name}_${a}_${e}`]=s[e]}}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Sy(t in n),s.push(n[t])}return Ny(s)}runInternalGraph(e,t){null==t&&(t=ky(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],o=t[r];n[s.id]=[a,o]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Oy);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,o,i,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),i=Cy(t.call(e,u)),l=Cy(t.computeMask(e,n)),r=[e],o=[n]}else r=a.map((e=>e[0])),o=a.map((e=>e[1])),null==u.mask&&(u.mask=o),i=Cy(t.call(r,u)),l=Cy(t.computeMask(r,o));if(t.activityRegularizer)throw new xy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=i[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],o=[];for(const e of this.outputs){Sy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];o.push(t.shape),s.push(t),a.push(r)}return[s,a,o]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Gv?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Gv.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new by("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new by(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new by(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return mi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Gv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Gv.nodeKey(e,n);let o={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),o=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],i=r.tensorIndices[n];let l=t[Gv.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,i,o])}a.push(e)}}}const o={};o.name=e.name,o.className=r,o.config=s,o.inboundNodes=a,n.push(o)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Gv.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let o=t[a];null==o&&(o=0);const i=this.inputLayersTensorIndices[e];r.push([n.name,o,i])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Gv.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let o=t[a];null==o&&(o=0);const i=this.outputLayersTensorIndices[e];s.push([n.name,o,i])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function o(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let r;for(const a of t){const i=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(i in s))return void o(e,t);const c=s[i];if(c.inboundNodes.length<=l)return void o(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(Ny(n),r)}function l(e){const n=e.name,a=lv(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new by(`Corrupted configuration, expected array for nodeData: ${e}`);o(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!_y(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Sy(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Sy(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}return new e({inputs:d,outputs:h,name:u})}get stateful(){if(this._stateful)throw new by("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){mi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Zv(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function jv(e,t){return Zv(e,t,"classWeight")}async function Hv(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=mi((()=>{if(1===e.shape.length)return ai(e);if(2===e.shape.length){if(e.shape[1]>1){return zi(e,1)}if(1===e.shape[1])return ol(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());gi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Ud(s,"float32")}return null}function qv(e,t){return Ai(e,t)}function Kv(e,t){let n,r;const s=t;n=s.xs,r=s.ys,oe(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Xv("input",e.inputNames,n),o=Xv("output",e.outputNames,r),i=a[0].shape[0];oe(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),oe(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)oe(a[t].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)oe(o[t].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:a,ys:o}}function Xv(e,t,n){if(n instanceof ga)return[n];if(Array.isArray(n))return oe(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new by(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function Yv(e,t,n){const r=null!=n.batchesPerEpoch;if(oe(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),oe(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),oe(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),oe(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),oe(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,o;if(s)if(Jv(n.validationData))oe(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new xy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,o=e.ys}const i=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=av(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=iv(c,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await h.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Kv(e,t.value),a={};a.batch=d,a.size=r[0].shape[0],await h.onBatchBegin(d,a);const o=[];if(null!=n.classWeight){const t=jv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Hv(s[e],null,t[e]))}const u=r.concat(s).concat(o),p=i(u);gi(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,yi(n)}await h.onBatchEnd(d,a),Jx(a),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Jv(n.validationData)?Cy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Cy(e.evaluate(a,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,u),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Jv(e){return"function"==typeof e.iterator}function Qv(e){oe(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function ew(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>mb(e,t,n-t))):mb(e,t,n-t)}function tw(e,t){return mi((()=>null==e?null:Array.isArray(e)?e.map((e=>tw(e,t))):Sb(e,"int32"===t.dtype?t:si(t,"int32"))))}function nw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function rw(e){const t=[];e instanceof ga&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(fb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function sw(e,t){if(null==e)return;const n=[];if(t instanceof ga)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ga)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function aw(e){return Array.isArray(e)}function ow(e){return!function(e){return e instanceof ga}(e)&&!aw(e)}function iw(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(aw(e)&&e.length>0)t=!0;else if(ow(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new by(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(ow(e)){a=[];for(const n of t){if(null==e[n])throw new by(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(aw(e)){if(e.length!==t.length)throw new by(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new by(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=rw(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const o=a[e];if(o.shape.length!==n[e].length)throw new by(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${o.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=o.shape[t],i=n[e][t];if(null!=i&&i>=0&&a!==i)throw new by(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function lw(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new by(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new by(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const o=a[e];if(o.shape.length!==n[e].length)throw new by(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const i=o.shape[a],l=n[e][a];if(null!=l&&l!==i)throw new by(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class uw extends Gv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new by("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Mv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>jf.adagrad(.01),Adadelta:()=>jf.adadelta(1,.95,hb()),Adam:()=>jf.adam(.001,.9,.999,hb()),Adamax:()=>jf.adamax(.002,.9,.999,hb(),0),RMSProp:()=>jf.rmsprop(.001,.9,0,hb()),SGD:()=>jf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new by(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zp))throw new by("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new by(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>vv(e)))}else{const n=vv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new by(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(vv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nb("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};nb("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===gv?-1!==["accuracy","acc"].indexOf(o)?r=wv:-1!==["crossentropy","ce"].indexOf(o)&&(r=Cv):this.lossFunctions[e]===mv?-1!==["accuracy","acc"].indexOf(o)?r=Tv:-1!==["crossentropy","ce"].indexOf(o)&&(r=Ev):-1!==["accuracy","acc"].indexOf(o)?r=kv:-1!==["crossentropy","ce"].indexOf(o)&&(r=$v),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=r,n=""+s}else{const e=Av(o);a=e,n=""+Fv(o)}let t;nb(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Qv(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Ny(this.testLoop(t,e,r,n.verbose,n.steps))}finally{sw(s[0],e),sw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new xy("Verbose mode is not implemented yet.");oe(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let i=0,l=0;for(;!r||l<n.batches;){const t=await o.next();if(a=mi((()=>{if(t.value){const{xs:n,ys:r}=Kv(e,t.value),o=n.concat(r),u=mi((()=>s(o)));if(gi(o),0===l)for(let e=0;e<u.length;++e)a.push(gu(0));const c=o[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=mi((()=>$i(a[e],Ai(c,t)))),l>0&&gi(n)}gi(u),i+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ri(a[e],i),gi(t)}return Ny(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new by(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new by(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new by("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new mx;if(e instanceof ga&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new by(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new by(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const o=bx(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){const t=ky(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const o=a.indexOf(e[r]);if(-1!==o&&(t[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new by(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return mi((()=>{const r=this.checkNumSamples(e);if(n)throw new xy("Verbose predictLoop() is not implemented yet.");const s=nw(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){mi((()=>{const n=s[t][0],r=s[t][1],a=ew(e,n,r),o=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)o.push({key:this.inputs[e],value:a[e]});else o.push({key:this.inputs[0],value:a});const i=new mx(o);return bx(this.outputs,i)})).forEach(((e,t)=>a[t].push(e)))}return Ny(a.map((e=>ul(e,0))))}))}predict(e,t={}){const n=rw(e);lw(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Qv(e),this.predictLoop(n,e)}finally{sw(n,e)}}predictOnBatch(e){lw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new yy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===mv?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=Dy(e.map((e=>e.shape[0])));r.sort();const s=Dy(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new by(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new by(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!he(r,s))throw new by(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=iw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=iw(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[cv,gv,fv];for(let s=0;s<e.length;++s){const a=e[s],o=t[s],i=n[s];if(null!=o){if(o===fv&&1===a.shape[a.shape.length-1])throw new by(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const e=a.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new by(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new by(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[o,i]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=jv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Hv(i[t],null,e[t]))}return[o,i,l]}testLoop(e,t,n,r=0,s){return mi((()=>{const a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new xy("Verbose mode is not implemented yet.");if(null!=s)throw new xy("steps mode in testLoop() is not implemented yet");{const r=nw(a,n),s=Ud(cb(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],i=r[n][1],l=mb(s,a,i-a),u=tw(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)o.push(gu(0));for(let e=0;e<c.length;++e){const t=c[e];o[e]=$i(o[e],Ai(i-a,t))}}for(let e=0;e<o.length;++e)o[e]=Ri(o[e],a)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(Iy(e,r)>1){s+=`_${Iy(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new mx(e),i=bx(this.outputs,o,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],i[e]);null!=s[e]&&(n=qv(n,s[e]));const a=pc(n);t.push(a),l=0===e?n:$i(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=pc(t(r[s],i[s]))}yi(n),a.push(n)}return l=pc(l),this.calculateLosses().forEach((e=>{l=$i(l,e)})),l}),!0,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>mi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const o=new mx(a),i=bx(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=pc(r(s[e],i[e]));n=0===e?a:$i(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=pc(n(s[r],i[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,o,i,l,u,c,d;this.isTraining=!0;try{const h=null==n.batchSize?32:n.batchSize;Qv(h);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,h);r=f[0],s=f[1],d=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new xy("validationData including sample weights is not supported yet."):new by(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);i=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(i,l,null,null,e,h);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=ew(r,e,t),a=r,r=ew(r,0,e),c=ew(s,e,t),o=s,s=ew(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=av(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,h,n.epochs,n.verbose,k,v,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,sw(r,e),sw(s,t),sw(a,e),sw(o,t),sw(u,i),sw(c,l),null!=d&&gi(d)}}async fitLoop(e,t,n,r,s,a,o,i,l,u,c,d,h,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==d&&(d=0);let f=!1;if(null!=i&&null!=l&&(f=!0),null!=p&&(f=!0,null==h))throw new by("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,h,"steps_per_epoch");let g;null!=m&&(g=cb(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=iv(o,a,s,d,m,h,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=d;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=h)throw new xy("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new xy("batch shuffling is not implemneted yet");u&&J(g);const a=Ud(g),o=nw(m,r);for(let u=0;u<o.length;++u){const c={};if(await y.onBatchBegin(u,c),mi((()=>{const d=o[u][0],h=o[u][1],p=mb(a,d,h-d);c.batch=u,c.size=h-d;const m=tw(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,yi(r)}if(u===o.length-1&&f){const e=this.testLoop(i,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];yi(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),Jx(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Yv(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),o=[];for(const e of a){const t=await e.data();o.push(t[0])}return gi(a),sw(n[0],e),sw(n[1],t),Ny(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=pi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-pi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ty(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ty(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ty(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ty(Fv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ty(Fv(e))));{const e={};for(const t in this.metrics)e[t]=Ty(Fv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=lv(Wv(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=$y(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>$y(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=$y(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>$y(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=$y(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ko(e);if(0===t.length)throw new by(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new by(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new by("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ao(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Uv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ao(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=co([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Dv(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Dv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}uw.className="Model",Mp(uw);class cw extends uw{}async function dw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=lv(Wv(n),t);if(null!=e.weightsManifest){const t=await Qp(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),gi(t)}return r}async function hw(e,t){if(null==t&&(t={}),"string"==typeof e){const n=So(e,t);if(0===n.length)n.push(af(e,t));else if(n.length>1)throw new by(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new by("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,i=lv(Wv(s),t,o),l=r.trainingConfig;null!=l&&i.loadTrainingConfig(l);null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new by("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=oo(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);i.loadWeights(e,a),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),gi(e),gi(t.map((e=>e.tensor)))}return i}(e,void 0,t)}cw.className="Functional",Mp(cw);class pw extends uw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Gy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new by(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof pw||e instanceof uw;let n;if(t){if(n=e,1!==n.outputs.length)throw new by("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new by("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new by("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=fx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new by(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new by("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=hx(this.outputs[0])}this.inboundNodes=[],new ux({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ky(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ex(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new uw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new yy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new yy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new yy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new yy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new by("Legacy serialization format not supported yet.");s=t}else oe(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof pw))throw new xy(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of s){const t=lv(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new by("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new by("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function fw(e){return new uw(e)}function mw(e){return new pw(e)}function gw(e){return fx(e)}function yw(e,t){ov.registerCallbackConstructor(e,t)}pw.className="Sequential",Mp(pw);class bw extends Dp{getConfig(){return{}}}class xw extends bw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new xy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return nu(e)}(e,t)}}xw.className="elu",Mp(xw);class vw extends bw{apply(e){return wd(e)}}vw.className="selu",Mp(vw);class ww extends bw{apply(e){return hd(e)}}ww.className="relu",Mp(ww);class kw extends bw{apply(e){return mi((()=>yc(6,hd(e))))}}kw.className="relu6",Mp(kw);class Sw extends bw{apply(e){return e}}Sw.className="linear",Mp(Sw);class Iw extends bw{apply(e){return dl(e)}}Iw.className="sigmoid",Mp(Iw);class Nw extends bw{apply(e){return function(e){return mi((()=>{const t=$i(.5,Ai(.2,e));return Cl(t,0,1)}))}(e)}}Nw.className="hardSigmoid",Mp(Nw);class Cw extends bw{apply(e){return Yu(e)}}Cw.className="softplus",Mp(Cw);class Tw extends bw{apply(e){return function(e){return mi((()=>Ri(e,$i(Fi(e),1))))}(e)}}Tw.className="softsign",Mp(Tw);class $w extends bw{apply(e){return pl(e)}}$w.className="tanh",Mp($w);class Ew extends bw{apply(e,t=-1){return Ad(e,t)}}Ew.className="softmax",Mp(Ew);class Rw extends bw{apply(e,t=-1){return ec(e,t)}}Rw.className="logSoftmax",Mp(Rw);class Aw extends bw{apply(e,t=1){return mi((()=>Ai(dl(Ai(e,t)),e)))}}Aw.className="swish",Mp(Aw);class Fw extends bw{apply(e){return mi((()=>Ai(e,pl(Yu(e)))))}}function Ow(e){return e.getClassName()}function Dw(e,t={}){return Fy(e,_p.getMap().classNameMap,t,"activation")}function _w(e){if(null==e){const e={className:"linear",config:{}};return Dw(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Dw(t)}return e instanceof bw?e:Dw(e)}function Mw(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Fw.className="mish",Mp(Fw);class Lw extends Dp{}class zw extends Lw{constructor(e){super(),Mw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return mi((()=>{let t=fc([1]);return this.hasL1&&(t=$i(t,xu(Ai(this.l1,Fi(e))))),this.hasL2&&(t=$i(t,xu(Ai(this.l2,Ib(e))))),ol(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}zw.className="L1L2",Mp(zw);const Pw={l1l2:"L1L2"};function Bw(e){return Ry(e)}function Ww(e,t={}){return Fy(e,_p.getMap().classNameMap,t,"regularizer")}function Vw(e){if(null==e)return null;if("string"==typeof e){return Ww({className:e in Pw?Pw[e]:e,config:{}})}return e instanceof Lw?e:Ww(e)}class Uw extends dx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Qb(e);let n=hd(e);return null!=this.maxValue&&(n=Cl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Uw.className="ReLU",Mp(Uw);class Gw extends dx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qb(e);return Mu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Gw.className="LeakyReLU",Mp(Gw);class Zw extends dx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Xb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Vw(e.alphaRegularizer),this.alphaConstraint=Ax(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new by(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ex(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ox({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Qb(e),Dc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Kb(this.alphaInitializer),alphaRegularizer:Bw(this.alphaRegularizer),alphaConstraint:Ex(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Zw.className="PReLU",Mp(Zw);class jw extends dx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new xy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qb(e);return nu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}jw.className="ELU",Mp(jw);class Hw extends dx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Qb(e);return Ai(n,si(Ru(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="ThresholdedReLU",Mp(Hw);class qw extends dx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ew).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return mi((()=>{let n=Qb(e);const r=t.mask;if(null!=r){const e=Ai(Qu(mc(n.shape),si(r,n.dtype)),gu(-1e9));n=$i(n,e)}return this.axis instanceof Array?this.axis.length>1?Su(Qu(n,tc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Kw(e,t,n){if("number"==typeof e)return ky(e,t);if(e.length!==t)throw new by(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new by(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Xw(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Yw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ub([n-t,0]);else{if("same"!==r)throw new by(`Unsupport padding mode: ${r}.`);e*=t}return e}function Jw(e,t){return mi((()=>(Yy(t),"channelsFirst"===t?uh(e,[0,2,3,1]):e)))}function Qw(e,t){return mi((()=>(Yy(t),"channelsFirst"===t?uh(e,[0,2,3,4,1]):e)))}function ek(e,t,n,r=1,s="valid",a,o=1){return mi((()=>{if(null==a&&(a="channelsLast"),Yy(a),3!==e.shape.length)throw new by(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new by(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new by(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=uh(e,[0,2,1])),"causal"===s)throw new xy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Fl(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(i=Cb(i,n)),i}))}function tk(e,t,n,r=[1,1],s="valid",a,o,i=null){return mi((()=>{if(null==a&&(a="channelsLast"),Yy(a),3!==e.rank&&4!==e.rank)throw new by(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new by(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Jw(e,a);if("causal"===s)throw new xy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sh({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===a&&(l=uh(l,[0,3,1,2])),l}))}function nk(e,t,n,r=[1,1,1],s="valid",a,o){return mi((()=>{if(null==a&&(a="channelsLast"),Yy(a),4!==e.rank&&5!==e.rank)throw new by(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new by(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=Qw(e,a);if("causal"===s)throw new xy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=_l(i,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(i=Cb(i,n)),"channelsFirst"===a&&(i=uh(i,[0,4,1,2,3])),i}))}qw.className="Softmax",Mp(qw);class rk extends dx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rk.verifyArgs(t),this.rank=e,zy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Kw(t.kernelSize,e,"kernelSize"),this.strides=Kw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Jy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yy(this.dataFormat),this.activation=_w(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Xb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ax(t.biasConstraint),this.biasRegularizer=Vw(t.biasRegularizer),this.activityRegularizer=Vw(t.activityRegularizer),this.dilationRate=Kw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new by(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new by(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new by(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Sy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ly(e.kernelSize,"number",1,3))throw new by(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ow(this.activation),useBias:this.useBias,biasInitializer:Kb(this.biasInitializer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),biasConstraint:Ex(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class sk extends rk{constructor(e,t){super(e,t),this.kernel=null,sk.verifyArgs(t),this.filters=t.filters,zy(this.filters,"filters"),this.kernelInitializer=Xb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ax(t.kernelConstraint),this.kernelRegularizer=Vw(t.kernelRegularizer)}build(e){e=ex(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new by(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return mi((()=>{let t;e=Qb(e);const n=null==this.bias?null:this.bias.read(),r=By(this.activation.getClassName());if(null!=r&&2===this.rank)t=tk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=ek(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=tk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xy("convolutions greater than 3D are not implemented yet.");t=nk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ex(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Xw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Kb(this.kernelInitializer),kernelRegularizer:Bw(this.kernelRegularizer),kernelConstraint:Ex(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new by(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ak extends sk{constructor(e){super(2,e),ak.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ly(e.kernelSize,"number",1,2))throw new by(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ak.className="Conv2D",Mp(ak);class ok extends sk{constructor(e){super(3,e),ok.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new by(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ok.className="Conv3D",Mp(ok);class ik extends ak{constructor(e){if(super(e),this.inputSpec=[new ox({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new by(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ex(e)).length)throw new by("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new by("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ox({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return mi((()=>{let t=Qb(e);if(4!==t.shape.length)throw new by(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const o=n[s],i=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=[r,Yw(o,c,l,this.padding),Yw(i,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uh(t,[0,2,3,1]));let p=Dl(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=uh(p,[0,3,1,2])),null!=this.bias&&(p=Cb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=ex(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Yw(t[r],i,a,this.padding),t[s]=Yw(t[s],l,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ik.className="Conv2DTranspose",Mp(ik);class lk extends ok{constructor(e){if(super(e),this.inputSpec=[new ox({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new by(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ex(e)).length)throw new by("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new by("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ox({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return mi((()=>{let t=Qb(e);if(5!==t.shape.length)throw new by(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,o;"channelsFirst"===this.dataFormat?(o=2,s=3,a=4):(o=1,s=2,a=3);const i=n[o],l=n[s],u=n[a],c=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Yw(i,p,c,this.padding),Yw(l,f,d,this.padding),Yw(u,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uh(t,[0,2,3,4,1]));let y=Ll(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=uh(y,[0,4,1,2,3])),null!==this.bias&&(y=Cb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ex(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Yw(t[r],u,o,this.padding),t[s]=Yw(t[s],c,i,this.padding),t[a]=Yw(t[a],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}lk.className="Conv3DTranspose",Mp(lk);class uk extends sk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new by("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new by("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new by(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Xb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Vw(t.depthwiseRegularizer),this.depthwiseConstraint=Ax(t.depthwiseConstraint),this.pointwiseInitializer=Xb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Vw(t.pointwiseRegularizer),this.pointwiseConstraint=Ax(t.pointwiseConstraint)}build(e){if((e=ex(e)).length<this.rank+2)throw new by(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new by(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ox({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return mi((()=>{let t;if(e=Qb(e),1===this.rank)throw new xy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=uh(e,[0,2,3,1])),t=kd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Cb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=uh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Kb(this.depthwiseInitializer),e.pointwiseInitializer=Kb(this.pointwiseInitializer),e.depthwiseRegularizer=Bw(this.depthwiseRegularizer),e.pointwiseRegularizer=Bw(this.pointwiseRegularizer),e.depthwiseConstraint=Ex(this.depthwiseConstraint),e.pointwiseConstraint=Ex(this.pointwiseConstraint),e}}uk.className="SeparableConv";class ck extends uk{constructor(e){super(2,e)}}ck.className="SeparableConv2D",Mp(ck);class dk extends sk{constructor(e){super(1,e),dk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ly(e.kernelSize,"number",1,1))throw new by(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}dk.className="Conv1D",Mp(dk);class hk extends dx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return mi((()=>{if(e=Qb(e),"channelsLast"===this.dataFormat){const t=yb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=yb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}hk.className="Cropping2D",Mp(hk);class pk extends dx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,My(jy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return mi((()=>{let t=Qb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=uh(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Tp.resizeNearestNeighbor(t,[e,r]):Tp.resizeBilinear(t,[e,r]);return uh(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Tp.resizeNearestNeighbor(t,[e,r]):Tp.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}pk.className="UpSampling2D",Mp(pk);class fk extends rk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Xb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ax(e.depthwiseConstraint),this.depthwiseRegularizer=Vw(e.depthwiseRegularizer)}build(e){if((e=ex(e)).length<4)throw new by(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new by(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return mi((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return mi((()=>{null==s&&(s="channelsLast"),Yy(s);let o=Jw(e,s);if(4!==e.rank)throw new by(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new by(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Gl(o,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=uh(o,[0,3,1,2])),o}))}(e=Qb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Cb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ex(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Xw(t,this.kernelSize[0],this.padding,this.strides[0]),a=Xw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Kb(this.depthwiseInitializer),e.depthwiseRegularizer=Bw(this.depthwiseRegularizer),e.depthwiseConstraint=Ex(this.depthwiseRegularizer),e}}function mk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new by("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function gk(e,t,n,r=!1,s,a,o=!1,i=!1){return mi((()=>{const l=t.shape.length;if(l<3)throw new by(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(cb(2,l));if(t=uh(t,u),null!=a)throw new xy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=si(si(s,"bool"),"float32")).rank===l-1&&(s=Iu(s,-1)),s=uh(s,u)),r&&(t=fd(t,0),null!=s&&(s=fd(s,0)));const c=[];let d,h=n;const p=t.shape[0],f=rh(t);let m,g;null!=s&&(m=rh(s));for(let t=0;t<p;++t){const n=f[t],r=mi((()=>e(n,h)));if(null==s)d=r[0],h=r[1];else{const e=mi((()=>{const e=m[t],n=Qu(Nc(e),e);return{output:$i(Ai(r[0],e),Ai(h[0],n)),newStates:h.map(((t,s)=>$i(Ai(r[1][s],e),Ai(t,n))))}}));d=e.output,h=e.newStates}i&&c.push(d)}if(i){g=Pd(c,1)}return[d,g,h]}))}fk.className="DepthwiseConv2D",Mp(fk);class yk extends dx{constructor(e){let t;if(super(e),null==e.cell)throw new by("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Nk({cells:e.cell}):e.cell,null==t.stateSize)throw new by("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ox({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return cb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Yb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return mi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new xy("Constants support is not implemented in RNN yet.");Yb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ox({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!he(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new by(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new ox({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){mi((()=>{if(!this.stateful)throw new gy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new by("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>fc([n,e]))):this.states_=[fc([n,this.cell.stateSize])];else if(null==e)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>fc([n,e]))):this.states_[0]=fc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new by(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!he(r.shape,a))throw new by(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>yi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=mk(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ox({shape:e.shape}));o=o.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof ix){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return mi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Qb(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new by(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=gk(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=i[0],u=i[1],c=i[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return mi((()=>{let t=fc(e.shape);return t=xu(t,[1,2]),t=fb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?vb(t,[1,e]):t)):this.cell.stateSize>1?[vb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===yk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=lv(t.cell,n);return new e(Object.assign(t,{cell:r}))}}yk.className="RNN",Mp(yk);class bk extends dx{}class xk extends bk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zy(this.units,"units"),this.activation=_w(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ex(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return mi((()=>{if(2!==e.length)throw new by(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ck({ones:()=>Nc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ck({ones:()=>Nc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;s=kb(null!=a?Ai(e,a):e,this.kernel.read()),null!=this.bias&&(s=Cb(s,this.bias.read())),null!=o&&(n=Ai(n,o));let i=$i(s,kb(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ow(this.activation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}xk.className="SimpleRNNCell",Mp(xk);class vk extends yk{constructor(e){e.cell=new xk(e),super(e)}call(e,t){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}vk.className="SimpleRNN",Mp(vk);class wk extends bk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new by("GRUCell does not support reset_after parameter set to true.");this.units=e.units,zy(this.units,"units"),this.activation=_w(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=_w(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ex(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return mi((()=>{if(2!==e.length)throw new by(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ck({ones:()=>Nc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ck({ones:()=>Nc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,i,l;0<this.dropout&&this.dropout<1&&(e=Ai(e,s[0]));let u=kb(e,this.kernel.read());this.useBias&&(u=Cb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ai(r,a[0]));const c=this.recurrentKernel.read(),[d,h]=_d(c,[2*this.units,this.units],c.rank-1),p=kb(r,d),[f,m,g]=_d(u,3,u.rank-1),[y,b]=_d(p,2,p.rank-1);o=this.recurrentActivation.apply($i(f,y)),i=this.recurrentActivation.apply($i(m,b));const x=kb(Ai(i,r),h);l=this.activation.apply($i(g,x));const v=$i(Ai(o,r),Ai($i(1,Xu(o)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ow(this.activation),recurrentActivation:Ow(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}wk.className="GRUCell",Mp(wk);class kk extends yk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wk(e),super(e)}call(e,t){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}kk.className="GRU",Mp(kk);class Sk extends bk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,zy(this.units,"units"),this.activation=_w(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=_w(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Vw(e.kernelRegularizer),this.recurrentRegularizer=Vw(e.recurrentRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.kernelConstraint=Ax(e.kernelConstraint),this.recurrentConstraint=Ax(e.recurrentConstraint),this.biasConstraint=Ax(e.biasConstraint),this.dropout=lb([1,ub([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lb([1,ub([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ex(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ab{apply(t,r){const s=e.apply([n]),a=(new Ob).apply([n]),o=e.apply([2*n]);return xb(xb(s,a),o)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return mi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new by(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ck({ones:()=>Nc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ck({ones:()=>Nc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,l,u,c;0<this.dropout&&this.dropout<1&&(e=Ai(e,a[0]));let d=kb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ai(r,o[0])),d=$i(d,kb(r,this.recurrentKernel.read())),this.useBias&&(d=Cb(d,this.bias.read()));const[h,p,f,m]=_d(d,4,d.rank-1);i=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(p),u=$i(Ai(l,s),Ai(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ai(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ow(this.activation),recurrentActivation:Ow(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),recurrentInitializer:Kb(this.recurrentInitializer),biasInitializer:Kb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Bw(this.kernelRegularizer),recurrentRegularizer:Bw(this.recurrentRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),recurrentConstraint:Ex(this.recurrentConstraint),biasConstraint:Ex(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Sk.className="LSTMCell",Mp(Sk);class Ik extends yk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sk(e),super(e)}call(e,t){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ik.className="LSTM",Mp(Ik);class Nk extends bk{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return mi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],a=0===o?[e[0]].concat(n):[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Yb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{nb(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(lv(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return sx(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}ax(t)}}function Ck(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,o=()=>null!=a?a(t(),n):Tb(t(),n),i=()=>$b(o,t,r);if(!s||s<=1)return yi(i().clone());return Array(s).fill(void 0).map(i).map((e=>yi(e.clone())))}Nk.className="StackedRNNCells",Mp(Nk);var Tk=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class $k extends yk{constructor(e){if(e.unroll)throw new xy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ox({ndim:5})]}call(e,t){return mi((()=>{if(null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new by("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return mi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=fc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){mi((()=>{if(!this.stateful)throw new gy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new by("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>fc(s))):this.states_=[fc(s)];else if(null==e)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>fc(s))):this.states_[0]=fc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new by(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!he(n.shape,r))throw new by(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>yi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,l=e[i?3:2],u=e[i?4:3],c=Xw(l,r[0],s,a[0],o[0]),d=Xw(u,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,d]:[c,d,n]]}}$k.className="ConvRNN2D";class Ek extends Sk{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,zy(this.filters,"filters"),this.kernelSize=Kw(n,2,"kernelSize"),this.kernelSize.forEach((e=>zy(e,"kernelSize"))),this.strides=Kw(r||1,2,"strides"),this.strides.forEach((e=>zy(e,"strides"))),this.padding=s||"valid",Jy(this.padding),this.dataFormat=a||"channelsLast",Yy(this.dataFormat),this.dilationRate=Kw(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>zy(e,"dilationRate")))}build(e){var t;e=ex(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new by(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ab{apply(e,t){return bb([n.apply([r]),mc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return mi((()=>{if(3!==e.length)throw new by(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ck({ones:()=>Nc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Ai(t[n],e):e;let l=i(r,o,0),u=i(r,o,1),c=i(r,o,2),d=i(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ck({ones:()=>Nc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=i(s,h,0),f=i(s,h,1),m=i(s,h,2),g=i(s,h,3);const[y,b,x,v]=_d(this.kernel.read(),4,3),[w,k,S,I]=this.useBias?_d(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,S,this.padding),d=this.inputConv(d,v,I,this.padding);const[N,C,T,$]=_d(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply($i(l,p)),R=this.recurrentActivation.apply($i(u,f)),A=$i(Ai(R,a),Ai(E,this.activation.apply($i(c,m)))),F=Ai(this.recurrentActivation.apply($i(d,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Tk(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Al(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Cb(s,n,this.dataFormat):s}recurrentConv(e,t){return Al(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ek.className="ConvLSTM2DCell",Mp(Ek);class Rk extends $k{constructor(e){const t=new Ek(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Rk.className="ConvLSTM2D",Mp(Rk);class Ak extends dx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return $b((()=>Tb(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Ak.className="Dropout",Mp(Ak);class Fk extends Ak{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Fk.className="SpatialDropout1D",Mp(Fk);class Ok extends dx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,zy(this.units,"units"),this.activation=_w(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Xb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ax(e.kernelConstraint),this.biasConstraint=Ax(e.biasConstraint),this.kernelRegularizer=Vw(e.kernelRegularizer),this.biasRegularizer=Vw(e.biasRegularizer),this.activityRegularizer=Vw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ex(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ex(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e),r=By(this.activation.getClassName());let s;return null!=r?s=kb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=kb(n,this.kernel.read()),null!=this.bias&&(s=Cb(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Ow(this.activation),useBias:this.useBias,kernelInitializer:Kb(this.kernelInitializer),biasInitializer:Kb(this.biasInitializer),kernelRegularizer:Bw(this.kernelRegularizer),biasRegularizer:Bw(this.biasRegularizer),activityRegularizer:Bw(this.activityRegularizer),kernelConstraint:Ex(this.kernelConstraint),biasConstraint:Ex(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ok.className="Dense",Mp(Ok);class Dk extends dx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ex(e);for(const t of e.slice(1))if(null==t)throw new by(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ib(e,1)]}call(e,t){return mi((()=>{this.invokeCallHook(e,t);let n=Qb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=uh(n,e)}return function(e){if(e.rank<=1)throw new by(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ib(e.shape,1)];return ol(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Dk.className="Flatten",Mp(Dk);class _k extends dx{constructor(e){super(e),this.supportsMasking=!0,this.activation=_w(e.activation)}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ow(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}_k.className="Activation",Mp(_k);class Mk extends dx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return mi((()=>{return e=Qb(e),t=e,n=this.n,mi((()=>{if(2!==t.shape.length)throw new by(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return vb(fb(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Mk.className="RepeatVector",Mp(Mk);class Lk extends dx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new by("Can only specifiy one unknown dimension.");a=e}else s*=t}const o=ib(e);if(null!==a){if(0===s||o%s!=0)throw new by(n);r[a]=o/s}else if(o!==s)throw new by(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ol(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Lk.className="Reshape",Mp(Lk);class zk extends dx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=cb(1,e.dims.length+1);if(!he(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ox({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ex(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return uh(Qb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}zk.className="Permute",Mp(zk);class Pk extends dx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Qb(e);return Li(Sc(n,this.maskValue),-1)}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e),r=Li(Sc(n,this.maskValue),-1,!0);return Ai(n,si(r,n.dtype))}))}}Pk.className="Masking",Mp(Pk);class Bk extends dx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Cy(e.inputLength))}this.inputDim=e.inputDim,zy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,zy(this.outputDim,"outputDim"),this.embeddingsInitializer=Xb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Vw(e.embeddingsRegularizer),this.activityRegularizer=Vw(e.activityRegularizer),this.embeddingsConstraint=Ax(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return mi((()=>this.maskZero?(e=Qb(e),Sc(e,Jl(e))):null))}computeOutputShape(e){if(e=ex(e),null==this.inputLength)return[...e,this.outputDim];const t=Cy(this.inputLength);if(t.length!==e.length-1)throw new by(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new by(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return mi((()=>{this.invokeCallHook(e,t);let n=Qb(e);"int32"!==n.dtype&&(n=pb(n,"int32"));const r=Sb(this.embeddings.read(),ol(n,[n.size]));return ol(r,ex(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Kb(this.embeddingsInitializer),embeddingsRegularizer:Bw(this.embeddingsRegularizer),activityRegularizer:Bw(this.activityRegularizer),embeddingsConstraint:Ex(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="Embedding",Mp(Bk);class Wk extends dx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new by("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ex(e)]),e.length<2)throw new by(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Dy(t),t.length>1)throw new by(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Dy(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return mi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=ub(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=fb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let o=ol(r,[s].concat(ib(e.slice(1))));o=uh(o,[1,0]),o=ol(o,a),t.push(o),n=!0}else if(e>1){const s=cb(1,e).concat([0]);t.push(uh(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ol(uh(ol(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(cb(0,s-1));r=uh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Dy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return mi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new by("`mask` should be an Array");if(!Array.isArray(e))throw new by("`inputs` should be an Array");if(t.length!==e.length)throw new by(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Iu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=nc(n,t[e]);return n}))}}class Vk extends Wk{constructor(e){super(e)}mergeFunction(e){return mi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$i(t,e[n]);return t}))}}Vk.className="Add",Mp(Vk);class Uk extends Wk{constructor(e){super(e)}mergeFunction(e){return mi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ai(t,e[n]);return t}))}}Uk.className="Multiply",Mp(Uk);class Gk extends Wk{constructor(e){super(e)}mergeFunction(e){return mi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$i(t,e[n]);return Ai(1/e.length,t)}))}}Gk.className="Average",Mp(Gk);class Zk extends Wk{constructor(e){super(e)}mergeFunction(e){return mi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=hc(t,e[n]);return t}))}}Zk.className="Maximum",Mp(Zk);class jk extends Wk{constructor(e){super(e)}mergeFunction(e){return mi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=yc(t,e[n]);return t}))}}jk.className="Minimum",Mp(jk);class Hk extends Wk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new by("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(he(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new by("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return mi((()=>bb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new by("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new by("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new by("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new by(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return mi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(si(Nc(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Iu(t[n],-1)):r.push(t[n]);const s=ul(r,this.axis);return Mi(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function qk(e,t){for(;e<0;)e+=t;return e}Hk.className="Concatenate",Mp(Hk);class Kk extends Wk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new xy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new by(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new by(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>qk(t,e[n].shape.length))):[qk(this.axes,n.shape.length),qk(this.axes,r.shape.length)],this.normalize&&(n=uv(n,t[0]),r=uv(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xy("batchDot is not implemented for tensors of 4D or higher rank yet");if(oe(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),oe(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new xy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return mi((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=ol(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=ol(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=a[0]===a[1]?xu(Ai(e,t),a[0]):xu(Ai(uh(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;o=cl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=zd(o,t)}return 1===o.shape.length&&(o=Iu(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[qk(this.axes,e.length),qk(this.axes,t.length)],n}computeOutputShape(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new xy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Kk.className="Dot",Mp(Kk);class Xk extends dx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e);return $b((()=>$i(wb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Xk.className="GaussianNoise",Mp(Xk);class Yk extends dx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return mi((()=>{this.invokeCallHook(e,t);const n=Qb(e);if(this.rate>0&&this.rate<1){return $b((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ai(n,wb(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Yk.className="GaussianDropout",Mp(Yk);class Jk extends dx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Qb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return mi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Qb(e),r=-1.7580993408473766;let s=Au(id(n),this.rate);s=pb(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-a*r*this.rate,i=$i(Ai(t,s),Ai($i(s,-1),r));return $i(Ai(i,a),o)};return $b(r,(()=>Qb(e)),t.training||!1)}return e}))}}function Qk(e,t,n,r,s,a=.001){let o;if(2===e.rank)o=yl(e,t,n,r,s,a);else if(3===e.rank)o=bl(e,t,n,r,s,a);else{if(4!==e.rank)throw new xy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=xl(e,t,n,r,s,a)}return o}function eS(e,t,n,r,s=.001){return he(r.slice().sort(),cb(0,e.rank-1))?function(e,t,n,r,s=.001){return mi((()=>{const a=vc(e,r),o=a.mean,i=a.variance;return[Qk(e,o,i,n,t,s),o,i]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return mi((()=>{const a=vc(e,r),o=a.mean,i=a.variance,l=[];for(const t of cb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=ol(o,l),c=ol(i,l),d=null==t?null:ol(t,l),h=null==n?null:ol(n,l);return[Qk(e,u,c,h,d,s),o,i]}))}(e,t,n,r,s)}Jk.className="AlphaDropout",Mp(Jk);class tS extends dx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xb(e.betaInitializer||"zeros"),this.gammaInitializer=Xb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Xb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ax(e.betaConstraint),this.gammaConstraint=Ax(e.gammaConstraint),this.betaRegularizer=Vw(e.betaRegularizer),this.gammaRegularizer=Vw(e.gammaRegularizer)}build(e){e=ex(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new by(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ox({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return mi((()=>{const n=null!=t.training&&t.training,r=Qb(e),s=r.shape,a=s.length,o=cb(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const l=ky(1,a);l[i]=s[i];const u=o.slice();u.sort();const c=!he(u,cb(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=ol(this.movingMean.read(),l),t=ol(this.movingVariance.read(),l),n=this.center?ol(this.beta.read(),l):null,s=this.scale?ol(this.gamma.read(),l):null;return Qk(r,e,t,n,s,this.epsilon)}return Qk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=eS(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{mi((()=>{const r=1-n,s=e.read(),a=Ai(Qu(s,t),r);e.write(Qu(s,a))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kb(this.betaInitializer),gammaInitializer:Kb(this.gammaInitializer),movingMeanInitializer:Kb(this.movingMeanInitializer),movingVarianceInitializer:Kb(this.movingVarianceInitializer),betaRegularizer:Bw(this.betaRegularizer),gammaRegularizer:Bw(this.gammaRegularizer),betaConstraint:Ex(this.betaConstraint),gammaConstraint:Ex(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}tS.className="BatchNormalization",Mp(tS);class nS extends dx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xb(e.betaInitializer||"zeros"),this.gammaInitializer=Xb(e.gammaInitializer||"ones"),this.betaRegularizer=Vw(e.betaRegularizer),this.gammaRegularizer=Vw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ex(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Dy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=Qb(e),r=n.shape,s=r.length;return mi((()=>{let{mean:e,variance:t}=vc(n,this.axis,!0);const a=ky(1,s);for(const e of this.axis)a[e]=r[e];const o=e=>null!=e&&e.shape.length!==s?ol(e,a):e;let i=this.scale?o(this.gamma.read()):null,l=this.center?o(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=Cu(e,u),t=Cu(t,u),null!=i&&(i=Cu(i,c)),null!=l&&(l=Cu(l,c)),Qk(n,e,t,l,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kb(this.betaInitializer),gammaInitializer:Kb(this.gammaInitializer),betaRegularizer:Bw(this.betaRegularizer),gammaRegularizer:Bw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}nS.className="LayerNormalization",Mp(nS);class rS extends dx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new by(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new by(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new by(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ox({ndim:4})]}computeOutputShape(e){let t,n;return e=ex(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return mi((()=>{return t=Qb(e),n=this.padding,r=this.dataFormat,mi((()=>{if(4!==t.rank)throw new by(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new by("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new by(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Tc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function sS(e,t,n,r,s,a){return mi((()=>{let o;Yy(s),Qy(a),Jy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Jw(e,s);const i="same"===r?"same":"valid";return o="max"===a?uc(e,t,n,i):il(e,t,n,i),"channelsFirst"===s&&(o=uh(o,[0,3,1,2])),o}))}function aS(e,t,n,r,s,a){return mi((()=>{let o;Yy(s),Qy(a),Jy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Qw(e,s);const i="same"===r?"same":"valid";return o="max"===a?cc(e,t,n,i):ll(e,t,n,i),"channelsFirst"===s&&(o=uh(o,[0,4,1,2,3])),o}))}rS.className="ZeroPadding2D",Mp(rS);class oS extends dx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new by(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(zy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new by(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}zy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Jy(this.padding),this.inputSpec=[new ox({ndim:3})]}computeOutputShape(e){const t=Xw((e=ex(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return mi((()=>{this.invokeCallHook(e,t),e=fb(Qb(e),2);const n=this.poolingFunction(Qb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zd(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class iS extends oS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),sS(e,t,n,r,s,"max")}}iS.className="MaxPooling1D",Mp(iS);class lS extends oS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),sS(e,t,n,r,s,"avg")}}lS.className="AveragePooling1D",Mp(lS);class uS extends dx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new by(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];zy(this.poolSize,"poolSize"),zy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),Jy(this.padding),this.inputSpec=[new ox({ndim:4})]}computeOutputShape(e){e=ex(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Xw(t,this.poolSize[0],this.padding,this.strides[0]),n=Xw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return mi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class cS extends uS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),sS(e,t,n,r,s,"max")}}cS.className="MaxPooling2D",Mp(cS);class dS extends uS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),sS(e,t,n,r,s,"avg")}}dS.className="AveragePooling2D",Mp(dS);class hS extends dx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new by(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];zy(this.poolSize,"poolSize"),zy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),Jy(this.padding),this.inputSpec=[new ox({ndim:5})]}computeOutputShape(e){e=ex(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Xw(t,this.poolSize[0],this.padding,this.strides[0]),n=Xw(n,this.poolSize[1],this.padding,this.strides[1]),r=Xw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return mi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pS extends hS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),aS(e,t,n,r,s,"max")}}pS.className="MaxPooling3D",Mp(pS);class fS extends hS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Yy(s),Jy(r),aS(e,t,n,r,s,"avg")}}fS.className="AveragePooling3D",Mp(fS);class mS extends dx{constructor(e){super(e),this.inputSpec=[new ox({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xy}}class gS extends mS{constructor(e){super(e||{})}call(e,t){return mi((()=>{const t=Qb(e);return pc(t,1)}))}}gS.className="GlobalAveragePooling1D",Mp(gS);class yS extends mS{constructor(e){super(e||{})}call(e,t){return mi((()=>{const t=Qb(e);return pu(t,1)}))}}yS.className="GlobalMaxPooling1D",Mp(yS);class bS extends dx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yy(this.dataFormat),this.inputSpec=[new ox({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xS extends bS{call(e,t){return mi((()=>{const t=Qb(e);return"channelsLast"===this.dataFormat?pc(t,[1,2]):pc(t,[2,3])}))}}xS.className="GlobalAveragePooling2D",Mp(xS);class vS extends bS{call(e,t){return mi((()=>{const t=Qb(e);return"channelsLast"===this.dataFormat?pu(t,[1,2]):pu(t,[2,3])}))}}vS.className="GlobalMaxPooling2D",Mp(vS);class wS extends dx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=lv(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class kS extends wS{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ex(e)).length<3)throw new by(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ex(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return mi((()=>gk(((e,n)=>[Qb(this.layer.call(e,t)),[]]),e=Qb(e),[],!1,null,null,!1,!0)[1]))}}kS.className="TimeDistributed",Mp(kS);class SS extends wS{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=lv(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=lv(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,My(Ky,"BidirectionalMergeMode",s),e.weights)throw new xy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Ny(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=mk(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new by("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new ox({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new xy("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof ix;for(const e of a)if(e instanceof ix!==i)throw new by("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return mi((()=>{const n=t.initialState;let r,s,a,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=fd(s,1)),"concat"===this.mergeMode?o=bb([r,s]):"sum"===this.mergeMode?o=$i(r,s):"ave"===this.mergeMode?o=Ai(.5,$i(r,s)):"mul"===this.mergeMode?o=Ai(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nb(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),nb(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=lv(t.layer);if(delete t.layer,null!=t.numConstants)throw new xy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}SS.className="Bidirectional",Mp(SS);class IS extends dx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return mi((()=>("float32"!==(e=Qb(e)).dtype&&(e=pb(e,"float32")),$i(Ai(e,this.scale),this.offset))))}}IS.className="Rescaling",Mp(IS);const{resizeBilinear:NS,cropAndResize:CS}=Tp;class TS extends dx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,o,i){return mi((()=>{let l,u=!1;const c=[t/a,n/o,(r+t)/a,(s+n)/o],d=[];3===e.rank?(u=!0,l=Pd([e])):l=e;for(let e=0;e<l.shape[0];e++)d.push(c);const h=eo(d,[d.length,4]),p=ud(0,d.length,1,"int32"),f=CS(l,h,p,[r,s],"nearest");return pb(u?Qb(rh(f)):f,i)}))}upsize(e,t,n,r){return mi((()=>pb(NS(e,[t,n]),r)))}call(e,t){return mi((()=>{const t=Qb(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let i=0;return a!==this.width&&(i=Math.floor((a-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ex(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}TS.className="CenterCrop",Mp(TS);class $S extends dx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=ex(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return mi((()=>{let n;if("int32"!==(e=Qb(e)).dtype&&(e=pb(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new by(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Qb(t.countWeights)}const r=pu(e),s=fu(e),a=Ru(this.numTokens,r).bufferSync().get(0),o=Au(s,0).bufferSync().get(0);if(!a||!o)throw new by(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=Qb(e);if("int32"!==s.dtype&&(s=pb(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=Iu(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Iu(s,-1)),s.rank>2)throw new by(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const o=["multiHot","oneHot"].includes(t),i=s;let l;if(l=Vl(i,void 0!==r&&"count"===t?r:[],n,o),"tfIdf"!==t)return l;if(r)return Ai(l,r);throw new by("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}$S.className="CategoryEncoding",Mp($S);const ES=new Set(["bilinear","nearest"]);class RS extends dx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!ES.has(e.interpolation))throw new by(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=ex(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return mi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Tp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Tp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...ES]} are supported`)}))}}RS.className="Resizing",Mp(RS);class AS{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}AS.className="RandomSeed";class FS extends dx{constructor(e){super(e),this.randomGenerator=new AS(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}FS.className="BaseRandomLayer";const OS=new Set(["bilinear","nearest"]);class DS extends FS{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new by(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new by(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new by(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!OS.has(n))throw new by(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ex(e))[2];return[this.imgHeight,-1,t]}call(e,t){return mi((()=>{const t=Qb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=id([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Tp.resizeBilinear(e,s);case"nearest":return Tp.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...OS]} are supported`)}}))}}function _S(e){return new px(e)}function MS(e){return new jw(e)}function LS(e){return new Uw(e)}function zS(e){return new Gw(e)}function PS(e){return new Zw(e)}function BS(e){return new qw(e)}function WS(e){return new Hw(e)}function VS(e){return new dk(e)}function US(e){return new ak(e)}function GS(e){return new ik(e)}function ZS(e){return new ok(e)}function jS(e){return new lk(e)}function HS(e){return new ck(e)}function qS(e){return new hk(e)}function KS(e){return new pk(e)}function XS(e){return new fk(e)}function YS(e){return new _k(e)}function JS(e){return new Ok(e)}function QS(e){return new Ak(e)}function eI(e){return new Fk(e)}function tI(e){return new Dk(e)}function nI(e){return new Mk(e)}function rI(e){return new Lk(e)}function sI(e){return new zk(e)}function aI(e){return new Bk(e)}function oI(e){return new Vk(e)}function iI(e){return new Gk(e)}function lI(e){return new Hk(e)}function uI(e){return new Zk(e)}function cI(e){return new jk(e)}function dI(e){return new Uk(e)}function hI(e){return new Kk(e)}function pI(e){return new tS(e)}function fI(e){return new nS(e)}function mI(e){return new rS(e)}function gI(e){return new lS(e)}function yI(e){return gI(e)}function bI(e){return gI(e)}function xI(e){return new dS(e)}function vI(e){return xI(e)}function wI(e){return xI(e)}function kI(e){return new fS(e)}function SI(e){return kI(e)}function II(e){return kI(e)}function NI(e){return new gS(e)}function CI(e){return new xS(e)}function TI(e){return new yS(e)}function $I(e){return new vS(e)}function EI(e){return new iS(e)}function RI(e){return new cS(e)}function AI(e){return new pS(e)}function FI(e){return new kk(e)}function OI(e){return new wk(e)}function DI(e){return new Ik(e)}function _I(e){return new Sk(e)}function MI(e){return new vk(e)}function LI(e){return new xk(e)}function zI(e){return new Rk(e)}function PI(e){return new Ek(e)}function BI(e){return new yk(e)}function WI(e){return new Nk(e)}function VI(e){return new SS(e)}function UI(e){return new kS(e)}DS.className="RandomWidth",Mp(DS);const GI=TI,ZI=$I,jI=EI,HI=RI;function qI(e){return new Xk(e)}function KI(e){return new Yk(e)}function XI(e){return new Jk(e)}function YI(e){return new Pk(e)}function JI(e){return new IS(e)}function QI(e){return new TS(e)}function eN(e){return new RS(e)}function tN(e){return new $S(e)}function nN(e){return new DS(e)}function rN(e,t){return wv(e,t)}function sN(e,t){return Cv(e,t)}function aN(e,t){return Tv(e,t)}function oN(e,t){return kv(e,t)}function iN(e,t){return $v(e,t)}function lN(e,t){return Iv(e,t)}function uN(e,t){return Nv(e,t)}function cN(e,t){return bv(e,t)}function dN(e,t){return dv(e,t)}function hN(e,t){return hv(e,t)}function pN(e,t){return hv(e,t)}function fN(e,t){return hv(e,t)}function mN(e,t){return cv(e,t)}function gN(e,t){return cv(e,t)}function yN(e,t){return cv(e,t)}function bN(e){return new zw(e)}function xN(e){return Mw(t=e),new zw({l1:null!=t?t.l1:null,l2:0});var t}function vN(e){return Mw(t=e),new zw({l2:null!=t?t.l2:null,l1:0});var t}class wN extends ev{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof uw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function kN(e,t){return e<t}function SN(e,t){return e>t}class IN extends wN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new xy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=kN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=SN:this.monitorFunc=kN,this.monitorFunc===kN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===kN?1/0:-1/0}async onEpochEnd(e,t){await Yx(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const NN={earlyStopping:function(e){return new IN(e)}};var CN,TN;Ke().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(CN||(CN={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(TN||(TN={}));const $N={};function EN(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};$N[e]=n}function RN(e){return $N[e]}function AN(e){delete $N[e]}function FN(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return ON(t.inputNames[i],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>ON(e,n,r,s)))}const l=ON(t.inputNames[i],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:Le(l.shape,u)}const o=t.attrParams[e];return o&&o.value}function ON(e,t,n,r){const[s,a]=LN(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[MN(s,e)]));return void 0!==o?t[MN(s,o)][a]:void 0}function DN(e,t,n){return t[MN(e,n.currentContextId)]}function _N(e,t){const[n,r,s]=LN(e,t);return[MN(n,t&&t.currentContextId),r,s]}function MN(e,t){return t?`${e}-${t}`:e}function LN(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function zN(e,t,n){let r=FN("pad",e,t,n);if("explicit"===r){r=FN("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function PN(e){return e.kept?e:ai(e)}const BN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],UN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],GN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],ZN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],HN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],qN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],KN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],XN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],YN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],JN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],QN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],eC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],tC=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],nC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],rC=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],sC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var aC=n(58955).lW;class oC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,C,T,$,E,R,A,F,O,D,_,M,L,z,P,B,W,V,U].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=_N(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=o[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=_N(e),n=o[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=_N(e),n=o[t];n&&(n.signatureKey=u[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:l,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=RN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=lC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=bC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=cC(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=cC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=yC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=uC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=vC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=gC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=xC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=pC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=fC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=hC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=_N(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dC(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=_N(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=_N(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function iC(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ke().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==aC)return new aC(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function lC(e,t,n,r=!1){const s=e[t];return null!=s?iC(s.s,r):n}function uC(e,t,n){const r=e[t];return r?r.b:n}function cC(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function dC(e){switch("string"==typeof e&&(e=CN[e]),e){case CN.DT_FLOAT:case CN.DT_HALF:return"float32";case CN.DT_INT32:case CN.DT_INT64:case CN.DT_INT8:case CN.DT_UINT8:return"int32";case CN.DT_BOOL:return"bool";case CN.DT_DOUBLE:return"float32";case CN.DT_STRING:return"string";default:return null}}function hC(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function pC(e,t,n){const r=e[t];return r&&r.type?dC(r.type):n}function fC(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>dC(e))):n}function mC(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function gC(e,t,n){const r=e[t];return r&&r.shape?mC(r.shape):n}function yC(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function bC(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>iC(e,r))):n}function xC(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>mC(e))):n}function vC(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class wC{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ON(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ON(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return cC(this.node.rawAttrs,e,t);if(null!=n.s)return lC(this.node.rawAttrs,e,t);if(null!=n.b)return uC(this.node.rawAttrs,e,t);if(null!=n.shape)return gC(this.node.rawAttrs,e,t);if(null!=n.type)return pC(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return yC(this.node.rawAttrs,e,t);if(null!=n.list.s)return bC(this.node.rawAttrs,e,t);if(null!=n.list.shape)return xC(this.node.rawAttrs,e,t);if(null!=n.list.b)return vC(this.node.rawAttrs,e,t);if(null!=n.list.type)return fC(this.node.rawAttrs,e,t)}return t}}function kC(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){oe(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];oe(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function SC(e){return"number"!=typeof e&&!e.some((e=>e<0))}function IC(e,t,n){let r=NC(e,n);const s=!SC(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=NC(e.shape,r)})),!SC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function NC(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class CC{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=gu(0),yi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),kC(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,yi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return eo([],[0].concat(this.elementShape));const n=this.readMany(e);return kC(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Pd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return eo([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return kC(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ul(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,rh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];mi((()=>{t=ol(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=ol(hl(t,o,i),this.elementShape)}return a}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,a)}}class TC{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);kC(t,e.shape,"TensorList shape mismatch: "),yi(e)})),this.idTensor=gu(0),this.maxNumElements=r,yi(this.idTensor)}copy(){return new TC([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);kC(e,this.elementShape,"TensorList shape mismatch: ");const r=IC(this.elementShape,this.tensors,e);return mi((()=>{const e=this.tensors.map((e=>ol(e,r)));return Pd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=IC(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,kC(r.shape,e,"TensorList shape mismatch: "),ol(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(kC(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");yi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new TC([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);kC(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=IC(this.elementShape,this.tensors,t);return ol(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);kC(this.elementShape,t.shape,"TensorList shape mismatch: "),yi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);kC(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=IC(this.elementShape,this.tensors,n);return 0===e.length?eo([],[0].concat(r)):mi((()=>{const t=e.map((e=>ol(this.tensors[e],r)));return Pd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);kC(this.elementShape,t,"TensorList shape mismatch: ");const n=IC(this.elementShape,this.tensors,t);return 0===this.size()?eo([],[0].concat(n)):mi((()=>{const e=this.tensors.map((e=>ol(e,n)));return ul(e,0)}))}}const $C=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=FN("thenBranch",e,t,n),s=FN("elseBranch",e,t,n),a=FN("cond",e,t,n),o=FN("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=FN("body",e,t,n),s=FN("cond",e,t,n),a=FN("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let l=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[PN(FN("pred",e,t,n))];case"Switch":{const r=FN("pred",e,t,n);let s=FN("data",e,t,n);return s.kept||(s=PN(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==ON(e,t,n)));if(r){return[PN(ON(r,t,n))]}return}case"Enter":{const r=FN("frameName",e,t,n),s=FN("tensor",e,t,n);return n.enterFrame(r),[PN(s)]}case"Exit":{const r=FN("tensor",e,t,n);return n.exitFrame(),[PN(r)]}case"NextIteration":{const r=FN("tensor",e,t,n);return n.nextIteration(),[PN(r)]}case"TensorArrayV3":{const r=FN("size",e,t,n),s=FN("dtype",e,t,n),a=FN("elementShape",e,t,n),o=FN("dynamicSize",e,t,n),i=FN("clearAfterRead",e,t,n),l=FN("identicalElementShapes",e,t,n),u=FN("name",e,t,n),c=new CC(u,s,r,a,l,o,i);return n.addTensorArray(c),[c.idTensor,gu(1)]}case"TensorArrayWriteV3":{const r=FN("tensorArrayId",e,t,n),s=FN("index",e,t,n),a=FN("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=FN("tensorArrayId",e,t,n),s=FN("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=FN("tensorArrayId",e,t,n),s=FN("indices",e,t,n),a=FN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=FN("tensorArrayId",e,t,n),s=FN("indices",e,t,n),a=FN("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=FN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=FN("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=FN("tensorArrayId",e,t,n),s=FN("tensor",e,t,n),a=FN("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=FN("tensorArrayId",e,t,n);return[gu(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=FN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=FN("tensorListId",e,t,n),s=FN("index",e,t,n),a=FN("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=FN("tensorListId",e,t,n),s=FN("index",e,t,n),a=FN("elementShape",e,t,n),o=FN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=FN("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new TC([],n,e.dtype,r),o=rh(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(FN("tensor",e,t,n),r,FN("elementShape",e,t,n),FN("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=FN("elementShape",e,t,n),s=FN("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=FN(a,e,t,n),i=function(e,t,n,r){return new TC([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=FN("tensorListId",e,t,n),s=FN("indices",e,t,n),a=FN("elementShape",e,t,n),o=FN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=FN("tensorListId",e,t,n),s=FN("elementShape",e,t,n),a=FN("elementDType",e,t,n),o=FN("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);kC(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=rh(e);return new TC(s,t,r)}(FN("tensor",e,t,n),FN("elementShape",e,t,n),FN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=FN("tensorListId",e,t,n),s=n.getTensorList(r.id),a=FN("dtype",e,t,n),o=FN("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=FN("tensorListId",e,t,n),s=FN("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=FN("tensorListId",e,t,n),s=FN("elementShape",e,t,n),a=FN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=FN("tensor",e,t,n),s=FN("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=NC(e.shape.slice(1),n),o=0===r?0:e.size/r,i=mi((()=>{const n=[];e=ol(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],l=[1,t[r],o];n[r]=ol(hl(e,i,l),a)}return e.dispose(),n})),l=new TC([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)l.setItem(e,i[e]);return l}(r,FN("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=FN("tensorListId",e,t,n);return[gu(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=FN("tensorListId",e,t,n),s=FN("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function EC(e,t,n){const[r,s]=FN("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,l="fusedbatchnorm"===r,u=FN("numArgs",e,t,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=FN("strides",e,t,n),d=zN(e,t,n),h=FN("dataFormat",e,t,n).toUpperCase(),p=FN("dilations",e,t,n);let[f,m]=FN("args",e,t,n);o&&(m=f,f=void 0);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:FN("leakyreluAlpha",e,t,n)}}function RC(e,t,n){return{boxes:FN("boxes",e,t,n),scores:FN("scores",e,t,n),maxOutputSize:FN("maxOutputSize",e,t,n),iouThreshold:FN("iouThreshold",e,t,n),scoreThreshold:FN("scoreThreshold",e,t,n),softNmsSigma:FN("softNmsSigma",e,t,n)}}class AC{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=gu(0),this.tensorMap=new Map,yi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return gu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),mi((()=>{const e=rh(t),r=n.length,s=e.length;oe(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];yi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return mi((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Pd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function FC(e,t,n,r,s=mi){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(FN("a",e,t,n),FN("b",e,t,n))];case"AddN":return[r.addN(FN("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(FN("a",e,t,n),FN("b",e,t,n))];case"Mul":return[r.mul(FN("a",e,t,n),FN("b",e,t,n))];case"RealDiv":case"Div":return[r.div(FN("a",e,t,n),FN("b",e,t,n))];case"DivNoNan":return[r.divNoNan(FN("a",e,t,n),FN("b",e,t,n))];case"FloorDiv":return[r.floorDiv(FN("a",e,t,n),FN("b",e,t,n))];case"Sub":return[r.sub(FN("a",e,t,n),FN("b",e,t,n))];case"Minimum":return[r.minimum(FN("a",e,t,n),FN("b",e,t,n))];case"Maximum":return[r.maximum(FN("a",e,t,n),FN("b",e,t,n))];case"Pow":return[r.pow(FN("a",e,t,n),FN("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(FN("a",e,t,n),FN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(FN("x",e,t,n))];case"Acos":return[r.acos(FN("x",e,t,n))];case"Acosh":return[r.acosh(FN("x",e,t,n))];case"Asin":return[r.asin(FN("x",e,t,n))];case"Asinh":return[r.asinh(FN("x",e,t,n))];case"Atan":return[r.atan(FN("x",e,t,n))];case"Atan2":return[r.atan2(FN("x",e,t,n),FN("y",e,t,n))];case"Atanh":return[r.atanh(FN("x",e,t,n))];case"Ceil":return[r.ceil(FN("x",e,t,n))];case"Complex":return[r.complex(FN("real",e,t,n),FN("imag",e,t,n))];case"Cos":return[r.cos(FN("x",e,t,n))];case"Cosh":return[r.cosh(FN("x",e,t,n))];case"Elu":return[r.elu(FN("x",e,t,n))];case"Erf":return[r.erf(FN("x",e,t,n))];case"Exp":return[r.exp(FN("x",e,t,n))];case"Expm1":return[r.expm1(FN("x",e,t,n))];case"Floor":return[r.floor(FN("x",e,t,n))];case"Log":return[r.log(FN("x",e,t,n))];case"Log1p":return[r.log1p(FN("x",e,t,n))];case"Imag":return[r.imag(FN("x",e,t,n))];case"Neg":return[r.neg(FN("x",e,t,n))];case"Reciprocal":return[r.reciprocal(FN("x",e,t,n))];case"Real":return[r.real(FN("x",e,t,n))];case"Relu":return[r.relu(FN("x",e,t,n))];case"Round":return[r.round(FN("x",e,t,n))];case"Selu":return[r.selu(FN("x",e,t,n))];case"Sigmoid":return[r.sigmoid(FN("x",e,t,n))];case"Sin":return[r.sin(FN("x",e,t,n))];case"Sign":return[r.sign(FN("x",e,t,n))];case"Sinh":return[r.sinh(FN("x",e,t,n))];case"Softplus":return[r.softplus(FN("x",e,t,n))];case"Sqrt":return[r.sqrt(FN("x",e,t,n))];case"Square":return[r.square(FN("x",e,t,n))];case"Tanh":return[r.tanh(FN("x",e,t,n))];case"Tan":return[r.tan(FN("x",e,t,n))];case"ClipByValue":return[r.clipByValue(FN("x",e,t,n),FN("clipValueMin",e,t,n),FN("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(FN("x",e,t,n))];case"Rsqrt":return[r.rsqrt(ON(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(FN("x",e,t,n),FN("alpha",e,t,n))];case"Prelu":return[r.prelu(FN("x",e,t,n),FN("alpha",e,t,n))];case"IsNan":return[r.isNaN(ON(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(ON(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(ON(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return $C(e,t,n);case"convolution":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Conv1D":{const s=FN("stride",e,t,n),a=FN("pad",e,t,n),o=FN("dataFormat",e,t,n).toUpperCase(),i=FN("dilation",e,t,n);return[r.conv1d(FN("x",e,t,n),FN("filter",e,t,n),s,a,o,i)]}case"Conv2D":{const s=FN("strides",e,t,n),a=zN(e,t,n),o=FN("dataFormat",e,t,n).toUpperCase(),i=FN("dilations",e,t,n);return[r.conv2d(FN("x",e,t,n),FN("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=EC(e,t,n);return[r.fused.conv2d({x:FN("x",e,t,n),filter:FN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=EC(e,t,n);return[r.fused.depthwiseConv2d({x:FN("x",e,t,n),filter:FN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=FN("outputShape",e,t,n),a=FN("strides",e,t,n),o=zN(e,t,n);return[r.conv2dTranspose(FN("x",e,t,n),FN("filter",e,t,n),s,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=FN("strides",e,t,n),a=zN(e,t,n),o=FN("dilations",e,t,n),i=FN("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(FN("input",e,t,n),FN("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("dataFormat",e,t,n).toUpperCase(),i=FN("dilations",e,t,n);return[r.conv3d(FN("x",e,t,n),FN("filter",e,t,n),[s[1],s[2],s[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("kernelSize",e,t,n);return[r.avgPool(FN("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("kernelSize",e,t,n);return[r.maxPool(FN("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("kernelSize",e,t,n),i=FN("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(FN("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a,i);return[l,u]}case"AvgPool3D":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("kernelSize",e,t,n);return[r.avgPool3d(FN("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("kernelSize",e,t,n);return[r.maxPool3d(FN("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=FN("strides",e,t,n),a=FN("pad",e,t,n),o=FN("dilations",e,t,n),i=s[1],l=s[2],u=o[1],c=o[2];return[r.dilation2d(FN("x",e,t,n),FN("filter",e,t,n),[i,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Fill":{const s=FN("shape",e,t,n),a=FN("dtype",e,t,n),o=FN("value",e,t,n);return[r.fill(s,o,a)]}case"LinSpace":{const s=FN("start",e,t,n),a=FN("stop",e,t,n),o=FN("num",e,t,n);return[r.linspace(s,a,o)]}case"Multinomial":{const s=FN("logits",e,t,n),a=FN("numSamples",e,t,n),o=FN("seed",e,t,n);return[r.multinomial(s,a,o)]}case"OneHot":{const s=FN("indices",e,t,n),a=FN("depth",e,t,n),o=FN("onValue",e,t,n),i=FN("offValue",e,t,n),l=FN("dtype",e,t,n);return[r.oneHot(s,a,o,i,l)]}case"Ones":return[r.ones(FN("shape",e,t,n),FN("dtype",e,t,n))];case"OnesLike":return[r.onesLike(FN("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(FN("shape",e,t,n),FN("dtype",e,t,n),FN("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(FN("shape",e,t,n),FN("minval",e,t,n),FN("maxval",e,t,n),FN("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(FN("shape",e,t,n),FN("minval",e,t,n),FN("maxval",e,t,n),FN("seed",e,t,n))];case"Range":{const s=FN("start",e,t,n),a=FN("stop",e,t,n),o=FN("step",e,t,n);return[r.range(s,a,o,FN("dtype",e,t,n))]}case"TruncatedNormal":{const s=FN("shape",e,t,n),a=FN("mean",e,t,n),o=FN("stdDev",e,t,n),i=FN("seed",e,t,n);return[r.truncatedNormal(s,a,o,FN("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(FN("shape",e,t,n),FN("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(FN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=G)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=RC(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=RC(e,t,n),u=FN("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,o,i,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=RC(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,l)]}case"Where":{const r=s.cast(FN("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(FN("x",e,t,n),FN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"LowerBound":{const s=FN("sortedSequence",e,t,n),a=FN("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=FN("x",e,t,n),a=FN("k",e,t,n),o=FN("sorted",e,t,n),i=r.topk(s,a,o);return[i.values,i.indices]}case"UpperBound":{const s=FN("sortedSequence",e,t,n),a=FN("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=FN("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=FN("x",e,t,n),a=FN("axis",e,t,n),o=r.unique(s,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"ResizeBilinear":{const s=FN("images",e,t,n),a=FN("size",e,t,n),o=FN("alignCorners",e,t,n),i=FN("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const s=FN("images",e,t,n),a=FN("size",e,t,n),o=FN("alignCorners",e,t,n),i=FN("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],o,i)]}case"CropAndResize":{const s=FN("image",e,t,n),a=FN("boxes",e,t,n),o=FN("boxInd",e,t,n),i=FN("cropSize",e,t,n),l=FN("method",e,t,n),u=FN("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,o,i,l,u)]}case"ImageProjectiveTransformV3":{const s=FN("images",e,t,n),a=FN("transforms",e,t,n),o=FN("outputShape",e,t,n),i=FN("fillValue",e,t,n),l=FN("interpolation",e,t,n),u=FN("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=FN("default",e,t,n);return[ON(e.name,t,n)||s];case"Placeholder":return[ON(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[PN(FN("x",e,t,n))];case"IdentityN":return FN("x",e,t,n).map((e=>PN(e)));case"Shape":return[r.tensor1d(FN("x",e,t,n).shape,"int32")];case"ShapeN":return FN("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(FN("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(FN("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=FN("x",e,t,n),o=FN("data",e,t,n),i=FN("message",e,t,n),l=FN("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Equal":return[r.equal(FN("a",e,t,n),FN("b",e,t,n))];case"NotEqual":return[r.notEqual(FN("a",e,t,n),FN("b",e,t,n))];case"Greater":return[r.greater(FN("a",e,t,n),FN("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(FN("a",e,t,n),FN("b",e,t,n))];case"Less":return[r.less(FN("a",e,t,n),FN("b",e,t,n))];case"LessEqual":return[r.lessEqual(FN("a",e,t,n),FN("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(FN("a",e,t,n),FN("b",e,t,n))];case"LogicalNot":return[r.logicalNot(FN("a",e,t,n))];case"LogicalOr":return[r.logicalOr(FN("a",e,t,n),FN("b",e,t,n))];case"Select":case"SelectV2":return[r.where(FN("condition",e,t,n),FN("a",e,t,n),FN("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(FN("a",e,t,n),FN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(FN("a",e,t,n),FN("b",e,t,n),FN("transposeA",e,t,n),FN("transposeB",e,t,n))];case"Einsum":return[r.einsum(FN("equation",e,t,n),...FN("tensors",e,t,n))];case"Transpose":return[r.transpose(FN("x",e,t,n),FN("perm",e,t,n))];case"_FusedMatMul":const[s,a]=FN("fusedOps",e,t,n),o="biasadd"===s,i="prelu"===a,l=FN("numArgs",e,t,n),u=FN("leakyreluAlpha",e,t,n);if(o){if(i&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=FN("args",e,t,n);return[r.fused.matMul({a:FN("a",e,t,n),b:FN("b",e,t,n),transposeA:FN("transposeA",e,t,n),transposeB:FN("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(FN("a",e,t,n),FN("numLower",e,t,n),FN("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(FN("x",e,t,n),FN("axis",e,t,n),FN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(FN("x",e,t,n),FN("mean",e,t,n),FN("variance",e,t,n),FN("offset",e,t,n),FN("scale",e,t,n),FN("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(FN("x",e,t,n),FN("radius",e,t,n),FN("bias",e,t,n),FN("alpha",e,t,n),FN("beta",e,t,n))];case"Softmax":return[r.softmax(FN("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(FN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(FN("paramsNestedSplits",e,t,n),FN("paramsDenseValues",e,t,n),FN("indices",e,t,n),FN("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(FN("starts",e,t,n),FN("limits",e,t,n),FN("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(FN("shape",e,t,n),FN("values",e,t,n),FN("defaultValue",e,t,n),FN("rowPartitionTensors",e,t,n),FN("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Max":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.max(FN("x",e,t,n),s,a)]}case"Mean":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.mean(FN("x",e,t,n),s,a)]}case"Min":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.min(FN("x",e,t,n),s,a)]}case"Sum":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.sum(FN("x",e,t,n),s,a)]}case"All":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.all(FN("x",e,t,n),s,a)]}case"Any":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.any(FN("x",e,t,n),s,a)]}case"ArgMax":{const s=FN("axis",e,t,n);return[r.argMax(FN("x",e,t,n),s)]}case"ArgMin":{const s=FN("axis",e,t,n);return[r.argMin(FN("x",e,t,n),s)]}case"Prod":{const s=FN("axis",e,t,n),a=FN("keepDims",e,t,n);return[r.prod(FN("x",e,t,n),s,a)]}case"Cumprod":{const s=FN("axis",e,t,n),a=FN("exclusive",e,t,n),o=FN("reverse",e,t,n);return[r.cumprod(FN("x",e,t,n),s,a,o)]}case"Cumsum":{const s=FN("axis",e,t,n),a=FN("exclusive",e,t,n),o=FN("reverse",e,t,n);return[r.cumsum(FN("x",e,t,n),s,a,o)]}case"Bincount":const s=FN("x",e,t,n),a=FN("weights",e,t,n),o=FN("size",e,t,n);return[r.bincount(s,a,o)];case"DenseBincount":{const s=FN("x",e,t,n),a=FN("weights",e,t,n),o=FN("size",e,t,n),i=FN("binaryOutput",e,t,n);return[r.denseBincount(s,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=FN("n",e,t,n),a=FN("axis",e,t,n);let o=FN("tensors",e,t,n);return o=o.slice(0,s),[r.concat(o,a)]}case"Gather":{const s=FN("x",e,t,n),a=FN("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=FN("axis",e,t,n),a=FN("batchDims",e,t,n),o=FN("x",e,t,n),i=FN("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),s,a)]}case"Reverse":{const s=FN("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const o=FN("x",e,t,n);return[r.reverse(o,a)]}case"ReverseV2":{const s=FN("axis",e,t,n),a=FN("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=FN("begin",e,t,n),a=FN("size",e,t,n);return[r.slice(FN("x",e,t,n),s,a)]}case"StridedSlice":{const s=FN("begin",e,t,n),a=FN("end",e,t,n),o=FN("strides",e,t,n),i=FN("beginMask",e,t,n),l=FN("endMask",e,t,n),u=FN("ellipsisMask",e,t,n),c=FN("newAxisMask",e,t,n),d=FN("shrinkAxisMask",e,t,n),h=FN("x",e,t,n);return[r.stridedSlice(h,s,a,o,i,l,u,c,d)]}case"Pack":return mi((()=>{const s=FN("axis",e,t,n),a=FN("tensors",e,t,n),o=a[0].shape,i=r.squeeze(a[0]).shape,l=a.map((e=>{const t=he(e.shape,o);if(!t&&!he(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(l,s)]}));case"Unpack":{const s=FN("axis",e,t,n),a=FN("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=FN("reps",e,t,n);return[r.tile(FN("x",e,t,n),s)]}case"Split":case"SplitV":{const s=FN("axis",e,t,n),a=FN("numOrSizeSplits",e,t,n),o=FN("x",e,t,n);return r.split(o,a,s)}case"ScatterNd":{const s=FN("indices",e,t,n),a=FN("values",e,t,n),o=FN("shape",e,t,n);return[r.scatterND(s,a,o)]}case"GatherNd":{const s=FN("x",e,t,n),a=FN("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=FN("sparseIndices",e,t,n),a=FN("outputShape",e,t,n),o=FN("sparseValues",e,t,n),i=FN("defaultValue",e,t,n);return[r.sparseToDense(s,o,a,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const s=FN("indices",e,t,n),a=FN("values",e,t,n),o=FN("tensor",e,t,n);return[r.tensorScatterUpdate(o,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(FN("indices",e,t,n),FN("values",e,t,n),FN("denseShape",e,t,n),FN("defaultValue",e,t,n));return[s,a,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(FN("inputIndices",e,t,n),FN("inputShape",e,t,n),FN("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(FN("data",e,t,n),FN("indices",e,t,n),FN("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(FN("data",e,t,n),FN("indices",e,t,n),FN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"FFT":return[r.fft(FN("x",e,t,n))];case"IFFT":return[r.ifft(FN("x",e,t,n))];case"RFFT":return[r.rfft(FN("x",e,t,n))];case"IRFFT":return[r.irfft(FN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(FN("input",e,t,n),FN("pattern",e,t,n),FN("rewrite",e,t,n),FN("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(FN("data",e,t,n),FN("dataSplits",e,t,n),FN("separator",e,t,n),FN("nGramWidths",e,t,n),FN("leftPad",e,t,n),FN("rightPad",e,t,n),FN("padWidth",e,t,n),FN("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:o}=r.string.stringSplit(FN("input",e,t,n),FN("delimiter",e,t,n),FN("skipEmpty",e,t,n));return[s,a,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(FN("input",e,t,n),FN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=G)=>{switch(e.op){case"Cast":return[r.cast(FN("x",e,t,n),FN("dtype",e,t,n))];case"ExpandDims":{const s=FN("axis",e,t,n);return[r.expandDims(FN("x",e,t,n),s)]}case"Squeeze":{const s=FN("axis",e,t,n);return[r.squeeze(FN("x",e,t,n),s)]}case"Reshape":return[r.reshape(FN("x",e,t,n),FN("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(FN("x",e,t,n),FN("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(FN("x",e,t,n),FN("padding",e,t,n),FN("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(FN("x",e,t,n),FN("padding",e,t,n),FN("constantValue",e,t,n))];case"SpaceToBatchND":{const s=FN("blockShape",e,t,n),a=FN("paddings",e,t,n);return[r.spaceToBatchND(FN("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=FN("blockShape",e,t,n),a=FN("crops",e,t,n);return[r.batchToSpaceND(FN("x",e,t,n),s,a)]}case"DepthToSpace":{const s=FN("blockSize",e,t,n),a=FN("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(FN("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(FN("x",e,t,n),FN("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(FN("s0",e,t,n),FN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=FN("keyDType",e,t,n),a=FN("valueDType",e,t,n),o=new AC(s,a);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=FN("tableHandle",e,t,n,r),a=FN("keys",e,t,n),o=FN("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=FN("tableHandle",e,t,n,r),a=FN("keys",e,t,n),o=FN("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=FN("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=RN(e.op);if(a&&a.customExecutor)return a.customExecutor(new wC(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ze(a)?a.then((e=>[].concat(e))):[].concat(a)}class OC{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function DC(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const l=new Set,u=new Set(Object.keys(e).map((e=>LN(e)[0])));r=r||[];const c=new Set(r.map((e=>LN(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(BC(e)||WC(e)||VC(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function _C(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>LN(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=i([...s,...e.weights,...a]).filter(o),u=i([...l,...Object.values(e.nodes)]).filter(o),c=new Map(u.map((e=>[e.name,e]))),d={};for(const e of u){d[e.name]=d[e.name]||0;for(const t of e.children)o(t)||(d[t.name]=Number.POSITIVE_INFINITY),d[t.name]=(d[t.name]||0)+1}const h=Object.entries(d).filter((([,e])=>0===e)).map((([e])=>e)),p=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const e of t.children.filter(o))0==--d[e.name]&&(p.push(e.name),h.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}const a=e.filter((e=>s.has(e.name)));return a}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),o=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(o)){if(!n.has(e.name))throw new MC(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new MC(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new MC(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new MC(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class MC extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const LC=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),zC=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),PC=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function BC(e){return LC.has(e.op)}function WC(e){return zC.has(e.op)}function VC(e){return PC.has(e.op)}class UC{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new UC(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=DC(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const o=_C(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>BC(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],i=e[r];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(s)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return yi(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[LN(e)[0]])),s=t.map((e=>LN(e)[0])),a=new Set(s);let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let l=this.compiledMap.get(i);null==l&&(l=this.compile(e,o),this.compiledMap.set(i,l));try{this.keepIntermediateTensors=Ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return mi((()=>{const n=new OC(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=LN(t,n),o=[];o[a]=e[t],r[s]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(o))}));const s=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=l;for(const e of o){if(r[e.name])continue;const t=FC(e,r,n,this._resourceManager);if(Ze(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,i.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>ON(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){if(!BC(t)&&!a.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(BC(e))continue;const t=DN(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function o(e){return BC(e)||s.has(e.name)}if(!BC(e)&&null!=a)for(const e of a){if(o(e))continue;const s=DN(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new OC(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,n),i=t.map((e=>ON(e,o,a))),l=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[LN(e)[0]])),o=n.map((e=>LN(e)[0])),i=new Set(o);let l=o.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:h}=DC(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=LN(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,i,m,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!BC(e)&&!ON(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,o,i,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&FN("isConstant",e.node,r,n)&&([c]=_N(e.node.name,n)),null==r[e.node.name]){const d=FC(e.node,r,n,this._resourceManager);c||([c]=_N(e.node.name,n));const h=n.currentContext;Ze(d)?u.push(d.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=_N(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ON(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ON(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=LN(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;oe(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&oe(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=LN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=LN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class GC{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const ZC="?tfjs-format=file",jC="model.json";class HC{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=d){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new GC}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ze(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new UC(oC.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=oC.Instance.transformGraph(e.modelInitializer);this.initializer=new UC(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof ga?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ga||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,o;const i=null===(o=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&gi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function qC(e,t={},n=d){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${jC}${ZC}`}(e));const r=new HC(e,t,n);return await r.load(),r}function KC(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");t=df(fo(n,yo(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=df(e)}const n=new HC(t);return n.load(),n}const XC="4.11.0";function YC(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(nT(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=YC(e[a],t,n,r);s[a]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function JC(e,t=eT){return QC(e,t)}function QC(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(nT(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=QC(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function eT(e){return null===e?null:nT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function tT(e,t){const n=new Map;YC(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Ze(t)){const r=await t;n.set(e,r)}}return YC(e,t,n)}function nT(e){let t=!1;if(Ke().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(88218);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ga)&&!(e instanceof Promise)&&!t)}function rT(e){return function(e,t){return YC(e,t)}(e,sT)}function sT(e){return e instanceof ga?{value:e.clone(),recurse:!1}:nT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class aT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class oT extends aT{constructor(){super(oT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function iT(e){return new dT(e)}function lT(e){return new hT(e)}function uT(e,t){return new ST(e,t)}oT.INITIAL_CAPACITY=32;class cT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new xT(this,e)}filter(e){return new yT(this,e)}map(e){return new bT(this,e)}mapAsync(e){return new vT(this,e)}serialMapAsync(e){return new vT(this,e).serial()}flatmap(e){return new kT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new gT(this,e,t)}columnMajorBatch(e,t=!0,n=eT){return this.rowMajorBatch(e,t).map((e=>JC(e,n)))}concatenate(e,t){return new ST(iT([this,e]),t)}take(e){return e<0||null==e?this:new mT(this,e)}skip(e){return e<0||null==e?this:new fT(this,e)}prefetch(e){return new CT(this,e)}shuffle(e,t){return new TT(this,e,t)}serial(){return new pT(this)}}class dT extends cT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:rT(e),done:!1}}}class hT extends cT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class pT extends cT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class fT extends cT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;gi(e.value)}return this.upstream.next()}}class mT extends cT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class gT extends cT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class yT extends cT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;gi(e.value)}}}class bT extends cT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Fa(e.value),n=this.transform(e.value),r=Fa(n);for(const e of t)Aa(e,r)||e.dispose();return{value:n,done:!1}}}class xT extends cT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class vT extends cT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Fa(e.value),n=await this.transform(e.value),r=Fa(n);for(const e of t)Aa(e,r)||e.dispose();return{value:n,done:!1}}}class wT extends cT{constructor(){super(),this.outputQueue=new oT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class kT extends wT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Fa(e.value),n=this.transform(e.value),r=Fa(n);this.outputQueue.pushAll(n);for(const e of t)Aa(e,r)||e.dispose();return!0}}class ST extends cT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var IT;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(IT||(IT={}));class NT extends cT{constructor(e,t=IT.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await tT(this.iterators,(function(e){if(e instanceof cT){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case IT.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case IT.SHORTEST:return{value:null,done:!0};case IT.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class CT extends cT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new aT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class TT extends CT{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Bc.alea(n||Ks().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class $T{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return oe(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ET((async()=>(await n.iterator()).columnMajorBatch(e,t,FT)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ET((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ET((async()=>(await t.iterator()).filter((t=>mi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ET((async()=>(await t.iterator()).map((t=>mi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ET((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ET((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ET((async()=>uT(lT((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ET((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Bc.alea(t||Ks().toString());return ET((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ET((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ET(e,t=null){return new class extends $T{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function RT(e){return ET((async()=>iT(e)),e.length)}function AT(e){if(!nT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return ET((async()=>function(e,t=IT.FAIL){return new NT(e,t)}(await tT(e,(e=>{if(e instanceof $T)return{value:e.iterator(),recurse:!1};if(nT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),IT.SHORTEST)),t)}function FT(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof ga||Qs(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ga?Pd(e):eo(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}$T.MAX_BUFFER_SIZE=1e4;class OT extends $T{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const DT='"',_T=Symbol("out"),MT=Symbol("field"),LT=Symbol("quote"),zT=Symbol("quoteafterquote"),PT=Symbol("quoteinquote");class BT extends $T{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&oe(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(oe(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new OT(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(oe(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){const i=t[s];let l=null;if(""===i)if(o&&void 0!==o.default)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(i);if(isNaN(e))l=o&&"bool"===o.dtype?this.getBoolean(i):i;else if(o&&o.dtype)switch(o.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(i)}else l=e}o&&o.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=_T;for(let t=0;t<s;t++)switch(a){case _T:switch(e.charAt(t)){case DT:r=t+1,a=LT;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=_T;break;default:a=MT,r=t}break;case MT:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),a=_T,r=t+1;break;case LT:if(e.charAt(t)===DT)a=zT;break;case zT:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=_T,r=t+1;break;case DT:a=LT;break;default:a=PT}break;case PT:if(e.charAt(t)===DT)a=LT}if(a===zT?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class WT extends cT{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Ke().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new WT(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ue(t));return n.set(e,n.length-e.length),eo(n,t)}}class VT extends cT{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ud([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=Gd([r,n,a,s],[1,4])}else this.cropBox=Gd([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Ke().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new VT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&oe("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Sf(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return mi((()=>{const t=Iu(si(e,"float32"),0);let n;n=Tp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return ol(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class UT{}class GT extends cT{split(e){return new ZT(this,e)}}class ZT extends GT{constructor(e,t){super(),this.upstream=e,this.impl=new jT(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class jT extends wT{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}var HT=n(58955).lW;class qT extends cT{decodeUTF8(){return new KT(this)}}class KT extends GT{constructor(e){super(),this.upstream=e,this.impl=new XT(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class XT extends wT{constructor(e){if(super(),this.upstream=e,Ke().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(89891);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ke().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(HT.from(t.buffer)),this.outputQueue.push(n),!0)}}class YT extends qT{constructor(e,t={}){super(),this.file=e,this.options=t,oe(e instanceof Uint8Array||!!Ke().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}const JT=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function QT(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class e$ extends UT{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(QT(this.input)&&Ke().get("IS_NODE")){const e=n(56064);this.input=e.readFileSync(this.input.slice(7))}return new YT(this.input,this.options)}}class t$ extends UT{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return QT(this.url)?new e$(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;"string"==typeof e?r=e:(r=e.url,s=JT(e));const a=await(n||Xs)(r,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new YT(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function n$(e,t={}){return new BT(new t$(e),t)}function r$(e){const t=lT(e);return ET((async()=>t))}function s$(e){return ET((async()=>{const t=await e();return lT((()=>t.next()))}))}async function a$(e,t){return VT.create(e,t)}async function o$(e){return WT.create(e)}const i$="4.11.0";function l$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&oe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const u$=oh;class c$ extends X{nextDataId(){return c$.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new K(this,hi())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ke().get("IS_NODE")&&xs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Ys(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return bm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return ze(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return ri(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ri(e.shape,e.dtype,t)}makeOutput(e,t,n){return hi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ks();e();return{kernelMs:Ks()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){l$([e],"where");const t=this.readSync(e.dataId);return u$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function d$(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}c$.nextDataId=0;const h$={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;l$(t,"abs");let r=new Float32Array(ue(t.shape));return r=d$(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function p$(e){return(t,n,r,s,a)=>{const o=Kl(t,n),i=o.length,l=_e(o),u=ke(a,ue(o)),c=t.length,d=n.length,h=_e(t),p=_e(n),f=Hl(t,o),m=Hl(n,o);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ge(t,i,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const o=Ue(a,c,h),g=n.slice(-d);m.forEach((e=>g[e]=0));const y=Ue(g,d,p);u[t]=e(r[o],s[y])}return[u,o]}}function f$(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const m$={kernelName:Tt,backendName:"cpu",kernelFunc:f$};function g$(e,t,n="float32"){if("complex64"===n){return f$({inputs:{real:g$(e,t,"float32"),imag:g$(e,t,"float32")},backend:e})}const r=Be(ue(t),n);return e.makeTensorInfo(t,n,r)}function y$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const b$={kernelName:yn,backendName:"cpu",kernelFunc:y$};function x$(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const v$={kernelName:mr,backendName:"cpu",kernelFunc:x$};function w$(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=qs([0],n),[s,a]=p$(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function k$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return y$({inputs:{x:s},backend:n});const e=g$(n,s.shape,s.dtype),t=k$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=f$({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=x$({inputs:{input:s},backend:n}),t=k$({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ce(s.dtype,a)){const e=y$({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const o=n.data.get(s.dataId).values,[i,l,u]=w$(o,s.shape,s.dtype,a);return n.makeTensorInfo(i,l,u)}const S$={kernelName:It,backendName:"cpu",kernelFunc:k$};function I$(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:o}=n,i=s;l$([a,o],e);const l=i.data.get(a.dataId).values,u=i.data.get(o.dataId).values,c="string"===a.dtype?Jm(l):l,d="string"===a.dtype?Jm(u):u,h=r||a.dtype,[p,f]=t(a.shape,o.shape,c,d,h);return i.makeTensorInfo(f,h,p)}:({inputs:e,backend:s})=>{const{a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=k$({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=i.data.get(r.dataId).values,u=i.data.get(s.dataId).values,c=k$({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=i.data.get(h.dataId).values,m=i.data.get(p.dataId).values,[g,y,b]=n(a.shape,o.shape,l,u,f,m),x=i.makeTensorInfo(b,"float32",g),v=i.makeTensorInfo(b,"float32",y),w=f$({inputs:{real:x,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),w}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(u,s,l)}}}function N$(e){return(t,n,r,s,a,o)=>{const i=Kl(t,n),l=ue(i),u=i.length,c=_e(i),d=ke("float32",l),h=ke("float32",l),p=Hl(t,i),f=Hl(n,i),m=bm(r,s),g=bm(a,o),y=t.length,b=_e(t),x=n.length,v=_e(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=s.real,h[t]=s.imag}else for(let t=0;t<d.length;t++){const n=Ge(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=Ue(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const o=Ue(a,x,v),i=e(m[2*s],m[2*s+1],g[2*o],g[2*o+1]);d[t]=i.real,h[t]=i.imag}return[d,h,i]}}const C$=p$(((e,t)=>e+t)),T$=N$(((e,t,n,r)=>({real:e+n,imag:t+r}))),$$=I$(rt,C$,T$),E$={kernelName:rt,backendName:"cpu",kernelFunc:$$};function R$(e,t,n,r,s){const a=ue(r),o=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=a>0?t[n]:1)}return o}function A$(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=ri([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}const F$=p$(((e,t)=>e&t)),O$=I$(wt,F$),D$={kernelName:wt,backendName:"cpu",kernelFunc:O$};function _$(e){return(t,n,r)=>{const s=Se(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function M$(e,t,n){return L$(e,_$(t),n)}function L$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;l$(o,e);const i=a,l=i.data.get(o.dataId).values;let u;if("string"===o.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Jm(l)}else u=l;const c=n||o.dtype,d=t(u,c,s);return i.makeTensorInfo(o.shape,c,d)}}const z$=_$((e=>Math.ceil(e))),P$=L$(Nt,z$),B$={kernelName:Nt,backendName:"cpu",kernelFunc:P$};function W$(e,t,n,r){const s=Se(n,ue(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ue(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Jm(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}const V$=p$(((e,t)=>e===t?1:0)),U$=I$(nn,V$,null,"bool"),G$={kernelName:nn,backendName:"cpu",kernelFunc:U$},Z$=_$((e=>Math.exp(e))),j$=L$(rn,Z$,"float32"),H$={kernelName:rn,backendName:"cpu",kernelFunc:j$},q$=_$((e=>Math.expm1(e))),K$=L$(an,q$),X$={kernelName:an,backendName:"cpu",kernelFunc:K$},Y$=_$((e=>Math.floor(e))),J$=L$(cn,Y$),Q$={kernelName:cn,backendName:"cpu",kernelFunc:J$},eE=p$(((e,t)=>Math.floor(e/t))),tE=I$(dn,eE,null,"int32"),nE={kernelName:dn,backendName:"cpu",kernelFunc:tE};function rE(e,t,n,r,s,a,o,i,l){const u=ri([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*o[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}function sE(e,t,n){const r=ri(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],o=s[2],i=t.locToIndex([a,o]);s[2]=t.values[i];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const aE=p$(((e,t)=>e>t?1:0)),oE=I$(mn,aE,null,"bool"),iE={kernelName:mn,backendName:"cpu",kernelFunc:oE},lE=p$(((e,t)=>e>=t?1:0)),uE=I$(gn,lE,null,"bool"),cE={kernelName:gn,backendName:"cpu",kernelFunc:uE},dE=p$(((e,t)=>e<t?1:0)),hE=I$(In,dE,null,"bool"),pE={kernelName:In,backendName:"cpu",kernelFunc:hE},fE=p$(((e,t)=>e<=t?1:0)),mE=I$(Nn,fE,null,"bool"),gE={kernelName:Nn,backendName:"cpu",kernelFunc:mE};function yE(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const bE=_$((e=>Math.log(e))),xE=L$(Tn,bE),vE={kernelName:Tn,backendName:"cpu",kernelFunc:xE};function wE(e,t,n,r){const s=ke(r,ue(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const kE=p$(((e,t)=>Math.max(e,t))),SE=I$(Pn,kE),IE={kernelName:Pn,backendName:"cpu",kernelFunc:SE},NE=p$(((e,t)=>Math.min(e,t))),CE=I$(Hn,NE),TE={kernelName:Hn,backendName:"cpu",kernelFunc:CE},$E=p$(((e,t)=>e*t)),EE=N$(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),RE=I$(Yn,$E,EE),AE={kernelName:Yn,backendName:"cpu",kernelFunc:RE};function FE(e,t,n){const r=Hs(-1,n);return $E([],t,r,e,n)}const OE={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;l$(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=FE(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}},DE=p$(((e,t)=>e!==t?1:0)),_E=I$(Qn,DE,null,"bool"),ME={kernelName:Qn,backendName:"cpu",kernelFunc:_E};function LE(e,t,n,r,s){const a=t.length,o=ue(t),i=_e(t),l=_e(s),u=ke(n,ue(s));for(let t=0;t<o;++t){const n=Ge(t,a,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Ue(s,a,l)]=e[t]}return u}function zE(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;l$(s,"transpose");const o=s.shape.length,i=new Array(o);for(let e=0;e<i.length;e++)i[e]=s.shape[a[e]];const l=LE(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}const PE={kernelName:is,backendName:"cpu",kernelFunc:zE};function BE(e,t,n,r){const[s,a]=iu(e,r),o=Na(t,"int32"),i=Be(ue(s),o),l=ue(a);for(let e=0;e<i.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:o}}const WE={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;l$(s,"prod");const i=s.shape.length,l=ve(a,s.shape),u=cu(l,i);let c=l,d=s;const h=[];null!=u&&(d=zE({inputs:{x:s},backend:n,attrs:{perm:u}}),h.push(d),c=hu(c.length,i));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=BE(d.shape,d.dtype,p,c);let y=m;return o&&(y=lu(m,l)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function VE(e,t,n,r){const s=[];let a=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[o];for(let e=o;e<l;++e)i[s].push(r[e+1]+t)}o=r[o],l=r[l]}l!==o&&(s.push([o,l]),a+=l-o)}return{outSplits:i,valueSlices:s,numValues:a}}function UE(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function GE(e,t,n,r,s){const a=t.slice();a[0]=s;const o=Se(n,ue(a)),i=e.length;return function(e,t,n,r,s,a){const o=UE(t,2)[1],i=UE(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*i+t]=e[n*o+t];++l}}(e,t,r,0===i?0:i/t[0],o,a),[o,a]}function ZE(e,t,n,r,s,a,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Ge(r,t.length,_e(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:d}=VE(a,o,e,l),h=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Se("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=GE(n,r,s,c,d);return[h,p[0],p[1]]}const jE=2147483647;function HE(e,t,n,r,s,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,l=0===s.length,u=0===o.length,c=[];i||c.push(t[0]),l||c.push(s[0]),u||c.push(o[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===c.length?1:c[0],h=Se("int32",d+1);h[0]=0;for(let t=0;t<d;++t){const n=i?e[0]:e[t],s=l?r[0]:r[t],o=u?a[0]:a[t];if(0===o)throw new Error("Requires delta != 0");let c;if(o>0&&s<n||o<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/o)),c>jE)throw new Error(`Requires ((limit - start) / delta) <= ${jE}`);h[t+1]=h[t]+c}const p=Se(n,h[d]);let f=0;for(let t=0;t<d;++t){const n=h[t+1]-h[t];let r=i?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[h,p]}var qE=Yf;class KE{constructor(e,t,n,r,s,a,o,i,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Qf(u),this.raggedRank=em(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===qE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===qE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case qE.VALUE_ROWIDS:return KE.getMaxWidthValueRowID(t);case qE.ROW_SPLITS:return KE.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${qE[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return YE(e,n)}calculateOutputSize(e){const t=this.valuesShape;tm(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Jf(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return oe(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let o=0;o<s-1;++o){const s=e[o+1]-e[o];let i=Math.min(r,s),l=t[o];-1===l&&(i=0);for(let e=0;e<i;++e)a.push(l),l+=n;for(let e=0;e<s-i;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let l=t[i];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===i)l>=0&&(++o,o<r?l+=n:l=-1);else{if(o=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case qE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case qE.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${qE[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case qE.FIRST_DIM_SIZE:return e[0];case qE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case qE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${qE[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=YE(t,!1),s=Se(this.valuesDType,ue(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let o=r.slice();o=o.slice(e+1);const i=ue(o),l=t.length;let u=this.defaultValue;if(u.length!==i&&1!==u.length){const e=this.defaultValueShape;mi((()=>{const t=ol(u,e),n=Sl(t,o);u=n.dataSync()}))}let c=0,d=0,h=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==h){if(d<h){const e=s.subarray(c*i);XE(a.subarray(d*i),e,(h-d)*i)}if(e>=l){const e=n.length;r=Math.floor(e/i)}if(r>h)if(1===this.defaultValue.length)a.subarray(h*i,r*i).fill(this.defaultValue[0]),h=r;else for(;r>h;){XE(a.slice(h*i),u,i),++h}r<0?(c=e+1,d=h):(c=e,d=h,h=d+1)}else++h}}}function XE(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function YE(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function JE(e,t,n,r,s,a,o,i,l,u){return new KE(e,t,n,r,s,a,o,i,l,u).compute()}function QE(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const eR=_$((e=>1/Math.sqrt(e))),tR=L$(Cr,eR),nR={kernelName:Cr,backendName:"cpu",kernelFunc:tR};function rR(e,t,n,r,s,a,o,i,l,u){const c=[r/s,s],d=e.values,h=t.values;if(0===r)return ri(n,t.dtype);const p=l instanceof ha?l:ri(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<o;t++){const n=d[e*o+t];a.push(n),l+=n*i[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=h[e*s+n]:p.values[l*s+n]=0===t.rank?h[0]:h[e*s+n]}return p}const sR=_$((e=>1/(1+Math.exp(-e)))),aR=M$(Mr,(e=>1/(1+Math.exp(-e)))),oR={kernelName:Mr,backendName:"cpu",kernelFunc:aR};function iR(e,t,n,r,s){const a=Pf(r,t,n),o=ue(n),i=_e(r);if(a){const n=Bf(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l=ri(r,s,"string"===s?Jm(e):e),u=ri(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?Qm(u.values):u.values}function lR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;l$(s,"slice");const[i,l]=Wf(s,a,o);Tf(s,i,l);const u=iR(n.data.get(s.dataId).values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const uR={kernelName:Fr,backendName:"cpu",kernelFunc:lR};function cR(e,t,n,r,s,a,o){const i=t[0],l=a[0],u=new Array(l),c=new Array(i),d=t[1];if(0===l){if(0!==i)throw new Error(Lm(i));return[Se(n,0),[0,d],Se(s,0),u,c]}let h=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<i;++t){const n=e[t*d];if(n<0)throw new Error(zm(t,n));if(n>=l)throw new Error(Pm(t,n,l));++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,d],n,u,c]}{const t=f[l-1],a=Se(n,t*d),h=Se(s,t),p=new Array(l).fill(0);for(let t=0;t<i;++t){const n=e[t*d],s=p[n],o=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<d;++n)a[o*d+n]=e[t*d+n];h[o]=r[t],c[t]=o}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];a[t*d+0]=e;for(let e=1;e<d;++e)a[t*d+e]=0;h[t]=o}}return[a,[t,d],h,u,c]}}function dR(e,t,n,r,s){const a=ue(r),o=t[0],i=s.length,l=[];let u=1,c=-1;for(let e=0;e<i;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Bm(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Wm(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Um(r,l));l[c]=e}if(ue(l)!==a)throw new Error(Gm(r,l));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=Se(n,o*i);for(let t=0;t<o;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[o,i],l]}function hR(e,t,n,r,s,a=!1,o=0){const i=r.length,l=[t[0],e.length/t[0]],u=l[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=c;const h=Se(n,d.reduce(((e,t)=>e*t),1));if(0===i)return c>0&&h.fill(o),[h,d];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<i){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Hm(g,c));g>m&&h.fill(o,m*u,g*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(qm(t,r[t],l[0]));for(let t=0;t<u;t++)h[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)h[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<c&&h.fill(o,m*u,c*u),[h,d]}const pR=_$((e=>Math.sqrt(e))),fR=M$(zr,(e=>Math.sqrt(e))),mR={kernelName:zr,backendName:"cpu",kernelFunc:fR},gR=p$(((e,t)=>{const n=e-t;return n*n})),yR=I$(qr,gR),bR={kernelName:qr,backendName:"cpu",kernelFunc:yR},xR=_$(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),vR=L$(Xr,xR),wR={kernelName:Xr,backendName:"cpu",kernelFunc:vR};function kR(e,t,n,r){const s=ri(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s}class SR{constructor(e,t,n,r,s,a){this.separator=Ys(e),this.nGramWidths=t,this.leftPad=Ys(n),this.rightPad=Ys(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(s-(o+1))),c=a-(l+u),d=t+(l>0?0:o-i);let h=0;h+=l*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=u*this.rightPad.length;h+=(l+u+c-1)*this.separator.length,n[r+o]=new Uint8Array(h);const p=n[r+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=Se("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const o=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const i=t[n+1]-t[n],l=this.getNumNGrams(i,a);this.createNGrams(e,r,o,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const i=a+2*this.padWidth,l=1;this.createNGrams(e,r,o,s,l,i)}}return[o,a]}}function IR(e,t,n,r,s,a,o,i){return new SR(n,r,s,a,o,i).compute(e,t)}function NR(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function CR(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let l=0;l<r;++l){const r=s.length;NR(e[l],t,n,s);const u=s.length-r;i[l]=u,a+=u,o=Math.max(o,u)}const l=Se("int32",2*a),u=new Array(a),c=[r,o];let d=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)l[2*d]=e,l[2*d+1]=t,u[d]=s[d],++d;return[l,u,c]}function TR(e,t){const n=Se("int32",e.length);for(let r=0;r<e.length;++r)n[r]=js(e[r]).modulo(t).getLowBitsUnsigned();return n}const $R=p$(((e,t)=>e-t)),ER=N$(((e,t,n,r)=>({real:e-n,imag:t-r}))),RR=I$(ts,$R,ER),AR={kernelName:ts,backendName:"cpu",kernelFunc:RR};function FR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ri(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const OR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function DR(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2);DR(e,t,Math.max(n,Math.floor(t-a*i/s+l)),Math.min(r,Math.floor(t+(s-a)*i/s+l)))}const s=e[t];let a=n,o=r;for(ne(e,n,t),OR(e[r],s)>0&&ne(e,n,r);a<o;){for(ne(e,a,o),a++,o--;OR(e[a],s)<0;)a+=1;for(;OR(e[o],s)>0;)o-=1}0===OR(e[n],s)?ne(e,n,o):(o+=1,ne(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function _R(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],l=ke(n,o*r),u=ke("int32",o*r);for(let t=0;t<o;t++){const n=t*i,a=e.subarray(n,n+i);let o=new Array(a.length);a.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(DR(o,r),o=o.slice(0,r)),s&&o.sort(OR);const c=t*r,d=l.subarray(c,c+r),h=u.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=o[e].value,h[e]=o[e].index}const c=t.slice();return c[c.length-1]=r,[ri(c,n,l),ri(c,"int32",u)]}function MR(e,t,n,r){const s=ve(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const o=new Map,i=new Int32Array(n[s]),l=new ha(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=o.get(n);if(null!=r)i[t]=r;else{const e=o.size;o.set(n,e),i[t]=e,u.push(t)}}const d=a.slice();d[1]=o.size;const h=new ha(d,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)h.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=d[1],{outputValues:h.values,outputShape:p,indices:i}}const LR="4.11.0";Ni("cpu",(()=>new c$),1);const zR=M$(Qt,(e=>e>=0?e:Math.exp(e)-1)),PR={kernelName:Qt,backendName:"cpu",kernelFunc:zR};function BR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;l$([s],"leakyRelu");const o=ue(s.shape),i=n.data.get(s.dataId).values,l=ke("float32",o);for(let e=0;e<i.length;e++)l[e]=i[e]<0?a*i[e]:i[e];return n.makeTensorInfo(s.shape,"float32",l)}const WR={kernelName:Sn,backendName:"cpu",kernelFunc:BR},VR=p$(((e,t)=>e<0?t*e:e));function UR(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;l$([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,l]=VR(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}const GR={kernelName:ur,backendName:"cpu",kernelFunc:UR},ZR=M$(yr,(e=>Math.max(0,e))),jR={kernelName:yr,backendName:"cpu",kernelFunc:ZR},HR=M$(Sr,(e=>Math.min(Math.max(0,e),6))),qR={kernelName:Sr,backendName:"cpu",kernelFunc:HR};function KR(e,t,n,r,s){if("linear"===n)return y$({inputs:{x:t},backend:e});if("relu"===n)return ZR({inputs:{x:t},backend:e});if("elu"===n)return zR({inputs:{x:t},backend:e});if("relu6"===n)return HR({inputs:{x:t},backend:e});if("prelu"===n)return UR({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return BR({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return aR({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function XR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=ue(s.shape),i=xe(a,o),l=ue(i);oe(o===l,(()=>`The new shape (${i}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const YR={kernelName:br,backendName:"cpu",kernelFunc:XR};function JR(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;l$([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=o?s.shape[l-2]:s.shape[l-1],d=i?a.shape[u-1]:a.shape[u-2],h=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ue(f),y=ue(m),b=Kl(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);oe(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const x=i?[y,p,d]:[y,d,p],v=XR({inputs:{x:s},backend:n,attrs:{shape:o?[g,c,h]:[g,h,c]}}),w=XR({inputs:{x:a},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],S=o?v.shape[2]:v.shape[1],I=i?w.shape[1]:w.shape[2],N=Math.max(g,y),C=n.data.get(v.dataId).values,T=n.data.get(w.dataId).values,$=_e(v.shape),E=_e(w.shape),[R,A,F]=o?[$[0],1,$[1]]:[$[0],$[1],1],[O,D,_]=i?[1,E[1],E[0]]:[E[1],1,E[0]],M=S*I,L=ri([N,S,I],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%y;for(let r=0;r<S;r+=P){const s=Math.min(r+P,S);for(let a=0;a<I;a+=P){const o=Math.min(a+P,I);for(let i=0;i<k;i+=P){const l=Math.min(i+P,k);for(let u=r;u<s;u++)for(let r=a;r<o;r++){let s=0;for(let e=i;e<l;e++){s+=C[t*R+u*A+e*F]*T[e*O+r*D+n*_]}z[e*M+(u*I+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const QR={kernelName:bt,backendName:"cpu",kernelFunc:JR};const eA={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=JR({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(p=$$({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),c&&(f=KR(n,h,c,i,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}},tA=M$(tt,(e=>Math.acos(e))),nA={kernelName:tt,backendName:"cpu",kernelFunc:tA},rA=M$(nt,(e=>Math.acosh(e))),sA={kernelName:nt,backendName:"cpu",kernelFunc:rA};const aA={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;l$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=ri(r[0].shape,r[0].dtype),o=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const oA={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;l$(s,"all");const i=ve(a,s.shape);let l=i;const u=cu(l,s.shape.length);let c=s;null!=u&&(c=zE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=hu(l.length,s.shape.length)),uu("all",l,c.shape.length);const[d,h]=iu(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(o){const e=XR({inputs:{x:g},backend:n,attrs:{shape:lu(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const iA={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;l$(s,"any");const i=ve(a,s.shape);let l=i;const u=cu(l,s.shape.length);let c=s;null!=u&&(c=zE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=hu(l.length,s.shape.length)),uu("any",l,c.shape.length);const[d,h]=iu(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(o){const e=XR({inputs:{x:g},backend:n,attrs:{shape:lu(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const lA={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;l$(s,"argMax");let o=ve(a,s.shape);const i=cu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=zE({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=hu(o.length,l.shape.length)),o=[o[0]],uu("argMax",o,l.shape.length);const[c,d]=iu(l.shape,o),h=Be(ue(c),"int32"),p=ue(d),f=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}};const uA={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;l$(s,"argMin");let o=ve(a,s.shape);const i=cu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=zE({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=hu(o.length,l.shape.length)),o=[o[0]],uu("argMin",o,l.shape.length);const[c,d]=iu(l.shape,o),h=Be(ue(c),"int32"),p=ue(d),f=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}},cA=M$(ut,(e=>Math.asin(e))),dA={kernelName:ut,backendName:"cpu",kernelFunc:cA},hA=M$(ct,(e=>Math.asinh(e))),pA={kernelName:ct,backendName:"cpu",kernelFunc:hA},fA=M$(dt,(e=>Math.atan(e))),mA={kernelName:dt,backendName:"cpu",kernelFunc:fA},gA=p$(((e,t)=>Math.atan2(e,t))),yA=I$(pt,gA),bA={kernelName:pt,backendName:"cpu",kernelFunc:yA},xA=M$(ht,(e=>Math.atanh(e))),vA={kernelName:ht,backendName:"cpu",kernelFunc:xA};function wA(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ri(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*o-h,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),S=n+y*b;for(let n=0;n<s.outWidth;++n){const o=n*i-p,c=Math.max(0,o),h=Math.min(s.inWidth,d+o);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<h;n+=u){const o=e[s+n*r[2]+t];"max"===a&&o>y?y=o:"avg"===a&&(b+=o,v++)}if(isNaN(y))break}g[S+n*x+t]="avg"===a?b/v:y}}}return m}function kA(e,t,n,r,s=!1,a=!1){const o=ri(r.outShape,"int32"),i=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ri(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*i-p;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,d+g);for(let i=0;i<r.outWidth;++i){const d=i*l-f;let p=d;for(;p<0;)p+=c;const x=Math.min(r.inWidth,h+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const o=n-g;for(let i=p;i<x;i+=c){const l=i-d,u=m.get(e,n,i,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+i)*r.inChannels+t:(n*r.inWidth+i)*r.inChannels+t:o*h+l)}}o.set(w,e,n,i,t)}}return o}function SA(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,d=s.dilationWidth,h=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ri(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*o-m;let C=N;for(;C<0;)C+=u;const T=Math.min(s.inDepth,h+N),$=n+w*k;for(let n=0;n<s.outHeight;++n){const o=n*i-g;let h=o;for(;h<0;)h+=c;const m=Math.min(s.inHeight,p+o),w=$+n*S;for(let n=0;n<s.outWidth;++n){const o=n*l-y;let i=o;for(;i<0;)i+=d;const p=Math.min(s.inWidth,f+o),g=w+n*I;let k=b,S=0,N=0;for(let n=C;n<T;n+=u){const s=x+n*r[1];for(let n=h;n<m;n+=c){const o=s+n*r[2];for(let n=i;n<p;n+=d){const s=e[o+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(S+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?S/Math.max(N,1):k}}}}return x}const IA={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;l$(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;oe(nl(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=ji(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))c=y$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=_e(s.shape),r=wA(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const NA={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;l$(s,"avgPool3d");const c=Hi(s.shape,a,o,1,i,l,u),d=SA(n.data.get(s.dataId).values,s.shape,s.dtype,_e(s.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const CA={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;l$([s,a],"avgPool3DGrad");const c=Hi(a.shape,o,i,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=v-1-c.padInfo.front,I=k-1-c.padInfo.left,N=w-1-c.padInfo.top,C=ri(a.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-S,o=r-N,i=s-I;let l=0;for(let n=0;n<v;n+=y){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const s=(o+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(i+n)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;l+=$.get(e,r,s,a,t)}}}C.set(l*T,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const TA={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;l$([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=ji(o.shape,i,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=ri(o.shape,"float32"),k=1/(p*f),S=n.data.get(s.dataId).values,I=ri(s.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let o=0;for(let n=0;n<y;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/h;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;o+=I.get(e,r,s,t)}}w.set(o*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const $A={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:l}=t;oe(i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),l$([s,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=h.length,x=d.length;let v=0,w=0,k=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-d[w++])*p[k++]/Math.sqrt(h[S++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};const EA={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;l$([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),l=am(s.shape,a,i),u=om(l.length,a.length),c=im(s.shape,a,i),d=lm(o,a.length),h=um(c,o,a.length),p=XR({inputs:{x:s},backend:n,attrs:{shape:l}}),f=zE({inputs:{x:p},backend:n,attrs:{perm:u}}),m=XR({inputs:{x:f},backend:n,attrs:{shape:c}}),g=lR({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const RA={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=R$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,i)}};const AA={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=Kl(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},FA=M$(Ct,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),OA={kernelName:Ct,backendName:"cpu",kernelFunc:FA},DA={kernelName:$t,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ue(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function _A(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const MA={kernelName:xn,backendName:"cpu",kernelFunc:_A};function LA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ve(s,t[0].shape)[0];Kf(t.map((e=>e.shape)),a);let o=Xf(t.map((e=>e.shape)),a);if(0===ue(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ue(e.shape)>0));if(1===i.length)return y$({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>x$({inputs:{input:e},backend:n}))),t=i.map((e=>_A({inputs:{input:e},backend:n}))),r=LA({inputs:e,backend:n,attrs:{axis:a}}),s=LA({inputs:t,backend:n,attrs:{axis:a}}),o=f$({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const l=i.map((e=>{const t=ue(e.shape.slice(a));return XR({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Xf(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],d=W$(u,o,t[0].dtype,c),h=Xf(i.map((e=>e.shape)),a),p=n.makeTensorInfo(h,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const zA={kernelName:Et,backendName:"cpu",kernelFunc:LA};function PA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r;l$([s,a],"conv2d");const d=sl(l),h=qi(s.shape,a.shape,o,u,i,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,v=new ha(h.outShape,s.dtype),w=_e(s.shape),k=_e(a.shape),S=w[0],I=x?w[1]:w[2],N=x?w[2]:1,C=x?1:w[1],T=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,O=v.values;for(let e=0;e<h.batchSize;++e){const t=e*S,n=e*T;for(let e=0;e<h.outHeight;++e){const r=n+e*$,s=e*h.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=h.inHeight)continue;const a=e*k[0],o=t+n*I;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const s=o+r*N;let i=a+e*k[1];for(let e=0;e<h.inChannels;++e){const n=A[s+e*C];for(let e=0;e<h.outChannels;++e)O[t+e*R]+=n*F[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const BA={kernelName:Rt,backendName:"cpu",kernelFunc:PA};const WA={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;l$([s,a],"conv2dBackpropFilter");const d=sl(l),h=qi(s.shape,c,o,1,i,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new ha(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=new ha(s.shape,s.dtype,w),I=new ha(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(h.outHeight,(h.inHeight+v-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let o=0;o<h.inChannels;++o)for(let i=0;i<h.outChannels;++i){let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=y?S.get(u,t,n,o)*I.get(u,c,e,i):S.get(u,o,t,n)*I.get(u,i,c,e)}}b.set(l,e,r,o,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const VA={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r;l$([s,a],"conv2dBackpropInput");const d=_e(a.shape),h=_e(s.shape);let p=sl(u);const f=qi(o,a.shape,i,1,l,c,!1,p),m=new ha(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=d,{batchSize:k,filterHeight:S,filterWidth:I,inChannels:N,inHeight:C,inWidth:T,outChannels:$,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const O=S-1-f.padInfo.top,D=I-1-f.padInfo.left,_="channelsLast"===p,M=m.strides[0],L=_?m.strides[1]:m.strides[2],z=_?m.strides[2]:1,P=_?1:m.strides[1],B=h[0],W=_?h[1]:h[2],V=_?h[2]:1,U=_?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const r=n-O,s=Math.max(0,Math.ceil(r/A)),a=Math.min(E,(S+r)/A);for(let o=0;o<T;++o){const i=o-D,l=Math.max(0,Math.ceil(i/F)),u=Math.min(R,(I+i)/F);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=l;r<u;++r){const a=B*e+W*n+V*r,o=x*(S-1-s)+v*(I-1-(r*F-i))+w*t;for(let e=0;e<$;++e){c+=y[a+U*e]*b[o+e]}}}g[M*e+L*n+z*o+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const UA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r;l$([s,a],"conv3d");const u=Ki(s.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new ha(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=v.values,I=_e(s.shape),N=_e(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*I[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],o=t+n*I[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],i=o+r*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],o=i+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[o+e];for(let e=0;e<u.outChannels;++e)S[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const GA={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r;l$([s,a],"conv3dBackpropFilterV2");const u=_e(s.shape),c=_e(a.shape),d=Ki(s.shape,l,o,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new ha(d.filterShape,"float32"),x=b.values,[v,w,k,S]=b.strides,I=n.data.get(a.dataId).values,[N,C,T,$]=c,E=n.data.get(s.dataId).values,[R,A,F,O]=u,D=d.padInfo.front,_=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/p)),o=Math.min(d.outHeight,(d.inHeight+M-s)/p),i=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((_-r)/f)),u=Math.min(d.outWidth,(d.inWidth+_-r)/f),c=r*k+i;for(let i=0;i<d.inChannels;++i){const m=i*S+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*R,y=m*N;for(let m=t;m<n;++m){const t=(e+m*h-D)*A+d,n=m*C+y;for(let e=a;e<o;++e){const a=(s+e*p-M)*F+t,o=e*T+n;for(let e=l;e<u;++e){const t=e*$+o;g+=E[(r+e*f-_)*O+a+i]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ZA={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r;l$([s],"conv3dBackpropInputV2");const u=_e(s.shape),c=_e(a.shape),d=Ki(l,a.shape,i,1,o),h=new ha(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=u,S=n.data.get(a.dataId).values,[I,N,C,T]=c,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:O,inHeight:D,inWidth:_,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=E-1-d.padInfo.front,G=R-1-d.padInfo.top,Z=A-1-d.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<O;++n){const r=n-U,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,(E+r)/B);for(let o=0;o<D;++o){const i=o-G,l=Math.max(0,Math.ceil(i/W)),u=Math.min(z,(R+i)/W);for(let c=0;c<_;++c){const d=c-Z,h=Math.max(0,Math.ceil(d/V)),$=Math.min(P,(A+d)/V);let F=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=l;r<u;++r){const a=r*W-i;for(let o=h;o<$;++o){const i=x*e+v*n+w*r+k*o,l=I*(E-1-s)+N*(R-1-a)+C*(A-1-(o*V-d))+T*t;for(let e=0;e<M;++e){F+=b[i+e]*S[l+e]}}}}p[f*e+m*n+g*o+y*c+t]=F}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},jA=M$(Mt,(e=>Math.cos(e))),HA={kernelName:Mt,backendName:"cpu",kernelFunc:jA},qA=M$(Lt,(e=>Math.cosh(e))),KA={kernelName:Lt,backendName:"cpu",kernelFunc:qA};const XA={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=r,[c,d,h,p]=s.shape,f=a.shape[0],[m,g]=i,y=ri([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,w=_e(s.shape),k=_e(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],o=x[e];if(o>=c)continue;const i=m>1?(s-n)*(d-1)/(m-1):0,f=g>1?(a-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*i:.5*(n+s)*(d-1);if(c<0||c>d-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),i=c-n;for(let l=0;l<g;l++){const c=g>1?r*(h-1)+l*f:.5*(r+a)*(h-1);if(c<0||c>h-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let r=0;r<p;r++){let a=r+d*w[2]+n*w[1]+o*w[0];const u=v[a];a=r+m*w[2]+n*w[1]+o*w[0];const c=v[a];a=r+d*w[2]+s*w[1]+o*w[0];const h=v[a];a=r+m*w[2]+s*w[1]+o*w[0];const p=u+(c-u)*b,f=h+(v[a]-h)*b;a=r+l*k[2]+t*k[1]+e*k[0],y.values[a]=p+(f-p)*i}}}else for(let n=0;n<g;++n){const s=g>1?r*(h-1)+n*f:.5*(r+a)*(h-1);if(s<0||s>h-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const i=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+i*w[2]+l*w[1]+o*w[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const YA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;l$(s,"cumprod");const l=cu([a],s.shape.length);let u=s;null!=l&&(u=zE({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=hu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Na(u.dtype,"int32"),h=Pe(ue(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=o?1:p[n];else{const r=m(e,t-1);h[n]=o?p[r]*h[r]:p[n]*h[r]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=zE({inputs:{x:g},backend:n,attrs:{perm:du(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const JA={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;l$(s,"cumsum");const l=cu([a],s.shape.length);let u=s;null!=l&&(u=zE({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=hu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Na(u.dtype,"int32"),h=Be(ue(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=o?0:p[n];else{const r=m(e,t-1);h[n]=o?p[r]+h[r]:p[n]+h[r]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=zE({inputs:{x:g},backend:n,attrs:{perm:du(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const QA={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=R$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,e)}if(2===s.shape.length){const e=A$(n.bufferSync(s),n.bufferSync(a),o,i);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const eF={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;oe("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const i=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],d=l*a,h=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let e=0;e<i;++e)for(let t=0;t<d;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<h;++t){const s=Math.floor(t/a),o=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+o+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([i,d,h,p],s.dtype,m)}};function tF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;l$([s,a],"depthwiseConv2DNative");const c=_e(s.shape),d=_e(a.shape);let h=l;null==h&&(h=[1,1]),oe(nl(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=qi(s.shape,a.shape,o,h,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new ha(p.outShape,s.dtype),S=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*d[0],o=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*d[1],i=o+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[i+e];for(let e=0;e<w;++e)N[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const nF={kernelName:Ut,backendName:"cpu",kernelFunc:tF};const rF={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r;l$([s,a],"depthwiseConv2dNativeBackpropFilter");const d=qi(s.shape,c,o,i,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new ha(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=n.data.get(s.dataId).values,w=new ha(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,S=new ha(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),a=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let o=0;o<d.outChannels;++o){const i=Math.trunc(o/x),l=o%x;let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=s;e<a;++e){const n=r+e*p-y;u+=w.get(l,t,n,i)*S.get(l,c,e,o)}}g.set(u,e,r,i,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const sF={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r;l$([s,a],"depthwiseConv2DNativeBackpropInput");const d=_e(s.shape),h=_e(a.shape),p=qi(c,a.shape,o,i,l,u,!0),f=new ha(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=d,S=n.data.get(a.dataId).values,[I,N,C]=h,{batchSize:T,filterHeight:$,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:O,outHeight:D,outWidth:_,strideHeight:M,strideWidth:L}=p,z=$-1-p.padInfo.top,P=E-1-p.padInfo.left,B=O/R;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),a=Math.min(D,($+r)/M);for(let o=0;o<F;++o){const i=o-P,l=Math.max(0,Math.ceil(i/L)),u=Math.min(_,(E+i)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,o=I*($-1-s)+N*(E-1-(r*L-i))+C*t;for(let e=0;e<B;++e){c+=x[a+(t*B+e)]*S[o+e]}}}m[g*e+y*n+b*o+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const aF={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ue(r.shape),a=n.data.get(r.dataId).values,o=ri([s,s],r.dtype),i=o.values;for(let e=0;e<a.length;e++)i[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},oF={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,d=l.data.get(s.dataId).values,h=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:C}=Zi(r.shape,s.shape,a,o,"NHWC",i),T=ue(C),$=C.length,E=Se(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let a=0;a<b;++a){const o=a*w-x.left;for(let i=0;i<g;++i){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*I;if(a>=0&&a<f)for(let n=0;n<S;++n){const p=o+n*N;if(p>=0&&p<m){const o=Ue([e,a,p,i],c,_e(r.shape)),f=Ue([t,n,i],h,_e(s.shape)),m=u[o]+d[f];m>l&&(l=m)}}}E[Ue([e,t,a,i],$,_e(C))]=l}}}return{dataId:l.write(qs(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},iF={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=Le(r.shape,u.data.get(r.dataId).values),d=Le(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=Zi(r.shape,s.shape,o,i,"NHWC",l);oe(a.rank===N.length,(()=>`Error in ${Kt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Le(N,u.data.get(a.dataId).values),T=We(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=0,l=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+d[t][n][a];s>o&&(o=s,i=t,l=n)}}}T[i][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qs(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},lF={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=Le(r.shape,u.data.get(r.dataId).values),d=Le(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=Zi(r.shape,s.shape,o,i,"NHWC",l);oe(a.rank===N.length,(()=>`Error in ${qt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Le(N,u.data.get(a.dataId).values),T=We(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+d[t][n][a];s>o&&(o=s,i=r,l=u)}}}T[e][i][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qs(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const uF={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:o}=r,{contextOptions:i,imageOptions:l}=o||{},u=(null==l?void 0:l.alpha)||1,c=(null==i?void 0:i.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=a.getContext(c,(null==i?void 0:i.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let e=0;e<h*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),s}};function cF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;l$(s,"sum"),i="bool"===s.dtype?k$({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):y$({inputs:{x:s},backend:n});const l=i.shape.length,u=ve(a,i.shape),c=cu(u,l);let d=u,h=i;null!=c&&(h=zE({inputs:{x:i},backend:n,attrs:{perm:c}}),d=hu(d.length,l)),uu("sum",d,h.shape.length);const[p,f]=iu(h.shape,d);let m=g$(n,p,Na(h.dtype,"int32"));const g=ue(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){const e=m;m=XR({inputs:{x:m},backend:n,attrs:{shape:lu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(h),m}const dF={kernelName:Pr,backendName:"cpu",kernelFunc:cF};const hF={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=Rm(s,a.length);Fm(o.length,l,a);const{path:u,steps:c}=Om(i,l),d=c.length;let h=null,p=o.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Am(p,l[t]);let s;Dm(e)?s=a[t]:(s=zE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);he(s.shape,o)||(s=XR({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===h?h=s:(h=RE({inputs:{a:s,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=cF({inputs:{x:h},backend:n,attrs:{axis:u[e]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};const pF={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;l$([r,s],"eluGrad");const a=new Float32Array(ue(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let e=0;e<o.length;++e){const t=o[e];a[e]=t>=0?i[e]:i[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},fF=hm,mF=pm,gF=fm,yF=mm,bF=gm,xF=ym,vF=M$(tn,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+fF*n);return t*(1-((((xF*r+bF)*r+yF)*r+gF)*r+mF)*r*Math.exp(-n*n))})),wF={kernelName:tn,backendName:"cpu",kernelFunc:vF};function kF(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let l=a;return a<0&&(oe(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),i.splice(l,0,1),XR({inputs:{x:s},backend:n,attrs:{shape:i}})}const SF={kernelName:sn,backendName:"cpu",kernelFunc:kF},IF=p$(((e,t)=>e/t)),NF=I$(Yt,IF),CF={kernelName:Yt,backendName:"cpu",kernelFunc:NF};function TF(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[s,a],c=ue(u),d=ke("float32",c),h=ke("float32",c);for(let e=0;e<s;e++){const r=lR({inputs:{x:i},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=lR({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),o=f$({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=$F(o,t,n),p=bm(u,c);for(let t=0;t<a;t++){const n=km(p,t);d[e*a+t]=n.real,h[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const p=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",h),m=f$({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function $F(e,t,n){const r=ue(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=EF(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",Hs(r,"float32")),o=y$({inputs:{x:a},backend:n}),l=CF.kernelFunc({inputs:{a:e,b:a},backend:n}),u=CF.kernelFunc({inputs:{a:t,b:o},backend:n}),c=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:d}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=Nm(s*r,t,n),l=km(e,r);a+=l.real*i.real-l.imag*i.imag,o+=l.real*i.imag+l.imag*i.real}n&&(a/=t,o/=t),Sm(r,a,o,s)}return r}(bm(a,o),r,t);return xm(e)}var i}function EF(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=bm(e,t),o=n/2,i=vm(a),l=i.real,u=i.imag,c=[l.length],d=s.makeTensorInfo(c,"float32",l),h=s.makeTensorInfo(c,"float32",u),p=f$({inputs:{real:d,imag:h},backend:s}),f=wm(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=f$({inputs:{real:b,imag:x},backend:s}),w=EF(l,u,o,r,s),k=w.real,S=w.imag,I=[k.length],N=s.makeTensorInfo(I,"float32",k),C=s.makeTensorInfo(I,"float32",S),T=f$({inputs:{real:N,imag:C},backend:s}),$=EF(m,g,o,r,s),E=$.real,R=$.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),O=s.makeTensorInfo(A,"float32",R),D=f$({inputs:{real:F,imag:O},backend:s}),_=Im(n,r),M=[_.real.length],L=s.makeTensorInfo(M,"float32",_.real),z=s.makeTensorInfo(M,"float32",_.imag),P=f$({inputs:{real:L,imag:z},backend:s}),B=RE({inputs:{a:P,b:D},backend:s}),W=$$({inputs:{a:T,b:B},backend:s}),V=RR({inputs:{a:T,b:B},backend:s}),U=x$({inputs:{input:W},backend:s}),G=x$({inputs:{input:V},backend:s}),Z=_A({inputs:{input:W},backend:s}),j=_A({inputs:{input:V},backend:s}),H=LA({inputs:[U,G],backend:s,attrs:{axis:0}}),q=LA({inputs:[Z,j],backend:s,attrs:{axis:0}}),K=s.data.get(H.dataId).values,X=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),{real:K,imag:X}}const RF={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],o=XR({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=TF(o,!1,n),l=XR({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}};function AF(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||Fe(s),i=Se(o,ue(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,o,i)}const FF={kernelName:ln,backendName:"cpu",kernelFunc:AF};const OF={kernelName:un,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=ke(r.dtype,ue(r.shape)),[o,i,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<o;e++){const t=e*l*i*u;for(let e=0;e<i;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const o=Math.round(l-e-1),i=t+n+r+s;let d=c[i];if(o>=0&&o<l){d=c[t+n+o*u+s]}a[i]=d}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const DF={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=PA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const e=XR({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=$$({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=$$({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=XR({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=KR(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=KR(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const _F={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=tF({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=$$({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=KR(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};const MF={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=ue(r.shape),o=s.shape,i=o[o.length-1],[l,u,c,d]=If(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const h=rE(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,i,c,d,r.shape,a);return n.makeTensorInfo(l,r.dtype,h.values)}};const LF={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;l$([s,a],"gatherV2");const l=ve(o,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];oe(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let d=i;null==i&&(d=0);const h=ue(a.shape),p=Ym(s,a,l,d),f=XR({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=XR({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=sE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};const zF={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],o=XR({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=TF(o,!0,n),l=XR({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}},PF=M$(vn,(e=>Number.isFinite(e)?1:0),"bool"),BF={kernelName:vn,backendName:"cpu",kernelFunc:PF},WF=M$(wn,(e=>Math.abs(e)===1/0?1:0),"bool"),VF={kernelName:wn,backendName:"cpu",kernelFunc:WF},UF=M$(kn,(e=>Number.isNaN(e)?1:0),"bool"),GF={kernelName:kn,backendName:"cpu",kernelFunc:UF};const ZF={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=yE(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},jF=M$($n,(e=>Math.log1p(e))),HF={kernelName:$n,backendName:"cpu",kernelFunc:jF},qF=p$(((e,t)=>e&&t)),KF=I$(En,qF,null,"bool"),XF={kernelName:En,backendName:"cpu",kernelFunc:KF},YF=M$(Rn,(e=>e?0:1),"bool"),JF={kernelName:Rn,backendName:"cpu",kernelFunc:YF},QF=p$(((e,t)=>e||t)),eO=I$(An,QF,null,"bool"),tO={kernelName:An,backendName:"cpu",kernelFunc:eO};const nO={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r;l$(s,"LRN");const u=s.shape[3],c=u-1,d=n.data.get(s.dataId).values,h=ue(s.shape),p=new Float32Array(h);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(o+i*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}};const rO={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r;l$(o,"LRNGrad");const d=ue(o.shape),h=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-i),r=e-t+Math.min(h,t+i+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(o.shape,s.dtype,g)}};function sO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let l=s.shape;const u=l.length,c=ve(a,l);let d=c;const h=cu(d,u);let p=i.data.get(s.dataId).values;if(null!=h){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];p=LE(p,l,s.dtype,h,e),d=hu(d.length,u),l=e}l$(s,"max"),uu("max",d,u);const[f,m]=iu(l,d),g=wE(p,ue(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;if(o){b=lu(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const aO={kernelName:zn,backendName:"cpu",kernelFunc:sO};const oO={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;l$(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;oe(nl(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=ji(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))c=y$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=_e(s.shape),r=wA(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const iO={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;l$(s,"maxPool3d");const c=Hi(s.shape,a,o,1,i,l,u),d=SA(n.data.get(s.dataId).values,s.shape,s.dtype,_e(s.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const lO={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;l$([s,a],"maxPool3DGrad");const c=Hi(a.shape,o,i,1,l,u),d=function(e,t){const n=ri(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let h=u;for(;h<0;)h+=i;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const S=Math.min(t.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let r=h;r<w;r+=i){const s=r-u;for(let a=k;a<S;a+=l){const o=a-p,i=e.get(m,t,r,a,g);i>=I&&(I=i,N=n*c*d+s*c+o)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,S=x-1-c.padInfo.top,I=ri(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,o=r-S,i=s-k;let l=0;for(let n=0;n<b;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(o+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let o=0;o<v;o+=y){const u=(i+o)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const h=b*x*v-1-d.get(e,r,a,u,t)===n*x*v+s*v+o?1:0;if(0===h)continue;l+=N.get(e,r,a,u,t)*h}}}I.set(l,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const uO={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;l$([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=ji(i.shape,l,u,1,c,d),p=n.data.get(i.dataId).values,f=ri(h.outShape,i.dtype,kA(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,k=x-1-h.padInfo.top,S=ri(i.shape,"float32"),I=n.data.get(s.dataId).values,N=ri(s.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-k,a=r-w;let o=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const i=(a+s)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const l=x*v-1-f.get(e,r,i,t)===n*v+s?1:0;if(0===l)continue;o+=N.get(e,r,i,t)*l}}S.set(o,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const cO={kernelName:Gn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;l$(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ji(r.shape,s,a,[1,1],o),[d,h]=function(e,t,n,r,s){const a=wA(e,0,n,_e(t),s,"max"),o=kA(e,t,n,s,!0,r);return[a.values,o.values]}(u,r.shape,r.dtype,i,c),p=l.write(d,c.outShape,r.dtype),f=l.write(h,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const dO={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=ve(a,s.shape),l=ue(iu(s.shape,i)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const d=k$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(d);const h=NF({inputs:{a:d,b:c},backend:n});u.push(h);const p=cF({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:o}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const hO={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;l$(s,"min");const i=ve(a,s.shape);let l=i;const u=cu(l,s.shape.length);let c=s;null!=u&&(c=zE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=hu(l.length,s.shape.length)),uu("min",l,c.shape.length);const[d,h]=iu(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(o){const e=XR({inputs:{x:g},backend:n,attrs:{shape:lu(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const pO={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;l$(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===o?0:1,d=n.data.get(s.dataId).values,h=s.shape.length,p=_e(s.shape),f=ue(i),m=i.length,g=_e(i),y=ke(s.dtype,f);for(let e=0;e<f;e++){let t=Ge(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ue(t,h,p);y[e]=d[n]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},fO=p$(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),mO=I$(Kn,fO),gO={kernelName:Kn,backendName:"cpu",kernelFunc:mO};function yO(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const l=ve([i],s.shape),u=sO({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=lu(u.shape,l),d=XR({inputs:{x:u},backend:n,attrs:{shape:c}}),h=RR({inputs:{a:s,b:d},backend:n}),p=j$({inputs:{x:h},backend:n}),f=cF({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=XR({inputs:{x:f},backend:n,attrs:{shape:c}}),g=NF({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const bO={kernelName:Vr,backendName:"cpu",kernelFunc:yO};const xO={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;l$(s,"multinomial");const l=i?s:yO({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,h=[u,a],p=Be(ue(h),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=Bc.alea(o.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",p)}},vO=Wh;const wO={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r;l$(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:d}=vO(u,c,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},kO=Vh;const SO={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r;l$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=kO(c,d,o,i,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},IO=Uh;const NO={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r;l$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,h=o,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=IO(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const CO={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:l}=r;l$(s,"oneHot");const u=ue(s.shape),c=new Float32Array(u*o);c.fill(l);const d=n.data.get(s.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<o&&(c[e*o+d[e]]=i);return n.makeTensorInfo([...s.shape,o],a,c)}};function TO(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=x$({inputs:{input:r},backend:n}),t=TO({inputs:{x:e},backend:n}),s=_A({inputs:{input:r},backend:n}),a=TO({inputs:{x:s},backend:n}),o=f$({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return AF({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const $O={kernelName:hs,backendName:"cpu",kernelFunc:TO};const EO={kernelName:rr,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=x$({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=_A({inputs:{input:s},backend:r}),o=TO({inputs:{x:a},backend:r}),i=f$({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return AF({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function RO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return kF({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{ie(a,e.shape,"All tensors passed to stack must have matching shapes"),oe(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=LA({inputs:t.map((e=>{const t=kF({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const AO={kernelName:ar,backendName:"cpu",kernelFunc:RO};const FO={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;l$(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=ue(s.shape),d=s.shape.length,h=_e(s.shape),p=ue(i),f=i.length,m=_e(i),g=ke(s.dtype,p);0!==o&&g.fill(o);for(let e=0;e<c;e++){g[Ue(Ge(e,d,h).map(((e,t)=>e+l[t])),f,m)]=u[e]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},OO=p$(((e,t)=>Math.pow(e,t))),DO=I$(lr,OO),_O={kernelName:lr,backendName:"cpu",kernelFunc:DO};const MO={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=ZE(l,u,c,a.shape,a.dtype,d,o.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const LO={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=HE(o,r.shape,r.dtype,i,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const zO={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=JE(u,s.shape,c,a.shape,a.dtype,d,o.shape,h,p,l);return n.makeTensorInfo(f,a.dtype,m)}};const PO={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=QE(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}},BO=M$(gr,(e=>1/e)),WO={kernelName:gr,backendName:"cpu",kernelFunc:BO};const VO={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;l$(s,"resizeBilinear");const l=_e(s.shape),[u,c]=i,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ue([d,u,c,f])),y=[a&&u>1?h-1:h,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;n=o?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(h-1,Math.ceil(n)),i=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],d=u+n*l[2],h=i+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],a=t+(m[h+e]-t)*r,o=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=o}}}return n.makeTensorInfo([d,u,c,f],"float32",g)}};const UO={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;l$([a,s],"resizeBilinearGrad");const i=_e(s.shape),[l,u,c,d]=s.shape,[,h,p]=a.shape,f=new Float32Array(l*u*c*d),m=[o&&h>1?u-1:u,o&&p>1?c-1:c],g=[o&&h>1?h-1:h,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*i[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*i[1],o=t+s*i[1],l=n-r,h=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],w=h*u,k=h*s,S=l*u,I=l*s;for(let e=0;e<d;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,d],"float32",f)}};const GO={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;l$(s,"resizeNearestNeighbor");const l=_e(s.shape),[u,c]=i,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*u*c*f),y=[a&&u>1?h-1:h,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<d;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=o?x*(e+.5):x*e;let r=Math.min(h-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=o?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([d,u,c,f],s.dtype,g)}};const ZO={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;l$([a,s],"resizeNearestNeighborGrad");const i=_e(s.shape),l=_e(a.shape),[u,c,d,h]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*d*h),g=n.data.get(a.dataId).values,y=[o&&p>1?c-1:c,o&&f>1?d-1:d],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,S=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*i[0];for(let e=0;e<c;e++){const n=t+e*i[1],r=Math.floor(e*w),s=Math.floor(r-S/2);for(let r=0;r<d;r++){const a=n+r*i[2],u=Math.floor(r*k),y=Math.floor(u-I/2);for(let n=0;n<h;n++){let i=0;for(let a=0;a<S;a++){const u=a+s;if(u<0||u>=p)continue;const h=t+u*l[1],m=u*x;if(e===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const s=h+t*l[2],a=t*v;r===Math.min(d-1,o?Math.round(a):Math.floor(a))&&(i+=g[s+n])}}m[a+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const jO={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;l$(s,"reverse");const o=s.shape.length,i=ve(a,s.shape);if(0===o)return y$({inputs:{x:s},backend:n});const l=new ha(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();i.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},HO={kernelName:ms,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=ke(r.dtype,ue(r.shape)),[u,c,d,h]=r.shape,[p,f]=sm(o,c,d),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*d*c*h;for(let e=0;e<c;e++){const n=e*(d*h);for(let r=0;r<d;r++){const s=r*h;for(let o=0;o<h;o++){const i=[u,e,r,o],b=i[2],x=i[1];let v=(b-p)*g-(x-f)*m,w=(b-p)*m+(x-f)*g;v=Math.round(v+p),w=Math.round(w+f);let k=a;if("number"!=typeof a&&(k=3===o?255:a[o]),v>=0&&v<d&&w>=0&&w<c){k=y[t+w*(d*h)+v*h+o]}l[t+n+s+o]=k}}}}return{dataId:i.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},qO=M$(Nr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),KO={kernelName:Nr,backendName:"cpu",kernelFunc:qO};const XO={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=Yd(0,s,o),h=rR(n.bufferSync(s),n.bufferSync(a),o,d,u,l,i,c,0,!0);return n.makeTensorInfo(o,h.dtype,h.values)}};function YO(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function JO(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const QO={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=function(e,t,n,r,s,a){const o=Se("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),l=i*s;for(let e=0;e<s;++e)o[l+e]="left"===a?YO(n,t[e+l]):JO(n,t[e+l])}return o}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",i)}};const eD={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;l$([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Na(s.dtype,a.dtype),d=Be(ue(s.shape),c);let h=0;const p=0===o||o>1||1===s.shape.length?1:ue(s.shape.slice(1));for(let e=0;e<i.length;e++)for(let t=0;t<p;t++)1===i[e]?d[h++]=l[e]:d[h++]=u[e];return n.makeTensorInfo(s.shape,c,d)}},tD=cm,nD=dm,rD=M$(Ar,(e=>e>=0?nD*e:tD*(Math.exp(e)-1))),sD={kernelName:Ar,backendName:"cpu",kernelFunc:rD},aD=M$(_r,(e=>e<0?-1:e>0?1:0)),oD={kernelName:_r,backendName:"cpu",kernelFunc:aD},iD=M$(Or,(e=>Math.sin(e))),lD={kernelName:Or,backendName:"cpu",kernelFunc:iD},uD=M$(Dr,(e=>Math.sinh(e))),cD={kernelName:Dr,backendName:"cpu",kernelFunc:uD},dD=Math.log(1.1920928955078125e-7)+2,hD=M$(Lr,(e=>{const t=e>-dD,n=e<dD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),pD={kernelName:Lr,backendName:"cpu",kernelFunc:hD};const fD={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;l$([s],"spaceToBatchND");const i=ue(a),l=[[0,0]];l.push(...o);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=FO.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=am(u.shape,a,i,!1),d=om(c.length,a.length,!1),h=im(u.shape,a,i,!1),p=XR({inputs:{x:u},backend:n,attrs:{shape:c}}),f=zE({inputs:{x:p},backend:n,attrs:{perm:d}}),m=XR({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};const mD={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[d,h,p,f,m]=cR(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const gD={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,d]=dR(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const yD={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=hR(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const bD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=hR(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}};const xD={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=Yd(0,s,i),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=rR(f,n.bufferSync(a),i,h,c,u,l,d,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=rR(f,n.bufferSync(a),i,h,c,u,l,d,n.data.get(o.dataId).values[0],p);break;case"int32":m=rR(f,n.bufferSync(a),i,h,c,u,l,d,n.data.get(o.dataId).values[0],p);break;case"string":m=rR(f,n.bufferSync(a),i,h,c,u,l,d,Js(n.data.get(o.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}};const vD={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=ve(o,s.shape)[0],l=Mm(s,a,i),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[i]=e;const r=lR({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,r}))}},wD={kernelName:Kr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;l$(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},kD=M$(ps,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),SD={kernelName:ps,backendName:"cpu",kernelFunc:kD};const ID={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r;l$(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Vf(s.shape,a,o,i,l,u,c,d,h);let w;if(m)w=XR({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){oe(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ef(b,x,v),t=lR({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=XR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=kR(p,n.bufferSync(s),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};const ND={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=IR(h,p,s,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const CD={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,d]=CR(i,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const TD={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=TR(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",o)}},$D=M$(ns,(e=>Math.tan(e))),ED={kernelName:ns,backendName:"cpu",kernelFunc:$D},RD=M$(rs,(e=>Math.tanh(e)));const AD={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:o,numUpdates:i,sliceSize:l,strides:u,outputSize:c}=Yd(0,s,r.shape),d=n.bufferSync(s),h=n.bufferSync(a),p=n.bufferSync(r),f=rR(d,h,r.shape,c,l,i,o,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};const FD={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;l$(s,"tile");const o=FR(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};const OD={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;l$(s,"topk");const i=n.data.get(s.dataId).values,[l,u]=_R(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const DD={kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,d,h,p]=s.shape,[f,m]=null!=u?u:[d,h],g=[c,f,m,p],y=_e(s.shape),b=y[0],x=y[1],v=y[2],w=_e(g),k=w[0],S=w[1],I=w[2],N=ke(s.dtype,ue(g));N.fill(l);const C=r.data.get(s.dataId).values,T=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=_D(c,h,i),m=_D(p,d,i);switch(o){case"nearest":a=LD(C,d,h,b,x,v,e,m,f,s,l);break;case"bilinear":a=zD(C,d,h,b,x,v,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}N[e*k+n*S+r*I+s]=a}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function _D(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ee(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function MD(e,t,n,r,s,a,o,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<n?e[o*r+i*s+l*a+u]:c}function LD(e,t,n,r,s,a,o,i,l,u,c){return MD(e,t,n,r,s,a,o,Math.round(i),Math.round(l),u,c)}function zD(e,t,n,r,s,a,o,i,l,u,c){const d=Math.floor(i),h=Math.floor(l),p=d+1,f=h+1;return(p-i)*((f-l)*MD(e,t,n,r,s,a,o,d,h,u,c)+(l-h)*MD(e,t,n,r,s,a,o,d,f,u,c))+(i-d)*((f-l)*MD(e,t,n,r,s,a,o,p,h,u,c)+(l-h)*MD(e,t,n,r,s,a,o,p,f,u,c))}const PD={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;l$(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=MR(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const BD={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(o).fill(0),d=s.shape.slice();d[a]=1;const h=new Array(i);for(let e=0;e<h.length;e++){c[a]=e;const t=lR({inputs:{x:s},backend:n,attrs:{begin:c,size:d}});h[e]=XR({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return h}};const WD={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;l$(s,"unsortedSegmentSum");const i=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=kF({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<o;++e){const t=Hs(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=U$({inputs:{a:r,b:c},backend:n}),o=k$({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=RE({inputs:{a:o,b:s},backend:n}),d=cF({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});i.push(d),l.push(r),l.push(a),l.push(o),l.push(u),l.push(d)}const d=RO({inputs:i,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},VD=[eA,h$,nA,sA,E$,aA,oA,iA,lA,uA,dA,pA,mA,bA,vA,IA,NA,CA,TA,QR,$A,EA,RA,D$,AA,S$,B$,OA,m$,DA,zA,BA,WA,VA,UA,GA,ZA,HA,KA,XA,YA,JA,QA,eF,nF,rF,sF,aF,oF,iF,lF,uF,hF,PR,pF,G$,wF,H$,SF,X$,RF,FF,OF,Q$,nE,DF,_F,MF,LF,iE,cE,b$,zF,MA,BF,VF,GF,WR,pE,gE,ZF,vE,HF,XF,JF,tO,nO,rO,aO,IE,oO,iO,lO,uO,cO,dO,hO,TE,pO,gO,xO,AE,OE,wO,SO,NO,ME,CO,EO,AO,FO,_O,GR,WE,MO,LO,zO,PO,v$,CF,WO,jR,qR,YR,VO,UO,GO,ZO,jO,HO,KO,nR,XO,QO,eD,sD,oR,oD,lD,cD,uR,bO,pD,fD,mD,gD,yD,bD,xD,vD,mR,wD,bR,wR,SD,ID,ND,CD,TD,AR,dF,ED,{kernelName:rs,backendName:"cpu",kernelFunc:RD},AD,FD,OD,DD,PE,PD,BD,WD,$O];for(const e of VD)Cs(e);const UD={},GD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ZD(e,t){UD[e]=t}function jD(e,t){if(!(e in UD)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Ke().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete UD[e]}),!1),Ke().getBool("SOFTWARE_WEBGL_ENABLED")&&(GD.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",GD)||n.getContext("experimental-webgl",GD);return n.getContext("webgl2",GD)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;UD[e]=n}const n=UD[e];return null==n||n.isContextLost()?(delete UD[e],jD(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),UD[e])}var HD,qD,KD;function XD(e,t){return[t,e]}function YD(e){const t=ue(e);return me(Math.ceil(t/4))}function JD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function QD(e,t){const n=e;let r,s,a,o,i,l,u,c,d,h;return 2===Ke().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function e_(e,t){const n=t();return Ke().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+s_(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(HD||(HD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(qD||(qD={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(KD||(KD={}));const t_=5.96e-8,n_=65504;function r_(e){return!!(Ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||t_<Math.abs(e)&&Math.abs(e)<n_)}function s_(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function a_(e,t){return R_(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function o_(e,t){const n=R_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(e_(e,(()=>e.shaderSource(n,t))),e_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function i_(e,t){const n=R_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(e_(e,(()=>e.shaderSource(n,t))),e_(e,(()=>e.compileShader(n))),Ke().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw u_(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const l_=/ERROR: [0-9]+:([0-9]+):/g;function u_(e,t){const n=l_.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>ye((t+1).toString(),a)+e));let i=0;for(let e=0;e<o.length;e++)i=Math.max(o[e].length,i);const l=o.slice(0,r-1),u=o.slice(r-1,r),c=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ye(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function c_(e){return R_(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function d_(e,t){if(e_(e,(()=>e.linkProgram(t))),!Ke().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function h_(e,t){if(e_(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function p_(e,t){const n=R_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return e_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),e_(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function f_(e,t){const n=R_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return e_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),e_(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function m_(){return 2===Ke().getNumber("WEBGL_VERSION")?1:4}function g_(e){return R_(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function y_(e,t){const n=Ke().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function b_(e){return R_(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function x_(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(e_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),e_(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),e_(e,(()=>e.enableVertexAttribArray(i))),!0)}function v_(e,t,n){A_(e,n),e_(e,(()=>e.activeTexture(e.TEXTURE0+n))),e_(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function w_(e,t){A_(e,t),e_(e,(()=>e.activeTexture(e.TEXTURE0+t))),e_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function k_(e,t,n){return R_(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function S_(e,t,n){return e.getUniformLocation(t,n)}function I_(e,t,n,r){e_(e,(()=>v_(e,t,r))),e_(e,(()=>e.uniform1i(n,r)))}function N_(e){e_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),e_(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),e_(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function C_(e,t,n){e_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),e_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function T_(e,t){e_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),e_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function $_(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+E_(e,t))}function E_(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function R_(e,t,n){const r=e_(e,(()=>t()));if(null==r)throw new Error(n);return r}function A_(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function F_(e,t=2){return ue(e.slice(0,e.length-t))}function O_(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function D_(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[F_(e),...O_(e)]),t}function __(e,t=!1){let n=Ke().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Ke().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Ke().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?te(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=we(e);e=t.newShape}let s=ue(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const o=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const t=F_(e);let n=2,r=2;e.length&&([n,r]=O_(e)),s=t*(n/2)*(r/2),a=me(s).map((e=>2*e))}else a=me(s);return a}function M_(e){return e%2==0}function L_(e,t){if(he(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(M_(n)&&M_(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&M_(e[0])&&M_(t[0])}let z_,P_;function B_(e){if(null==z_){const t=jD(e);z_=t.getParameter(t.MAX_TEXTURE_SIZE)}return z_}function W_(){z_=null}function V_(){P_=null}function U_(e){if(null==P_){const t=jD(e);P_=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,P_)}function G_(e){if(0===e)return 0;let t;const n=jD(e);return t=Z_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Z_(n,"EXT_disjoint_timer_query")?1:0,t}function Z_(e,t){return null!=e.getExtension(t)}function j_(e){try{if(null!=jD(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function H_(e){if(0===e)return!1;const t=jD(e);if(1===e){if(!Z_(t,"OES_texture_float"))return!1}else if(!Z_(t,"EXT_color_buffer_float"))return!1;return K_(t)}function q_(e){if(0===e)return!1;const t=jD(e);if(1!==e){if(Z_(t,"EXT_color_buffer_float"))return K_(t);const e="EXT_color_buffer_half_float";if(Z_(t,e)){const n=t.getExtension(e);return function(e,t){const n=QD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!Z_(t,"OES_texture_float"))return!1;if(!Z_(t,"WEBGL_color_buffer_float"))return!1;return K_(t)}function K_(e){const t=QD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function X_(e){if(2!==e)return!1;return null!=jD(e).fenceSync}function Y_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&oe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const J_=Ke();function Q_(){let e,t,n,r,s,a,o,i,l,u;return 2===Ke().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=Ke().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function eM(e,t,n="index"){const r=_e(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function tM(e,t,n="index"){const r=_e(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function nM(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function rM(e){const t=_e(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}J_.registerFlag("HAS_WEBGL",(()=>J_.getNumber("WEBGL_VERSION")>0)),J_.registerFlag("WEBGL_VERSION",(()=>j_(2)?2:j_(1)?1:0)),J_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),J_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===J_.get("WEBGL_VERSION"))),J_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),J_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),J_.registerFlag("WEBGL_PACK",(()=>J_.getBool("HAS_WEBGL"))),J_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_CLIP",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_REDUCE",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_CONV_IM2COL",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>J_.getBool("WEBGL_PACK"))),J_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>B_(J_.getNumber("WEBGL_VERSION")))),J_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>U_(J_.getNumber("WEBGL_VERSION")))),J_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=J_.getNumber("WEBGL_VERSION");return 0===e?0:G_(e)})),J_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>J_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Va())),J_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>H_(J_.getNumber("WEBGL_VERSION")))),J_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!J_.getBool("WEBGL_FORCE_F16_TEXTURES")&&J_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),J_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>q_(J_.getNumber("WEBGL_VERSION")))),J_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>X_(J_.getNumber("WEBGL_VERSION")))),J_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>J_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),J_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),J_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Va()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),J_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),J_.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),J_.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),J_.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),J_.registerFlag("WEBGL_EXP_CONV",(()=>!1)),J_.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>J_.getBool("IS_TEST"))),J_.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),J_.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),J_.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),J_.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const sM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:aM}=y;function oM(e,t,n){const r=[];if(e.forEach((e=>{const t=ue(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=yM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?lM(e,r):iM(e,r);const a=e.shapeInfo.logicalShape,o=t.logicalShape;a.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=aM(e.shapeInfo.logicalShape,t.logicalShape),l=gM(o),u=o-a;let c;const d=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let h="";h=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let p="return outputValue;";const f=1===ue(e.shapeInfo.logicalShape),m=ue(t.logicalShape),g=1===m;if(1!==a||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&null==e.shapeInfo.flatOffset&&he(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=gM(l),c=aM(e.shapeInfo.logicalShape,t.logicalShape),d=l-i;let h;const p=["x","y","z","w","u","v"];h=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";f=l<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=Q_(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let u,c,d=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${uM}\n    ${cM}\n    ${dM}\n  `;return t}(i);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return pM();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(he(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let o=a,i="",l="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(i)):(u=function(e,t,n){switch(e.length){case 0:return pM();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(he(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${tM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=eM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${tM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=eM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=eM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=eM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(d+=hM);return[d,l,c,s,u,a,n.userCode].join("\n")}function iM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=fM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${l}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${mM(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],o=s[1];if(1===o&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=fM(n);if(1===o)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&he(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=we(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${iM(bM(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${xM(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${mM(e)}\n      }\n    `;const u=a[0],c=a[1],d=fM(r);if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=we(n),u=i;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${iM(bM(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${xM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${mM(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===o&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=fM(r);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=we(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${iM(bM(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${xM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${mM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=fM(r);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=we(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${iM(bM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${xM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${mM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=fM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=we(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${iM(bM(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${xM(t,a)});\n      }\n    `}const o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${mM(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=fM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function lM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Q_();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=Q_();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Q_();if(null!=a&&he(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${lM(bM(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${xM(a,r)});\n        }\n      `}const i=Q_();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const l=o[0],u=o[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Q_();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],d=Math.ceil(a[o-1]/2);let h=d*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<o-1;e++)p=`int b${e}, `+p,h*=a[o-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const uM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function pM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function fM(e){return`offset${e}`}function mM(e){const t=e.name,n=ue(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function gM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yM(e,t,n){const{newShape:r,keptDims:s}=we(t),a=t.length,o=e&&3===a&&1===t[0],i=o?t.slice(1):r,l=!e&&a>1&&!he(t,n)&&r.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:s}}function bM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xM(e,t){return t.map((t=>e[t])).join(", ")}function vM(e,t,n){const r=[],s=[];let a,o,i,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ke().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),i=e.getUniformLocation(n,"outShapeStrides",c),o=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}}function wM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!he(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!he(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function kM(e){return Ke().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class SM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=HD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Q_();this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tM(["r","c","d"],e):eM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class IM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=HD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Q_();this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tM(["r","c","d"],e):eM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class NM{constructor(e){this.variableNames=["A"],this.outTexUsage=qD.DOWNLOAD;const t=Q_();this.outputShape=e,this.userCode=`\n      ${sM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class CM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qD.DOWNLOAD;const t=Q_();this.outputShape=e,this.userCode=`\n      ${sM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const TM={R:0,G:1,B:2,A:3};class $M{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Q_();this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${TM[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class EM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Q_();this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function RM(e){const t=Q_();return o_(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function AM(e){return p_(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function FM(e){return f_(e,new Uint16Array([0,1,2,2,1,3]))}function OM(e,t,n,r,s,a){y_(t,n);const o=g_(e),i=e.TEXTURE_2D;return e_(e,(()=>e.bindTexture(i,o))),e_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),e_(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),e_(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),e_(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ke().getNumber("WEBGL_VERSION")?e_(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))):e_(e,(()=>e.texStorage2D(i,1,r,t,n))),e_(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function DM(e){return e.internalFormatFloat}function _M(e,t,n,r){const[s,a]=XD(t,n);return OM(e,s,a,DM(r),r.textureFormatFloat,e.FLOAT)}function MM(e){return e.internalFormatHalfFloat}function LM(e,t,n,r){const[s,a]=XD(t,n);return OM(e,s,a,MM(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function zM(e){return e.downloadTextureFormat}function PM(e,t,n,r){const[s,a]=XD(t,n);return OM(e,s,a,zM(r),e.RGBA,e.UNSIGNED_BYTE)}function BM(e){return e.internalFormatPackedFloat}function WM(e,t,n,r){const[s,a]=JD(t,n);return OM(e,s,a,BM(r),e.RGBA,e.FLOAT)}function VM(e){return e.internalFormatPackedHalfFloat}function UM(e,t,n,r){const[s,a]=JD(t,n);return OM(e,s,a,VM(r),e.RGBA,r.textureTypeHalfFloat)}function GM(e,t,n){e_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return x_(e,t,"clipSpacePos",n,3,20,0)&&x_(e,t,"uv",n,2,20,12)}function ZM(e,t,n,r,s,a){let o,i,l;e_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(s),2===Ke().getNumber("WEBGL_VERSION")?e_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):e_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,i,o))),e_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function jM(e,t,n){e_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ke().getNumber("WEBGL_VERSION")?e_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):e_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ke().getNumber("WEBGL_VERSION")?e_(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):e_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),e_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function HM(e,t,n,r){const s=e.createBuffer();e_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return e_(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),e_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),e_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function qM(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function KM(e,t,n,r){const[s,a]=XD(t,n),o=new Uint8Array(t*n*4);return e_(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function XM(e,t,n,r,s,a,o,i){const l=e,u=new Float32Array(function(e,t){const[n,r]=JD(e,t);return n*r*4}(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function YM(e,t,n){const r=new Float32Array(t*n*4);return e_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class JM{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ke().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,ZD(t,e)):this.gl=jD(t),e=this.gl,2===Ke().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>e_(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>e_(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>e_(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>e_(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>e_(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>e_(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>e_(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>e_(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ke().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=a_(this.gl,e),Z_(this.gl,t))this.textureHalfFloatExtension=a_(this.gl,t);else if(Ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Z_(this.gl,r))this.colorBufferHalfFloatExtension=a_(this.gl,r);else if(Ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Z_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Z_(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=AM(this.gl),this.indexBuffer=FM(this.gl),this.framebuffer=b_(this.gl),this.textureConfig=QD(this.gl,this.textureHalfFloatExtension)}get debug(){return Ke().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;e_(e,(()=>e.finish())),e_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),e_(e,(()=>e.deleteFramebuffer(this.framebuffer))),e_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),e_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),e_(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_M(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),LM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),PM(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jM(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),ZM(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),UM(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),WM(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(T_(this.gl,this.framebuffer),this.outputTexture=null),e_(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>KM(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return XM(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return qM(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=HM(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ke().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>YM(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=RM(t));const n=c_(t);e_(t,(()=>t.attachShader(n,this.vertexShader))),e_(t,(()=>t.attachShader(n,e))),d_(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&h_(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;e_(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),GM(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(e_(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&h_(this.gl,this.program),e_(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?k_(this.gl,e,t):S_(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),e_(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),I_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=JD(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&h_(this.gl,this.program),$_(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}e_(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),e_(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=a_(this.gl,2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await be((()=>this.disposed||this.isQueryAvailable(e,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ke().platform&&(n=Ke().platform.setTimeoutCustom.bind(Ke().platform)),be((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),C_(this.gl,e,this.framebuffer),this.debug&&$_(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(C_(this.gl,this.outputTexture,this.framebuffer),this.debug&&$_(this.gl)):T_(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;C_(r,e,this.framebuffer),this.debug&&$_(r),this.outputTexture=e,e_(r,(()=>r.viewport(0,0,t,n))),e_(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),e_(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:QM,bincountImpl:eL,bincountReduceImpl:tL,bitwiseAndImpl:nL,castImpl:rL,ceilImpl:sL,concatImpl:aL,equalImpl:oL,expImpl:iL,expm1Impl:lL,floorImpl:uL,gatherNdImpl:cL,gatherV2Impl:dL,greaterImpl:hL,greaterEqualImpl:pL,lessImpl:fL,lessEqualImpl:mL,linSpaceImpl:gL,logImpl:yL,maxImpl:bL,maximumImpl:xL,minimumImpl:vL,multiplyImpl:wL,negImpl:kL,notEqualImpl:SL,prodImpl:IL,raggedGatherImpl:NL,raggedRangeImpl:CL,raggedTensorToTensorImpl:TL,rangeImpl:$L,rsqrtImpl:EL,scatterImpl:RL,sigmoidImpl:AL,simpleAbsImpl:FL,sliceImpl:OL,sparseFillEmptyRowsImpl:DL,sparseReshapeImpl:_L,sparseSegmentReductionImpl:ML,sqrtImpl:LL,staticRegexReplaceImpl:zL,stridedSliceImpl:PL,stringNGramsImpl:BL,stringSplitImpl:WL,stringToHashBucketFastImpl:VL,subImpl:UL,tileImpl:GL,topKImpl:ZL,transposeImpl:jL,uniqueImpl:HL}=j;function qL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function KL(e,t){return 1===t?[e]:qL(e,t)}class XL{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=kM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=KL("rc",this.rank),t=gM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class YL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?nM(["r","c","d"],"inputShape"):eM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class JL{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=ez(t,n),s=tz(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=QL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let o;return r===KD.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===KD.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===KD.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===KD.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===KD.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=ez(n,r),a=tz(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=QL(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Ke().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function QL(e,t,n,r,s){const a=function(e,t){switch(e){case KD.PACKED_2X2_FLOAT32:return BM(t);case KD.PACKED_2X2_FLOAT16:return VM(t);case KD.UNPACKED_FLOAT32:return DM(t);case KD.UNPACKED_FLOAT16:return MM(t);case KD.PACKED_4X1_UNSIGNED_BYTE:return zM(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(s){const[t,n]=JD(e[0],e[1]);o=t*n}else{const[t,n]=XD(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return o*i}function ez(e,t){if(e===qD.UPLOAD)return KD.PACKED_2X2_FLOAT32;if(e===qD.RENDER||null==e)return function(e){return Ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?KD.PACKED_2X2_FLOAT32:KD.UNPACKED_FLOAT32:e?KD.PACKED_2X2_FLOAT16:KD.UNPACKED_FLOAT16}(t);if(e===qD.DOWNLOAD||e===qD.PIXELS)return KD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function tz(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class nz{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const rz="if (isnan(x)) return x;",sz="return x;",az="return abs(x);";const oz="return (x >= 0.0) ? x : (exp(x) - 1.0);",iz=rz+"\n  return (x < 0.0) ? 0.0 : x;\n",lz=rz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",uz="return x;",cz="return 1.0 / (1.0 + exp(-1.0 * x));",dz="return x;",hz="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pz="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",fz="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",mz="return 1.0 / (1.0 + exp(-1.0 * x));";class gz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class yz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length);const t=e.length,n=KL("rc",t),r=gM(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const bz=oh,xz={};const vz=Ke().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class wz extends X{nextDataId(){return wz.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ke().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof JM)t=e;else{const n=jD(Ke().getNumber("WEBGL_VERSION"),e);t=new JM(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=jD(Ke().getNumber("WEBGL_VERSION"));t=new JM(e),this.binaryCache=((n=Ke().getNumber("WEBGL_VERSION"))in xz||(xz[n]={}),xz[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new JL(this.gpgpu),this.numMBBeforeWarning=null==Ke().global.screen?1024:Ke().global.screen.height*Ke().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new K(this,hi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,s]},i.texShape=[r,s];const l=D_(t),u=new $M(l,!1,a),c=this.runWebGLProgram(u,[o],n,[[r,s]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if((Ke().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ke().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:qD.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(Ke().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:qD.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new gz(o,uz):new nz(o,uz);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=Ks()),"complex64"===r){c=bm(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Ks()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new gz(r,uz):new nz(r,uz);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ke().getBool("DEBUG")&&!Ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ke().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Ke().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...YD(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);u=bm(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ue(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;e_(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&hi().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:l}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new gz(s,uz):new nz(s,uz);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=hi().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:c},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return ri(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ri(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!r_(n)){if(Ke().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ue(t);if(Ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...YD(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Ke().getBool("WEBGL_PACK")&&!0===r,o=a?D_(t):t,i=a?new CM(o):new NM(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ea(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ea(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=re(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ks(),endMs:null}}endTimer(e){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ks(),e)}async getQueryTime(e){if(Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=vz){return Ke().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ue(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){xs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return bz(e.shape,t)}packedUnaryOp(e,t,n){const r=new gz(e.shape,t),s=this.compileAndRun(r,[e],n);return hi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=FL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,az,e.dtype);const t=new nz(e.shape,az),n=this.compileAndRun(t,[e]);return hi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Ys(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return hi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new yz(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new XL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[F_(e.shape),...O_(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[F_(t),...O_(t)],a=new YL(s,n),o=[n],i=this.runWebGLProgram(a,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){oe(ue(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=D_(s);let i;i=r?new IM(o):new SM(o);const l=[null!=t?t:YD(o)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===HD.DENSE){const t=null!=a?a:YD(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ue(o.shape))return i.values=ke(o.dtype,0),o;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ue(t.shape)<=Ke().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!L_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:l}=yM(e.packedInputs,t.shape,a);let u="",c="",d="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=_e(i);d=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const h=t.shape.length,p=2===i.length&&he(t.shape,a),f=1===ue(t.shape),m=Hl(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&he(a,n.texData.texShape),y=e.packedInputs||i.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${h}_${g}_${o?l:""}_${i.length}_${f}_${m}_${p}_${u}_${c}_${d}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Ke().getNumber("WEBGL_VERSION")}`,a}(e,u,c),h=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=oM(s,o,t),l=i_(e.gl,i),u=e.createProgram(l);return Ke().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},vM(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Ke().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(wM(t.inShapeInfos,n),wM([t.outShapeInfo],[r]));const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ke().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:o,shape:i,texShape:l}=t.variablesLocations[r];if(i){const{uniformShape:n}=yM(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(ue(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=o&&e.gl.uniform1i(o,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=_e(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],o=s[n];if("float"===r.type)e.gl.uniform1fv(a,o);else if("vec2"===r.type)e.gl.uniform2fv(a,o);else if("vec3"===r.type)e.gl.uniform3fv(a,o);else if("vec4"===r.type)e.gl.uniform4fv(a,o);else if("int"===r.type)e.gl.uniform1iv(a,o);else if("ivec2"===r.type)e.gl.uniform2iv(a,o);else if("ivec3"===r.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,h,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ke().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ks();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ke().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ke().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=mi((()=>{if(!Ke().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ke().getBool("DEBUG");Ke().set("DEBUG",!1);const t=this.abs(gu(1e-8)).dataSync()[0];if(Ke().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ks());let c=t.texShape;if(null==c&&(c=__(n,i),t.texShape=c),null!=s){const e=D_(n);let a,o=c[1],d=c[0];const h=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&h||([o,d]=JD(c[0],c[1])),a=i?new EM(e,h):new $M(e,h);const p=h?[d,o]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=h?qD.PIXELS:qD.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,s);const g=[[d,o]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ke().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ks()-u)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Te(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await qf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw u_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}=vM(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:o}=e,i=hi().backend;if(!i.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=i.writeTexture(r,t,n,s,a,o);return hi().makeTensorFromDataId(l,t,n,i)}}wz.nextDataId=0;const kz="4.11.0";function Sz(){Ke().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ua()&&Ni("webgl",(()=>new wz),2);const Iz={forceHalfFloat:Sz},Nz="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Cz{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Kl(t,n),this.enableShapeUniforms=kM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Tz="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class $z{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Kl(t,n);const s=this.outputShape.length;this.enableShapeUniforms=kM(s);let a="";if(r)if(0===s||1===ue(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${gM(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=KL("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Ez(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Rz={kernelName:yn,backendName:"webgl",kernelFunc:Ez};function Az(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=Ez({inputs:{x:r},backend:n}),l=Ez({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:l},a}const Fz={kernelName:Tt,backendName:"webgl",kernelFunc:Az},Oz="return (a < 0.) ? b * a : a;",Dz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const _z={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",Hs(a,"float32")),i=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $z(Dz,s.shape,o.shape):new Cz(Oz,s.shape,o.shape),l=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},Mz="return (a < 0.) ? b * a : a;",Lz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const zz={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $z(Lz,r.shape,s.shape):new Cz(Mz,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},Pz="if (isnan(x)) return x;";function Bz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,l=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,l);return i.makeTensorInfo(o.shape,l,t)}let u;return u=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new gz(o.shape,t):new nz(o.shape,e),i.runWebGLProgram(u,[o],l)}}function Wz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:l,b:u}=o,c=i;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},o=new Cz(e,l.shape,u.shape);return c.runWebGLProgram(o,[s,a],Na(n.dtype,r.dtype))})),a=Az({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const d=a||Na(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Jm(e):e,r="string"===l.dtype?Jm(t):t,[a,o]=s(l.shape,u.shape,n,r,d),i=c.makeTensorInfo(o,d);return c.texData.get(i.dataId).values=a,i}let h;return h=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new $z(t,l.shape,u.shape,n):new Cz(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],d)}}function Vz(e,t=!1){if("linear"===e)return t?dz:sz;if("relu"===e)return t?pz:iz;if("elu"===e)return t?hz:oz;if("relu6"===e)return t?fz:lz;if("prelu"===e)return t?Lz:Mz;if("leakyrelu"===e)return t?Dz:Oz;if("sigmoid"===e)return t?mz:cz;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Uz{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=kM(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const Gz={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Zz{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Kl(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const jz="return a * b;";function Hz(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Na(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Zz(Gz.REAL,r.shape,s.shape),o=new Zz(Gz.IMAG,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),c=Az({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=wL(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(i,a);return n.texData.get(l.dataId).values=o,l}let o;return o=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $z(jz,r.shape,s.shape):new Cz(jz,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const qz={kernelName:Yn,backendName:"webgl",kernelFunc:Hz};function Kz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=ue(s.shape),l=xe(a,i),u=ue(l);oe(i===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||L_(s.shape,l)||null!==c.texture&&L_(c.shape,l)?(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[F_(e.shape),...O_(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[F_(t),...O_(t)],o=new YL(a,r),i=[r],l=n.runWebGLProgram(o,[s],e.dtype,i,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,o)}const Xz={kernelName:br,backendName:"webgl",kernelFunc:Kz};class Yz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${pe(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Jz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function Qz(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=rm(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:l,outSize:u}=s[o];let c,d;c="mean"===n?0===o?new Yz({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new Yz({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):new Jz({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),d=a,a=r.runWebGLProgram(c,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}class eP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=gM(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class tP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=gM(this.rank),s=qL("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${i}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${i}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function nP(e,t,n){const r=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tP(e.shape,t):new eP(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function rP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=ve(s,e.shape);let i=o;const l=cu(i,a),u=null!=l;let c=e;u&&(c=nP(e,l,r),i=hu(i.length,a)),uu("sum",i,a);const[d,h]=iu(c.shape,i);let p=d;n&&(p=lu(d,o));const f=ue(h),m=Kz({inputs:{x:c},attrs:{shape:[ue(e.shape)/f,f]},backend:r}),g=Qz(m,Ca(e.dtype),"sum",r),y=Kz({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const sP={kernelName:Pr,backendName:"webgl",kernelFunc:rP};function aP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,l=new Array(i);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=jL(e,s.shape,s.dtype,a,l);u=o.makeTensorInfo(l,s.dtype);o.texData.get(u.dataId).values=t}else u=nP(s,a,o);return u}const oP={kernelName:is,backendName:"webgl",kernelFunc:aP},iP=1e3;function lP({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],h=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ue(m),b=ue(g),x=Kl(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);oe(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,d,p]:[y,p,d],w=r?[b,f,h]:[b,h,f],k=Kz({inputs:{x:e},backend:s,attrs:{shape:v}}),S=Kz({inputs:{x:t},backend:s,attrs:{shape:w}}),I=[k,S],N=Math.max(y,b),C=n?k.shape[1]:k.shape[2],T=null!=a,$=null!=o,E="leakyrelu"===l,R=null!=l?Vz(l,!0):null;let A;if((1===p||1===f)&&C>iP&&!1===(T||$||E||null!=R)){let e=k,t=S;n&&(e=aP({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=aP({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===f;let o=e;1!==f&&(o=Kz({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),I.push(o));const i=1===f?2:1;let l=t;a&&(l=Kz({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),I.push(l));const u=Hz({inputs:{a:o,b:l},backend:s});A=rP({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(u)}else{const l=Na(e.dtype,t.dtype),u=new Uz(v,w,[N,p,f],n,r,T,R,$,E),c=[k,S];if(null!=a&&c.push(a),$&&c.push(o),E){const e=s.makeTensorInfo([],"float32",Hs(i,"float32"));c.push(e),I.push(e)}A=s.runWebGLProgram(u,c,l)}const F=Kz({inputs:{x:A},backend:s,attrs:{shape:x}});I.push(A);for(const e of I)s.disposeIntermediateTensorInfo(e);return F}const uP={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return lP({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},cP="return abs(x);";const dP={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=FL(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new gz(r.shape,cP):new nz(r.shape,cP),n.runWebGLProgram(s,[r],r.dtype)}},hP=Bz({opSnippet:rz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),pP={kernelName:tt,backendName:"webgl",kernelFunc:hP},fP=Bz({opSnippet:rz+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),mP={kernelName:nt,backendName:"webgl",kernelFunc:fP},gP="return a + b;",yP=Wz({opSnippet:gP,packedOpSnippet:gP,supportsComplex:!0,cpuKernelImpl:QM}),bP={kernelName:rt,backendName:"webgl",kernelFunc:yP};class xP{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class vP{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const wP={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Ez({inputs:{x:s[0]},backend:r});if(s.length>Ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Na(e,t))),o=s.map((e=>e.shape)),i=Ke().getBool("WEBGL_PACK")?new vP(s[0].shape,o):new xP(s[0].shape,o);return r.runWebGLProgram(i,s,a)}};const kP={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ve(a,s.shape);let u=l;const c=cu(u,i);let d=s;null!=c&&(d=aP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=hu(u.length,i)),uu("all",u,i);const[h,p]=iu(d.shape,u),f=Kz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Qz(f,f.dtype,"all",n);let g;if(o){g=Kz({inputs:{x:m},backend:n,attrs:{shape:lu(h,l)}})}else g=Kz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};const SP={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ve(a,s.shape);let u=l;const c=cu(u,i);let d=s;null!=c&&(d=aP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=hu(u.length,i)),uu("any",u,i);const[h,p]=iu(d.shape,u),f=Kz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Qz(f,f.dtype,"any",n);let g;if(o){g=Kz({inputs:{x:m},backend:n,attrs:{shape:lu(h,l)}})}else g=Kz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};class IP{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NP{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,oe(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,l=gM(i),u=KL("coords",i);let c,d;if(1===a){d=i+1;const e=gM(d);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[i-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[i-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[i-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[i-2]};`}else d=i,c=`\n        ${l} sourceLocR = coords;\n        ++${u[i-1]};\n        ${l} sourceLocG = coords;\n        ++${u[i-2]};\n        ${l} sourceLocA = coords;\n        --${u[i-1]};\n        ${l} sourceLocB = coords;\n        --${u[i-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=KL("sourceLocR",d-1).concat("inIdx.r"),g=KL("sourceLocG",d-1).concat("inIdx.g"),y=KL("sourceLocB",d-1).concat("inIdx.b"),b=KL("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function CP(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=rm(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},l=new IP(i,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const d=CP(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function TP(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=rm(s[s.length-1]),o=new NP(s,a,n,null==r),i=null==r?[t]:[t,r],l=e.runWebGLProgram(o,i,"int32");if(l.shape.length===t.shape.length){const r=TP(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function $P(e,t,n,r){const s=[n];if(uu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ke().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let o=t;null!==a&&a.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,l]=iu(o.shape,s),u=ue(l),c=Kz({inputs:{x:o},backend:e,attrs:{shape:[-1,u]}});n.push(c);const d=CP(e,c,r);n.push(d);const h=Kz({inputs:{x:d},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return TP(e,t,r)}const EP={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=ve(a,s.shape);const i=cu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=aP({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=hu(o.length,l.shape.length)),uu("argMax",[o[0]],l.shape.length);const c=$P(n,l,o[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const RP={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=ve(a,s.shape);const i=cu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=aP({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=hu(o.length,l.shape.length)),uu("argMin",[o[0]],l.shape.length);const c=$P(n,l,o[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},AP=Bz({opSnippet:rz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),FP={kernelName:ut,backendName:"webgl",kernelFunc:AP},OP=Bz({opSnippet:rz+"return log(x + sqrt(x * x + 1.0));"}),DP={kernelName:ct,backendName:"webgl",kernelFunc:OP},_P=Bz({opSnippet:rz+"\n  return atan(x);\n"}),MP={kernelName:dt,backendName:"webgl",kernelFunc:_P},LP=Wz({opSnippet:Nz+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Tz+"\n  return result;\n"}),zP={kernelName:pt,backendName:"webgl",kernelFunc:LP},PP=Bz({opSnippet:rz+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),BP={kernelName:ht,backendName:"webgl",kernelFunc:PP};class WP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class VP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const UP={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Y_(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;oe(nl(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=ji(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))return Ez({inputs:{x:s},backend:n});const c=new WP(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const GP={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r,c=Hi(s.shape,a,o,[1,1,1],i,l,u),d=new VP(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};class ZP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const HP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,d=Hi(o.shape,i,l,[1,1,1],u,c),h=new jP(d);return n.runWebGLProgram(h,[s],o.dtype)}};const qP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;Y_([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=ji(o.shape,i,l,1,u),d=new ZP(c);return n.runWebGLProgram(d,[s],o.dtype)}};const KP={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return lP({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class XP{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Kl(e,t),Kl(e,n);let o="0.0";null!=r&&(Kl(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Kl(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class YP{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Kl(e,t),Kl(e,n);let o="vec4(0.0)";null!=r&&(Kl(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Kl(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const JP={kernelName:hn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;oe(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=o&&(c=o.shape,u.push(o));let d=null;null!=i&&(d=i.shape,u.push(i));const h=Ke().getBool("WEBGL_PACK_NORMALIZATION")?new YP(r.shape,s.shape,a.shape,c,d,l):new XP(r.shape,s.shape,a.shape,c,d,l);return t.runWebGLProgram(h,u,u[0].dtype)}};class QP{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=gM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return eB.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${eB[t]} = start[${t}] + coords.${eB[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const eB=["x","y","z","w","u","v"];class tB{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=gM(this.rank),n=KL("coords",this.rank),r=KL("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function nB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,l]=Wf(s,a,o);if(Tf(s,i,l),0===ue(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=OL(e.values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Pf(s.shape,i,l);if(u||!c){const e=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tB(l):new QP(l),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Bf(t,_e(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),a}(s,i,l,n)}const rB={kernelName:Fr,backendName:"webgl",kernelFunc:nB},sB={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;oe(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),l=am(s.shape,a,i),u=om(l.length,a.length),c=im(s.shape,a,i),d=lm(o,a.length),h=um(c,o,a.length),p=[],f=Kz({inputs:{x:s},backend:n,attrs:{shape:l}}),m=aP({inputs:{x:f},backend:n,attrs:{perm:u}}),g=Kz({inputs:{x:m},backend:n,attrs:{shape:c}}),y=nB({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const aB={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),l=n.readSync(a.dataId),u=eL(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}};const oB={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Ke().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,o]=nL(r.shape,s.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=a,i}let i;return i=a?new $z("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new Cz("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(i,[r,s],r.dtype)}};const iB={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=Kl(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},lB=Wz({opSnippet:"return float(a != b);",cpuKernelImpl:SL,dtype:"bool"}),uB={kernelName:Qn,backendName:"webgl",kernelFunc:lB};function cB(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ez({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const dB={kernelName:mr,backendName:"webgl",kernelFunc:cB},hB="return float(int(x));";const pB={kernelName:It,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return Ez({inputs:{x:a},backend:r});const t=fc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=Az({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=cB({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!Ce(a.dtype,o)){const e=Ez({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=rL(e,a.shape,a.dtype,o);return r.makeTensorInfo(t,n,s)}if("int32"===o)return function(e,t){const n=new nz(e.shape,hB),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",ke("bool",1)),t=lB({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},fB="return ceil(x);",mB=Bz({opSnippet:fB,packedOpSnippet:fB,cpuKernelImpl:sL}),gB={kernelName:Nt,backendName:"webgl",kernelFunc:mB};class yB{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class bB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const xB={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=Ke().getBool("WEBGL_PACK_CLIP")?new bB(s.shape):new yB(s.shape);const l=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,l)}};class vB{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function wB(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const kB={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new vB(r.shape),o=[wB(r,s.complexTensorInfos.real),wB(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class SB{constructor(e){this.outputShape=[],this.outputShape=Xf(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class IB{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Xf(e,t);const n=this.outputShape,r=n.length,s=gM(r),a=KL("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let n=1;n<i.length;n++)i[n]=i[n-1]+e[n][t];const l=o[t],u=o.slice(-2),c=o.join();let d=`if (${l} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<i.length;e++){const t=i[e-1];d+=`\n        if (${l} < ${i[e]}  && ${l} >= ${i[e-1]}) {\n          return getChannel(\n            getT${e}(${NB(o,l,t)}),\n            vec2(${NB(u,l,t)}));\n        }`}const h=i.length,p=i[i.length-1];d+=`\n        return getChannel(\n          getT${h}(${NB(o,l,p)}),\n          vec2(${NB(u,l,p)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function NB(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function CB(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ez({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const TB={kernelName:xn,backendName:"webgl",kernelFunc:CB};function $B(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>cB({inputs:{input:e},backend:n}))),s=e.map((e=>CB({inputs:{input:e},backend:n}))),a=$B(r,t,n),o=$B(s,t,n),i=Az({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=ue(e.shape.slice(t));return Kz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Xf(s.map((e=>e.shape)),1),i=1===s[0].shape[0],l=aL(a,o,r,i),u=Xf(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>ue(e.shape)>0)),o=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=o?new nz(e[0].shape,uz):new gz(e[0].shape,uz);return n.runWebGLProgram(t,e,r)}const i=Ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const e=[];for(let r=0;r<a.length;r+=i){const s=a.slice(r,r+i);e.push($B(s,t,n))}const r=$B(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new IB(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=Xf(e.map((e=>e.shape)),t),s=e.map((e=>Kz({inputs:{x:e},attrs:{shape:[-1,ue(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(a,t,n),c=new SB(l.map((e=>e.shape))),d=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=Kz({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),h}function EB(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ve(s,t[0].shape)[0];Kf(t.map((e=>e.shape)),a);const o=Xf(t.map((e=>e.shape)),a);if(0===ue(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ue(e.shape)>0));return 1===i.length?Ez({inputs:{x:i[0]},backend:n}):$B(i,a,n)}const RB={kernelName:Et,backendName:"webgl",kernelFunc:EB};class AB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class FB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kM(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*i};\n           `,1===o){if(n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===i&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?te(i):i;i%2==0&&a%2==1||i%2!=0&&a%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let h="",p="";n&&(h=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class DB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=kM(this.outputShape.length);const{dataFormat:n}=t,r=Q_(),s="channelsLast"===n,a=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function _B(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function MB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=_B(a.shape,p);null!=e&&(a=Kz({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=_B(s.shape,p);null!=e&&(s=Kz({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(!((1===d||1===h)&&c>iP)&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&he(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,oe(L_(u.shape,d.shape),(()=>`packed reshape ${u.shape} to ${d.shape} isn't free`));const p=Kz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=lP({a:d,b:p,backend:r,transposeA:false,transposeB:false,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),y=r.texData.get(g.dataId);oe(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=h,y.shape=n.outShape,f=Ez({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=Kz({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=Kz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=lP({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:false,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});f=Kz({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(d)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function LB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=h*d,y=[n.batchSize,m,g],b=[];if(null!=a){const e=_B(a.shape,f);null!=e&&(a=Kz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=_B(s.shape,f);null!=e&&(s=Kz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=Kz({inputs:{x:t},backend:r,attrs:{shape:[1,m,ue(t.shape)/m]}});b.push(x);const v=new DB(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),S=Kz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(S);const I=null!=s,N=null!=a,C="leakyrelu"===i,T=i?Vz(i,!0):null,$=new Uz(f?S.shape:x.shape,f?x.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,I,T,N,C),E=f?[S,x]:[x,S];if(s&&E.push(s),N&&E.push(a),C){const e=r.makeTensorInfo([],"float32",Hs(o,"float32"));E.push(e),b.push(e)}const R=r.runWebGLProgram($,E,"float32"),A=Kz({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});b.push(R);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}const zB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r,d=sl(l),h=qi(s.shape,a.shape,o,u,i,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===d&&Ke().getBool("WEBGL_EXP_CONV")){const e=new OB(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Ke().getBool("WEBGL_CONV_IM2COL"))p=LB({x:s,filter:a,convInfo:h,backend:n});else{const e=new AB(h);p=n.runWebGLProgram(e,[s,a],"float32")}else p=MB({x:s,filter:a,convInfo:h,backend:n});const f=Kz({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class PB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const UB={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,d=sl(l),h=qi(s.shape,c,o,1,i,u,!1,d),p=new PB(h);return n.runWebGLProgram(p,[s,a],"float32")}};class GB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=kM(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const ZB={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=sl(u),h=qi(o,a.shape,i,1,l,c,!1,d);if(Ke().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[h.strideHeight,h.strideWidth]],t=new GB(h);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new BB(h);return n.runWebGLProgram(e,[s,a],"float32")}}};const jB={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,u=Ki(s.shape,a.shape,o,l,i),c=new FB(u);return n.runWebGLProgram(c,[s,a],"float32")}};const HB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r,u=Ki(s.shape,l,o,1,i),c=new WB(u);return n.runWebGLProgram(c,[s,a],"float32")}};const qB={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r,u=Ki(l,a.shape,i,1,o),c=new VB(u);return n.runWebGLProgram(c,[s,a],"float32")}},KB=Bz({opSnippet:Pz+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Tz}\n  return result;\n`}),XB={kernelName:Mt,backendName:"webgl",kernelFunc:KB},YB=Bz({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),JB={kernelName:Lt,backendName:"webgl",kernelFunc:YB};class QB{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const h="bilinear"===r?1:0,[p,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const eW={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=r,c=new QB(s.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[s,a,o],"float32")}};var tW;!function(e){e.Prod="*",e.Sum="+"}(tW||(tW={}));class nW{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===tW.Prod?"1.0":"0.0",o=n?a:`getX(${rW(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(i-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${i}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${gM(s)} coords = getOutputCoords();\n        int end = ${sW(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${sW(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${rW(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function rW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function sW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function aW(e,t,n,r,s,a){const o=t.shape.length,i=cu([r],o);let l=t;null!=i&&(l=aP({inputs:{x:t},backend:n,attrs:{perm:i}}));const u=hu(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let d=Ez({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new nW(e,l.shape,!1,a),s=[[t]],o=d;d=n.runWebGLProgram(r,[d],d.dtype,s),n.disposeIntermediateTensorInfo(o)}if(s){const t=new nW(e,l.shape,s,a),r=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=aP({inputs:{x:d},backend:n,attrs:{perm:du(i)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}const oW={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return aW(tW.Prod,s,n,a,o,i)}};const iW={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return aW(tW.Sum,s,n,a,o,i)}};const lW={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=eL(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=tL(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class uW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const cW={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],l=("NHWC"===o?s.shape[1]:s.shape[2])*a,u=("NHWC"===o?s.shape[2]:s.shape[3])*a,c=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),d=new uW("NHWC"===o?[i,l,u,c]:[i,c,l,u],a,o);return n.runWebGLProgram(d,[s],s.dtype)}};class dW{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kM(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class hW{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kM(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*l};\n          `,1===i){if(t<c&&(o%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=o%2==0?te(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(o%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const pW={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),oe(nl(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const d=qi(s.shape,a.shape,o,c,i,u,!0);let h;h=Ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new hW(d):new dW(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[s,a],"float32",p)}};class fW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mW{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gW={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r,d=qi(s.shape,c,o,i,l,u,!0),h=new fW(d);return n.runWebGLProgram(h,[s,a],"float32")}};const yW={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r,d=qi(c,a.shape,o,i,l,u,!0),h=new mW(d);return n.runWebGLProgram(h,[s,a],"float32")}};class bW{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const xW={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=ue(r.shape),o=Kz({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new bW(a),l=n.runWebGLProgram(i,[o],o.dtype),u=Kz({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};class vW{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const wW={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,u=Zi(s.shape,a.shape,o,i,"NHWC",l);let c;const d=new vW(u);c=n.runWebGLProgram(d,[s,a],"float32");const h=Kz({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),h}};const kW={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=Rm(s,a.length);Fm(o.length,l,a);const{path:u,steps:c}=Om(i,l),d=c.length;let h=null,p=o.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Am(p,l[t]);let s;Dm(e)?s=a[t]:(s=aP({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);he(s.shape,o)||(s=Kz({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===h?h=s:(h=Hz({inputs:{a:s,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=rP({inputs:{x:h},backend:n,attrs:{axis:u[e]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},SW=Bz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),IW={kernelName:Qt,backendName:"webgl",kernelFunc:SW},NW={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $z("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Cz("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},CW=Wz({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:oL}),TW={kernelName:nn,backendName:"webgl",kernelFunc:CW},$W=Bz({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${hm};\n  float a1 = ${pm};\n  float a2 = ${fm};\n  float a3 = ${mm};\n  float a4 = ${gm};\n  float a5 = ${ym};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),EW={kernelName:tn,backendName:"webgl",kernelFunc:$W},RW=Bz({opSnippet:Pz+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:iL,dtype:"float32"}),AW={kernelName:rn,backendName:"webgl",kernelFunc:RW};function FW(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let l=s;return s<0&&(oe(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+s+1),i.splice(l,0,1),Kz({inputs:{x:a},backend:r,attrs:{shape:i}})}const OW={kernelName:sn,backendName:"webgl",kernelFunc:FW},DW="return exp(x) - 1.0;",_W=Bz({opSnippet:DW,packedOpSnippet:DW,cpuKernelImpl:lL}),MW={kernelName:an,backendName:"webgl",kernelFunc:_W};class LW{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function zW(e,t,n){const r=n.texData.get(e.dataId),s=ue(e.shape),a=e.shape[e.shape.length-1],o=Kz({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,l=new LW("real",i,t),u=new LW("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(l,c,"float32"),h=n.runWebGLProgram(u,c,"float32"),p=Az({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=Kz({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const PW={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return zW(r,!1,n)}};class BW{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function WW(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Fe(s),"string"===a){const e=Se(a,ue(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new BW(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const VW={kernelName:ln,backendName:"webgl",kernelFunc:WW};class UW{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const GW={kernelName:un,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new UW(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},ZW="return floor(x);",jW=Bz({opSnippet:ZW,packedOpSnippet:ZW,cpuKernelImpl:uL}),HW={kernelName:cn,backendName:"webgl",kernelFunc:jW},qW=Wz({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),KW={kernelName:dn,backendName:"webgl",kernelFunc:qW};class XW{constructor(e){this.variableNames=["A"];const t=Q_(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class YW{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Q_(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const JW={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],d=[u,l,a];if(i||o){const e=Ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=QW&&e===eV||(eV=e,QW=document.createElement("canvas").getContext("2d",{willReadFrequently:eV})),QW.canvas.width=l,QW.canvas.height=u,QW.drawImage(s,0,0,l,u),s=QW.canvas}const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=qD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),s);const p=Ke().getBool("WEBGL_PACK")?new YW(d):new XW(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let QW,eV=Ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const tV={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=sl(c),g=qi(s.shape,a.shape,l,d,u,h,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Kz({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,c)),v&&e.push(t(i,c)),w){const t=n.makeTensorInfo([],"float32",Hs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Ke().getBool("WEBGL_EXP_CONV")){const e=p?Vz(p,!0):null,t=new OB(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Ke().getBool("WEBGL_CONV_IM2COL"))y=LB({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?Vz(p,!1):null,t=new AB(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=MB({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const S=Kz({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const nV={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),oe(nl(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=qi(s.shape,a.shape,l,m,u,d,!0),y=Ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=h?Vz(h,y):null,x=[s,a],v=null!=o,w=null!=i,k="leakyrelu"===h;if(v&&x.push(o),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",Hs(p,"float32"));x.push(e),f.push(e)}let S;S=y?new hW(g,v,b,w,k):new dW(g,v,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(S,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class rV{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=gM(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const sV={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=ue(r.shape),[l,u,c,d]=If(r,s),h=Kz({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),p=Kz({inputs:{x:r},backend:n,attrs:{shape:[ue(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=cL(e,t,r.dtype,u,o,c,d,r.shape,i);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new rV(o,d,[u,c],r.shape),m=n.runWebGLProgram(f,[p,h],p.dtype),g=Kz({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class aV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=gM(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function oV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,l=ve(o,s.shape)[0];if(Ke().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];oe(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Ym(s,a,l,i),c=ue(a.shape),d=[],h=Kz({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Kz({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=dL(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new aV(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=Kz({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const iV={kernelName:pn,backendName:"webgl",kernelFunc:oV},lV=Wz({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:hL,dtype:"bool"}),uV={kernelName:mn,backendName:"webgl",kernelFunc:lV},cV=Wz({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:pL}),dV={kernelName:gn,backendName:"webgl",kernelFunc:cV};const hV={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return zW(r,!0,n)}},pV=Bz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),fV={kernelName:vn,backendName:"webgl",kernelFunc:pV},mV=Bz({opSnippet:"return float(isinf(x));",dtype:"bool"}),gV={kernelName:wn,backendName:"webgl",kernelFunc:mV},yV=Bz({opSnippet:"return float(isnan(x));",dtype:"bool"}),bV={kernelName:kn,backendName:"webgl",kernelFunc:yV},xV=Wz({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:fL,dtype:"bool"}),vV={kernelName:In,backendName:"webgl",kernelFunc:xV},wV=Wz({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:mL,dtype:"bool"}),kV={kernelName:Nn,backendName:"webgl",kernelFunc:wV};const SV={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=gL(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},IV=Bz({opSnippet:Pz+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:yL}),NV={kernelName:Tn,backendName:"webgl",kernelFunc:IV},CV=Bz({opSnippet:Pz+"\n  return log(1.0 + x);\n"}),TV={kernelName:$n,backendName:"webgl",kernelFunc:CV},$V=Wz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),EV={kernelName:En,backendName:"webgl",kernelFunc:$V},RV=Bz({opSnippet:"return float(!(x >= 1.0));"}),AV={kernelName:Rn,backendName:"webgl",kernelFunc:RV},FV=Wz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),OV={kernelName:An,backendName:"webgl",kernelFunc:FV};class DV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class _V{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const MV={kernelName:_n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r,u=Ke().getBool("WEBGL_PACK_NORMALIZATION")?new _V(s.shape,a,o,i,l):new DV(s.shape,a,o,i,l);return n.runWebGLProgram(u,[s],s.dtype)}};class LV{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const zV={kernelName:Mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r,d=new LV(s.shape,i,l,u,c);return n.runWebGLProgram(d,[s,a,o],s.dtype)}};function PV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,l=ve(a,s.shape);let u=l;const c=cu(u,i),d=null!=c,h=n.shouldExecuteOnCPU([s]);let p=s;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=jL(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype);n.texData.get(p.dataId).values=r}else p=nP(s,c,n);u=hu(u.length,i)}uu("max",u,i);const[f,m]=iu(p.shape,u);let g,y=f;if(o&&(y=lu(f,l)),h){const e=n.texData.get(p.dataId).values,t=bL(e,ue(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ue(t),a=Kz({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),o=Qz(a,e.dtype,"max",r),i=Kz({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const BV={kernelName:zn,backendName:"webgl",kernelFunc:PV},WV=Wz({opSnippet:Nz+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Tz+"\n  return result;\n",cpuKernelImpl:xL}),VV={kernelName:Pn,backendName:"webgl",kernelFunc:WV};const UV={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Y_(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;oe(nl(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=ji(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))return Ez({inputs:{x:s},backend:n});const c=new WP(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const GV={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=r,c=Hi(s.shape,a,o,[1,1,1],i,u,l),d=new VP(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};class ZV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,p=i*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const HV={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,d=Hi(o.shape,i,l,[1,1,1],u,c),h=new VP(d,"max",!0),p=n.runWebGLProgram(h,[o],o.dtype),f=new jV(d),m=n.runWebGLProgram(f,[s,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const qV={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;Y_([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=ji(i.shape,l,u,1,c,d),p=new WP(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new ZV(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const KV={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;oe(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];oe(nl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=ji(r.shape,s,a,u,o),[d,h]=function(e,t,n,r){let s=new WP(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new WP(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,c,l);return[d,h]}};const XV={kernelName:Zn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,l=ve(a,r.shape);let u=l;const c=cu(u,i),d=null!=c,h=o.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=jL(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype);o.texData.get(f.dataId).values=n}else f=nP(r,c,o);p.push(f),u=hu(u.length,i)}uu("sum",u,i);const[m,g]=iu(f.shape,u);let y=m;s&&(y=lu(m,l));const b=function(e,t,n,r){const s=ue(t),a=Kz({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),o=Qz(a,"float32","mean",r),i=Kz({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const e of p)o.disposeIntermediateTensorInfo(e);return b}};const YV={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ve(a,s.shape);let u=l;const c=cu(u,i);let d=s;null!=c&&(d=aP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=hu(u.length,s.shape.length)),uu("min",u,i);const[h,p]=iu(d.shape,u),f=Kz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Qz(f,f.dtype,"min",n);let g;if(o){g=Kz({inputs:{x:m},backend:n,attrs:{shape:lu(h,l)}})}else g=Kz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},JV=Wz({opSnippet:Nz+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Tz+"\n  return result;\n",cpuKernelImpl:vL}),QV={kernelName:Hn,backendName:"webgl",kernelFunc:JV};class eU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class tU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=KL("rc",r),l=KL("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const nU={kernelName:qn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tU(r.shape,s,a):new eU(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},rU=Wz({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Tz+"\n  return result;\n"}),sU={kernelName:Kn,backendName:"webgl",kernelFunc:rU};class aU{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const oU=Wz({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),iU={kernelName:Yt,backendName:"webgl",kernelFunc:oU},lU="return a - b;",uU=Wz({opSnippet:lU,packedOpSnippet:lU,supportsComplex:!0,cpuKernelImpl:UL}),cU={kernelName:ts,backendName:"webgl",kernelFunc:uU};function dU(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=ve([a],s.shape),i=PV({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=lu(i.shape,o),u=Kz({inputs:{x:i},backend:n,attrs:{shape:l}}),c=uU({inputs:{a:s,b:u},backend:n}),d=RW({inputs:{x:c},backend:n}),h=rP({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=Kz({inputs:{x:h},backend:n,attrs:{shape:l}}),f=oU({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const hU={kernelName:Vr,backendName:"webgl",kernelFunc:dU};const pU={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,l=i?s:dU({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new aU(u,c,a),h=[[o]],p=n.runWebGLProgram(d,[l],"int32",h);return i||n.disposeIntermediateTensorInfo(l),p}},fU=rz+"\n  return -x;\n";const mU={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=kL(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new gz(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new nz(r.shape,fU),n.runWebGLProgram(s,[r],r.dtype)}},gU=Wh;const yU={kernelName:er,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:d}=gU(u,c,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},bU=Vh;const xU={kernelName:tr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=bU(c,d,o,i,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},vU=Uh;const wU={kernelName:nr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),d=n.readSync(a.dataId),h=o,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=vU(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class kU{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const SU={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:l}=r,u=ue(s.shape),c=new kU(u,o,i,l),d=Kz({inputs:{x:s},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(c,[d],a);n.disposeIntermediateTensorInfo(d);const p=Kz({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(h),p}};function IU(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=cB({inputs:{input:r},backend:n}),t=IU({inputs:{x:e},backend:n}),s=CB({inputs:{input:r},backend:n}),a=IU({inputs:{x:s},backend:n}),o=Az({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return WW({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const NU={kernelName:hs,backendName:"webgl",kernelFunc:IU};const CU={kernelName:rr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=cB({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=CB({inputs:{input:s},backend:r}),o=IU({inputs:{x:a},backend:r}),i=Az({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return WW({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const TU={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return FW({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{ie(a,e.shape,"All tensors passed to stack must have matching shapes"),oe(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=EB({inputs:t.map((e=>{const t=FW({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class $U{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class EU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=KL("rc",r),l=KL("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const RU=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===ue(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return WW({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const i=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EU(s.shape,a,o):new $U(s.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[s],s.dtype,l)},AU={kernelName:or,backendName:"webgl",kernelFunc:RU},FU=Wz({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Tz+"\n  return result;\n"}),OU={kernelName:lr,backendName:"webgl",kernelFunc:FU};const DU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=[],u=ve(a,s.shape);let c=u;const d=cu(c,i);let h,p=s;if(null!=d&&(p=aP({inputs:{x:s},backend:n,attrs:{perm:d}}),c=hu(c.length,i),l.push(p)),uu("prod",c,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=IL(p.shape,p.dtype,e,c);h=n.makeTensorInfo(r,s,t)}else{const[e,t]=iu(p.shape,c),r=ue(t),a=Kz({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),o=Qz(a,Ca(s.dtype),"prod",n);h=Kz({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(a),l.push(o)}if(o){l.push(h);const e=lu(h.shape,u);h=Kz({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const _U={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),d=n.readSync(o.dataId),[h,p,f]=NL(l,u,c,a.shape,a.dtype,d,o.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const MU={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=CL(o,r.shape,r.dtype,i,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const LU={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),d=n.readSync(o.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=TL(u,s.shape,c,a.shape,a.dtype,d,o.shape,h,p,l);return n.makeTensorInfo(f,a.dtype,m)}},zU=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=$L(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},PU={kernelName:fr,backendName:"webgl",kernelFunc:zU},BU=Bz({opSnippet:"return 1.0 / x;"}),WU={kernelName:gr,backendName:"webgl",kernelFunc:BU},VU=Bz({opSnippet:rz+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),UU={kernelName:yr,backendName:"webgl",kernelFunc:VU},GU=Bz({opSnippet:rz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ZU={kernelName:Sr,backendName:"webgl",kernelFunc:GU};class jU{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class HU{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const qU={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new HU(s.shape,l,u,a,o):new jU(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],"float32")}};class KU{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const XU={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new KU(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class YU{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class JU{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const QU={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new JU(s.shape,l,u,a,o):new YU(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class eG{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const tG={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new eG(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class nG{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=gM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class rG{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=KL("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=gM(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const sG={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=ve(a,s.shape);if(0===o)return Ez({inputs:{x:s},backend:n});const l=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rG(s.shape,i):new nG(s.shape,i);return n.runWebGLProgram(l,[s],s.dtype)}};class aG{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oG={kernelName:ms,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=new aG(r.shape,a),[u,c]=sm(o,r.shape[1],r.shape[2]),d=[[u,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(l,[r],r.dtype,d)}},iG=Bz({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),lG={kernelName:Nr,backendName:"webgl",kernelFunc:iG},uG=Bz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:EL}),cG={kernelName:Cr,backendName:"webgl",kernelFunc:uG};class dG{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=gM(s.length),u=gM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class hG{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=gM(s.length),u=gM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const pG={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=Yd(0,s,o),h=[d/u,u];if(0===d)return n.makeTensorInfo(o,s.dtype);const p=Kz({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=Kz({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Ke().getBool("WEBGL_PACK")?new hG(l,i,p.shape.length,f.shape.length,c,h):new dG(l,i,p.shape.length,f.shape.length,c,h);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=Kz({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class fG{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Ke().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const mG={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new fG(s.shape[0],s.shape[1],a.shape[1],o),l=[[s.shape[1]]];return n.runWebGLProgram(i,[s,a],"int32",l)}};class gG{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=gM(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const yG={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new gG(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],Na(s.dtype,a.dtype))}},bG=Bz({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${cm};\n  float scale = ${dm};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),xG={kernelName:Ar,backendName:"webgl",kernelFunc:bG},vG=Bz({opSnippet:Pz+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:AL}),wG={kernelName:Mr,backendName:"webgl",kernelFunc:vG},kG=Bz({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),SG={kernelName:_r,backendName:"webgl",kernelFunc:kG},IG=Bz({opSnippet:Pz+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Tz}\n  return result;\n`}),NG={kernelName:Or,backendName:"webgl",kernelFunc:IG},CG=Bz({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),TG={kernelName:Dr,backendName:"webgl",kernelFunc:CG},$G=Bz({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),EG={kernelName:Lr,backendName:"webgl",kernelFunc:$G},RG={kernelName:Br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;oe(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=RU({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=am(c.shape,a,i,!1),h=om(d.length,a.length,!1),p=im(c.shape,a,i,!1),f=Kz({inputs:{x:c},backend:n,attrs:{shape:d}}),m=aP({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Kz({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const AG={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[d,h,p,f,m]=DL(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const FG={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,d]=_L(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const OG={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=ML(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const DG={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=ML(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}};const _G={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=Yd(0,s,i);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Js(n.readSync(o.dataId)[0]),p=RL(e,t,i,h,c,u,l,d,r,false);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new dG(u,l,s.shape.length,a.shape.length,d,[h,1],false),f=n.runWebGLProgram(p,[a,s,o],a.dtype),m=Kz({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}};const MG={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=ve(o,s.shape)[0],l=Mm(s,a,i),u=s.shape.length,c=new Array(u).fill(0),d=s.shape.slice();return l.map((e=>{const t=[...d];t[i]=e;const r=nB({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},LG="return sqrt(x);",zG=Bz({opSnippet:LG,packedOpSnippet:LG,cpuKernelImpl:LL}),PG={kernelName:zr,backendName:"webgl",kernelFunc:zG},BG=Bz({opSnippet:"return x * x;"}),WG={kernelName:Kr,backendName:"webgl",kernelFunc:BG},VG="return (a - b) * (a - b);",UG=Wz({opSnippet:VG,packedOpSnippet:VG}),GG={kernelName:qr,backendName:"webgl",kernelFunc:UG};const ZG={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=Jm(n.readSync(s.dataId)),o=zL(a,"string",r);return n.makeTensorInfo(s.shape,"string",o)}};const jG={kernelName:ps,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=rz+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new nz(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class HG{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=gM(n.length),a=gM(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const qG={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Vf(s.shape,a,o,i,l,u,c,d,h);let w;if(m)w=Kz({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){oe(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ef(b,x,v),t=nB({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=Kz({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ri(s.shape,s.dtype,e),r=PL(p,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new HG(b,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=Kz({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const KG={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=BL(h,p,s,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const XG={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,d]=WL(i,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const YG={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=VL(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},JG=Bz({opSnippet:"return tan(x);"}),QG={kernelName:ns,backendName:"webgl",kernelFunc:JG},eZ=Bz({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),tZ={kernelName:rs,backendName:"webgl",kernelFunc:eZ};const nZ={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:o}=t,{}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=Yd(0,a,s.shape),h=[d/u,u];if(0===d)return n.makeTensorInfo(s.shape,a.dtype);const p=Kz({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),f=Kz({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),m=Kz({inputs:{x:s},backend:n,attrs:{shape:h}}),g=new dG(l,i,p.shape.length,f.shape.length,c,h,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=Kz({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class rZ{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=gM(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function sZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Js(e))):e,r=ri(s.shape,s.dtype,t),o=GL(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new rZ(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const aZ={kernelName:ss,backendName:"webgl",kernelFunc:sZ};class oZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class iZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lZ(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function uZ(e){let t=1;for(;t<e;)t*=2;return t}const cZ={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Ke().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ke().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<i||a>l){const e=n.readSync(s.dataId),[t,r]=ZL(e,u,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,WW({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(s.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(s):s,f=ue(u)/c,m=Kz({inputs:{x:p},attrs:{shape:[f,c]},backend:n});h&&lZ(n,p);const g=uZ(a),y=uZ(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const s=x(),a=new oZ(r),o=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(a,s,"int32",o),lZ(n,i)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new iZ([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),lZ(n,a);const o=g/2,i=2*o;for(let e=o;e>=1;e/=2)v(i,e,b.shape)}let w=b;b=nB({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),lZ(n,w);let k=oV({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});lZ(n,m);const S=u.slice(0,-1);S.push(a),w=b,b=Kz({inputs:{x:b},attrs:{shape:S},backend:n}),lZ(n,w);const I=k;return k=Kz({inputs:{x:k},attrs:{shape:S},backend:n}),lZ(n,I),[k,b]}};class dZ{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const hZ={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=r,[c,d,h,p]=s.shape,[f,m]=null!=u?u:[d,h],g=new dZ(d,h,o,i,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}};const pZ={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Y_(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=HL(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const fZ={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,l=s.shape[a],u=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==a&&(u[c++]=o.shape[e]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){h[a]=e;const t=nB({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),r=Kz({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class mZ{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const gZ={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,l=[];let u=0;const c=cu([u],i);let d=s;null!=c&&(d=aP({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(d),u=hu(1,i)[0]);const h=Xm(d.shape,u,o),p=ue([d.shape[u]]),f=Kz({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ca(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],u=Km(i,a),c=new mZ({windowSize:u,inSize:i,batchSize:o,numSegments:a},t),d=n.compileAndRun(c,[e,r],s);if(l.push(d),d.shape[1]===a)return d;const h=zU({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=sZ({inputs:{x:h},backend:n,attrs:{reps:[i/u]}});l.push(h),l.push(p);return g(d,t,p,s,a)},y=Kz({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){l.push(y);const e=du(c);b=aP({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},yZ=[uP,dP,pP,mP,bP,wP,kP,SP,EP,RP,FP,DP,MP,zP,BP,UP,GP,HP,qP,KP,JP,sB,aB,oB,iB,pB,gB,xB,Fz,kB,RB,zB,UB,ZB,jB,HB,qB,XB,JB,eW,oW,iW,lW,cW,pW,gW,yW,xW,wW,kW,IW,NW,TW,EW,AW,OW,MW,PW,VW,GW,HW,KW,JW,tV,nV,sV,iV,uV,dV,Rz,hV,TB,fV,gV,bV,_z,vV,kV,SV,NV,TV,EV,AV,OV,MV,zV,BV,VV,UV,GV,HV,qV,KV,XV,YV,QV,nU,sU,pU,qz,mU,yU,xU,wU,uB,SU,CU,TU,AU,OU,zz,DU,_U,MU,LU,PU,dB,iU,WU,UU,ZU,Xz,qU,XU,QU,tG,sG,oG,lG,cG,pG,mG,yG,xG,wG,SG,NG,TG,rB,hU,EG,RG,AG,FG,OG,DG,_G,MG,PG,WG,GG,ZG,jG,qG,KG,XG,YG,cU,sP,QG,tZ,nZ,aZ,cZ,hZ,oP,pZ,fZ,gZ,NU];for(const e of yZ)Cs(e);const bZ={"tfjs-core":Gf,"tfjs-backend-cpu":LR,"tfjs-backend-webgl":kz,"tfjs-data":i$,"tfjs-layers":Uv,"tfjs-converter":XC,tfjs:"4.11.0"}},11358:(e,t,n)=>{"use strict";function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}n.d(t,{Z:()=>s});const s=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},81690:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():l(e%h|0,e/h|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(u(n,8)),a=g,o=0;o<e.length;o+=8){var l=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+l),n);if(l<8){var h=i(u(n,l));a=a.mul(h).add(i(d))}else a=(a=a.mul(s)).add(i(d))}return a.unsigned=t,a}function d(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(u(e,6),this.unsigned),a=this,o="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,h+=(p+=s+u)>>>16,c+=(h+=n+i)>>>16,c+=t+o,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,u=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*p+s*h+a*c+o*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:u(2,o-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(s);)p=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),a=a.add(h),s=s.sub(p)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},20499:(e,t,n)=>{"use strict";n.d(t,{uT:()=>x,W3:()=>$});var r=n(76805),s=n(8339),a=n(84067);n(3827);function o(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}var i=n(43001),l=n(14347);const u=!1;const c=i.createContext(null);var d=function(e){return e.scrollTop},h="unmounted",p="exited",f="entering",m="entered",g="exiting",y=function(e){function t(t,n){var r;r=e.call(this,t,n)||this;var s,a=n&&!n.isMounting?t.enter:t.appear;return r.appearStatus=null,t.in?a?(s=p,r.appearStatus=f):s=m:s=t.unmountOnExit||t.mountOnEnter?h:p,r.state={status:s},r.nextCallback=null,r}(0,a.Z)(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&t.status===h?{status:p}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==f&&n!==m&&(t=f):n!==f&&n!==m||(t=g)}this.updateStatus(!1,t)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var e,t,n,r=this.props.timeout;return e=t=n=r,null!=r&&"number"!=typeof r&&(e=r.exit,t=r.enter,n=void 0!==r.appear?r.appear:t),{exit:e,enter:t,appear:n}},n.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t)if(this.cancelNextCallback(),t===f){if(this.props.unmountOnExit||this.props.mountOnEnter){var n=this.props.nodeRef?this.props.nodeRef.current:l.findDOMNode(this);n&&d(n)}this.performEnter(e)}else this.performExit();else this.props.unmountOnExit&&this.state.status===p&&this.setState({status:h})},n.performEnter=function(e){var t=this,n=this.props.enter,r=this.context?this.context.isMounting:e,s=this.props.nodeRef?[r]:[l.findDOMNode(this),r],a=s[0],o=s[1],i=this.getTimeouts(),c=r?i.appear:i.enter;!e&&!n||u?this.safeSetState({status:m},(function(){t.props.onEntered(a)})):(this.props.onEnter(a,o),this.safeSetState({status:f},(function(){t.props.onEntering(a,o),t.onTransitionEnd(c,(function(){t.safeSetState({status:m},(function(){t.props.onEntered(a,o)}))}))})))},n.performExit=function(){var e=this,t=this.props.exit,n=this.getTimeouts(),r=this.props.nodeRef?void 0:l.findDOMNode(this);t&&!u?(this.props.onExit(r),this.safeSetState({status:g},(function(){e.props.onExiting(r),e.onTransitionEnd(n.exit,(function(){e.safeSetState({status:p},(function(){e.props.onExited(r)}))}))}))):this.safeSetState({status:p},(function(){e.props.onExited(r)}))},n.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},n.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},n.onTransitionEnd=function(e,t){this.setNextCallback(t);var n=this.props.nodeRef?this.props.nodeRef.current:l.findDOMNode(this),r=null==e&&!this.props.addEndListener;if(n&&!r){if(this.props.addEndListener){var s=this.props.nodeRef?[this.nextCallback]:[n,this.nextCallback],a=s[0],o=s[1];this.props.addEndListener(a,o)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},n.render=function(){var e=this.state.status;if(e===h)return null;var t=this.props,n=t.children,r=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,(0,s.Z)(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return i.createElement(c.Provider,{value:null},"function"==typeof n?n(e,r):i.cloneElement(i.Children.only(n),r))},t}(i.Component);function b(){}y.contextType=c,y.propTypes={},y.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:b,onEntering:b,onEntered:b,onExit:b,onExiting:b,onExited:b},y.UNMOUNTED=h,y.EXITED=p,y.ENTERING=f,y.ENTERED=m,y.EXITING=g;const x=y;var v=function(e,t){return e&&t&&t.split(" ").forEach((function(t){return r=t,void((n=e).classList?n.classList.remove(r):"string"==typeof n.className?n.className=o(n.className,r):n.setAttribute("class",o(n.className&&n.className.baseVal||"",r)));var n,r}))},w=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).appliedClasses={appear:{},enter:{},exit:{}},t.onEnter=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1];t.removeClasses(s,"exit"),t.addClass(s,a?"appear":"enter","base"),t.props.onEnter&&t.props.onEnter(e,n)},t.onEntering=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1]?"appear":"enter";t.addClass(s,a,"active"),t.props.onEntering&&t.props.onEntering(e,n)},t.onEntered=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1]?"appear":"enter";t.removeClasses(s,a),t.addClass(s,a,"done"),t.props.onEntered&&t.props.onEntered(e,n)},t.onExit=function(e){var n=t.resolveArguments(e)[0];t.removeClasses(n,"appear"),t.removeClasses(n,"enter"),t.addClass(n,"exit","base"),t.props.onExit&&t.props.onExit(e)},t.onExiting=function(e){var n=t.resolveArguments(e)[0];t.addClass(n,"exit","active"),t.props.onExiting&&t.props.onExiting(e)},t.onExited=function(e){var n=t.resolveArguments(e)[0];t.removeClasses(n,"exit"),t.addClass(n,"exit","done"),t.props.onExited&&t.props.onExited(e)},t.resolveArguments=function(e,n){return t.props.nodeRef?[t.props.nodeRef.current,e]:[e,n]},t.getClassNames=function(e){var n=t.props.classNames,r="string"==typeof n,s=r?""+(r&&n?n+"-":"")+e:n[e];return{baseClassName:s,activeClassName:r?s+"-active":n[e+"Active"],doneClassName:r?s+"-done":n[e+"Done"]}},t}(0,a.Z)(t,e);var n=t.prototype;return n.addClass=function(e,t,n){var r=this.getClassNames(t)[n+"ClassName"],s=this.getClassNames("enter").doneClassName;"appear"===t&&"done"===n&&s&&(r+=" "+s),"active"===n&&e&&d(e),r&&(this.appliedClasses[t][n]=r,function(e,t){e&&t&&t.split(" ").forEach((function(t){return r=t,void((n=e).classList?n.classList.add(r):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(n,r)||("string"==typeof n.className?n.className=n.className+" "+r:n.setAttribute("class",(n.className&&n.className.baseVal||"")+" "+r)));var n,r}))}(e,r))},n.removeClasses=function(e,t){var n=this.appliedClasses[t],r=n.base,s=n.active,a=n.done;this.appliedClasses[t]={},r&&v(e,r),s&&v(e,s),a&&v(e,a)},n.render=function(){var e=this.props,t=(e.classNames,(0,s.Z)(e,["classNames"]));return i.createElement(x,(0,r.Z)({},t,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))},t}(i.Component);w.defaultProps={classNames:""},w.propTypes={};var k=n(80107);function S(e,t){var n=Object.create(null);return e&&i.Children.map(e,(function(e){return e})).forEach((function(e){n[e.key]=function(e){return t&&(0,i.isValidElement)(e)?t(e):e}(e)})),n}function I(e,t,n){return null!=n[t]?n[t]:e.props[t]}function N(e,t,n){var r=S(e.children),s=function(e,t){function n(n){return n in t?t[n]:e[n]}e=e||{},t=t||{};var r,s=Object.create(null),a=[];for(var o in e)o in t?a.length&&(s[o]=a,a=[]):a.push(o);var i={};for(var l in t){if(s[l])for(r=0;r<s[l].length;r++){var u=s[l][r];i[s[l][r]]=n(u)}i[l]=n(l)}for(r=0;r<a.length;r++)i[a[r]]=n(a[r]);return i}(t,r);return Object.keys(s).forEach((function(a){var o=s[a];if((0,i.isValidElement)(o)){var l=a in t,u=a in r,c=t[a],d=(0,i.isValidElement)(c)&&!c.props.in;!u||l&&!d?u||!l||d?u&&l&&(0,i.isValidElement)(c)&&(s[a]=(0,i.cloneElement)(o,{onExited:n.bind(null,o),in:c.props.in,exit:I(o,"exit",e),enter:I(o,"enter",e)})):s[a]=(0,i.cloneElement)(o,{in:!1}):s[a]=(0,i.cloneElement)(o,{onExited:n.bind(null,o),in:!0,exit:I(o,"exit",e),enter:I(o,"enter",e)})}})),s}var C=Object.values||function(e){return Object.keys(e).map((function(t){return e[t]}))},T=function(e){function t(t,n){var r,s=(r=e.call(this,t,n)||this).handleExited.bind((0,k.Z)(r));return r.state={contextValue:{isMounting:!0},handleExited:s,firstRender:!0},r}(0,a.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.mounted=!0,this.setState({contextValue:{isMounting:!1}})},n.componentWillUnmount=function(){this.mounted=!1},t.getDerivedStateFromProps=function(e,t){var n,r,s=t.children,a=t.handleExited;return{children:t.firstRender?(n=e,r=a,S(n.children,(function(e){return(0,i.cloneElement)(e,{onExited:r.bind(null,e),in:!0,appear:I(e,"appear",n),enter:I(e,"enter",n),exit:I(e,"exit",n)})}))):N(e,s,a),firstRender:!1}},n.handleExited=function(e,t){var n=S(this.props.children);e.key in n||(e.props.onExited&&e.props.onExited(t),this.mounted&&this.setState((function(t){var n=(0,r.Z)({},t.children);return delete n[e.key],{children:n}})))},n.render=function(){var e=this.props,t=e.component,n=e.childFactory,r=(0,s.Z)(e,["component","childFactory"]),a=this.state.contextValue,o=C(this.state.children).map(n);return delete r.appear,delete r.enter,delete r.exit,null===t?i.createElement(c.Provider,{value:a},o):i.createElement(c.Provider,{value:a},i.createElement(t,r,o))},t}(i.Component);T.propTypes={},T.defaultProps={component:"div",childFactory:function(e){return e}};const $=T;var E=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).handleEnter=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEnter",0,n)},t.handleEntering=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEntering",0,n)},t.handleEntered=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEntered",0,n)},t.handleExit=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExit",1,n)},t.handleExiting=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExiting",1,n)},t.handleExited=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExited",1,n)},t}(0,a.Z)(t,e);var n=t.prototype;return n.handleLifecycle=function(e,t,n){var r,s=this.props.children,a=i.Children.toArray(s)[t];if(a.props[e]&&(r=a.props)[e].apply(r,n),this.props[e]){var o=a.props.nodeRef?void 0:l.findDOMNode(this);this.props[e](o)}},n.render=function(){var e=this.props,t=e.children,n=e.in,r=(0,s.Z)(e,["children","in"]),a=i.Children.toArray(t),o=a[0],l=a[1];return delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,i.createElement($,r,n?i.cloneElement(o,{key:"first",onEnter:this.handleEnter,onEntering:this.handleEntering,onEntered:this.handleEntered}):i.cloneElement(l,{key:"second",onEnter:this.handleExit,onEntering:this.handleExiting,onEntered:this.handleExited}))},t}(i.Component);E.propTypes={};var R,A;var F="out-in",O="in-out",D=function(e,t,n){return function(){var r;e.props[t]&&(r=e.props)[t].apply(r,arguments),n()}},_=((R={})[F]=function(e){var t=e.current,n=e.changeState;return i.cloneElement(t,{in:!1,onExited:D(t,"onExited",(function(){n(f,null)}))})},R[O]=function(e){var t=e.current,n=e.changeState,r=e.children;return[t,i.cloneElement(r,{in:!0,onEntered:D(r,"onEntered",(function(){n(f)}))})]},R),M=((A={})[F]=function(e){var t=e.children,n=e.changeState;return i.cloneElement(t,{in:!0,onEntered:D(t,"onEntered",(function(){n(m,i.cloneElement(t,{in:!0}))}))})},A[O]=function(e){var t=e.current,n=e.children,r=e.changeState;return[i.cloneElement(t,{in:!1,onExited:D(t,"onExited",(function(){r(m,i.cloneElement(n,{in:!0}))}))}),i.cloneElement(n,{in:!0})]},A),L=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).state={status:m,current:null},t.appeared=!1,t.changeState=function(e,n){void 0===n&&(n=t.state.current),t.setState({status:e,current:n})},t}(0,a.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.appeared=!0},t.getDerivedStateFromProps=function(e,t){return null==e.children?{current:null}:t.status===f&&e.mode===O?{status:f}:!t.current||(n=t.current,r=e.children,n===r||i.isValidElement(n)&&i.isValidElement(r)&&null!=n.key&&n.key===r.key)?{current:i.cloneElement(e.children,{in:!0})}:{status:g};var n,r},n.render=function(){var e,t=this.props,n=t.children,r=t.mode,s=this.state,a=s.status,o=s.current,l={children:n,current:o,changeState:this.changeState,status:a};switch(a){case f:e=M[r](l);break;case g:e=_[r](l);break;case m:e=o}return i.createElement(c.Provider,{value:{isMounting:!this.appeared}},e)},t}(i.Component);L.propTypes={},L.defaultProps={mode:F}}}]);
//# sourceMappingURL=617.bundle.a54cb27c9477cfd727ba.js.map