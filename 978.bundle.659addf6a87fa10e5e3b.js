/*! For license information please see 978.bundle.659addf6a87fa10e5e3b.js.LICENSE.txt */
(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[978],{10074:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>S});var r=n(76805),s=n(8339),a=n(43001),i=(n(3827),n(11358)),o=n(80807),l=n(70179),u=n(17081),c=n(40853);function d(e,t){t?e.setAttribute("aria-hidden","true"):e.removeAttribute("aria-hidden")}function h(e){return parseInt((0,o.Mg)(e).getComputedStyle(e).paddingRight,10)||0}function p(e,t,n,r=[],s){const a=[t,n,...r];[].forEach.call(e.children,(e=>{const t=-1===a.indexOf(e),n=!function(e){const t=-1!==["TEMPLATE","SCRIPT","STYLE","LINK","MAP","META","NOSCRIPT","PICTURE","COL","COLGROUP","PARAM","SLOT","SOURCE","TRACK"].indexOf(e.tagName),n="INPUT"===e.tagName&&"hidden"===e.getAttribute("type");return t||n}(e);t&&n&&d(e,s)}))}function f(e,t){let n=-1;return e.some(((e,r)=>!!t(e)&&(n=r,!0))),n}function m(e,t){const n=[],r=e.container;if(!t.disableScrollLock){if(function(e){const t=(0,o.Bu)(e);return t.body===e?(0,o.Mg)(e).innerWidth>t.documentElement.clientWidth:e.scrollHeight>e.clientHeight}(r)){const e=(0,o.Ok)((0,o.Bu)(r));n.push({value:r.style.paddingRight,property:"padding-right",el:r}),r.style.paddingRight=`${h(r)+e}px`;const t=(0,o.Bu)(r).querySelectorAll(".mui-fixed");[].forEach.call(t,(t=>{n.push({value:t.style.paddingRight,property:"padding-right",el:t}),t.style.paddingRight=`${h(t)+e}px`}))}let e;if(r.parentNode instanceof DocumentFragment)e=(0,o.Bu)(r).body;else{const t=r.parentElement,n=(0,o.Mg)(r);e="HTML"===(null==t?void 0:t.nodeName)&&"scroll"===n.getComputedStyle(t).overflowY?t:r}n.push({value:e.style.overflow,property:"overflow",el:e},{value:e.style.overflowX,property:"overflow-x",el:e},{value:e.style.overflowY,property:"overflow-y",el:e}),e.style.overflow="hidden"}return()=>{n.forEach((({value:e,el:t,property:n})=>{e?t.style.setProperty(n,e):t.style.removeProperty(n)}))}}var g=n(97940),y=n(85005),b=n(42427);function x(e){return(0,b.Z)("MuiModal",e)}(0,y.Z)("MuiModal",["root","hidden"]);var v=n(2574);const w=["children","classes","className","closeAfterTransition","component","components","componentsProps","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","open","onTransitionEnter","onTransitionExited"];const k=new class{constructor(){this.containers=void 0,this.modals=void 0,this.modals=[],this.containers=[]}add(e,t){let n=this.modals.indexOf(e);if(-1!==n)return n;n=this.modals.length,this.modals.push(e),e.modalRef&&d(e.modalRef,!1);const r=function(e){const t=[];return[].forEach.call(e.children,(e=>{"true"===e.getAttribute("aria-hidden")&&t.push(e)})),t}(t);p(t,e.mount,e.modalRef,r,!0);const s=f(this.containers,(e=>e.container===t));return-1!==s?(this.containers[s].modals.push(e),n):(this.containers.push({modals:[e],container:t,restore:null,hiddenSiblings:r}),n)}mount(e,t){const n=f(this.containers,(t=>-1!==t.modals.indexOf(e))),r=this.containers[n];r.restore||(r.restore=m(r,t))}remove(e,t=!0){const n=this.modals.indexOf(e);if(-1===n)return n;const r=f(this.containers,(t=>-1!==t.modals.indexOf(e))),s=this.containers[r];if(s.modals.splice(s.modals.indexOf(e),1),this.modals.splice(n,1),0===s.modals.length)s.restore&&s.restore(),e.modalRef&&d(e.modalRef,t),p(s.container,e.mount,e.modalRef,s.hiddenSiblings,!1),this.containers.splice(r,1);else{const e=s.modals[s.modals.length-1];e.modalRef&&d(e.modalRef,!1)}return n}isTopModal(e){return this.modals.length>0&&this.modals[this.modals.length-1]===e}},S=a.forwardRef((function(e,t){var n,h;const{children:p,classes:f,className:m,closeAfterTransition:y=!1,component:b="div",components:S={},componentsProps:I={},container:N,disableAutoFocus:C=!1,disableEnforceFocus:T=!1,disableEscapeKeyDown:$=!1,disablePortal:E=!1,disableRestoreFocus:R=!1,disableScrollLock:_=!1,hideBackdrop:A=!1,keepMounted:F=!1,manager:O=k,onBackdropClick:D,onClose:M,onKeyDown:L,open:z,onTransitionEnter:P,onTransitionExited:B}=e,W=(0,s.Z)(e,w),[V,U]=a.useState(!0),Z=a.useRef({}),G=a.useRef(null),j=a.useRef(null),H=(0,o.c8)(j,t),q=function(e){return!!e.children&&e.children.props.hasOwnProperty("in")}(e),K=null==(n=e["aria-hidden"])||n,X=()=>(Z.current.modalRef=j.current,Z.current.mountNode=G.current,Z.current),Y=()=>{O.mount(X(),{disableScrollLock:_}),j.current.scrollTop=0},J=(0,o.Ai)((()=>{const e=function(e){return"function"==typeof e?e():e}(N)||(0,o.Bu)(G.current).body;O.add(X(),e),j.current&&Y()})),Q=a.useCallback((()=>O.isTopModal(X())),[O]),ee=(0,o.Ai)((e=>{G.current=e,e&&(z&&Q()?Y():d(j.current,K))})),te=a.useCallback((()=>{O.remove(X(),K)}),[O,K]);a.useEffect((()=>()=>{te()}),[te]),a.useEffect((()=>{z?J():q&&y||te()}),[z,te,q,y,J]);const ne=(0,r.Z)({},e,{classes:f,closeAfterTransition:y,disableAutoFocus:C,disableEnforceFocus:T,disableEscapeKeyDown:$,disablePortal:E,disableRestoreFocus:R,disableScrollLock:_,exited:V,hideBackdrop:A,keepMounted:F}),re=(e=>{const{open:t,exited:n,classes:r}=e,s={root:["root",!t&&n&&"hidden"]};return(0,l.Z)(s,x,r)})(ne);if(!F&&!z&&(!q||V))return null;const se=()=>{U(!1),P&&P()},ae=()=>{U(!0),B&&B(),y&&te()},ie={};void 0===p.props.tabIndex&&(ie.tabIndex="-1"),q&&(ie.onEnter=(0,o.ks)(se,p.props.onEnter),ie.onExited=(0,o.ks)(ae,p.props.onExited));const oe=S.Root||b,le=(0,u.Z)(oe,(0,r.Z)({role:"presentation"},W,I.root,{ref:H,onKeyDown:e=>{L&&L(e),"Escape"===e.key&&Q()&&($||(e.stopPropagation(),M&&M(e,"escapeKeyDown")))},className:(0,i.Z)(re.root,null==(h=I.root)?void 0:h.className,m)}),ne),ue=S.Backdrop,ce=(0,u.Z)(ue,(0,r.Z)({"aria-hidden":!0,open:z,onClick:e=>{e.target===e.currentTarget&&(D&&D(e),M&&M(e,"backdropClick"))}},I.backdrop),ne);return(0,v.jsx)(c.Z,{ref:ee,container:N,disablePortal:E,children:(0,v.jsxs)(oe,(0,r.Z)({},le,{children:[!A&&ue?(0,v.jsx)(ue,(0,r.Z)({},ce)):null,(0,v.jsx)(g.Z,{disableEnforceFocus:T,disableAutoFocus:C,disableRestoreFocus:R,isEnabled:Q,open:z,children:a.cloneElement(p,ie)})]}))})}))},40853:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(43001),s=n(14347),a=(n(3827),n(80807));const i=r.forwardRef((function(e,t){const{children:n,container:i,disablePortal:o=!1}=e,[l,u]=r.useState(null),c=(0,a.c8)(r.isValidElement(n)?n.ref:null,t);return(0,a.Q4)((()=>{o||u(function(e){return"function"==typeof e?e():e}(i)||document.body)}),[i,o]),(0,a.Q4)((()=>{if(l&&!o)return(0,a.X8)(t,l),()=>{(0,a.X8)(t,null)}}),[t,l,o]),o?r.isValidElement(n)?r.cloneElement(n,{ref:c}):n:l?s.createPortal(n,l):l}))},97940:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(43001),s=(n(3827),n(80807)),a=n(2574);const i=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'].join(",");function o(e){const t=[],n=[];return Array.from(e.querySelectorAll(i)).forEach(((e,r)=>{const s=function(e){const t=parseInt(e.getAttribute("tabindex"),10);return Number.isNaN(t)?"true"===e.contentEditable||("AUDIO"===e.nodeName||"VIDEO"===e.nodeName||"DETAILS"===e.nodeName)&&null===e.getAttribute("tabindex")?0:e.tabIndex:t}(e);-1!==s&&function(e){return!(e.disabled||"INPUT"===e.tagName&&"hidden"===e.type||function(e){if("INPUT"!==e.tagName||"radio"!==e.type)return!1;if(!e.name)return!1;const t=t=>e.ownerDocument.querySelector(`input[type="radio"]${t}`);let n=t(`[name="${e.name}"]:checked`);return n||(n=t(`[name="${e.name}"]`)),n!==e}(e))}(e)&&(0===s?t.push(e):n.push({documentOrder:r,tabIndex:s,node:e}))})),n.sort(((e,t)=>e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex)).map((e=>e.node)).concat(t)}function l(){return!0}const u=function(e){const{children:t,disableAutoFocus:n=!1,disableEnforceFocus:i=!1,disableRestoreFocus:u=!1,getTabbable:c=o,isEnabled:d=l,open:h}=e,p=r.useRef(),f=r.useRef(null),m=r.useRef(null),g=r.useRef(null),y=r.useRef(null),b=r.useRef(!1),x=r.useRef(null),v=(0,s.c8)(t.ref,x),w=r.useRef(null);r.useEffect((()=>{h&&x.current&&(b.current=!n)}),[n,h]),r.useEffect((()=>{if(!h||!x.current)return;const e=(0,s.Bu)(x.current);return x.current.contains(e.activeElement)||(x.current.hasAttribute("tabIndex")||x.current.setAttribute("tabIndex",-1),b.current&&x.current.focus()),()=>{u||(g.current&&g.current.focus&&(p.current=!0,g.current.focus()),g.current=null)}}),[h]),r.useEffect((()=>{if(!h||!x.current)return;const e=(0,s.Bu)(x.current),t=t=>{const{current:n}=x;if(null!==n)if(e.hasFocus()&&!i&&d()&&!p.current){if(!n.contains(e.activeElement)){if(t&&y.current!==t.target||e.activeElement!==y.current)y.current=null;else if(null!==y.current)return;if(!b.current)return;let a=[];if(e.activeElement!==f.current&&e.activeElement!==m.current||(a=c(x.current)),a.length>0){var r,s;const e=Boolean((null==(r=w.current)?void 0:r.shiftKey)&&"Tab"===(null==(s=w.current)?void 0:s.key)),t=a[0],n=a[a.length-1];e?n.focus():t.focus()}else n.focus()}}else p.current=!1},n=t=>{w.current=t,!i&&d()&&"Tab"===t.key&&e.activeElement===x.current&&t.shiftKey&&(p.current=!0,m.current.focus())};e.addEventListener("focusin",t),e.addEventListener("keydown",n,!0);const r=setInterval((()=>{"BODY"===e.activeElement.tagName&&t()}),50);return()=>{clearInterval(r),e.removeEventListener("focusin",t),e.removeEventListener("keydown",n,!0)}}),[n,i,u,d,h,c]);const k=e=>{null===g.current&&(g.current=e.relatedTarget),b.current=!0};return(0,a.jsxs)(r.Fragment,{children:[(0,a.jsx)("div",{tabIndex:0,onFocus:k,ref:f,"data-test":"sentinelStart"}),r.cloneElement(t,{ref:v,onFocus:e=>{null===g.current&&(g.current=e.relatedTarget),b.current=!0,y.current=e.target;const n=t.props.onFocus;n&&n(e)}}),(0,a.jsx)("div",{tabIndex:0,onFocus:k,ref:m,"data-test":"sentinelEnd"})]})}},70179:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.V_});var r=n(80807)},42427:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.ZU});var r=n(80807)},85005:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r.IO});var r=n(80807)},4647:(e,t,n)=>{"use strict";n.d(t,{uz:()=>v,d6:()=>d.Z,sI:()=>c.Z,Xd:()=>r.Z,V_:()=>u.Z});n(17081);var r=n(85726);var s=n(76805),a=n(8339),i=n(80807);n(11358);var o=n(43001);function l(e){return void 0!==e.normalize?e.normalize("NFD").replace(/[\u0300-\u036f]/g,""):e}!function(e={}){const{ignoreAccents:t=!0,ignoreCase:n=!0,limit:r,matchFrom:s="any",stringify:a,trim:i=!1}=e}();n(3827);var u=n(70179);var c=n(85005),d=n(42427);(0,c.Z)("BaseBadge",["root","badge","invisible"]);var h=n(2574);(0,c.Z)("ButtonUnstyled",["root","active","disabled","focusVisible"]);(0,c.Z)("BaseFormControl",["root","disabled","error","filled","focused","required"]);(0,c.Z)("MuiInput",["root","formControl","focused","disabled","error","multiline","input","inputMultiline","inputTypeSearch","adornedStart","adornedEnd"]);var p;!function(e){e.blur="blur",e.focus="focus",e.keyDown="keyDown",e.optionClick="optionClick",e.optionHover="optionHover",e.optionsChange="optionsChange",e.setValue="setValue",e.setHighlight="setHighlight",e.textNavigation="textNagivation"}(p||(p={}));const f=o.createContext(null);f.displayName="MenuUnstyledContext";(0,c.Z)("MuiMenuUnstyled",["root","listbox","expanded"]);Math.max,Math.min,Math.round;n(40853);(0,c.Z)("MuiMenuItemUnstyled",["root","disabled","focusVisible"]);n(10074);(0,c.Z)("MuiSelectUnstyled",["root","button","listbox","popper","active","expanded","disabled","focusVisible"]);(0,c.Z)("MuiOptionGroupUnstyled",["root","label","list"]);(0,c.Z)("MuiOptionUnstyled",["root","disabled","selected","highlighted"]);(0,c.Z)("MuiSlider",["root","active","focusVisible","disabled","dragging","marked","vertical","trackInverted","trackFalse","rail","track","mark","markActive","markLabel","markLabelActive","thumb","valueLabel","valueLabelOpen","valueLabelCircle","valueLabelLabel"]);(0,c.Z)("MuiSwitch",["root","input","track","thumb","checked","disabled","focusVisible","readOnly"]);(0,c.Z)("TabPanelUnstyled",["root","hidden"]);(0,c.Z)("TabsUnstyled",["root","horizontal","vertical"]);(0,c.Z)("TabsListUnstyled",["root","horizontal","vertical"]);n(65031);(0,c.Z)("TabUnstyled",["root","selected","disabled"]);var m=n(14347);const g=["onChange","maxRows","minRows","style","value"];function y(e,t){return parseInt(e[t],10)||0}const b={visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"};function x(e){return null==e||0===Object.keys(e).length}const v=o.forwardRef((function(e,t){const{onChange:n,maxRows:r,minRows:l=1,style:u,value:c}=e,d=(0,a.Z)(e,g),{current:p}=o.useRef(null!=c),f=o.useRef(null),v=(0,i.c8)(t,f),w=o.useRef(null),k=o.useRef(0),[S,I]=o.useState({}),N=o.useCallback((()=>{const t=f.current,n=(0,i.Mg)(t).getComputedStyle(t);if("0px"===n.width)return{};const s=w.current;s.style.width=n.width,s.value=t.value||e.placeholder||"x","\n"===s.value.slice(-1)&&(s.value+=" ");const a=n["box-sizing"],o=y(n,"padding-bottom")+y(n,"padding-top"),u=y(n,"border-bottom-width")+y(n,"border-top-width"),c=s.scrollHeight;s.value="x";const d=s.scrollHeight;let h=c;l&&(h=Math.max(Number(l)*d,h)),r&&(h=Math.min(Number(r)*d,h)),h=Math.max(h,d);return{outerHeightStyle:h+("border-box"===a?o+u:0),overflow:Math.abs(h-c)<=1}}),[r,l,e.placeholder]),C=(e,t)=>{const{outerHeightStyle:n,overflow:r}=t;return k.current<20&&(n>0&&Math.abs((e.outerHeightStyle||0)-n)>1||e.overflow!==r)?(k.current+=1,{overflow:r,outerHeightStyle:n}):e},T=o.useCallback((()=>{const e=N();x(e)||I((t=>C(t,e)))}),[N]);o.useEffect((()=>{const e=(0,i.uC)((()=>{k.current=0,f.current&&(()=>{const e=N();x(e)||(0,m.flushSync)((()=>{I((t=>C(t,e)))}))})()})),t=(0,i.Mg)(f.current);let n;return t.addEventListener("resize",e),"undefined"!=typeof ResizeObserver&&(n=new ResizeObserver(e),n.observe(f.current)),()=>{e.clear(),t.removeEventListener("resize",e),n&&n.disconnect()}})),(0,i.Q4)((()=>{T()})),o.useEffect((()=>{k.current=0}),[c]);return(0,h.jsxs)(o.Fragment,{children:[(0,h.jsx)("textarea",(0,s.Z)({value:c,onChange:e=>{k.current=0,p||T(),n&&n(e)},ref:v,rows:l,style:(0,s.Z)({height:S.outerHeightStyle,overflow:S.overflow?"hidden":null},u)},d)),(0,h.jsx)("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:w,tabIndex:-1,style:(0,s.Z)({},b,u,{padding:0})})]})}));n(97940)},17081:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(76805),s=n(85726);function a(e,t={},n){return(0,s.Z)(e)?t:(0,r.Z)({},t,{ownerState:(0,r.Z)({},t.ownerState,n)})}},85726:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=function(e){return"string"==typeof e}},32122:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),i=(0,s.default)((0,a.jsx)("path",{d:"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"}),"ArrowBack");t.Z=i},46258:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),i=(0,s.default)((0,a.jsx)("path",{d:"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"}),"ArrowForward");t.Z=i},36605:(e,t,n)=>{"use strict";var r=n(40556);t.Z=void 0;var s=r(n(21304)),a=n(2574),i=(0,s.default)((0,a.jsx)("path",{d:"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}),"Star");t.Z=i},21304:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r.createSvgIcon}});var r=n(7103)},58041:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>te});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(80807)),o=n(7103),l=n(4647),u=n(42205);var c=n(81455);n(80734),n(91348);var d=n(66954),h=n(10543);var p=n(35891);const f=["colorSchemes","cssVarPrefix"],m=["palette"],g=[...Array(25)].map(((e,t)=>{if(0===t)return;const n=(0,p.R)(t);return`linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`}));function y(e,t,n){e[t]=e[t]||n}var b=n(46554);const x=function(e={},...t){var n,a,o,l,d,h;const{colorSchemes:p={},cssVarPrefix:b="mui"}=e,x=(0,r.Z)(e,f),v=((e="mui")=>(0,u.so)(e))(b),w=(0,c.Z)((0,s.Z)({},x,p.light&&{palette:null==(n=p.light)?void 0:n.palette})),{palette:k}=w,S=(0,r.Z)(w,m),{palette:I}=(0,c.Z)({palette:(0,s.Z)({mode:"dark"},null==(a=p.dark)?void 0:a.palette)});let N=(0,s.Z)({},S,{cssVarPrefix:b,getCssVar:v,colorSchemes:(0,s.Z)({},p,{light:(0,s.Z)({},p.light,{palette:k,opacity:(0,s.Z)({inputPlaceholder:.42,inputUnderline:.42,switchTrackDisabled:.12,switchTrack:.38},null==(o=p.light)?void 0:o.opacity),overlays:(null==(l=p.light)?void 0:l.overlays)||[]}),dark:(0,s.Z)({},p.dark,{palette:I,opacity:(0,s.Z)({inputPlaceholder:.5,inputUnderline:.7,switchTrackDisabled:.2,switchTrack:.3},null==(d=p.dark)?void 0:d.opacity),overlays:(null==(h=p.dark)?void 0:h.overlays)||g})})});return Object.keys(N.colorSchemes).forEach((e=>{const t=N.colorSchemes[e].palette;var n;if("light"===e?(y(t.common,"background","#fff"),y(t.common,"onBackground","#000")):(y(t.common,"background","#000"),y(t.common,"onBackground","#fff")),n=t,["Alert","AppBar","Avatar","Chip","FilledInput","LinearProgress","Skeleton","Slider","SnackbarContent","SpeedDialAction","StepConnector","StepContent","Switch","TableCell","Tooltip"].forEach((e=>{n[e]||(n[e]={})})),"light"===e){y(t.Alert,"errorColor",(0,u._j)(t.error.light,.6)),y(t.Alert,"infoColor",(0,u._j)(t.info.light,.6)),y(t.Alert,"successColor",(0,u._j)(t.success.light,.6)),y(t.Alert,"warningColor",(0,u._j)(t.warning.light,.6)),y(t.Alert,"errorFilledBg",v("palette-error-main")),y(t.Alert,"infoFilledBg",v("palette-info-main")),y(t.Alert,"successFilledBg",v("palette-success-main")),y(t.Alert,"warningFilledBg",v("palette-warning-main")),y(t.Alert,"errorFilledColor",k.getContrastText(t.error.main)),y(t.Alert,"infoFilledColor",k.getContrastText(t.info.main)),y(t.Alert,"successFilledColor",k.getContrastText(t.success.main)),y(t.Alert,"warningFilledColor",k.getContrastText(t.warning.main)),y(t.Alert,"errorStandardBg",(0,u.$n)(t.error.light,.9)),y(t.Alert,"infoStandardBg",(0,u.$n)(t.info.light,.9)),y(t.Alert,"successStandardBg",(0,u.$n)(t.success.light,.9)),y(t.Alert,"warningStandardBg",(0,u.$n)(t.warning.light,.9)),y(t.Alert,"errorIconColor",v("palette-error-light")),y(t.Alert,"infoIconColor",v("palette-info-light")),y(t.Alert,"successIconColor",v("palette-success-light")),y(t.Alert,"warningIconColor",v("palette-warning-light")),y(t.AppBar,"defaultBg",v("palette-grey-100")),y(t.Avatar,"defaultBg",v("palette-grey-400")),y(t.Chip,"defaultBorder",v("palette-grey-400")),y(t.Chip,"defaultAvatarColor",v("palette-grey-700")),y(t.Chip,"defaultIconColor",v("palette-grey-700")),y(t.FilledInput,"bg","rgba(0, 0, 0, 0.06)"),y(t.FilledInput,"hoverBg","rgba(0, 0, 0, 0.09)"),y(t.FilledInput,"disabledBg","rgba(0, 0, 0, 0.12)"),y(t.LinearProgress,"primaryBg",(0,u.$n)(t.primary.main,.62)),y(t.LinearProgress,"secondaryBg",(0,u.$n)(t.secondary.main,.62)),y(t.LinearProgress,"errorBg",(0,u.$n)(t.error.main,.62)),y(t.LinearProgress,"infoBg",(0,u.$n)(t.info.main,.62)),y(t.LinearProgress,"successBg",(0,u.$n)(t.success.main,.62)),y(t.LinearProgress,"warningBg",(0,u.$n)(t.warning.main,.62)),y(t.Skeleton,"bg",`rgba(${v("palette-text-primaryChannel")} / 0.11)`),y(t.Slider,"primaryTrack",(0,u.$n)(t.primary.main,.62)),y(t.Slider,"secondaryTrack",(0,u.$n)(t.secondary.main,.62)),y(t.Slider,"errorTrack",(0,u.$n)(t.error.main,.62)),y(t.Slider,"infoTrack",(0,u.$n)(t.info.main,.62)),y(t.Slider,"successTrack",(0,u.$n)(t.success.main,.62)),y(t.Slider,"warningTrack",(0,u.$n)(t.warning.main,.62));const e=(0,u._4)(t.background.default,.8);y(t.SnackbarContent,"bg",e),y(t.SnackbarContent,"color",k.getContrastText(e)),y(t.SpeedDialAction,"fabHoverBg",(0,u._4)(t.background.paper,.15)),y(t.StepConnector,"border",v("palette-grey-400")),y(t.StepContent,"border",v("palette-grey-400")),y(t.Switch,"defaultColor",v("palette-common-white")),y(t.Switch,"defaultDisabledColor",v("palette-grey-100")),y(t.Switch,"primaryDisabledColor",(0,u.$n)(t.primary.main,.62)),y(t.Switch,"secondaryDisabledColor",(0,u.$n)(t.secondary.main,.62)),y(t.Switch,"errorDisabledColor",(0,u.$n)(t.error.main,.62)),y(t.Switch,"infoDisabledColor",(0,u.$n)(t.info.main,.62)),y(t.Switch,"successDisabledColor",(0,u.$n)(t.success.main,.62)),y(t.Switch,"warningDisabledColor",(0,u.$n)(t.warning.main,.62)),y(t.TableCell,"border",(0,u.$n)((0,u.Fq)(t.divider,1),.88)),y(t.Tooltip,"bg",(0,u.Fq)(t.grey[700],.92))}else{y(t.Alert,"errorColor",(0,u.$n)(t.error.light,.6)),y(t.Alert,"infoColor",(0,u.$n)(t.info.light,.6)),y(t.Alert,"successColor",(0,u.$n)(t.success.light,.6)),y(t.Alert,"warningColor",(0,u.$n)(t.warning.light,.6)),y(t.Alert,"errorFilledBg",v("palette-error-dark")),y(t.Alert,"infoFilledBg",v("palette-info-dark")),y(t.Alert,"successFilledBg",v("palette-success-dark")),y(t.Alert,"warningFilledBg",v("palette-warning-dark")),y(t.Alert,"errorFilledColor",I.getContrastText(t.error.dark)),y(t.Alert,"infoFilledColor",I.getContrastText(t.info.dark)),y(t.Alert,"successFilledColor",I.getContrastText(t.success.dark)),y(t.Alert,"warningFilledColor",I.getContrastText(t.warning.dark)),y(t.Alert,"errorStandardBg",(0,u._j)(t.error.light,.9)),y(t.Alert,"infoStandardBg",(0,u._j)(t.info.light,.9)),y(t.Alert,"successStandardBg",(0,u._j)(t.success.light,.9)),y(t.Alert,"warningStandardBg",(0,u._j)(t.warning.light,.9)),y(t.Alert,"errorIconColor",v("palette-error-main")),y(t.Alert,"infoIconColor",v("palette-info-main")),y(t.Alert,"successIconColor",v("palette-success-main")),y(t.Alert,"warningIconColor",v("palette-warning-main")),y(t.AppBar,"defaultBg",v("palette-grey-900")),y(t.AppBar,"darkBg",v("palette-background-paper")),y(t.AppBar,"darkColor",v("palette-text-primary")),y(t.Avatar,"defaultBg",v("palette-grey-600")),y(t.Chip,"defaultBorder",v("palette-grey-700")),y(t.Chip,"defaultAvatarColor",v("palette-grey-300")),y(t.Chip,"defaultIconColor",v("palette-grey-300")),y(t.FilledInput,"bg","rgba(255, 255, 255, 0.09)"),y(t.FilledInput,"hoverBg","rgba(255, 255, 255, 0.13)"),y(t.FilledInput,"disabledBg","rgba(255, 255, 255, 0.12)"),y(t.LinearProgress,"primaryBg",(0,u._j)(t.primary.main,.5)),y(t.LinearProgress,"secondaryBg",(0,u._j)(t.secondary.main,.5)),y(t.LinearProgress,"errorBg",(0,u._j)(t.error.main,.5)),y(t.LinearProgress,"infoBg",(0,u._j)(t.info.main,.5)),y(t.LinearProgress,"successBg",(0,u._j)(t.success.main,.5)),y(t.LinearProgress,"warningBg",(0,u._j)(t.warning.main,.5)),y(t.Skeleton,"bg",`rgba(${v("palette-text-primaryChannel")} / 0.13)`),y(t.Slider,"primaryTrack",(0,u._j)(t.primary.main,.5)),y(t.Slider,"secondaryTrack",(0,u._j)(t.secondary.main,.5)),y(t.Slider,"errorTrack",(0,u._j)(t.error.main,.5)),y(t.Slider,"infoTrack",(0,u._j)(t.info.main,.5)),y(t.Slider,"successTrack",(0,u._j)(t.success.main,.5)),y(t.Slider,"warningTrack",(0,u._j)(t.warning.main,.5));const e=(0,u._4)(t.background.default,.98);y(t.SnackbarContent,"bg",e),y(t.SnackbarContent,"color",I.getContrastText(e)),y(t.SpeedDialAction,"fabHoverBg",(0,u._4)(t.background.paper,.15)),y(t.StepConnector,"border",v("palette-grey-600")),y(t.StepContent,"border",v("palette-grey-600")),y(t.Switch,"defaultColor",v("palette-grey-300")),y(t.Switch,"defaultDisabledColor",v("palette-grey-600")),y(t.Switch,"primaryDisabledColor",(0,u._j)(t.primary.main,.55)),y(t.Switch,"secondaryDisabledColor",(0,u._j)(t.secondary.main,.55)),y(t.Switch,"errorDisabledColor",(0,u._j)(t.error.main,.55)),y(t.Switch,"infoDisabledColor",(0,u._j)(t.info.main,.55)),y(t.Switch,"successDisabledColor",(0,u._j)(t.success.main,.55)),y(t.Switch,"warningDisabledColor",(0,u._j)(t.warning.main,.55)),y(t.TableCell,"border",(0,u._j)((0,u.Fq)(t.divider,1),.68)),y(t.Tooltip,"bg",(0,u.Fq)(t.grey[700],.92))}t.common.backgroundChannel=(0,u.n8)(t.common.background),t.common.onBackgroundChannel=(0,u.n8)(t.common.onBackground),t.dividerChannel=(0,u.n8)(t.divider),Object.keys(t).forEach((e=>{const n=t[e];n.main&&(t[e].mainChannel=(0,u.n8)(n.main)),n.light&&(t[e].lightChannel=(0,u.n8)(n.light)),n.dark&&(t[e].darkChannel=(0,u.n8)(n.dark)),n.contrastText&&(t[e].contrastTextChannel=(0,u.n8)(n.contrastText)),n.primary&&(t[e].primaryChannel=(0,u.n8)(n.primary)),n.secondary&&(t[e].secondaryChannel=(0,u.n8)(n.secondary)),n.active&&(t[e].activeChannel=(0,u.n8)(n.active)),n.selected&&(t[e].selectedChannel=(0,u.n8)(n.selected))}))})),N=t.reduce(((e,t)=>(0,i.vb)(e,t)),N),N}(),{CssVarsProvider:v,useColorScheme:w,getInitColorSchemeScript:k}=(0,u.OI)({theme:x,attribute:"data-mui-color-scheme",modeStorageKey:"mui-mode",colorSchemeStorageKey:"mui-color-scheme",defaultColorScheme:{light:"light",dark:"dark"},resolveTheme:e=>(0,s.Z)({},e,{typography:(0,b.Z)(e.palette,e.typography)}),shouldSkipGeneratingVar:e=>{var t;return!!e[0].match(/(typography|mixins|breakpoints|direction|transitions)/)||"palette"===e[0]&&!(null==(t=e[1])||!t.match(/(mode|contrastThreshold|tonalOffset)/))}});var S=n(11358),I=n(36600),N=n(50349);function C(e){return(0,l.d6)("MuiButton",e)}const T=(0,l.sI)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]);var $=n(97745),E=n(2574);const R=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],_=e=>(0,s.Z)({},"small"===e.size&&{"& > *:nth-of-type(1)":{fontSize:18}},"medium"===e.size&&{"& > *:nth-of-type(1)":{fontSize:20}},"large"===e.size&&{"& > *:nth-of-type(1)":{fontSize:22}}),A=(0,h.ZP)(I.ZP,{shouldForwardProp:e=>(0,h.FO)(e)||"classes"===e,name:"MuiButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`${n.variant}${(0,N.Z)(n.color)}`],t[`size${(0,N.Z)(n.size)}`],t[`${n.variant}Size${(0,N.Z)(n.size)}`],"inherit"===n.color&&t.colorInherit,n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth]}})((({theme:e,ownerState:t})=>{var n,r;return(0,s.Z)({},e.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(e.vars||e).shape.borderRadius,transition:e.transitions.create(["background-color","box-shadow","border-color","color"],{duration:e.transitions.duration.short}),"&:hover":(0,s.Z)({textDecoration:"none",backgroundColor:e.vars?`rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"text"===t.variant&&"inherit"!==t.color&&{backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"outlined"===t.variant&&"inherit"!==t.color&&{border:`1px solid ${(e.vars||e).palette[t.color].main}`,backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,u.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"contained"===t.variant&&{backgroundColor:(e.vars||e).palette.grey.A100,boxShadow:(e.vars||e).shadows[4],"@media (hover: none)":{boxShadow:(e.vars||e).shadows[2],backgroundColor:(e.vars||e).palette.grey[300]}},"contained"===t.variant&&"inherit"!==t.color&&{backgroundColor:(e.vars||e).palette[t.color].dark,"@media (hover: none)":{backgroundColor:(e.vars||e).palette[t.color].main}}),"&:active":(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[8]}),[`&.${T.focusVisible}`]:(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[6]}),[`&.${T.disabled}`]:(0,s.Z)({color:(e.vars||e).palette.action.disabled},"outlined"===t.variant&&{border:`1px solid ${(e.vars||e).palette.action.disabledBackground}`},"outlined"===t.variant&&"secondary"===t.color&&{border:`1px solid ${(e.vars||e).palette.action.disabled}`},"contained"===t.variant&&{color:(e.vars||e).palette.action.disabled,boxShadow:(e.vars||e).shadows[0],backgroundColor:(e.vars||e).palette.action.disabledBackground})},"text"===t.variant&&{padding:"6px 8px"},"text"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main},"outlined"===t.variant&&{padding:"5px 15px",border:"1px solid currentColor"},"outlined"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main,border:e.vars?`1px solid rgba(${e.vars.palette[t.color].mainChannel} / 0.5)`:`1px solid ${(0,u.Fq)(e.palette[t.color].main,.5)}`},"contained"===t.variant&&{color:e.vars?e.vars.palette.text.primary:null==(n=(r=e.palette).getContrastText)?void 0:n.call(r,e.palette.grey[300]),backgroundColor:(e.vars||e).palette.grey[300],boxShadow:(e.vars||e).shadows[2]},"contained"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].contrastText,backgroundColor:(e.vars||e).palette[t.color].main},"inherit"===t.color&&{color:"inherit",borderColor:"currentColor"},"small"===t.size&&"text"===t.variant&&{padding:"4px 5px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"text"===t.variant&&{padding:"8px 11px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"outlined"===t.variant&&{padding:"3px 9px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"outlined"===t.variant&&{padding:"7px 21px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"contained"===t.variant&&{padding:"4px 10px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"contained"===t.variant&&{padding:"8px 22px",fontSize:e.typography.pxToRem(15)},t.fullWidth&&{width:"100%"})}),(({ownerState:e})=>e.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${T.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${T.disabled}`]:{boxShadow:"none"}})),F=(0,h.ZP)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.startIcon,t[`iconSize${(0,N.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:8,marginLeft:-4},"small"===e.size&&{marginLeft:-2},_(e)))),O=(0,h.ZP)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.endIcon,t[`iconSize${(0,N.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:-4,marginLeft:8},"small"===e.size&&{marginRight:-2},_(e)))),D=a.forwardRef((function(e,t){const n=a.useContext($.Z),o=(0,i.yr)(n,e),u=(0,d.Z)({props:o,name:"MuiButton"}),{children:c,color:h="primary",component:p="button",className:f,disabled:m=!1,disableElevation:g=!1,disableFocusRipple:y=!1,endIcon:b,focusVisibleClassName:x,fullWidth:v=!1,size:w="medium",startIcon:k,type:I,variant:T="text"}=u,_=(0,r.Z)(u,R),D=(0,s.Z)({},u,{color:h,component:p,disabled:m,disableElevation:g,disableFocusRipple:y,fullWidth:v,size:w,type:I,variant:T}),M=(e=>{const{color:t,disableElevation:n,fullWidth:r,size:a,variant:i,classes:o}=e,u={root:["root",i,`${i}${(0,N.Z)(t)}`,`size${(0,N.Z)(a)}`,`${i}Size${(0,N.Z)(a)}`,"inherit"===t&&"colorInherit",n&&"disableElevation",r&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,N.Z)(a)}`],endIcon:["endIcon",`iconSize${(0,N.Z)(a)}`]},c=(0,l.V_)(u,C,o);return(0,s.Z)({},o,c)})(D),L=k&&(0,E.jsx)(F,{className:M.startIcon,ownerState:D,children:k}),z=b&&(0,E.jsx)(O,{className:M.endIcon,ownerState:D,children:b});return(0,E.jsxs)(A,(0,s.Z)({ownerState:D,className:(0,S.Z)(f,n.className),component:p,disabled:m,focusRipple:!y,focusVisibleClassName:(0,S.Z)(M.focusVisible,x),ref:t,type:I},_,{classes:M,children:[L,c,z]}))}));function M(e){return(0,l.d6)("MuiCircularProgress",e)}(0,l.sI)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]);const L=["className","color","disableShrink","size","style","thickness","value","variant"];let z,P,B,W,V=e=>e;const U=44,Z=(0,u.F4)(z||(z=V`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),G=(0,u.F4)(P||(P=V`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),j=(0,h.ZP)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`color${(0,N.Z)(n.color)}`]]}})((({ownerState:e,theme:t})=>(0,s.Z)({display:"inline-block"},"determinate"===e.variant&&{transition:t.transitions.create("transform")},"inherit"!==e.color&&{color:(t.vars||t).palette[e.color].main})),(({ownerState:e})=>"indeterminate"===e.variant&&(0,u.iv)(B||(B=V`
      animation: ${0} 1.4s linear infinite;
    `),Z))),H=(0,h.ZP)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(e,t)=>t.svg})({display:"block"}),q=(0,h.ZP)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.circle,t[`circle${(0,N.Z)(n.variant)}`],n.disableShrink&&t.circleDisableShrink]}})((({ownerState:e,theme:t})=>(0,s.Z)({stroke:"currentColor"},"determinate"===e.variant&&{transition:t.transitions.create("stroke-dashoffset")},"indeterminate"===e.variant&&{strokeDasharray:"80px, 200px",strokeDashoffset:0})),(({ownerState:e})=>"indeterminate"===e.variant&&!e.disableShrink&&(0,u.iv)(W||(W=V`
      animation: ${0} 1.4s ease-in-out infinite;
    `),G))),K=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiCircularProgress"}),{className:a,color:i="primary",disableShrink:o=!1,size:u=40,style:c,thickness:h=3.6,value:p=0,variant:f="indeterminate"}=n,m=(0,r.Z)(n,L),g=(0,s.Z)({},n,{color:i,disableShrink:o,size:u,thickness:h,value:p,variant:f}),y=(e=>{const{classes:t,variant:n,color:r,disableShrink:s}=e,a={root:["root",n,`color${(0,N.Z)(r)}`],svg:["svg"],circle:["circle",`circle${(0,N.Z)(n)}`,s&&"circleDisableShrink"]};return(0,l.V_)(a,M,t)})(g),b={},x={},v={};if("determinate"===f){const e=2*Math.PI*((U-h)/2);b.strokeDasharray=e.toFixed(3),v["aria-valuenow"]=Math.round(p),b.strokeDashoffset=`${((100-p)/100*e).toFixed(3)}px`,x.transform="rotate(-90deg)"}return(0,E.jsx)(j,(0,s.Z)({className:(0,S.Z)(y.root,a),style:(0,s.Z)({width:u,height:u},x,c),ownerState:g,ref:t,role:"progressbar"},v,m,{children:(0,E.jsx)(H,{className:y.svg,ownerState:g,viewBox:"22 22 44 44",children:(0,E.jsx)(q,{className:y.circle,style:b,ownerState:g,cx:U,cy:U,r:(U-h)/2,fill:"none",strokeWidth:h})})}))}));function X(e){return(0,l.d6)("MuiLoadingButton",e)}const Y=(0,l.sI)("MuiLoadingButton",["root","loading","loadingIndicator","loadingIndicatorCenter","loadingIndicatorStart","loadingIndicatorEnd","endIconLoadingEnd","startIconLoadingStart"]),J=["children","disabled","id","loading","loadingIndicator","loadingPosition","variant"],Q=(0,h.ZP)(D,{shouldForwardProp:e=>(e=>"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e&&"classes"!==e)(e)||"classes"===e,name:"MuiLoadingButton",slot:"Root",overridesResolver:(e,t)=>[t.root,t.startIconLoadingStart&&{[`& .${Y.startIconLoadingStart}`]:t.startIconLoadingStart},t.endIconLoadingEnd&&{[`& .${Y.endIconLoadingEnd}`]:t.endIconLoadingEnd}]})((({ownerState:e,theme:t})=>(0,s.Z)({[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0}},"center"===e.loadingPosition&&{transition:t.transitions.create(["background-color","box-shadow","border-color"],{duration:t.transitions.duration.short}),[`&.${Y.loading}`]:{color:"transparent"}},"start"===e.loadingPosition&&e.fullWidth&&{[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0,marginRight:-8}},"end"===e.loadingPosition&&e.fullWidth&&{[`& .${Y.startIconLoadingStart}, & .${Y.endIconLoadingEnd}`]:{transition:t.transitions.create(["opacity"],{duration:t.transitions.duration.short}),opacity:0,marginLeft:-8}}))),ee=(0,h.ZP)("div",{name:"MuiLoadingButton",slot:"LoadingIndicator",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.loadingIndicator,t[`loadingIndicator${(0,o.capitalize)(n.loadingPosition)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({position:"absolute",visibility:"visible",display:"flex"},"start"===t.loadingPosition&&("outlined"===t.variant||"contained"===t.variant)&&{left:"small"===t.size?10:14},"start"===t.loadingPosition&&"text"===t.variant&&{left:6},"center"===t.loadingPosition&&{left:"50%",transform:"translate(-50%)",color:e.palette.action.disabled},"end"===t.loadingPosition&&("outlined"===t.variant||"contained"===t.variant)&&{right:"small"===t.size?10:14},"end"===t.loadingPosition&&"text"===t.variant&&{right:6},"start"===t.loadingPosition&&t.fullWidth&&{position:"relative",left:-10},"end"===t.loadingPosition&&t.fullWidth&&{position:"relative",right:-10}))),te=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiLoadingButton"}),{children:a,disabled:i=!1,id:u,loading:c=!1,loadingIndicator:h,loadingPosition:p="center",variant:f="text"}=n,m=(0,r.Z)(n,J),g=(0,o.unstable_useId)(u),y=null!=h?h:(0,E.jsx)(K,{"aria-labelledby":g,color:"inherit",size:16}),b=(0,s.Z)({},n,{disabled:i,loading:c,loadingIndicator:y,loadingPosition:p,variant:f}),x=(e=>{const{loading:t,loadingPosition:n,classes:r}=e,a={root:["root",t&&"loading"],startIcon:[t&&`startIconLoading${(0,o.capitalize)(n)}`],endIcon:[t&&`endIconLoading${(0,o.capitalize)(n)}`],loadingIndicator:["loadingIndicator",t&&`loadingIndicator${(0,o.capitalize)(n)}`]},i=(0,l.V_)(a,X,r);return(0,s.Z)({},r,i)})(b),v=c?(0,E.jsx)(ee,{className:x.loadingIndicator,ownerState:b,children:y}):null;return(0,E.jsxs)(Q,(0,s.Z)({disabled:i||c,id:g,ref:t},m,{variant:f,classes:x,ownerState:b,children:["end"===b.loadingPosition?a:v,"end"===b.loadingPosition?v:a]}))}))},98925:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(10543),u=n(66954),c=n(57257),d=n(2574);const h=(0,c.Z)((0,d.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person");function p(e){return(0,o.d6)("MuiAvatar",e)}(0,o.sI)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);const f=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],m=(0,l.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],n.colorDefault&&t.colorDefault]}})((({theme:e,ownerState:t})=>(0,s.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===t.variant&&{borderRadius:(e.vars||e).shape.borderRadius},"square"===t.variant&&{borderRadius:0},t.colorDefault&&(0,s.Z)({color:(e.vars||e).palette.background.default},e.vars?{backgroundColor:e.vars.palette.Avatar.defaultBg}:{backgroundColor:"light"===e.palette.mode?e.palette.grey[400]:e.palette.grey[600]})))),g=(0,l.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:(e,t)=>t.img})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),y=(0,l.ZP)(h,{name:"MuiAvatar",slot:"Fallback",overridesResolver:(e,t)=>t.fallback})({width:"75%",height:"75%"});const b=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiAvatar"}),{alt:l,children:c,className:h,component:b="div",imgProps:x,sizes:v,src:w,srcSet:k,variant:S="circular"}=n,I=(0,r.Z)(n,f);let N=null;const C=function({crossOrigin:e,referrerPolicy:t,src:n,srcSet:r}){const[s,i]=a.useState(!1);return a.useEffect((()=>{if(!n&&!r)return;i(!1);let s=!0;const a=new Image;return a.onload=()=>{s&&i("loaded")},a.onerror=()=>{s&&i("error")},a.crossOrigin=e,a.referrerPolicy=t,a.src=n,r&&(a.srcset=r),()=>{s=!1}}),[e,t,n,r]),s}((0,s.Z)({},x,{src:w,srcSet:k})),T=w||k,$=T&&"error"!==C,E=(0,s.Z)({},n,{colorDefault:!$,component:b,variant:S}),R=(e=>{const{classes:t,variant:n,colorDefault:r}=e,s={root:["root",n,r&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,o.V_)(s,p,t)})(E);return N=$?(0,d.jsx)(g,(0,s.Z)({alt:l,src:w,srcSet:k,sizes:v,ownerState:E,className:R.img},x)):null!=c?c:T&&l?l[0]:(0,d.jsx)(y,{className:R.fallback}),(0,d.jsx)(m,(0,s.Z)({as:b,ownerState:E,className:(0,i.Z)(R.root,h),ref:t},I,{children:N}))}))},36600:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>D});var r=n(76805),s=n(8339),a=n(43001),i=(n(3827),n(11358)),o=(n(80807),n(70179)),l=n(10543),u=n(66954),c=n(901),d=n(15976),h=n(59832),p=n(20499),f=n(42205),m=n(2574);const g=function(e){const{className:t,classes:n,pulsate:r=!1,rippleX:s,rippleY:o,rippleSize:l,in:u,onExited:c,timeout:d}=e,[h,p]=a.useState(!1),f=(0,i.Z)(t,n.ripple,n.rippleVisible,r&&n.ripplePulsate),g={width:l,height:l,top:-l/2+o,left:-l/2+s},y=(0,i.Z)(n.child,h&&n.childLeaving,r&&n.childPulsate);return u||h||p(!0),a.useEffect((()=>{if(!u&&null!=c){const e=setTimeout(c,d);return()=>{clearTimeout(e)}}}),[c,u,d]),(0,m.jsx)("span",{className:f,style:g,children:(0,m.jsx)("span",{className:y})})};var y=n(4647);const b=(0,y.sI)("MuiTouchRipple",["root","ripple","rippleVisible","ripplePulsate","child","childLeaving","childPulsate"]),x=["center","classes","className"];let v,w,k,S,I=e=>e;const N=(0,f.F4)(v||(v=I`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)),C=(0,f.F4)(w||(w=I`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)),T=(0,f.F4)(k||(k=I`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)),$=(0,l.ZP)("span",{name:"MuiTouchRipple",slot:"Root"})({overflow:"hidden",pointerEvents:"none",position:"absolute",zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:"inherit"}),E=(0,l.ZP)(g,{name:"MuiTouchRipple",slot:"Ripple"})(S||(S=I`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`),b.rippleVisible,N,550,(({theme:e})=>e.transitions.easing.easeInOut),b.ripplePulsate,(({theme:e})=>e.transitions.duration.shorter),b.child,b.childLeaving,C,550,(({theme:e})=>e.transitions.easing.easeInOut),b.childPulsate,T,(({theme:e})=>e.transitions.easing.easeInOut)),R=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiTouchRipple"}),{center:o=!1,classes:l={},className:c}=n,d=(0,s.Z)(n,x),[h,f]=a.useState([]),g=a.useRef(0),y=a.useRef(null);a.useEffect((()=>{y.current&&(y.current(),y.current=null)}),[h]);const v=a.useRef(!1),w=a.useRef(null),k=a.useRef(null),S=a.useRef(null);a.useEffect((()=>()=>{clearTimeout(w.current)}),[]);const I=a.useCallback((e=>{const{pulsate:t,rippleX:n,rippleY:r,rippleSize:s,cb:a}=e;f((e=>[...e,(0,m.jsx)(E,{classes:{ripple:(0,i.Z)(l.ripple,b.ripple),rippleVisible:(0,i.Z)(l.rippleVisible,b.rippleVisible),ripplePulsate:(0,i.Z)(l.ripplePulsate,b.ripplePulsate),child:(0,i.Z)(l.child,b.child),childLeaving:(0,i.Z)(l.childLeaving,b.childLeaving),childPulsate:(0,i.Z)(l.childPulsate,b.childPulsate)},timeout:550,pulsate:t,rippleX:n,rippleY:r,rippleSize:s},g.current)])),g.current+=1,y.current=a}),[l]),N=a.useCallback(((e={},t={},n)=>{const{pulsate:r=!1,center:s=o||t.pulsate,fakeElement:a=!1}=t;if("mousedown"===(null==e?void 0:e.type)&&v.current)return void(v.current=!1);"touchstart"===(null==e?void 0:e.type)&&(v.current=!0);const i=a?null:S.current,l=i?i.getBoundingClientRect():{width:0,height:0,left:0,top:0};let u,c,d;if(s||void 0===e||0===e.clientX&&0===e.clientY||!e.clientX&&!e.touches)u=Math.round(l.width/2),c=Math.round(l.height/2);else{const{clientX:t,clientY:n}=e.touches?e.touches[0]:e;u=Math.round(t-l.left),c=Math.round(n-l.top)}if(s)d=Math.sqrt((2*l.width**2+l.height**2)/3),d%2==0&&(d+=1);else{const e=2*Math.max(Math.abs((i?i.clientWidth:0)-u),u)+2,t=2*Math.max(Math.abs((i?i.clientHeight:0)-c),c)+2;d=Math.sqrt(e**2+t**2)}null!=e&&e.touches?null===k.current&&(k.current=()=>{I({pulsate:r,rippleX:u,rippleY:c,rippleSize:d,cb:n})},w.current=setTimeout((()=>{k.current&&(k.current(),k.current=null)}),80)):I({pulsate:r,rippleX:u,rippleY:c,rippleSize:d,cb:n})}),[o,I]),C=a.useCallback((()=>{N({},{pulsate:!0})}),[N]),T=a.useCallback(((e,t)=>{if(clearTimeout(w.current),"touchend"===(null==e?void 0:e.type)&&k.current)return k.current(),k.current=null,void(w.current=setTimeout((()=>{T(e,t)})));k.current=null,f((e=>e.length>0?e.slice(1):e)),y.current=t}),[]);return a.useImperativeHandle(t,(()=>({pulsate:C,start:N,stop:T})),[C,N,T]),(0,m.jsx)($,(0,r.Z)({className:(0,i.Z)(l.root,b.root,c),ref:S},d,{children:(0,m.jsx)(p.W3,{component:null,exit:!0,children:h})}))}));function _(e){return(0,y.d6)("MuiButtonBase",e)}const A=(0,y.sI)("MuiButtonBase",["root","disabled","focusVisible"]),F=["action","centerRipple","children","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type"],O=(0,l.ZP)("button",{name:"MuiButtonBase",slot:"Root",overridesResolver:(e,t)=>t.root})({display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",boxSizing:"border-box",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},[`&.${A.disabled}`]:{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}}),D=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiButtonBase"}),{action:l,centerRipple:p=!1,children:f,className:g,component:y="button",disabled:b=!1,disableRipple:x=!1,disableTouchRipple:v=!1,focusRipple:w=!1,LinkComponent:k="a",onBlur:S,onClick:I,onContextMenu:N,onDragLeave:C,onFocus:T,onFocusVisible:$,onKeyDown:E,onKeyUp:A,onMouseDown:D,onMouseLeave:M,onMouseUp:L,onTouchEnd:z,onTouchMove:P,onTouchStart:B,tabIndex:W=0,TouchRippleProps:V,touchRippleRef:U,type:Z}=n,G=(0,s.Z)(n,F),j=a.useRef(null),H=a.useRef(null),q=(0,c.Z)(H,U),{isFocusVisibleRef:K,onFocus:X,onBlur:Y,ref:J}=(0,h.Z)(),[Q,ee]=a.useState(!1);b&&Q&&ee(!1),a.useImperativeHandle(l,(()=>({focusVisible:()=>{ee(!0),j.current.focus()}})),[]);const[te,ne]=a.useState(!1);a.useEffect((()=>{ne(!0)}),[]);const re=te&&!x&&!b;function se(e,t,n=v){return(0,d.Z)((r=>{t&&t(r);return!n&&H.current&&H.current[e](r),!0}))}a.useEffect((()=>{Q&&w&&!x&&te&&H.current.pulsate()}),[x,w,Q,te]);const ae=se("start",D),ie=se("stop",N),oe=se("stop",C),le=se("stop",L),ue=se("stop",(e=>{Q&&e.preventDefault(),M&&M(e)})),ce=se("start",B),de=se("stop",z),he=se("stop",P),pe=se("stop",(e=>{Y(e),!1===K.current&&ee(!1),S&&S(e)}),!1),fe=(0,d.Z)((e=>{j.current||(j.current=e.currentTarget),X(e),!0===K.current&&(ee(!0),$&&$(e)),T&&T(e)})),me=()=>{const e=j.current;return y&&"button"!==y&&!("A"===e.tagName&&e.href)},ge=a.useRef(!1),ye=(0,d.Z)((e=>{w&&!ge.current&&Q&&H.current&&" "===e.key&&(ge.current=!0,H.current.stop(e,(()=>{H.current.start(e)}))),e.target===e.currentTarget&&me()&&" "===e.key&&e.preventDefault(),E&&E(e),e.target===e.currentTarget&&me()&&"Enter"===e.key&&!b&&(e.preventDefault(),I&&I(e))})),be=(0,d.Z)((e=>{w&&" "===e.key&&H.current&&Q&&!e.defaultPrevented&&(ge.current=!1,H.current.stop(e,(()=>{H.current.pulsate(e)}))),A&&A(e),I&&e.target===e.currentTarget&&me()&&" "===e.key&&!e.defaultPrevented&&I(e)}));let xe=y;"button"===xe&&(G.href||G.to)&&(xe=k);const ve={};"button"===xe?(ve.type=void 0===Z?"button":Z,ve.disabled=b):(G.href||G.to||(ve.role="button"),b&&(ve["aria-disabled"]=b));const we=(0,c.Z)(J,j),ke=(0,c.Z)(t,we);const Se=(0,r.Z)({},n,{centerRipple:p,component:y,disabled:b,disableRipple:x,disableTouchRipple:v,focusRipple:w,tabIndex:W,focusVisible:Q}),Ie=(e=>{const{disabled:t,focusVisible:n,focusVisibleClassName:r,classes:s}=e,a={root:["root",t&&"disabled",n&&"focusVisible"]},i=(0,o.Z)(a,_,s);return n&&r&&(i.root+=` ${r}`),i})(Se);return(0,m.jsxs)(O,(0,r.Z)({as:xe,className:(0,i.Z)(Ie.root,g),ownerState:Se,onBlur:pe,onClick:I,onContextMenu:ie,onFocus:fe,onKeyDown:ye,onKeyUp:be,onMouseDown:ae,onMouseLeave:ue,onMouseUp:le,onDragLeave:oe,onTouchEnd:de,onTouchMove:he,onTouchStart:ce,ref:ke,tabIndex:b?-1:W,type:Z},ve,G,{children:[f,re?(0,m.jsx)(R,(0,r.Z)({ref:q,center:p},V)):null]}))}))},97745:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext({})},55545:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(42205),u=n(50349),c=n(10543),d=n(66954);function h(e){return(0,o.d6)("MuiButtonGroup",e)}const p=(0,o.sI)("MuiButtonGroup",["root","contained","outlined","text","disableElevation","disabled","fullWidth","vertical","grouped","groupedHorizontal","groupedVertical","groupedText","groupedTextHorizontal","groupedTextVertical","groupedTextPrimary","groupedTextSecondary","groupedOutlined","groupedOutlinedHorizontal","groupedOutlinedVertical","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","groupedContainedVertical","groupedContainedPrimary","groupedContainedSecondary"]);var f=n(97745),m=n(2574);const g=["children","className","color","component","disabled","disableElevation","disableFocusRipple","disableRipple","fullWidth","orientation","size","variant"],y=(0,c.ZP)("div",{name:"MuiButtonGroup",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${p.grouped}`]:t.grouped},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.orientation)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}${(0,u.Z)(n.orientation)}`]},{[`& .${p.grouped}`]:t[`grouped${(0,u.Z)(n.variant)}${(0,u.Z)(n.color)}`]},t.root,t[n.variant],!0===n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth,"vertical"===n.orientation&&t.vertical]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",borderRadius:(e.vars||e).shape.borderRadius},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[2]},t.disableElevation&&{boxShadow:"none"},t.fullWidth&&{width:"100%"},"vertical"===t.orientation&&{flexDirection:"column"},{[`& .${p.grouped}`]:(0,s.Z)({minWidth:40,"&:not(:first-of-type)":(0,s.Z)({},"horizontal"===t.orientation&&{borderTopLeftRadius:0,borderBottomLeftRadius:0},"vertical"===t.orientation&&{borderTopRightRadius:0,borderTopLeftRadius:0},"outlined"===t.variant&&"horizontal"===t.orientation&&{marginLeft:-1},"outlined"===t.variant&&"vertical"===t.orientation&&{marginTop:-1}),"&:not(:last-of-type)":(0,s.Z)({},"horizontal"===t.orientation&&{borderTopRightRadius:0,borderBottomRightRadius:0},"vertical"===t.orientation&&{borderBottomRightRadius:0,borderBottomLeftRadius:0},"text"===t.variant&&"horizontal"===t.orientation&&{borderRight:e.vars?`1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:"1px solid "+("light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)")},"text"===t.variant&&"vertical"===t.orientation&&{borderBottom:e.vars?`1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:"1px solid "+("light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)")},"text"===t.variant&&"inherit"!==t.color&&{borderColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / 0.5)`:(0,l.Fq)(e.palette[t.color].main,.5)},"outlined"===t.variant&&"horizontal"===t.orientation&&{borderRightColor:"transparent"},"outlined"===t.variant&&"vertical"===t.orientation&&{borderBottomColor:"transparent"},"contained"===t.variant&&"horizontal"===t.orientation&&{borderRight:`1px solid ${(e.vars||e).palette.grey[400]}`,[`&.${p.disabled}`]:{borderRight:`1px solid ${(e.vars||e).palette.action.disabled}`}},"contained"===t.variant&&"vertical"===t.orientation&&{borderBottom:`1px solid ${(e.vars||e).palette.grey[400]}`,[`&.${p.disabled}`]:{borderBottom:`1px solid ${(e.vars||e).palette.action.disabled}`}},"contained"===t.variant&&"inherit"!==t.color&&{borderColor:(e.vars||e).palette[t.color].dark},{"&:hover":(0,s.Z)({},"outlined"===t.variant&&"horizontal"===t.orientation&&{borderRightColor:"currentColor"},"outlined"===t.variant&&"vertical"===t.orientation&&{borderBottomColor:"currentColor"})}),"&:hover":(0,s.Z)({},"contained"===t.variant&&{boxShadow:"none"})},"contained"===t.variant&&{boxShadow:"none"})}))),b=a.forwardRef((function(e,t){const n=(0,d.Z)({props:e,name:"MuiButtonGroup"}),{children:l,className:c,color:p="primary",component:b="div",disabled:x=!1,disableElevation:v=!1,disableFocusRipple:w=!1,disableRipple:k=!1,fullWidth:S=!1,orientation:I="horizontal",size:N="medium",variant:C="outlined"}=n,T=(0,r.Z)(n,g),$=(0,s.Z)({},n,{color:p,component:b,disabled:x,disableElevation:v,disableFocusRipple:w,disableRipple:k,fullWidth:S,orientation:I,size:N,variant:C}),E=(e=>{const{classes:t,color:n,disabled:r,disableElevation:s,fullWidth:a,orientation:i,variant:l}=e,c={root:["root",l,"vertical"===i&&"vertical",a&&"fullWidth",s&&"disableElevation"],grouped:["grouped",`grouped${(0,u.Z)(i)}`,`grouped${(0,u.Z)(l)}`,`grouped${(0,u.Z)(l)}${(0,u.Z)(i)}`,`grouped${(0,u.Z)(l)}${(0,u.Z)(n)}`,r&&"disabled"]};return(0,o.V_)(c,h,t)})($),R=a.useMemo((()=>({className:E.grouped,color:p,disabled:x,disableElevation:v,disableFocusRipple:w,disableRipple:k,fullWidth:S,size:N,variant:C})),[p,x,v,w,k,S,N,C,E.grouped]);return(0,m.jsx)(y,(0,s.Z)({as:b,role:"group",className:(0,i.Z)(E.root,c),ref:t,ownerState:$},T,{children:(0,m.jsx)(f.Z.Provider,{value:R,children:l})}))}))},15471:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>x});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(47706),u=n(66954),c=n(10543);function d(e){return(0,o.d6)("MuiCardHeader",e)}const h=(0,o.sI)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var p=n(2574);const f=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],m=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,t)=>(0,s.Z)({[`& .${h.title}`]:t.title,[`& .${h.subheader}`]:t.subheader},t.root)})({display:"flex",alignItems:"center",padding:16}),g=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,t)=>t.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),y=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,t)=>t.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),b=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,t)=>t.content})({flex:"1 1 auto"}),x=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiCardHeader"}),{action:a,avatar:c,className:h,component:x="div",disableTypography:v=!1,subheader:w,subheaderTypographyProps:k,title:S,titleTypographyProps:I}=n,N=(0,r.Z)(n,f),C=(0,s.Z)({},n,{component:x,disableTypography:v}),T=(e=>{const{classes:t}=e;return(0,o.V_)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},d,t)})(C);let $=S;null==$||$.type===l.ZP||v||($=(0,p.jsx)(l.ZP,(0,s.Z)({variant:c?"body2":"h5",className:T.title,component:"span",display:"block"},I,{children:$})));let E=w;return null==E||E.type===l.ZP||v||(E=(0,p.jsx)(l.ZP,(0,s.Z)({variant:c?"body2":"body1",className:T.subheader,color:"text.secondary",component:"span",display:"block"},k,{children:E}))),(0,p.jsxs)(m,(0,s.Z)({className:(0,i.Z)(T.root,h),as:x,ref:t,ownerState:C},N,{children:[c&&(0,p.jsx)(g,{className:T.avatar,ownerState:C,children:c}),(0,p.jsxs)(b,{className:T.content,ownerState:C,children:[$,E]}),a&&(0,p.jsx)(y,{className:T.action,ownerState:C,children:a})]}))}))},50417:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>I});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(80807),n(4647)),o=n(42205),l=n(45195),u=n(57257),c=n(2574);const d=(0,u.Z)((0,c.jsx)("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),h=(0,u.Z)((0,c.jsx)("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),p=(0,u.Z)((0,c.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox");var f=n(50349),m=n(66954),g=n(10543);function y(e){return(0,i.d6)("MuiCheckbox",e)}const b=(0,i.sI)("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"]),x=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size"],v=(0,g.ZP)(l.Z,{shouldForwardProp:e=>(0,g.FO)(e)||"classes"===e,name:"MuiCheckbox",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.indeterminate&&t.indeterminate,"default"!==n.color&&t[`color${(0,f.Z)(n.color)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({color:(e.vars||e).palette.text.secondary},!t.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${"default"===t.color?e.vars.palette.action.activeChannel:e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,o.Fq)("default"===t.color?e.palette.action.active:e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&{[`&.${b.checked}, &.${b.indeterminate}`]:{color:(e.vars||e).palette[t.color].main},[`&.${b.disabled}`]:{color:(e.vars||e).palette.action.disabled}}))),w=(0,c.jsx)(h,{}),k=(0,c.jsx)(d,{}),S=(0,c.jsx)(p,{}),I=a.forwardRef((function(e,t){var n,o;const l=(0,m.Z)({props:e,name:"MuiCheckbox"}),{checkedIcon:u=w,color:d="primary",icon:h=k,indeterminate:p=!1,indeterminateIcon:g=S,inputProps:b,size:I="medium"}=l,N=(0,r.Z)(l,x),C=p?g:h,T=p?g:u,$=(0,s.Z)({},l,{color:d,indeterminate:p,size:I}),E=(e=>{const{classes:t,indeterminate:n,color:r}=e,a={root:["root",n&&"indeterminate",`color${(0,f.Z)(r)}`]},o=(0,i.V_)(a,y,t);return(0,s.Z)({},t,o)})($);return(0,c.jsx)(v,(0,s.Z)({type:"checkbox",inputProps:(0,s.Z)({"data-indeterminate":p},b),icon:a.cloneElement(C,{fontSize:null!=(n=C.props.fontSize)?n:I}),checkedIcon:a.cloneElement(T,{fontSize:null!=(o=T.props.fontSize)?o:I}),ownerState:$,ref:t},N,{classes:E}))}))},73289:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>g});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(42205),u=n(10543),c=n(66954);function d(e){return(0,o.d6)("MuiDivider",e)}(0,o.sI)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);var h=n(2574);const p=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],f=(0,u.ZP)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((({theme:e,ownerState:t})=>(0,s.Z)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(e.vars||e).palette.divider,borderBottomWidth:"thin"},t.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},t.light&&{borderColor:e.vars?`rgba(${e.vars.palette.dividerChannel} / 0.08)`:(0,l.Fq)(e.palette.divider,.08)},"inset"===t.variant&&{marginLeft:72},"middle"===t.variant&&"horizontal"===t.orientation&&{marginLeft:e.spacing(2),marginRight:e.spacing(2)},"middle"===t.variant&&"vertical"===t.orientation&&{marginTop:e.spacing(1),marginBottom:e.spacing(1)},"vertical"===t.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},t.flexItem&&{alignSelf:"stretch",height:"auto"})),(({theme:e,ownerState:t})=>(0,s.Z)({},t.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{position:"relative",width:"100%",borderTop:`thin solid ${(e.vars||e).palette.divider}`,top:"50%",content:'""',transform:"translateY(50%)"}})),(({theme:e,ownerState:t})=>(0,s.Z)({},t.children&&"vertical"===t.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",top:"0%",left:"50%",borderTop:0,borderLeft:`thin solid ${(e.vars||e).palette.divider}`,transform:"translateX(0%)"}})),(({ownerState:e})=>(0,s.Z)({},"right"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===e.textAlign&&"vertical"!==e.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}}))),m=(0,u.ZP)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-block",paddingLeft:`calc(${e.spacing(1)} * 1.2)`,paddingRight:`calc(${e.spacing(1)} * 1.2)`},"vertical"===t.orientation&&{paddingTop:`calc(${e.spacing(1)} * 1.2)`,paddingBottom:`calc(${e.spacing(1)} * 1.2)`}))),g=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiDivider"}),{absolute:a=!1,children:l,className:u,component:g=(l?"div":"hr"),flexItem:y=!1,light:b=!1,orientation:x="horizontal",role:v=("hr"!==g?"separator":void 0),textAlign:w="center",variant:k="fullWidth"}=n,S=(0,r.Z)(n,p),I=(0,s.Z)({},n,{absolute:a,component:g,flexItem:y,light:b,orientation:x,role:v,textAlign:w,variant:k}),N=(e=>{const{absolute:t,children:n,classes:r,flexItem:s,light:a,orientation:i,textAlign:l,variant:u}=e,c={root:["root",t&&"absolute",u,a&&"light","vertical"===i&&"vertical",s&&"flexItem",n&&"withChildren",n&&"vertical"===i&&"withChildrenVertical","right"===l&&"vertical"!==i&&"textAlignRight","left"===l&&"vertical"!==i&&"textAlignLeft"],wrapper:["wrapper","vertical"===i&&"wrapperVertical"]};return(0,o.V_)(c,d,r)})(I);return(0,h.jsx)(f,(0,s.Z)({as:g,className:(0,i.Z)(N.root,u),role:v,ref:t,ownerState:I},S,{children:l?(0,h.jsx)(m,{className:N.wrapper,ownerState:I,children:l}):null}))}))},79191:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext()},52880:(e,t,n)=>{"use strict";function r({props:e,states:t,muiFormControl:n}){return t.reduce(((t,r)=>(t[r]=e[r],n&&void 0===e[r]&&(t[r]=n[r]),t)),{})}n.d(t,{Z:()=>r})},25738:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b,Yp:()=>x.Z});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(66954),u=n(10543),c=n(64089),d=n(50349),h=n(55772),p=n(79191);function f(e){return(0,o.d6)("MuiFormControl",e)}(0,o.sI)("MuiFormControl",["root","marginNone","marginNormal","marginDense","fullWidth","disabled"]);var m=n(2574);const g=["children","className","color","component","disabled","error","focused","fullWidth","hiddenLabel","margin","required","size","variant"],y=(0,u.ZP)("div",{name:"MuiFormControl",slot:"Root",overridesResolver:({ownerState:e},t)=>(0,s.Z)({},t.root,t[`margin${(0,d.Z)(e.margin)}`],e.fullWidth&&t.fullWidth)})((({ownerState:e})=>(0,s.Z)({display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},"normal"===e.margin&&{marginTop:16,marginBottom:8},"dense"===e.margin&&{marginTop:8,marginBottom:4},e.fullWidth&&{width:"100%"}))),b=a.forwardRef((function(e,t){const n=(0,l.Z)({props:e,name:"MuiFormControl"}),{children:u,className:b,color:x="primary",component:v="div",disabled:w=!1,error:k=!1,focused:S,fullWidth:I=!1,hiddenLabel:N=!1,margin:C="none",required:T=!1,size:$="medium",variant:E="outlined"}=n,R=(0,r.Z)(n,g),_=(0,s.Z)({},n,{color:x,component:v,disabled:w,error:k,fullWidth:I,hiddenLabel:N,margin:C,required:T,size:$,variant:E}),A=(e=>{const{classes:t,margin:n,fullWidth:r}=e,s={root:["root","none"!==n&&`margin${(0,d.Z)(n)}`,r&&"fullWidth"]};return(0,o.V_)(s,f,t)})(_),[F,O]=a.useState((()=>{let e=!1;return u&&a.Children.forEach(u,(t=>{if(!(0,h.Z)(t,["Input","Select"]))return;const n=(0,h.Z)(t,["Select"])?t.props.input:t;n&&(0,c.B7)(n.props)&&(e=!0)})),e})),[D,M]=a.useState((()=>{let e=!1;return u&&a.Children.forEach(u,(t=>{(0,h.Z)(t,["Input","Select"])&&(0,c.vd)(t.props,!0)&&(e=!0)})),e})),[L,z]=a.useState(!1);w&&L&&z(!1);const P=void 0===S||w?L:S;const B=a.useCallback((()=>{M(!0)}),[]),W={adornedStart:F,setAdornedStart:O,color:x,disabled:w,error:k,filled:D,focused:P,fullWidth:I,hiddenLabel:N,size:$,onBlur:()=>{z(!1)},onEmpty:a.useCallback((()=>{M(!1)}),[]),onFilled:B,onFocus:()=>{z(!0)},registerEffect:undefined,required:T,variant:E};return(0,m.jsx)(p.Z.Provider,{value:W,children:(0,m.jsx)(y,(0,s.Z)({as:v,ownerState:_,className:(0,i.Z)(A.root,b),ref:t},R,{children:u}))})}));var x=n(93304)},93304:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(43001),s=n(79191);function a(){return r.useContext(s.Z)}},65877:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>x});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=(n(80807),n(4647)),l=n(25738),u=n(47706),c=n(50349),d=n(10543),h=n(66954);function p(e){return(0,o.d6)("MuiFormControlLabel",e)}const f=(0,o.sI)("MuiFormControlLabel",["root","labelPlacementStart","labelPlacementTop","labelPlacementBottom","disabled","label","error"]);var m=n(52880),g=n(2574);const y=["checked","className","componentsProps","control","disabled","disableTypography","inputRef","label","labelPlacement","name","onChange","value"],b=(0,d.ZP)("label",{name:"MuiFormControlLabel",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${f.label}`]:t.label},t.root,t[`labelPlacement${(0,c.Z)(n.labelPlacement)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,[`&.${f.disabled}`]:{cursor:"default"}},"start"===t.labelPlacement&&{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},"top"===t.labelPlacement&&{flexDirection:"column-reverse",marginLeft:16},"bottom"===t.labelPlacement&&{flexDirection:"column",marginLeft:16},{[`& .${f.label}`]:{[`&.${f.disabled}`]:{color:(e.vars||e).palette.text.disabled}}}))),x=a.forwardRef((function(e,t){const n=(0,h.Z)({props:e,name:"MuiFormControlLabel"}),{className:d,componentsProps:f={},control:x,disabled:v,disableTypography:w,label:k,labelPlacement:S="end"}=n,I=(0,r.Z)(n,y),N=(0,l.Yp)();let C=v;void 0===C&&void 0!==x.props.disabled&&(C=x.props.disabled),void 0===C&&N&&(C=N.disabled);const T={disabled:C};["checked","name","onChange","value","inputRef"].forEach((e=>{void 0===x.props[e]&&void 0!==n[e]&&(T[e]=n[e])}));const $=(0,m.Z)({props:n,muiFormControl:N,states:["error"]}),E=(0,s.Z)({},n,{disabled:C,labelPlacement:S,error:$.error}),R=(e=>{const{classes:t,disabled:n,labelPlacement:r,error:s}=e,a={root:["root",n&&"disabled",`labelPlacement${(0,c.Z)(r)}`,s&&"error"],label:["label",n&&"disabled"]};return(0,o.V_)(a,p,t)})(E);let _=k;return null==_||_.type===u.ZP||w||(_=(0,g.jsx)(u.ZP,(0,s.Z)({component:"span",className:R.label},f.typography,{children:_}))),(0,g.jsxs)(b,(0,s.Z)({className:(0,i.Z)(R.root,d),ownerState:E,ref:t},I,{children:[a.cloneElement(x,T),_]}))}))},47180:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>g});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(10543),u=n(66954);function c(e){return(0,o.d6)("MuiFormGroup",e)}(0,o.sI)("MuiFormGroup",["root","row","error"]);var d=n(93304),h=n(52880),p=n(2574);const f=["className","row"],m=(0,l.ZP)("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.row&&t.row]}})((({ownerState:e})=>(0,s.Z)({display:"flex",flexDirection:"column",flexWrap:"wrap"},e.row&&{flexDirection:"row"}))),g=a.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiFormGroup"}),{className:a,row:l=!1}=n,g=(0,r.Z)(n,f),y=(0,d.Z)(),b=(0,h.Z)({props:n,muiFormControl:y,states:["error"]}),x=(0,s.Z)({},n,{row:l,error:b.error}),v=(e=>{const{classes:t,row:n,error:r}=e,s={root:["root",n&&"row",r&&"error"]};return(0,o.V_)(s,c,t)})(x);return(0,p.jsx)(m,(0,s.Z)({className:(0,i.Z)(v.root,a),ownerState:x,ref:t},g))}))},64089:(e,t,n)=>{"use strict";function r(e){return null!=e&&!(Array.isArray(e)&&0===e.length)}function s(e,t=!1){return e&&(r(e.value)&&""!==e.value||t&&r(e.defaultValue)&&""!==e.defaultValue)}function a(e){return e.startAdornment}n.d(t,{B7:()=>a,vd:()=>s})},3366:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>_});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(42205),u=n(50349),c=n(91348),d=n(10543),h=n(66954);function p(e){return(0,o.d6)("MuiLinearProgress",e)}(0,o.sI)("MuiLinearProgress",["root","colorPrimary","colorSecondary","determinate","indeterminate","buffer","query","dashed","dashedColorPrimary","dashedColorSecondary","bar","barColorPrimary","barColorSecondary","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer"]);var f=n(2574);const m=["className","color","value","valueBuffer","variant"];let g,y,b,x,v,w,k=e=>e;const S=(0,l.F4)(g||(g=k`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)),I=(0,l.F4)(y||(y=k`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)),N=(0,l.F4)(b||(b=k`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)),C=(e,t)=>"inherit"===t?"currentColor":e.vars?e.vars.palette.LinearProgress[`${t}Bg`]:"light"===e.palette.mode?(0,l.$n)(e.palette[t].main,.62):(0,l._j)(e.palette[t].main,.5),T=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`color${(0,u.Z)(n.color)}`],t[n.variant]]}})((({ownerState:e,theme:t})=>(0,s.Z)({position:"relative",overflow:"hidden",display:"block",height:4,zIndex:0,"@media print":{colorAdjust:"exact"},backgroundColor:C(t,e.color)},"inherit"===e.color&&"buffer"!==e.variant&&{backgroundColor:"none","&::before":{content:'""',position:"absolute",left:0,top:0,right:0,bottom:0,backgroundColor:"currentColor",opacity:.3}},"buffer"===e.variant&&{backgroundColor:"transparent"},"query"===e.variant&&{transform:"rotate(180deg)"}))),$=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Dashed",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.dashed,t[`dashedColor${(0,u.Z)(n.color)}`]]}})((({ownerState:e,theme:t})=>{const n=C(t,e.color);return(0,s.Z)({position:"absolute",marginTop:0,height:"100%",width:"100%"},"inherit"===e.color&&{opacity:.3},{backgroundImage:`radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`,backgroundSize:"10px 10px",backgroundPosition:"0 -23px"})}),(0,l.iv)(x||(x=k`
    animation: ${0} 3s infinite linear;
  `),N)),E=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Bar1",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.bar,t[`barColor${(0,u.Z)(n.color)}`],("indeterminate"===n.variant||"query"===n.variant)&&t.bar1Indeterminate,"determinate"===n.variant&&t.bar1Determinate,"buffer"===n.variant&&t.bar1Buffer]}})((({ownerState:e,theme:t})=>(0,s.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left",backgroundColor:"inherit"===e.color?"currentColor":(t.vars||t).palette[e.color].main},"determinate"===e.variant&&{transition:"transform .4s linear"},"buffer"===e.variant&&{zIndex:1,transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,l.iv)(v||(v=k`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `),S))),R=(0,d.ZP)("span",{name:"MuiLinearProgress",slot:"Bar2",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.bar,t[`barColor${(0,u.Z)(n.color)}`],("indeterminate"===n.variant||"query"===n.variant)&&t.bar2Indeterminate,"buffer"===n.variant&&t.bar2Buffer]}})((({ownerState:e,theme:t})=>(0,s.Z)({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left"},"buffer"!==e.variant&&{backgroundColor:"inherit"===e.color?"currentColor":(t.vars||t).palette[e.color].main},"inherit"===e.color&&{opacity:.3},"buffer"===e.variant&&{backgroundColor:C(t,e.color),transition:"transform .4s linear"})),(({ownerState:e})=>("indeterminate"===e.variant||"query"===e.variant)&&(0,l.iv)(w||(w=k`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `),I))),_=a.forwardRef((function(e,t){const n=(0,h.Z)({props:e,name:"MuiLinearProgress"}),{className:a,color:l="primary",value:d,valueBuffer:g,variant:y="indeterminate"}=n,b=(0,r.Z)(n,m),x=(0,s.Z)({},n,{color:l,variant:y}),v=(e=>{const{classes:t,variant:n,color:r}=e,s={root:["root",`color${(0,u.Z)(r)}`,n],dashed:["dashed",`dashedColor${(0,u.Z)(r)}`],bar1:["bar",`barColor${(0,u.Z)(r)}`,("indeterminate"===n||"query"===n)&&"bar1Indeterminate","determinate"===n&&"bar1Determinate","buffer"===n&&"bar1Buffer"],bar2:["bar","buffer"!==n&&`barColor${(0,u.Z)(r)}`,"buffer"===n&&`color${(0,u.Z)(r)}`,("indeterminate"===n||"query"===n)&&"bar2Indeterminate","buffer"===n&&"bar2Buffer"]};return(0,o.V_)(s,p,t)})(x),w=(0,c.Z)(),k={},S={bar1:{},bar2:{}};if("determinate"===y||"buffer"===y)if(void 0!==d){k["aria-valuenow"]=Math.round(d),k["aria-valuemin"]=0,k["aria-valuemax"]=100;let e=d-100;"rtl"===w.direction&&(e=-e),S.bar1.transform=`translateX(${e}%)`}else 0;if("buffer"===y)if(void 0!==g){let e=(g||0)-100;"rtl"===w.direction&&(e=-e),S.bar2.transform=`translateX(${e}%)`}else 0;return(0,f.jsxs)(T,(0,s.Z)({className:(0,i.Z)(v.root,a),ownerState:x,role:"progressbar"},k,{ref:t},b,{children:["buffer"===y?(0,f.jsx)($,{className:v.dashed,ownerState:x}):null,(0,f.jsx)(E,{className:v.bar1,ownerState:x,style:S.bar1}),"determinate"===y?null:(0,f.jsx)(R,{className:v.bar2,ownerState:x,style:S.bar2})]}))}))},35891:(e,t,n)=>{"use strict";n.d(t,{R:()=>f,Z:()=>g});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=(n(80807),n(4647)),l=n(42205),u=n(10543),c=n(66954),d=(n(91348),n(63262)),h=n(2574);const p=["className","component","elevation","square","variant"],f=e=>{let t;return t=e<1?5.11916*e**2:4.5*Math.log(e+1)+2,(t/100).toFixed(2)},m=(0,u.ZP)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],!n.square&&t.rounded,"elevation"===n.variant&&t[`elevation${n.elevation}`]]}})((({theme:e,ownerState:t})=>{var n;return(0,s.Z)({backgroundColor:(e.vars||e).palette.background.paper,color:(e.vars||e).palette.text.primary,transition:e.transitions.create("box-shadow")},!t.square&&{borderRadius:e.shape.borderRadius},"outlined"===t.variant&&{border:`1px solid ${(e.vars||e).palette.divider}`},"elevation"===t.variant&&(0,s.Z)({boxShadow:(e.vars||e).shadows[t.elevation]},!e.vars&&"dark"===e.palette.mode&&{backgroundImage:`linear-gradient(${(0,l.Fq)("#fff",f(t.elevation))}, ${(0,l.Fq)("#fff",f(t.elevation))})`},e.vars&&{backgroundImage:null==(n=e.vars.overlays)?void 0:n[t.elevation]}))})),g=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiPaper"}),{className:a,component:l="div",elevation:u=1,square:f=!1,variant:g="elevation"}=n,y=(0,r.Z)(n,p),b=(0,s.Z)({},n,{component:l,elevation:u,square:f,variant:g}),x=(e=>{const{square:t,elevation:n,variant:r,classes:s}=e,a={root:["root",r,!t&&"rounded","elevation"===r&&`elevation${n}`]};return(0,o.V_)(a,d.J,s)})(b);return(0,h.jsx)(m,(0,s.Z)({as:l,ownerState:b,className:(0,i.Z)(x.root,a),ref:t},y))}))},14446:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>r.Z});var r=n(35891);n(63262)},63262:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var r=n(4647);function s(e){return(0,r.d6)("MuiPaper",e)}(0,r.sI)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"])},69985:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>$});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(80807),n(4647)),o=n(42205),l=n(45195),u=n(66954),c=n(57257),d=n(2574);const h=(0,c.Z)((0,d.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),p=(0,c.Z)((0,d.jsx)("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked");var f=n(10543);const m=(0,f.ZP)("span")({position:"relative",display:"flex"}),g=(0,f.ZP)(h)({transform:"scale(1)"}),y=(0,f.ZP)(p)((({theme:e,ownerState:t})=>(0,s.Z)({left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest})},t.checked&&{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})})));const b=function(e){const{checked:t=!1,classes:n={},fontSize:r}=e,a=(0,s.Z)({},e,{checked:t});return(0,d.jsxs)(m,{className:n.root,ownerState:a,children:[(0,d.jsx)(g,{fontSize:r,className:n.background,ownerState:a}),(0,d.jsx)(y,{fontSize:r,className:n.dot,ownerState:a})]})};var x=n(50349),v=n(39143),w=n(72721);function k(e){return(0,i.d6)("MuiRadio",e)}const S=(0,i.sI)("MuiRadio",["root","checked","disabled","colorPrimary","colorSecondary"]),I=["checked","checkedIcon","color","icon","name","onChange","size"],N=(0,f.ZP)(l.Z,{shouldForwardProp:e=>(0,f.FO)(e)||"classes"===e,name:"MuiRadio",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`color${(0,x.Z)(n.color)}`]]}})((({theme:e,ownerState:t})=>(0,s.Z)({color:(e.vars||e).palette.text.secondary,"&:hover":{backgroundColor:e.vars?`rgba(${"default"===t.color?e.vars.palette.action.activeChannel:e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,o.Fq)("default"===t.color?e.palette.action.active:e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&{[`&.${S.checked}`]:{color:(e.vars||e).palette[t.color].main}},{[`&.${S.disabled}`]:{color:(e.vars||e).palette.action.disabled}})));const C=(0,d.jsx)(b,{checked:!0}),T=(0,d.jsx)(b,{}),$=a.forwardRef((function(e,t){var n,o;const l=(0,u.Z)({props:e,name:"MuiRadio"}),{checked:c,checkedIcon:h=C,color:p="primary",icon:f=T,name:m,onChange:g,size:y="medium"}=l,b=(0,r.Z)(l,I),S=(0,s.Z)({},l,{color:p,size:y}),$=(e=>{const{classes:t,color:n}=e,r={root:["root",`color${(0,x.Z)(n)}`]};return(0,s.Z)({},t,(0,i.V_)(r,k,t))})(S),E=(0,w.Z)();let R=c;const _=(0,v.Z)(g,E&&E.onChange);let A=m;var F,O;return E&&(void 0===R&&(F=E.value,R="object"==typeof(O=l.value)&&null!==O?F===O:String(F)===String(O)),void 0===A&&(A=E.name)),(0,d.jsx)(N,(0,s.Z)({type:"radio",icon:a.cloneElement(f,{fontSize:null!=(n=T.props.fontSize)?n:y}),checkedIcon:a.cloneElement(h,{fontSize:null!=(o=C.props.fontSize)?o:y}),ownerState:S,classes:$,name:A,checked:R,onChange:_,ref:t},b))}))},69543:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(43001).createContext(void 0)},60792:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var r=n(76805),s=n(8339),a=n(43001),i=(n(3827),n(47180)),o=n(901),l=n(11133),u=n(69543),c=n(28701),d=n(2574);const h=["actions","children","defaultValue","name","onChange","value"],p=a.forwardRef((function(e,t){const{actions:n,children:p,defaultValue:f,name:m,onChange:g,value:y}=e,b=(0,s.Z)(e,h),x=a.useRef(null),[v,w]=(0,l.Z)({controlled:y,default:f,name:"RadioGroup"});a.useImperativeHandle(n,(()=>({focus:()=>{let e=x.current.querySelector("input:not(:disabled):checked");e||(e=x.current.querySelector("input:not(:disabled)")),e&&e.focus()}})),[]);const k=(0,o.Z)(t,x),S=(0,c.Z)(m);return(0,d.jsx)(u.Z.Provider,{value:{name:S,onChange:e=>{w(e.target.value),g&&g(e,e.target.value)},value:v},children:(0,d.jsx)(i.ZP,(0,r.Z)({role:"radiogroup",ref:k},b,{children:p}))})}));n(72721)},72721:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(43001),s=n(69543);function a(){return r.useContext(s.Z)}},63403:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>_});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(80807),l=n(4647),u=n(91348),c=n(7103),d=n(57257),h=n(2574);const p=(0,d.Z)((0,h.jsx)("path",{d:"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}),"Star"),f=(0,d.Z)((0,h.jsx)("path",{d:"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"}),"StarBorder");var m=n(66954),g=n(10543);function y(e){return(0,l.d6)("MuiRating",e)}const b=(0,l.sI)("MuiRating",["root","sizeSmall","sizeMedium","sizeLarge","readOnly","disabled","focusVisible","visuallyHidden","pristine","label","labelEmptyValueActive","icon","iconEmpty","iconFilled","iconHover","iconFocus","iconActive","decimal"]),x=["value"],v=["className","defaultValue","disabled","emptyIcon","emptyLabelText","getLabelText","highlightSelectedOnly","icon","IconContainerComponent","max","name","onChange","onChangeActive","onMouseLeave","onMouseMove","precision","readOnly","size","value"];function w(e,t){if(null==e)return e;const n=Math.round(e/t)*t;return Number(n.toFixed(function(e){const t=e.toString().split(".")[1];return t?t.length:0}(t)))}const k=(0,g.ZP)("span",{name:"MuiRating",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${b.visuallyHidden}`]:t.visuallyHidden},t.root,t[`size${(0,c.capitalize)(n.size)}`],n.readOnly&&t.readOnly]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"inline-flex",position:"relative",fontSize:e.typography.pxToRem(24),color:"#faaf00",cursor:"pointer",textAlign:"left",WebkitTapHighlightColor:"transparent",[`&.${b.disabled}`]:{opacity:(e.vars||e).palette.action.disabledOpacity,pointerEvents:"none"},[`&.${b.focusVisible} .${b.iconActive}`]:{outline:"1px solid #999"},[`& .${b.visuallyHidden}`]:o.jy},"small"===t.size&&{fontSize:e.typography.pxToRem(18)},"large"===t.size&&{fontSize:e.typography.pxToRem(30)},t.readOnly&&{pointerEvents:"none"}))),S=(0,g.ZP)("label",{name:"MuiRating",slot:"Label",overridesResolver:(e,t)=>t.label})((({ownerState:e})=>(0,s.Z)({cursor:"inherit"},e.emptyValueFocused&&{top:0,bottom:0,position:"absolute",outline:"1px solid #999",width:"100%"}))),I=(0,g.ZP)("span",{name:"MuiRating",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.iconEmpty&&t.iconEmpty,n.iconFilled&&t.iconFilled,n.iconHover&&t.iconHover,n.iconFocus&&t.iconFocus,n.iconActive&&t.iconActive]}})((({theme:e,ownerState:t})=>(0,s.Z)({display:"flex",transition:e.transitions.create("transform",{duration:e.transitions.duration.shortest}),pointerEvents:"none"},t.iconActive&&{transform:"scale(1.2)"},t.iconEmpty&&{color:(e.vars||e).palette.action.disabled}))),N=(0,g.ZP)("span",{name:"MuiRating",slot:"Decimal",shouldForwardProp:e=>(0,g.Dz)(e)&&"iconActive"!==e,overridesResolver:(e,t)=>{const{iconActive:n}=e;return[t.decimal,n&&t.iconActive]}})((({iconActive:e})=>(0,s.Z)({position:"relative"},e&&{transform:"scale(1.2)"})));function C(e){const t=(0,r.Z)(e,x);return(0,h.jsx)("span",(0,s.Z)({},t))}function T(e){const{classes:t,disabled:n,emptyIcon:r,focus:o,getLabelText:l,highlightSelectedOnly:u,hover:d,icon:p,IconContainerComponent:f,isActive:m,itemValue:g,labelProps:y,name:b,onBlur:x,onChange:v,onClick:w,onFocus:k,readOnly:N,ownerState:C,ratingValue:T,ratingValueRounded:$}=e,E=u?g===T:g<=T,R=g<=d,_=g<=o,A=g===$,F=(0,c.unstable_useId)(),O=(0,h.jsx)(I,{as:f,value:g,className:(0,i.Z)(t.icon,E?t.iconFilled:t.iconEmpty,R&&t.iconHover,_&&t.iconFocus,m&&t.iconActive),ownerState:(0,s.Z)({},C,{iconEmpty:!E,iconFilled:E,iconHover:R,iconFocus:_,iconActive:m}),children:r&&!E?r:p});return N?(0,h.jsx)("span",(0,s.Z)({},y,{children:O})):(0,h.jsxs)(a.Fragment,{children:[(0,h.jsxs)(S,(0,s.Z)({ownerState:(0,s.Z)({},C,{emptyValueFocused:void 0}),htmlFor:F},y,{children:[O,(0,h.jsx)("span",{className:t.visuallyHidden,children:l(g)})]})),(0,h.jsx)("input",{className:t.visuallyHidden,onFocus:k,onBlur:x,onChange:v,onClick:w,disabled:n,value:g,id:F,type:"radio",name:b,checked:A})]})}const $=(0,h.jsx)(p,{fontSize:"inherit"}),E=(0,h.jsx)(f,{fontSize:"inherit"});function R(e){return`${e} Star${1!==e?"s":""}`}const _=a.forwardRef((function(e,t){const n=(0,m.Z)({name:"MuiRating",props:e}),{className:o,defaultValue:d=null,disabled:p=!1,emptyIcon:f=E,emptyLabelText:g="Empty",getLabelText:b=R,highlightSelectedOnly:x=!1,icon:I=$,IconContainerComponent:_=C,max:A=5,name:F,onChange:O,onChangeActive:D,onMouseLeave:M,onMouseMove:L,precision:z=1,readOnly:P=!1,size:B="medium",value:W}=n,V=(0,r.Z)(n,v),U=(0,c.unstable_useId)(F),[Z,G]=(0,c.useControlled)({controlled:W,default:d,name:"Rating"}),j=w(Z,z),H=(0,u.Z)(),[{hover:q,focus:K},X]=a.useState({hover:-1,focus:-1});let Y=j;-1!==q&&(Y=q),-1!==K&&(Y=K);const{isFocusVisibleRef:J,onBlur:Q,onFocus:ee,ref:te}=(0,c.useIsFocusVisible)(),[ne,re]=a.useState(!1),se=a.useRef(),ae=(0,c.useForkRef)(te,se),ie=(0,c.useForkRef)(ae,t),oe=e=>{let t=""===e.target.value?null:parseFloat(e.target.value);-1!==q&&(t=q),G(t),O&&O(e,t)},le=e=>{0===e.clientX&&0===e.clientY||(X({hover:-1,focus:-1}),G(null),O&&parseFloat(e.target.value)===j&&O(e,null))},ue=e=>{ee(e),!0===J.current&&re(!0);const t=parseFloat(e.target.value);X((e=>({hover:e.hover,focus:t})))},ce=e=>{if(-1!==q)return;Q(e),!1===J.current&&re(!1);X((e=>({hover:e.hover,focus:-1})))},[de,he]=a.useState(!1),pe=(0,s.Z)({},n,{defaultValue:d,disabled:p,emptyIcon:f,emptyLabelText:g,emptyValueFocused:de,focusVisible:ne,getLabelText:b,icon:I,IconContainerComponent:_,max:A,precision:z,readOnly:P,size:B}),fe=(e=>{const{classes:t,size:n,readOnly:r,disabled:s,emptyValueFocused:a,focusVisible:i}=e,o={root:["root",`size${(0,c.capitalize)(n)}`,s&&"disabled",i&&"focusVisible",r&&"readyOnly"],label:["label","pristine"],labelEmptyValue:[a&&"labelEmptyValueActive"],icon:["icon"],iconEmpty:["iconEmpty"],iconFilled:["iconFilled"],iconHover:["iconHover"],iconFocus:["iconFocus"],iconActive:["iconActive"],decimal:["decimal"],visuallyHidden:["visuallyHidden"]};return(0,l.V_)(o,y,t)})(pe);return(0,h.jsxs)(k,(0,s.Z)({ref:ie,onMouseMove:e=>{L&&L(e);const t=se.current,{right:n,left:r}=t.getBoundingClientRect(),{width:s}=t.firstChild.getBoundingClientRect();let a;a="rtl"===H.direction?(n-e.clientX)/(s*A):(e.clientX-r)/(s*A);let i=w(A*a+z/2,z);i=function(e,t,n){return e<t?t:e>n?n:e}(i,z,A),X((e=>e.hover===i&&e.focus===i?e:{hover:i,focus:i})),re(!1),D&&q!==i&&D(e,i)},onMouseLeave:e=>{M&&M(e);X({hover:-1,focus:-1}),D&&-1!==q&&D(e,-1)},className:(0,i.Z)(fe.root,o),ownerState:pe,role:P?"img":null,"aria-label":P?b(Y):null},V,{children:[Array.from(new Array(A)).map(((e,t)=>{const n=t+1,r={classes:fe,disabled:p,emptyIcon:f,focus:K,getLabelText:b,highlightSelectedOnly:x,hover:q,icon:I,IconContainerComponent:_,name:U,onBlur:ce,onChange:oe,onClick:le,onFocus:ue,ratingValue:Y,ratingValueRounded:j,readOnly:P,ownerState:pe},a=n===Math.ceil(Y)&&(-1!==q||-1!==K);if(z<1){const e=Array.from(new Array(1/z));return(0,h.jsx)(N,{className:(0,i.Z)(fe.decimal,a&&fe.iconActive),ownerState:pe,iconActive:a,children:e.map(((t,a)=>{const i=w(n-1+(a+1)*z,z);return(0,h.jsx)(T,(0,s.Z)({},r,{isActive:!1,itemValue:i,labelProps:{style:e.length-1===a?{}:{width:i===Y?(a+1)*z*100+"%":"0%",overflow:"hidden",position:"absolute"}}}),i)}))},n)}return(0,h.jsx)(T,(0,s.Z)({},r,{isActive:a,itemValue:n}),n)})),!P&&!p&&(0,h.jsxs)(S,{className:(0,i.Z)(fe.label,fe.labelEmptyValue),ownerState:pe,children:[(0,h.jsx)("input",{className:fe.visuallyHidden,value:"",id:`${U}-empty`,type:"radio",name:U,checked:null==j,onFocus:()=>he(!0),onBlur:()=>he(!1),onChange:oe}),(0,h.jsx)("span",{className:fe.visuallyHidden,children:g})]})]}))}))},85985:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>rn});var r=n(76805),s=n(8339),a=n(43001),i=(n(3827),n(11358)),o=n(4647),l=n(80807),u=n(10543),c=n(66954),d=n(52880),h=n(79191),p=n(93304),f=n(50349),m=n(901),g=n(62056),y=n(42205),b=n(21590),x=n(2574);const v=function(e){return(0,x.jsx)(y.nz,(0,r.Z)({},e,{defaultTheme:b.Z}))};var w=n(64089);function k(e){return(0,o.d6)("MuiInputBase",e)}const S=(0,o.sI)("MuiInputBase",["root","formControl","focused","disabled","adornedStart","adornedEnd","error","sizeSmall","multiline","colorSecondary","fullWidth","hiddenLabel","input","inputSizeSmall","inputMultiline","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel"]),I=["aria-describedby","autoComplete","autoFocus","className","color","components","componentsProps","defaultValue","disabled","disableInjectingGlobalStyles","endAdornment","error","fullWidth","id","inputComponent","inputProps","inputRef","margin","maxRows","minRows","multiline","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","placeholder","readOnly","renderSuffix","rows","size","startAdornment","type","value"],N=(e,t)=>{const{ownerState:n}=e;return[t.root,n.formControl&&t.formControl,n.startAdornment&&t.adornedStart,n.endAdornment&&t.adornedEnd,n.error&&t.error,"small"===n.size&&t.sizeSmall,n.multiline&&t.multiline,n.color&&t[`color${(0,f.Z)(n.color)}`],n.fullWidth&&t.fullWidth,n.hiddenLabel&&t.hiddenLabel]},C=(e,t)=>{const{ownerState:n}=e;return[t.input,"small"===n.size&&t.inputSizeSmall,n.multiline&&t.inputMultiline,"search"===n.type&&t.inputTypeSearch,n.startAdornment&&t.inputAdornedStart,n.endAdornment&&t.inputAdornedEnd,n.hiddenLabel&&t.inputHiddenLabel]},T=(0,u.ZP)("div",{name:"MuiInputBase",slot:"Root",overridesResolver:N})((({theme:e,ownerState:t})=>(0,r.Z)({},e.typography.body1,{color:(e.vars||e).palette.text.primary,lineHeight:"1.4375em",boxSizing:"border-box",position:"relative",cursor:"text",display:"inline-flex",alignItems:"center",[`&.${S.disabled}`]:{color:(e.vars||e).palette.text.disabled,cursor:"default"}},t.multiline&&(0,r.Z)({padding:"4px 0 5px"},"small"===t.size&&{paddingTop:1}),t.fullWidth&&{width:"100%"}))),$=(0,u.ZP)("input",{name:"MuiInputBase",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>{const n="light"===e.palette.mode,s=(0,r.Z)({color:"currentColor"},e.vars?{opacity:e.vars.opacity.inputPlaceholder}:{opacity:n?.42:.5},{transition:e.transitions.create("opacity",{duration:e.transitions.duration.shorter})}),a={opacity:"0 !important"},i=e.vars?{opacity:e.vars.opacity.inputPlaceholder}:{opacity:n?.42:.5};return(0,r.Z)({font:"inherit",letterSpacing:"inherit",color:"currentColor",padding:"4px 0 5px",border:0,boxSizing:"content-box",background:"none",height:"1.4375em",margin:0,WebkitTapHighlightColor:"transparent",display:"block",minWidth:0,width:"100%",animationName:"mui-auto-fill-cancel",animationDuration:"10ms","&::-webkit-input-placeholder":s,"&::-moz-placeholder":s,"&:-ms-input-placeholder":s,"&::-ms-input-placeholder":s,"&:focus":{outline:0},"&:invalid":{boxShadow:"none"},"&::-webkit-search-decoration":{WebkitAppearance:"none"},[`label[data-shrink=false] + .${S.formControl} &`]:{"&::-webkit-input-placeholder":a,"&::-moz-placeholder":a,"&:-ms-input-placeholder":a,"&::-ms-input-placeholder":a,"&:focus::-webkit-input-placeholder":i,"&:focus::-moz-placeholder":i,"&:focus:-ms-input-placeholder":i,"&:focus::-ms-input-placeholder":i},[`&.${S.disabled}`]:{opacity:1,WebkitTextFillColor:(e.vars||e).palette.text.disabled},"&:-webkit-autofill":{animationDuration:"5000s",animationName:"mui-auto-fill"}},"small"===t.size&&{paddingTop:1},t.multiline&&{height:"auto",resize:"none",padding:0,paddingTop:0},"search"===t.type&&{MozAppearance:"textfield"})})),E=(0,x.jsx)(v,{styles:{"@keyframes mui-auto-fill":{from:{display:"block"}},"@keyframes mui-auto-fill-cancel":{from:{display:"block"}}}}),R=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiInputBase"}),{"aria-describedby":u,autoComplete:y,autoFocus:b,className:v,components:S={},componentsProps:N={},defaultValue:C,disabled:R,disableInjectingGlobalStyles:_,endAdornment:A,fullWidth:F=!1,id:O,inputComponent:D="input",inputProps:M={},inputRef:L,maxRows:z,minRows:P,multiline:B=!1,name:W,onBlur:V,onChange:U,onClick:Z,onFocus:G,onKeyDown:j,onKeyUp:H,placeholder:q,readOnly:K,renderSuffix:X,rows:Y,startAdornment:J,type:Q="text",value:ee}=n,te=(0,s.Z)(n,I),ne=null!=M.value?M.value:ee,{current:re}=a.useRef(null!=ne),se=a.useRef(),ae=a.useCallback((e=>{0}),[]),ie=(0,m.Z)(M.ref,ae),oe=(0,m.Z)(L,ie),le=(0,m.Z)(se,oe),[ue,ce]=a.useState(!1),de=(0,p.Z)();const he=(0,d.Z)({props:n,muiFormControl:de,states:["color","disabled","error","hiddenLabel","size","required","filled"]});he.focused=de?de.focused:ue,a.useEffect((()=>{!de&&R&&ue&&(ce(!1),V&&V())}),[de,R,ue,V]);const pe=de&&de.onFilled,fe=de&&de.onEmpty,me=a.useCallback((e=>{(0,w.vd)(e)?pe&&pe():fe&&fe()}),[pe,fe]);(0,g.Z)((()=>{re&&me({value:ne})}),[ne,me,re]);a.useEffect((()=>{me(se.current)}),[]);let ge=D,ye=M;B&&"input"===ge&&(ye=Y?(0,r.Z)({type:void 0,minRows:Y,maxRows:Y},ye):(0,r.Z)({type:void 0,maxRows:z,minRows:P},ye),ge=o.uz);a.useEffect((()=>{de&&de.setAdornedStart(Boolean(J))}),[de,J]);const be=(0,r.Z)({},n,{color:he.color||"primary",disabled:he.disabled,endAdornment:A,error:he.error,focused:he.focused,formControl:de,fullWidth:F,hiddenLabel:he.hiddenLabel,multiline:B,size:he.size,startAdornment:J,type:Q}),xe=(e=>{const{classes:t,color:n,disabled:r,error:s,endAdornment:a,focused:i,formControl:l,fullWidth:u,hiddenLabel:c,multiline:d,size:h,startAdornment:p,type:m}=e,g={root:["root",`color${(0,f.Z)(n)}`,r&&"disabled",s&&"error",u&&"fullWidth",i&&"focused",l&&"formControl","small"===h&&"sizeSmall",d&&"multiline",p&&"adornedStart",a&&"adornedEnd",c&&"hiddenLabel"],input:["input",r&&"disabled","search"===m&&"inputTypeSearch",d&&"inputMultiline","small"===h&&"inputSizeSmall",c&&"inputHiddenLabel",p&&"inputAdornedStart",a&&"inputAdornedEnd"]};return(0,o.V_)(g,k,t)})(be),ve=S.Root||T,we=N.root||{},ke=S.Input||$;return ye=(0,r.Z)({},ye,N.input),(0,x.jsxs)(a.Fragment,{children:[!_&&E,(0,x.jsxs)(ve,(0,r.Z)({},we,!(0,o.Xd)(ve)&&{ownerState:(0,r.Z)({},be,we.ownerState)},{ref:t,onClick:e=>{se.current&&e.currentTarget===e.target&&se.current.focus(),Z&&Z(e)}},te,{className:(0,i.Z)(xe.root,we.className,v),children:[J,(0,x.jsx)(h.Z.Provider,{value:null,children:(0,x.jsx)(ke,(0,r.Z)({ownerState:be,"aria-invalid":he.error,"aria-describedby":u,autoComplete:y,autoFocus:b,defaultValue:C,disabled:he.disabled,id:O,onAnimationStart:e=>{me("mui-auto-fill-cancel"===e.animationName?se.current:{value:"x"})},name:W,placeholder:q,readOnly:K,required:he.required,rows:Y,value:ne,onKeyDown:j,onKeyUp:H,type:Q},ye,!(0,o.Xd)(ke)&&{as:ge,ownerState:(0,r.Z)({},be,ye.ownerState)},{ref:le,className:(0,i.Z)(xe.input,ye.className),onBlur:e=>{V&&V(e),M.onBlur&&M.onBlur(e),de&&de.onBlur?de.onBlur(e):ce(!1)},onChange:(e,...t)=>{if(!re){const t=e.target||se.current;if(null==t)throw new Error((0,l.fe)(1));me({value:t.value})}M.onChange&&M.onChange(e,...t),U&&U(e,...t)},onFocus:e=>{he.disabled?e.stopPropagation():(G&&G(e),M.onFocus&&M.onFocus(e),de&&de.onFocus?de.onFocus(e):ce(!0))}}))}),A,X?X((0,r.Z)({},he,{startAdornment:J})):null]}))]})})),_=R;function A(e){return(0,o.d6)("MuiInput",e)}const F=(0,r.Z)({},S,(0,o.sI)("MuiInput",["root","underline","input"])),O=["disableUnderline","components","componentsProps","fullWidth","inputComponent","multiline","type"],D=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...N(e,t),!n.disableUnderline&&t.underline]}})((({theme:e,ownerState:t})=>{let n="light"===e.palette.mode?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)";return e.vars&&(n=`rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`),(0,r.Z)({position:"relative"},t.formControl&&{"label + &":{marginTop:16}},!t.disableUnderline&&{"&:after":{borderBottom:`2px solid ${(e.vars||e).palette[t.color].main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${F.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${F.error}:after`]:{borderBottomColor:(e.vars||e).palette.error.main,transform:"scaleX(1)"},"&:before":{borderBottom:`1px solid ${n}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:e.transitions.create("border-bottom-color",{duration:e.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${F.disabled}):before`]:{borderBottom:`2px solid ${(e.vars||e).palette.text.primary}`,"@media (hover: none)":{borderBottom:`1px solid ${n}`}},[`&.${F.disabled}:before`]:{borderBottomStyle:"dotted"}})})),M=(0,u.ZP)($,{name:"MuiInput",slot:"Input",overridesResolver:C})({}),L=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiInput"}),{disableUnderline:a,components:i={},componentsProps:u,fullWidth:d=!1,inputComponent:h="input",multiline:p=!1,type:f="text"}=n,m=(0,s.Z)(n,O),g=(e=>{const{classes:t,disableUnderline:n}=e,s={root:["root",!n&&"underline"],input:["input"]},a=(0,o.V_)(s,A,t);return(0,r.Z)({},t,a)})(n),y={root:{ownerState:{disableUnderline:a}}},b=u?(0,l.vb)(u,y):y;return(0,x.jsx)(_,(0,r.Z)({components:(0,r.Z)({Root:D,Input:M},i),componentsProps:b,fullWidth:d,inputComponent:h,multiline:p,ref:t,type:f},m,{classes:g}))}));L.muiName="Input";const z=L;function P(e){return(0,o.d6)("MuiFilledInput",e)}const B=(0,r.Z)({},S,(0,o.sI)("MuiFilledInput",["root","underline","input"])),W=["disableUnderline","components","componentsProps","fullWidth","hiddenLabel","inputComponent","multiline","type"],V=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiFilledInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...N(e,t),!n.disableUnderline&&t.underline]}})((({theme:e,ownerState:t})=>{var n;const s="light"===e.palette.mode,a=s?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)",i=s?"rgba(0, 0, 0, 0.06)":"rgba(255, 255, 255, 0.09)",o=s?"rgba(0, 0, 0, 0.09)":"rgba(255, 255, 255, 0.13)",l=s?"rgba(0, 0, 0, 0.12)":"rgba(255, 255, 255, 0.12)";return(0,r.Z)({position:"relative",backgroundColor:e.vars?e.vars.palette.FilledInput.bg:i,borderTopLeftRadius:(e.vars||e).shape.borderRadius,borderTopRightRadius:(e.vars||e).shape.borderRadius,transition:e.transitions.create("background-color",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),"&:hover":{backgroundColor:e.vars?e.vars.palette.FilledInput.hoverBg:o,"@media (hover: none)":{backgroundColor:e.vars?e.vars.palette.FilledInput.bg:i}},[`&.${B.focused}`]:{backgroundColor:e.vars?e.vars.palette.FilledInput.bg:i},[`&.${B.disabled}`]:{backgroundColor:e.vars?e.vars.palette.FilledInput.disabledBg:l}},!t.disableUnderline&&{"&:after":{borderBottom:`2px solid ${null==(n=(e.vars||e).palette[t.color||"primary"])?void 0:n.main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${B.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${B.error}:after`]:{borderBottomColor:(e.vars||e).palette.error.main,transform:"scaleX(1)"},"&:before":{borderBottom:`1px solid ${e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`:a}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:e.transitions.create("border-bottom-color",{duration:e.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${B.disabled}):before`]:{borderBottom:`1px solid ${(e.vars||e).palette.text.primary}`},[`&.${B.disabled}:before`]:{borderBottomStyle:"dotted"}},t.startAdornment&&{paddingLeft:12},t.endAdornment&&{paddingRight:12},t.multiline&&(0,r.Z)({padding:"25px 12px 8px"},"small"===t.size&&{paddingTop:21,paddingBottom:4},t.hiddenLabel&&{paddingTop:16,paddingBottom:17}))})),U=(0,u.ZP)($,{name:"MuiFilledInput",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>(0,r.Z)({paddingTop:25,paddingRight:12,paddingBottom:8,paddingLeft:12},!e.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===e.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===e.palette.mode?null:"#fff",caretColor:"light"===e.palette.mode?null:"#fff",borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"}},e.vars&&{"&:-webkit-autofill":{borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"},[e.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===t.size&&{paddingTop:21,paddingBottom:4},t.hiddenLabel&&{paddingTop:16,paddingBottom:17},t.multiline&&{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:0},t.startAdornment&&{paddingLeft:0},t.endAdornment&&{paddingRight:0},t.hiddenLabel&&"small"===t.size&&{paddingTop:8,paddingBottom:9}))),Z=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFilledInput"}),{components:a={},componentsProps:i,fullWidth:u=!1,inputComponent:d="input",multiline:h=!1,type:p="text"}=n,f=(0,s.Z)(n,W),m=(0,r.Z)({},n,{fullWidth:u,inputComponent:d,multiline:h,type:p}),g=(e=>{const{classes:t,disableUnderline:n}=e,s={root:["root",!n&&"underline"],input:["input"]},a=(0,o.V_)(s,P,t);return(0,r.Z)({},t,a)})(n),y={root:{ownerState:m},input:{ownerState:m}},b=i?(0,l.vb)(i,y):y;return(0,x.jsx)(_,(0,r.Z)({components:(0,r.Z)({Root:V,Input:U},a),componentsProps:b,fullWidth:u,inputComponent:d,multiline:h,ref:t,type:p},f,{classes:g}))}));Z.muiName="Input";const G=Z;var j;const H=["children","classes","className","label","notched"],q=(0,u.ZP)("fieldset")({textAlign:"left",position:"absolute",bottom:0,right:0,top:-5,left:0,margin:0,padding:"0 8px",pointerEvents:"none",borderRadius:"inherit",borderStyle:"solid",borderWidth:1,overflow:"hidden",minWidth:"0%"}),K=(0,u.ZP)("legend")((({ownerState:e,theme:t})=>(0,r.Z)({float:"unset",overflow:"hidden"},!e.withLabel&&{padding:0,lineHeight:"11px",transition:t.transitions.create("width",{duration:150,easing:t.transitions.easing.easeOut})},e.withLabel&&(0,r.Z)({display:"block",width:"auto",padding:0,height:11,fontSize:"0.75em",visibility:"hidden",maxWidth:.01,transition:t.transitions.create("max-width",{duration:50,easing:t.transitions.easing.easeOut}),whiteSpace:"nowrap","& > span":{paddingLeft:5,paddingRight:5,display:"inline-block",opacity:0,visibility:"visible"}},e.notched&&{maxWidth:"100%",transition:t.transitions.create("max-width",{duration:100,easing:t.transitions.easing.easeOut,delay:50})}))));function X(e){return(0,o.d6)("MuiOutlinedInput",e)}const Y=(0,r.Z)({},S,(0,o.sI)("MuiOutlinedInput",["root","notchedOutline","input"])),J=["components","fullWidth","inputComponent","label","multiline","notched","type"],Q=(0,u.ZP)(T,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiOutlinedInput",slot:"Root",overridesResolver:N})((({theme:e,ownerState:t})=>{const n="light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return(0,r.Z)({position:"relative",borderRadius:(e.vars||e).shape.borderRadius,[`&:hover .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.text.primary},"@media (hover: none)":{[`&:hover .${Y.notchedOutline}`]:{borderColor:e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:n}},[`&.${Y.focused} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette[t.color].main,borderWidth:2},[`&.${Y.error} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.error.main},[`&.${Y.disabled} .${Y.notchedOutline}`]:{borderColor:(e.vars||e).palette.action.disabled}},t.startAdornment&&{paddingLeft:14},t.endAdornment&&{paddingRight:14},t.multiline&&(0,r.Z)({padding:"16.5px 14px"},"small"===t.size&&{padding:"8.5px 14px"}))})),ee=(0,u.ZP)((function(e){const{className:t,label:n,notched:a}=e,i=(0,s.Z)(e,H),o=null!=n&&""!==n,l=(0,r.Z)({},e,{notched:a,withLabel:o});return(0,x.jsx)(q,(0,r.Z)({"aria-hidden":!0,className:t,ownerState:l},i,{children:(0,x.jsx)(K,{ownerState:l,children:o?(0,x.jsx)("span",{children:n}):j||(j=(0,x.jsx)("span",{className:"notranslate",children:"​"}))})}))}),{name:"MuiOutlinedInput",slot:"NotchedOutline",overridesResolver:(e,t)=>t.notchedOutline})((({theme:e})=>{const t="light"===e.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return{borderColor:e.vars?`rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)`:t}})),te=(0,u.ZP)($,{name:"MuiOutlinedInput",slot:"Input",overridesResolver:C})((({theme:e,ownerState:t})=>(0,r.Z)({padding:"16.5px 14px"},!e.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===e.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===e.palette.mode?null:"#fff",caretColor:"light"===e.palette.mode?null:"#fff",borderRadius:"inherit"}},e.vars&&{"&:-webkit-autofill":{borderRadius:"inherit"},[e.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===t.size&&{padding:"8.5px 14px"},t.multiline&&{padding:0},t.startAdornment&&{paddingLeft:0},t.endAdornment&&{paddingRight:0}))),ne=a.forwardRef((function(e,t){var n;const i=(0,c.Z)({props:e,name:"MuiOutlinedInput"}),{components:l={},fullWidth:u=!1,inputComponent:h="input",label:f,multiline:m=!1,notched:g,type:y="text"}=i,b=(0,s.Z)(i,J),v=(e=>{const{classes:t}=e,n=(0,o.V_)({root:["root"],notchedOutline:["notchedOutline"],input:["input"]},X,t);return(0,r.Z)({},t,n)})(i),w=(0,p.Z)(),k=(0,d.Z)({props:i,muiFormControl:w,states:["required"]}),S=(0,r.Z)({},i,{color:k.color||"primary",disabled:k.disabled,error:k.error,focused:k.focused,formControl:w,fullWidth:u,hiddenLabel:k.hiddenLabel,multiline:m,size:k.size,type:y});return(0,x.jsx)(_,(0,r.Z)({components:(0,r.Z)({Root:Q,Input:te},l),renderSuffix:e=>(0,x.jsx)(ee,{ownerState:S,className:v.notchedOutline,label:null!=f&&""!==f&&k.required?n||(n=(0,x.jsxs)(a.Fragment,{children:[f," ","*"]})):f,notched:void 0!==g?g:Boolean(e.startAdornment||e.filled||e.focused)}),fullWidth:u,inputComponent:h,multiline:m,ref:t,type:y},b,{classes:(0,r.Z)({},v,{notchedOutline:null})}))}));ne.muiName="Input";const re=ne;function se(e){return(0,o.d6)("MuiFormLabel",e)}const ae=(0,o.sI)("MuiFormLabel",["root","colorSecondary","focused","disabled","error","filled","required","asterisk"]),ie=["children","className","color","component","disabled","error","filled","focused","required"],oe=(0,u.ZP)("label",{name:"MuiFormLabel",slot:"Root",overridesResolver:({ownerState:e},t)=>(0,r.Z)({},t.root,"secondary"===e.color&&t.colorSecondary,e.filled&&t.filled)})((({theme:e,ownerState:t})=>(0,r.Z)({color:(e.vars||e).palette.text.secondary},e.typography.body1,{lineHeight:"1.4375em",padding:0,position:"relative",[`&.${ae.focused}`]:{color:(e.vars||e).palette[t.color].main},[`&.${ae.disabled}`]:{color:(e.vars||e).palette.text.disabled},[`&.${ae.error}`]:{color:(e.vars||e).palette.error.main}}))),le=(0,u.ZP)("span",{name:"MuiFormLabel",slot:"Asterisk",overridesResolver:(e,t)=>t.asterisk})((({theme:e})=>({[`&.${ae.error}`]:{color:(e.vars||e).palette.error.main}}))),ue=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFormLabel"}),{children:a,className:l,component:u="label"}=n,h=(0,s.Z)(n,ie),m=(0,p.Z)(),g=(0,d.Z)({props:n,muiFormControl:m,states:["color","required","focused","disabled","error","filled"]}),y=(0,r.Z)({},n,{color:g.color||"primary",component:u,disabled:g.disabled,error:g.error,filled:g.filled,focused:g.focused,required:g.required}),b=(e=>{const{classes:t,color:n,focused:r,disabled:s,error:a,filled:i,required:l}=e,u={root:["root",`color${(0,f.Z)(n)}`,s&&"disabled",a&&"error",i&&"filled",r&&"focused",l&&"required"],asterisk:["asterisk",a&&"error"]};return(0,o.V_)(u,se,t)})(y);return(0,x.jsxs)(oe,(0,r.Z)({as:u,ownerState:y,className:(0,i.Z)(b.root,l),ref:t},h,{children:[a,g.required&&(0,x.jsxs)(le,{ownerState:y,"aria-hidden":!0,className:b.asterisk,children:[" ","*"]})]}))}));function ce(e){return(0,o.d6)("MuiInputLabel",e)}(0,o.sI)("MuiInputLabel",["root","focused","disabled","error","required","asterisk","formControl","sizeSmall","shrink","animated","standard","filled","outlined"]);const de=["disableAnimation","margin","shrink","variant"],he=(0,u.ZP)(ue,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiInputLabel",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${ae.asterisk}`]:t.asterisk},t.root,n.formControl&&t.formControl,"small"===n.size&&t.sizeSmall,n.shrink&&t.shrink,!n.disableAnimation&&t.animated,t[n.variant]]}})((({theme:e,ownerState:t})=>(0,r.Z)({display:"block",transformOrigin:"top left",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",maxWidth:"100%"},t.formControl&&{position:"absolute",left:0,top:0,transform:"translate(0, 20px) scale(1)"},"small"===t.size&&{transform:"translate(0, 17px) scale(1)"},t.shrink&&{transform:"translate(0, -1.5px) scale(0.75)",transformOrigin:"top left",maxWidth:"133%"},!t.disableAnimation&&{transition:e.transitions.create(["color","transform","max-width"],{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut})},"filled"===t.variant&&(0,r.Z)({zIndex:1,pointerEvents:"none",transform:"translate(12px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===t.size&&{transform:"translate(12px, 13px) scale(1)"},t.shrink&&(0,r.Z)({userSelect:"none",pointerEvents:"auto",transform:"translate(12px, 7px) scale(0.75)",maxWidth:"calc(133% - 24px)"},"small"===t.size&&{transform:"translate(12px, 4px) scale(0.75)"})),"outlined"===t.variant&&(0,r.Z)({zIndex:1,pointerEvents:"none",transform:"translate(14px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===t.size&&{transform:"translate(14px, 9px) scale(1)"},t.shrink&&{userSelect:"none",pointerEvents:"auto",maxWidth:"calc(133% - 24px)",transform:"translate(14px, -9px) scale(0.75)"})))),pe=a.forwardRef((function(e,t){const n=(0,c.Z)({name:"MuiInputLabel",props:e}),{disableAnimation:a=!1,shrink:i}=n,l=(0,s.Z)(n,de),u=(0,p.Z)();let h=i;void 0===h&&u&&(h=u.filled||u.focused||u.adornedStart);const f=(0,d.Z)({props:n,muiFormControl:u,states:["size","variant","required"]}),m=(0,r.Z)({},n,{disableAnimation:a,formControl:u,shrink:h,size:f.size,variant:f.variant,required:f.required}),g=(e=>{const{classes:t,formControl:n,size:s,shrink:a,disableAnimation:i,variant:l,required:u}=e,c={root:["root",n&&"formControl",!i&&"animated",a&&"shrink","small"===s&&"sizeSmall",l],asterisk:[u&&"asterisk"]},d=(0,o.V_)(c,ce,t);return(0,r.Z)({},t,d)})(m);return(0,x.jsx)(he,(0,r.Z)({"data-shrink":h,ownerState:m,ref:t},l,{classes:g}))}));var fe=n(25738);function me(e){return(0,o.d6)("MuiFormHelperText",e)}const ge=(0,o.sI)("MuiFormHelperText",["root","error","disabled","sizeSmall","sizeMedium","contained","focused","filled","required"]);var ye;const be=["children","className","component","disabled","error","filled","focused","margin","required","variant"],xe=(0,u.ZP)("p",{name:"MuiFormHelperText",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.size&&t[`size${(0,f.Z)(n.size)}`],n.contained&&t.contained,n.filled&&t.filled]}})((({theme:e,ownerState:t})=>(0,r.Z)({color:(e.vars||e).palette.text.secondary},e.typography.caption,{textAlign:"left",marginTop:3,marginRight:0,marginBottom:0,marginLeft:0,[`&.${ge.disabled}`]:{color:(e.vars||e).palette.text.disabled},[`&.${ge.error}`]:{color:(e.vars||e).palette.error.main}},"small"===t.size&&{marginTop:4},t.contained&&{marginLeft:14,marginRight:14}))),ve=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiFormHelperText"}),{children:a,className:l,component:u="p"}=n,h=(0,s.Z)(n,be),m=(0,p.Z)(),g=(0,d.Z)({props:n,muiFormControl:m,states:["variant","size","disabled","error","filled","focused","required"]}),y=(0,r.Z)({},n,{component:u,contained:"filled"===g.variant||"outlined"===g.variant,variant:g.variant,size:g.size,disabled:g.disabled,error:g.error,filled:g.filled,focused:g.focused,required:g.required}),b=(e=>{const{classes:t,contained:n,size:r,disabled:s,error:a,filled:i,focused:l,required:u}=e,c={root:["root",s&&"disabled",a&&"error",r&&`size${(0,f.Z)(r)}`,n&&"contained",l&&"focused",i&&"filled",u&&"required"]};return(0,o.V_)(c,me,t)})(y);return(0,x.jsx)(xe,(0,r.Z)({as:u,ownerState:y,className:(0,i.Z)(b.root,l),ref:t},h,{children:" "===a?ye||(ye=(0,x.jsx)("span",{className:"notranslate",children:"​"})):a}))}));n(65031);var we=n(36847);const ke=a.createContext({});function Se(e){return(0,o.d6)("MuiList",e)}(0,o.sI)("MuiList",["root","padding","dense","subheader"]);const Ie=["children","className","component","dense","disablePadding","subheader"],Ne=(0,u.ZP)("ul",{name:"MuiList",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.disablePadding&&t.padding,n.dense&&t.dense,n.subheader&&t.subheader]}})((({ownerState:e})=>(0,r.Z)({listStyle:"none",margin:0,padding:0,position:"relative"},!e.disablePadding&&{paddingTop:8,paddingBottom:8},e.subheader&&{paddingTop:0}))),Ce=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiList"}),{children:l,className:u,component:d="ul",dense:h=!1,disablePadding:p=!1,subheader:f}=n,m=(0,s.Z)(n,Ie),g=a.useMemo((()=>({dense:h})),[h]),y=(0,r.Z)({},n,{component:d,dense:h,disablePadding:p}),b=(e=>{const{classes:t,disablePadding:n,dense:r,subheader:s}=e,a={root:["root",!n&&"padding",r&&"dense",s&&"subheader"]};return(0,o.V_)(a,Se,t)})(y);return(0,x.jsx)(ke.Provider,{value:g,children:(0,x.jsxs)(Ne,(0,r.Z)({as:d,className:(0,i.Z)(b.root,u),ref:t,ownerState:y},m,{children:[f,l]}))})})),Te=l.Ok,$e=["actions","autoFocus","autoFocusItem","children","className","disabledItemsFocusable","disableListWrap","onKeyDown","variant"];function Ee(e,t,n){return e===t?e.firstChild:t&&t.nextElementSibling?t.nextElementSibling:n?null:e.firstChild}function Re(e,t,n){return e===t?n?e.firstChild:e.lastChild:t&&t.previousElementSibling?t.previousElementSibling:n?null:e.lastChild}function _e(e,t){if(void 0===t)return!0;let n=e.innerText;return void 0===n&&(n=e.textContent),n=n.trim().toLowerCase(),0!==n.length&&(t.repeating?n[0]===t.keys[0]:0===n.indexOf(t.keys.join("")))}function Ae(e,t,n,r,s,a){let i=!1,o=s(e,t,!!t&&n);for(;o;){if(o===e.firstChild){if(i)return!1;i=!0}const t=!r&&(o.disabled||"true"===o.getAttribute("aria-disabled"));if(o.hasAttribute("tabindex")&&_e(o,a)&&!t)return o.focus(),!0;o=s(e,o,n)}return!1}const Fe=a.forwardRef((function(e,t){const{actions:n,autoFocus:i=!1,autoFocusItem:o=!1,children:l,className:u,disabledItemsFocusable:c=!1,disableListWrap:d=!1,onKeyDown:h,variant:p="selectedMenu"}=e,f=(0,s.Z)(e,$e),y=a.useRef(null),b=a.useRef({keys:[],repeating:!0,previousKeyMatched:!0,lastTime:null});(0,g.Z)((()=>{i&&y.current.focus()}),[i]),a.useImperativeHandle(n,(()=>({adjustStyleForScrollbar:(e,t)=>{const n=!y.current.style.width;if(e.clientHeight<y.current.clientHeight&&n){const n=`${Te((0,we.Z)(e))}px`;y.current.style["rtl"===t.direction?"paddingLeft":"paddingRight"]=n,y.current.style.width=`calc(100% + ${n})`}return y.current}})),[]);const v=(0,m.Z)(y,t);let w=-1;a.Children.forEach(l,((e,t)=>{a.isValidElement(e)&&(e.props.disabled||("selectedMenu"===p&&e.props.selected||-1===w)&&(w=t))}));const k=a.Children.map(l,((e,t)=>{if(t===w){const t={};return o&&(t.autoFocus=!0),void 0===e.props.tabIndex&&"selectedMenu"===p&&(t.tabIndex=0),a.cloneElement(e,t)}return e}));return(0,x.jsx)(Ce,(0,r.Z)({role:"menu",ref:v,className:u,onKeyDown:e=>{const t=y.current,n=e.key,r=(0,we.Z)(t).activeElement;if("ArrowDown"===n)e.preventDefault(),Ae(t,r,d,c,Ee);else if("ArrowUp"===n)e.preventDefault(),Ae(t,r,d,c,Re);else if("Home"===n)e.preventDefault(),Ae(t,null,d,c,Ee);else if("End"===n)e.preventDefault(),Ae(t,null,d,c,Re);else if(1===n.length){const s=b.current,a=n.toLowerCase(),i=performance.now();s.keys.length>0&&(i-s.lastTime>500?(s.keys=[],s.repeating=!0,s.previousKeyMatched=!0):s.repeating&&a!==s.keys[0]&&(s.repeating=!1)),s.lastTime=i,s.keys.push(a);const o=r&&!s.repeating&&_e(r,s);s.previousKeyMatched&&(o||Ae(t,r,!1,c,Ee,s))?e.preventDefault():s.previousKeyMatched=!1}h&&h(e)},tabIndex:i?0:-1},f,{children:k}))}));var Oe=n(14446),De=n(93874),Me=n(8751),Le=n(20499),ze=n(91348);const Pe=e=>e.scrollTop;function Be(e,t){var n,r;const{timeout:s,easing:a,style:i={}}=e;return{duration:null!=(n=i.transitionDuration)?n:"number"==typeof s?s:s[t.mode]||0,easing:null!=(r=i.transitionTimingFunction)?r:"object"==typeof a?a[t.mode]:a,delay:i.transitionDelay}}const We=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];function Ve(e){return`scale(${e}, ${e**2})`}const Ue={entering:{opacity:1,transform:Ve(1)},entered:{opacity:1,transform:"none"}},Ze="undefined"!=typeof navigator&&/^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent)&&/(os |version\/)15(.|_)4/i.test(navigator.userAgent),Ge=a.forwardRef((function(e,t){const{addEndListener:n,appear:i=!0,children:o,easing:l,in:u,onEnter:c,onEntered:d,onEntering:h,onExit:p,onExited:f,onExiting:g,style:y,timeout:b="auto",TransitionComponent:v=Le.uT}=e,w=(0,s.Z)(e,We),k=a.useRef(),S=a.useRef(),I=(0,ze.Z)(),N=a.useRef(null),C=(0,m.Z)(o.ref,t),T=(0,m.Z)(N,C),$=e=>t=>{if(e){const n=N.current;void 0===t?e(n):e(n,t)}},E=$(h),R=$(((e,t)=>{Pe(e);const{duration:n,delay:r,easing:s}=Be({style:y,timeout:b,easing:l},{mode:"enter"});let a;"auto"===b?(a=I.transitions.getAutoHeightDuration(e.clientHeight),S.current=a):a=n,e.style.transition=[I.transitions.create("opacity",{duration:a,delay:r}),I.transitions.create("transform",{duration:Ze?a:.666*a,delay:r,easing:s})].join(","),c&&c(e,t)})),_=$(d),A=$(g),F=$((e=>{const{duration:t,delay:n,easing:r}=Be({style:y,timeout:b,easing:l},{mode:"exit"});let s;"auto"===b?(s=I.transitions.getAutoHeightDuration(e.clientHeight),S.current=s):s=t,e.style.transition=[I.transitions.create("opacity",{duration:s,delay:n}),I.transitions.create("transform",{duration:Ze?s:.666*s,delay:Ze?n:n||.333*s,easing:r})].join(","),e.style.opacity=0,e.style.transform=Ve(.75),p&&p(e)})),O=$(f);return a.useEffect((()=>()=>{clearTimeout(k.current)}),[]),(0,x.jsx)(v,(0,r.Z)({appear:i,in:u,nodeRef:N,onEnter:R,onEntered:_,onEntering:E,onExit:F,onExited:O,onExiting:A,addEndListener:e=>{"auto"===b&&(k.current=setTimeout(e,S.current||0)),n&&n(N.current,e)},timeout:"auto"===b?null:b},w,{children:(e,t)=>a.cloneElement(o,(0,r.Z)({style:(0,r.Z)({opacity:0,transform:Ve(.75),visibility:"exited"!==e||u?void 0:"hidden"},Ue[e],y,o.props.style),ref:T},t))}))}));Ge.muiSupportAuto=!0;const je=Ge;var He=n(10074);const qe=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"],Ke={entering:{opacity:1},entered:{opacity:1}},Xe=a.forwardRef((function(e,t){const n=(0,ze.Z)(),i={enter:n.transitions.duration.enteringScreen,exit:n.transitions.duration.leavingScreen},{addEndListener:o,appear:l=!0,children:u,easing:c,in:d,onEnter:h,onEntered:p,onEntering:f,onExit:g,onExited:y,onExiting:b,style:v,timeout:w=i,TransitionComponent:k=Le.uT}=e,S=(0,s.Z)(e,qe),I=a.useRef(null),N=(0,m.Z)(u.ref,t),C=(0,m.Z)(I,N),T=e=>t=>{if(e){const n=I.current;void 0===t?e(n):e(n,t)}},$=T(f),E=T(((e,t)=>{Pe(e);const r=Be({style:v,timeout:w,easing:c},{mode:"enter"});e.style.webkitTransition=n.transitions.create("opacity",r),e.style.transition=n.transitions.create("opacity",r),h&&h(e,t)})),R=T(p),_=T(b),A=T((e=>{const t=Be({style:v,timeout:w,easing:c},{mode:"exit"});e.style.webkitTransition=n.transitions.create("opacity",t),e.style.transition=n.transitions.create("opacity",t),g&&g(e)})),F=T(y);return(0,x.jsx)(k,(0,r.Z)({appear:l,in:d,nodeRef:I,onEnter:E,onEntered:R,onEntering:$,onExit:A,onExited:F,onExiting:_,addEndListener:e=>{o&&o(I.current,e)},timeout:w},S,{children:(e,t)=>a.cloneElement(u,(0,r.Z)({style:(0,r.Z)({opacity:0,visibility:"exited"!==e||d?void 0:"hidden"},Ke[e],v,u.props.style),ref:C},t))}))}));function Ye(e){return(0,o.d6)("MuiBackdrop",e)}(0,o.sI)("MuiBackdrop",["root","invisible"]);const Je=["children","component","components","componentsProps","className","invisible","open","transitionDuration","TransitionComponent"],Qe=(0,u.ZP)("div",{name:"MuiBackdrop",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.invisible&&t.invisible]}})((({ownerState:e})=>(0,r.Z)({position:"fixed",display:"flex",alignItems:"center",justifyContent:"center",right:0,bottom:0,top:0,left:0,backgroundColor:"rgba(0, 0, 0, 0.5)",WebkitTapHighlightColor:"transparent"},e.invisible&&{backgroundColor:"transparent"}))),et=a.forwardRef((function(e,t){var n,a;const l=(0,c.Z)({props:e,name:"MuiBackdrop"}),{children:u,component:d="div",components:h={},componentsProps:p={},className:f,invisible:m=!1,open:g,transitionDuration:y,TransitionComponent:b=Xe}=l,v=(0,s.Z)(l,Je),w=(0,r.Z)({},l,{component:d,invisible:m}),k=(e=>{const{classes:t,invisible:n}=e,r={root:["root",n&&"invisible"]};return(0,o.V_)(r,Ye,t)})(w);return(0,x.jsx)(b,(0,r.Z)({in:g,timeout:y},v,{children:(0,x.jsx)(Qe,{"aria-hidden":!0,as:null!=(n=h.Root)?n:d,className:(0,i.Z)(k.root,f),ownerState:(0,r.Z)({},w,null==(a=p.root)?void 0:a.ownerState),classes:k,ref:t,children:u})}))})),tt=["BackdropComponent","BackdropProps","closeAfterTransition","children","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","theme"],nt=(0,u.ZP)("div",{name:"MuiModal",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.open&&n.exited&&t.hidden]}})((({theme:e,ownerState:t})=>(0,r.Z)({position:"fixed",zIndex:(e.vars||e).zIndex.modal,right:0,bottom:0,top:0,left:0},!t.open&&t.exited&&{visibility:"hidden"}))),rt=(0,u.ZP)(et,{name:"MuiModal",slot:"Backdrop",overridesResolver:(e,t)=>t.backdrop})({zIndex:-1}),st=a.forwardRef((function(e,t){var n,i;const l=(0,c.Z)({name:"MuiModal",props:e}),{BackdropComponent:u=rt,BackdropProps:d,closeAfterTransition:h=!1,children:p,component:f,components:m={},componentsProps:g={},disableAutoFocus:y=!1,disableEnforceFocus:b=!1,disableEscapeKeyDown:v=!1,disablePortal:w=!1,disableRestoreFocus:k=!1,disableScrollLock:S=!1,hideBackdrop:I=!1,keepMounted:N=!1,theme:C}=l,T=(0,s.Z)(l,tt),[$,E]=a.useState(!0),R={closeAfterTransition:h,disableAutoFocus:y,disableEnforceFocus:b,disableEscapeKeyDown:v,disablePortal:w,disableRestoreFocus:k,disableScrollLock:S,hideBackdrop:I,keepMounted:N},_=(e=>e.classes)((0,r.Z)({},l,R,{exited:$})),A=null!=(n=null!=(i=m.Root)?i:f)?n:nt;return(0,x.jsx)(He.ZP,(0,r.Z)({components:(0,r.Z)({Root:A,Backdrop:u},m),componentsProps:{root:(0,r.Z)({},g.root,!(0,o.Xd)(A)&&{as:f,theme:C}),backdrop:(0,r.Z)({},d,g.backdrop)},onTransitionEnter:()=>E(!1),onTransitionExited:()=>E(!0),ref:t},T,{classes:_},R,{children:p}))}));function at(e){return(0,o.d6)("MuiPopover",e)}(0,o.sI)("MuiPopover",["root","paper"]);const it=["onEntering"],ot=["action","anchorEl","anchorOrigin","anchorPosition","anchorReference","children","className","container","elevation","marginThreshold","open","PaperProps","transformOrigin","TransitionComponent","transitionDuration","TransitionProps"];function lt(e,t){let n=0;return"number"==typeof t?n=t:"center"===t?n=e.height/2:"bottom"===t&&(n=e.height),n}function ut(e,t){let n=0;return"number"==typeof t?n=t:"center"===t?n=e.width/2:"right"===t&&(n=e.width),n}function ct(e){return[e.horizontal,e.vertical].map((e=>"number"==typeof e?`${e}px`:e)).join(" ")}function dt(e){return"function"==typeof e?e():e}const ht=(0,u.ZP)(st,{name:"MuiPopover",slot:"Root",overridesResolver:(e,t)=>t.root})({}),pt=(0,u.ZP)(Oe.ZP,{name:"MuiPopover",slot:"Paper",overridesResolver:(e,t)=>t.paper})({position:"absolute",overflowY:"auto",overflowX:"hidden",minWidth:16,minHeight:16,maxWidth:"calc(100% - 32px)",maxHeight:"calc(100% - 32px)",outline:0}),ft=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiPopover"}),{action:l,anchorEl:u,anchorOrigin:d={vertical:"top",horizontal:"left"},anchorPosition:h,anchorReference:p="anchorEl",children:f,className:g,container:y,elevation:b=8,marginThreshold:v=16,open:w,PaperProps:k={},transformOrigin:S={vertical:"top",horizontal:"left"},TransitionComponent:I=je,transitionDuration:N="auto",TransitionProps:{onEntering:C}={}}=n,T=(0,s.Z)(n.TransitionProps,it),$=(0,s.Z)(n,ot),E=a.useRef(),R=(0,m.Z)(E,k.ref),_=(0,r.Z)({},n,{anchorOrigin:d,anchorReference:p,elevation:b,marginThreshold:v,PaperProps:k,transformOrigin:S,TransitionComponent:I,transitionDuration:N,TransitionProps:T}),A=(e=>{const{classes:t}=e;return(0,o.V_)({root:["root"],paper:["paper"]},at,t)})(_),F=a.useCallback((()=>{if("anchorPosition"===p)return h;const e=dt(u),t=(e&&1===e.nodeType?e:(0,we.Z)(E.current).body).getBoundingClientRect();return{top:t.top+lt(t,d.vertical),left:t.left+ut(t,d.horizontal)}}),[u,d.horizontal,d.vertical,h,p]),O=a.useCallback((e=>({vertical:lt(e,S.vertical),horizontal:ut(e,S.horizontal)})),[S.horizontal,S.vertical]),D=a.useCallback((e=>{const t={width:e.offsetWidth,height:e.offsetHeight},n=O(t);if("none"===p)return{top:null,left:null,transformOrigin:ct(n)};const r=F();let s=r.top-n.vertical,a=r.left-n.horizontal;const i=s+t.height,o=a+t.width,l=(0,Me.Z)(dt(u)),c=l.innerHeight-v,d=l.innerWidth-v;if(s<v){const e=s-v;s-=e,n.vertical+=e}else if(i>c){const e=i-c;s-=e,n.vertical+=e}if(a<v){const e=a-v;a-=e,n.horizontal+=e}else if(o>d){const e=o-d;a-=e,n.horizontal+=e}return{top:`${Math.round(s)}px`,left:`${Math.round(a)}px`,transformOrigin:ct(n)}}),[u,p,F,O,v]),M=a.useCallback((()=>{const e=E.current;if(!e)return;const t=D(e);null!==t.top&&(e.style.top=t.top),null!==t.left&&(e.style.left=t.left),e.style.transformOrigin=t.transformOrigin}),[D]);a.useEffect((()=>{w&&M()})),a.useImperativeHandle(l,(()=>w?{updatePosition:()=>{M()}}:null),[w,M]),a.useEffect((()=>{if(!w)return;const e=(0,De.Z)((()=>{M()})),t=(0,Me.Z)(u);return t.addEventListener("resize",e),()=>{e.clear(),t.removeEventListener("resize",e)}}),[u,w,M]);let L=N;"auto"!==N||I.muiSupportAuto||(L=void 0);const z=y||(u?(0,we.Z)(dt(u)).body:void 0);return(0,x.jsx)(ht,(0,r.Z)({BackdropProps:{invisible:!0},className:(0,i.Z)(A.root,g),container:z,open:w,ref:t,ownerState:_},$,{children:(0,x.jsx)(I,(0,r.Z)({appear:!0,in:w,onEntering:(e,t)=>{C&&C(e,t),M()},timeout:L},T,{children:(0,x.jsx)(pt,(0,r.Z)({elevation:b},k,{ref:R,className:(0,i.Z)(A.paper,k.className),children:f}))}))}))}));function mt(e){return(0,o.d6)("MuiMenu",e)}(0,o.sI)("MuiMenu",["root","paper","list"]);const gt=["onEntering"],yt=["autoFocus","children","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant"],bt={vertical:"top",horizontal:"right"},xt={vertical:"top",horizontal:"left"},vt=(0,u.ZP)(ft,{shouldForwardProp:e=>(0,u.FO)(e)||"classes"===e,name:"MuiMenu",slot:"Root",overridesResolver:(e,t)=>t.root})({}),wt=(0,u.ZP)(Oe.ZP,{name:"MuiMenu",slot:"Paper",overridesResolver:(e,t)=>t.paper})({maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"}),kt=(0,u.ZP)(Fe,{name:"MuiMenu",slot:"List",overridesResolver:(e,t)=>t.list})({outline:0}),St=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiMenu"}),{autoFocus:l=!0,children:u,disableAutoFocusItem:d=!1,MenuListProps:h={},onClose:p,open:f,PaperProps:m={},PopoverClasses:g,transitionDuration:y="auto",TransitionProps:{onEntering:b}={},variant:v="selectedMenu"}=n,w=(0,s.Z)(n.TransitionProps,gt),k=(0,s.Z)(n,yt),S=(0,ze.Z)(),I="rtl"===S.direction,N=(0,r.Z)({},n,{autoFocus:l,disableAutoFocusItem:d,MenuListProps:h,onEntering:b,PaperProps:m,transitionDuration:y,TransitionProps:w,variant:v}),C=(e=>{const{classes:t}=e;return(0,o.V_)({root:["root"],paper:["paper"],list:["list"]},mt,t)})(N),T=l&&!d&&f,$=a.useRef(null);let E=-1;return a.Children.map(u,((e,t)=>{a.isValidElement(e)&&(e.props.disabled||("selectedMenu"===v&&e.props.selected||-1===E)&&(E=t))})),(0,x.jsx)(vt,(0,r.Z)({classes:g,onClose:p,anchorOrigin:{vertical:"bottom",horizontal:I?"right":"left"},transformOrigin:I?bt:xt,PaperProps:(0,r.Z)({component:wt},m,{classes:(0,r.Z)({},m.classes,{root:C.paper})}),className:C.root,open:f,ref:t,transitionDuration:y,TransitionProps:(0,r.Z)({onEntering:(e,t)=>{$.current&&$.current.adjustStyleForScrollbar(e,S),b&&b(e,t)}},w),ownerState:N},k,{children:(0,x.jsx)(kt,(0,r.Z)({onKeyDown:e=>{"Tab"===e.key&&(e.preventDefault(),p&&p(e,"tabKeyDown"))},actions:$,autoFocus:l&&(-1===E||d),autoFocusItem:T,variant:v},h,{className:(0,i.Z)(C.list,h.className),children:u}))}))}));function It(e){return(0,o.d6)("MuiNativeSelect",e)}const Nt=(0,o.sI)("MuiNativeSelect",["root","select","multiple","filled","outlined","standard","disabled","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput"]),Ct=["className","disabled","IconComponent","inputRef","variant"],Tt=({ownerState:e,theme:t})=>(0,r.Z)({MozAppearance:"none",WebkitAppearance:"none",userSelect:"none",borderRadius:0,cursor:"pointer","&:focus":{backgroundColor:"light"===t.palette.mode?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",borderRadius:0},"&::-ms-expand":{display:"none"},[`&.${Nt.disabled}`]:{cursor:"default"},"&[multiple]":{height:"auto"},"&:not([multiple]) option, &:not([multiple]) optgroup":{backgroundColor:t.palette.background.paper},"&&&":{paddingRight:24,minWidth:16}},"filled"===e.variant&&{"&&&":{paddingRight:32}},"outlined"===e.variant&&{borderRadius:t.shape.borderRadius,"&:focus":{borderRadius:t.shape.borderRadius},"&&&":{paddingRight:32}}),$t=(0,u.ZP)("select",{name:"MuiNativeSelect",slot:"Select",shouldForwardProp:u.FO,overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.select,t[n.variant],{[`&.${Nt.multiple}`]:t.multiple}]}})(Tt),Et=({ownerState:e,theme:t})=>(0,r.Z)({position:"absolute",right:0,top:"calc(50% - .5em)",pointerEvents:"none",color:t.palette.action.active,[`&.${Nt.disabled}`]:{color:t.palette.action.disabled}},e.open&&{transform:"rotate(180deg)"},"filled"===e.variant&&{right:7},"outlined"===e.variant&&{right:7}),Rt=(0,u.ZP)("svg",{name:"MuiNativeSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,f.Z)(n.variant)}`],n.open&&t.iconOpen]}})(Et),_t=a.forwardRef((function(e,t){const{className:n,disabled:l,IconComponent:u,inputRef:c,variant:d="standard"}=e,h=(0,s.Z)(e,Ct),p=(0,r.Z)({},e,{disabled:l,variant:d}),m=(e=>{const{classes:t,variant:n,disabled:r,multiple:s,open:a}=e,i={select:["select",n,r&&"disabled",s&&"multiple"],icon:["icon",`icon${(0,f.Z)(n)}`,a&&"iconOpen",r&&"disabled"]};return(0,o.V_)(i,It,t)})(p);return(0,x.jsxs)(a.Fragment,{children:[(0,x.jsx)($t,(0,r.Z)({ownerState:p,className:(0,i.Z)(m.select,n),disabled:l,ref:c||t},h)),e.multiple?null:(0,x.jsx)(Rt,{as:u,ownerState:p,className:m.icon})]})}));var At=n(11133);function Ft(e){return(0,o.d6)("MuiSelect",e)}const Ot=(0,o.sI)("MuiSelect",["select","multiple","filled","outlined","standard","disabled","focused","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput"]);var Dt;const Mt=["aria-describedby","aria-label","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"],Lt=(0,u.ZP)("div",{name:"MuiSelect",slot:"Select",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`&.${Ot.select}`]:t.select},{[`&.${Ot.select}`]:t[n.variant]},{[`&.${Ot.multiple}`]:t.multiple}]}})(Tt,{[`&.${Ot.select}`]:{height:"auto",minHeight:"1.4375em",textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden"}}),zt=(0,u.ZP)("svg",{name:"MuiSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,f.Z)(n.variant)}`],n.open&&t.iconOpen]}})(Et),Pt=(0,u.ZP)("input",{shouldForwardProp:e=>(0,u.Dz)(e)&&"classes"!==e,name:"MuiSelect",slot:"NativeInput",overridesResolver:(e,t)=>t.nativeInput})({bottom:0,left:0,position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"});function Bt(e,t){return"object"==typeof t&&null!==t?e===t:String(e)===String(t)}function Wt(e){return null==e||"string"==typeof e&&!e.trim()}const Vt=a.forwardRef((function(e,t){const{"aria-describedby":n,"aria-label":u,autoFocus:c,autoWidth:d,children:h,className:p,defaultOpen:g,defaultValue:y,disabled:b,displayEmpty:v,IconComponent:k,inputRef:S,labelId:I,MenuProps:N={},multiple:C,name:T,onBlur:$,onChange:E,onClose:R,onFocus:_,onOpen:A,open:F,readOnly:O,renderValue:D,SelectDisplayProps:M={},tabIndex:L,value:z,variant:P="standard"}=e,B=(0,s.Z)(e,Mt),[W,V]=(0,At.Z)({controlled:z,default:y,name:"Select"}),[U,Z]=(0,At.Z)({controlled:F,default:g,name:"Select"}),G=a.useRef(null),j=a.useRef(null),[H,q]=a.useState(null),{current:K}=a.useRef(null!=F),[X,Y]=a.useState(),J=(0,m.Z)(t,S),Q=a.useCallback((e=>{j.current=e,e&&q(e)}),[]);a.useImperativeHandle(J,(()=>({focus:()=>{j.current.focus()},node:G.current,value:W})),[W]),a.useEffect((()=>{g&&U&&H&&!K&&(Y(d?null:H.clientWidth),j.current.focus())}),[H,d]),a.useEffect((()=>{c&&j.current.focus()}),[c]),a.useEffect((()=>{if(!I)return;const e=(0,we.Z)(j.current).getElementById(I);if(e){const t=()=>{getSelection().isCollapsed&&j.current.focus()};return e.addEventListener("click",t),()=>{e.removeEventListener("click",t)}}}),[I]);const ee=(e,t)=>{e?A&&A(t):R&&R(t),K||(Y(d?null:H.clientWidth),Z(e))},te=a.Children.toArray(h),ne=e=>t=>{let n;if(t.currentTarget.hasAttribute("tabindex")){if(C){n=Array.isArray(W)?W.slice():[];const t=W.indexOf(e.props.value);-1===t?n.push(e.props.value):n.splice(t,1)}else n=e.props.value;if(e.props.onClick&&e.props.onClick(t),W!==n&&(V(n),E)){const r=t.nativeEvent||t,s=new r.constructor(r.type,r);Object.defineProperty(s,"target",{writable:!0,value:{value:n,name:T}}),E(s,e)}C||ee(!1,t)}},re=null!==H&&U;let se,ae;delete B["aria-invalid"];const ie=[];let oe=!1,le=!1;((0,w.vd)({value:W})||v)&&(D?se=D(W):oe=!0);const ue=te.map(((e,t,n)=>{if(!a.isValidElement(e))return null;let r;if(C){if(!Array.isArray(W))throw new Error((0,l.fe)(2));r=W.some((t=>Bt(t,e.props.value))),r&&oe&&ie.push(e.props.children)}else r=Bt(W,e.props.value),r&&oe&&(ae=e.props.children);if(r&&(le=!0),void 0===e.props.value)return a.cloneElement(e,{"aria-readonly":!0,role:"option"});return a.cloneElement(e,{"aria-selected":r?"true":"false",onClick:ne(e),onKeyUp:t=>{" "===t.key&&t.preventDefault(),e.props.onKeyUp&&e.props.onKeyUp(t)},role:"option",selected:void 0===n[0].props.value||!0===n[0].props.disabled?(()=>{if(W)return r;const t=n.find((e=>void 0!==e.props.value&&!0!==e.props.disabled));return e===t||r})():r,value:void 0,"data-value":e.props.value})}));oe&&(se=C?0===ie.length?null:ie.reduce(((e,t,n)=>(e.push(t),n<ie.length-1&&e.push(", "),e)),[]):ae);let ce,de=X;!d&&K&&H&&(de=H.clientWidth),ce=void 0!==L?L:b?null:0;const he=M.id||(T?`mui-component-select-${T}`:void 0),pe=(0,r.Z)({},e,{variant:P,value:W,open:re}),fe=(e=>{const{classes:t,variant:n,disabled:r,multiple:s,open:a}=e,i={select:["select",n,r&&"disabled",s&&"multiple"],icon:["icon",`icon${(0,f.Z)(n)}`,a&&"iconOpen",r&&"disabled"],nativeInput:["nativeInput"]};return(0,o.V_)(i,Ft,t)})(pe);return(0,x.jsxs)(a.Fragment,{children:[(0,x.jsx)(Lt,(0,r.Z)({ref:Q,tabIndex:ce,role:"button","aria-disabled":b?"true":void 0,"aria-expanded":re?"true":"false","aria-haspopup":"listbox","aria-label":u,"aria-labelledby":[I,he].filter(Boolean).join(" ")||void 0,"aria-describedby":n,onKeyDown:e=>{if(!O){-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),ee(!0,e))}},onMouseDown:b||O?null:e=>{0===e.button&&(e.preventDefault(),j.current.focus(),ee(!0,e))},onBlur:e=>{!re&&$&&(Object.defineProperty(e,"target",{writable:!0,value:{value:W,name:T}}),$(e))},onFocus:_},M,{ownerState:pe,className:(0,i.Z)(fe.select,p,M.className),id:he,children:Wt(se)?Dt||(Dt=(0,x.jsx)("span",{className:"notranslate",children:"​"})):se})),(0,x.jsx)(Pt,(0,r.Z)({value:Array.isArray(W)?W.join(","):W,name:T,ref:G,"aria-hidden":!0,onChange:e=>{const t=te.map((e=>e.props.value)).indexOf(e.target.value);if(-1===t)return;const n=te[t];V(n.props.value),E&&E(e,n)},tabIndex:-1,disabled:b,className:fe.nativeInput,autoFocus:c,ownerState:pe},B)),(0,x.jsx)(zt,{as:k,className:fe.icon,ownerState:pe}),(0,x.jsx)(St,(0,r.Z)({id:`menu-${T||""}`,anchorEl:H,open:re,onClose:e=>{ee(!1,e)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},N,{MenuListProps:(0,r.Z)({"aria-labelledby":I,role:"listbox",disableListWrap:!0},N.MenuListProps),PaperProps:(0,r.Z)({},N.PaperProps,{style:(0,r.Z)({minWidth:de},null!=N.PaperProps?N.PaperProps.style:null)}),children:ue}))]})}));const Ut=(0,n(57257).Z)((0,x.jsx)("path",{d:"M7 10l5 5 5-5z"}),"ArrowDropDown");var Zt,Gt;const jt=["autoWidth","children","classes","className","defaultOpen","displayEmpty","IconComponent","id","input","inputProps","label","labelId","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant"],Ht={name:"MuiSelect",overridesResolver:(e,t)=>t.root,shouldForwardProp:e=>(0,u.FO)(e)&&"variant"!==e,slot:"Root"},qt=(0,u.ZP)(z,Ht)(""),Kt=(0,u.ZP)(re,Ht)(""),Xt=(0,u.ZP)(G,Ht)(""),Yt=a.forwardRef((function(e,t){const n=(0,c.Z)({name:"MuiSelect",props:e}),{autoWidth:o=!1,children:u,classes:h={},className:f,defaultOpen:g=!1,displayEmpty:y=!1,IconComponent:b=Ut,id:v,input:w,inputProps:k,label:S,labelId:I,MenuProps:N,multiple:C=!1,native:T=!1,onClose:$,onOpen:E,open:R,renderValue:_,SelectDisplayProps:A,variant:F="outlined"}=n,O=(0,s.Z)(n,jt),D=T?_t:Vt,M=(0,p.Z)(),L=(0,d.Z)({props:n,muiFormControl:M,states:["variant"]}).variant||F,z=w||{standard:Zt||(Zt=(0,x.jsx)(qt,{})),outlined:(0,x.jsx)(Kt,{label:S}),filled:Gt||(Gt=(0,x.jsx)(Xt,{}))}[L],P=(e=>{const{classes:t}=e;return t})((0,r.Z)({},n,{variant:L,classes:h})),B=(0,m.Z)(t,z.ref);return a.cloneElement(z,(0,r.Z)({inputComponent:D,inputProps:(0,r.Z)({children:u,IconComponent:b,variant:L,type:void 0,multiple:C},T?{id:v}:{autoWidth:o,defaultOpen:g,displayEmpty:y,labelId:I,MenuProps:N,onClose:$,onOpen:E,open:R,renderValue:_,SelectDisplayProps:(0,r.Z)({id:v},A)},k,{classes:k?(0,l.vb)(P,k.classes):P},w?w.props.inputProps:{})},C&&T&&"outlined"===L?{notched:!0}:{},{ref:B,className:(0,i.Z)(z.props.className,f),variant:L},O))}));Yt.muiName="Select";const Jt=Yt;function Qt(e){return(0,o.d6)("MuiTextField",e)}(0,o.sI)("MuiTextField",["root"]);const en=["autoComplete","autoFocus","children","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","variant"],tn={standard:z,filled:G,outlined:re},nn=(0,u.ZP)(fe.ZP,{name:"MuiTextField",slot:"Root",overridesResolver:(e,t)=>t.root})({}),rn=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiTextField"}),{autoComplete:a,autoFocus:u=!1,children:d,className:h,color:p="primary",defaultValue:f,disabled:m=!1,error:g=!1,FormHelperTextProps:y,fullWidth:b=!1,helperText:v,id:w,InputLabelProps:k,inputProps:S,InputProps:I,inputRef:N,label:C,maxRows:T,minRows:$,multiline:E=!1,name:R,onBlur:_,onChange:A,onFocus:F,placeholder:O,required:D=!1,rows:M,select:L=!1,SelectProps:z,type:P,value:B,variant:W="outlined"}=n,V=(0,s.Z)(n,en),U=(0,r.Z)({},n,{autoFocus:u,color:p,disabled:m,error:g,fullWidth:b,multiline:E,required:D,select:L,variant:W}),Z=(e=>{const{classes:t}=e;return(0,o.V_)({root:["root"]},Qt,t)})(U);const G={};"outlined"===W&&(k&&void 0!==k.shrink&&(G.notched=k.shrink),G.label=C),L&&(z&&z.native||(G.id=void 0),G["aria-describedby"]=void 0);const j=(0,l.ii)(w),H=v&&j?`${j}-helper-text`:void 0,q=C&&j?`${j}-label`:void 0,K=tn[W],X=(0,x.jsx)(K,(0,r.Z)({"aria-describedby":H,autoComplete:a,autoFocus:u,defaultValue:f,fullWidth:b,multiline:E,name:R,rows:M,maxRows:T,minRows:$,type:P,value:B,id:j,inputRef:N,onBlur:_,onChange:A,onFocus:F,placeholder:O,inputProps:S},G,I));return(0,x.jsxs)(nn,(0,r.Z)({className:(0,i.Z)(Z.root,h),disabled:m,error:g,fullWidth:b,ref:t,required:D,color:p,variant:W,ownerState:U},V,{children:[null!=C&&""!==C&&(0,x.jsx)(pe,(0,r.Z)({htmlFor:j,id:q},k,{children:C})),L?(0,x.jsx)(Jt,(0,r.Z)({"aria-describedby":H,id:j,labelId:q,value:B,input:X},z,{children:d})):X,v&&(0,x.jsx)(ve,(0,r.Z)({id:H},y,{children:v}))]}))}))},47706:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>b});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=n(42205),l=n(4647),u=n(10543),c=n(66954),d=n(50349);function h(e){return(0,l.d6)("MuiTypography",e)}(0,l.sI)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var p=n(2574);const f=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],m=(0,u.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.variant&&t[n.variant],"inherit"!==n.align&&t[`align${(0,d.Z)(n.align)}`],n.noWrap&&t.noWrap,n.gutterBottom&&t.gutterBottom,n.paragraph&&t.paragraph]}})((({theme:e,ownerState:t})=>(0,s.Z)({margin:0},t.variant&&e.typography[t.variant],"inherit"!==t.align&&{textAlign:t.align},t.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.gutterBottom&&{marginBottom:"0.35em"},t.paragraph&&{marginBottom:16}))),g={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},y={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},b=a.forwardRef((function(e,t){const n=(0,c.Z)({props:e,name:"MuiTypography"}),a=(e=>y[e]||e)(n.color),u=(0,o.mX)((0,s.Z)({},n,{color:a})),{align:b="inherit",className:x,component:v,gutterBottom:w=!1,noWrap:k=!1,paragraph:S=!1,variant:I="body1",variantMapping:N=g}=u,C=(0,r.Z)(u,f),T=(0,s.Z)({},u,{align:b,color:a,className:x,component:v,gutterBottom:w,noWrap:k,paragraph:S,variant:I,variantMapping:N}),$=v||(S?"p":N[I]||g[I])||"span",E=(e=>{const{align:t,gutterBottom:n,noWrap:r,paragraph:s,variant:a,classes:i}=e,o={root:["root",a,"inherit"!==e.align&&`align${(0,d.Z)(t)}`,n&&"gutterBottom",r&&"noWrap",s&&"paragraph"]};return(0,l.V_)(o,h,i)})(T);return(0,p.jsx)(m,(0,s.Z)({as:$,ref:t,ownerState:T,className:(0,i.Z)(E.root,x)},C))}))},45195:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var r=n(8339),s=n(76805),a=n(43001),i=(n(3827),n(11358)),o=(n(80807),n(4647)),l=n(50349),u=n(10543),c=n(11133),d=n(93304),h=n(36600);function p(e){return(0,o.d6)("PrivateSwitchBase",e)}(0,o.sI)("PrivateSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"]);var f=n(2574);const m=["autoFocus","checked","checkedIcon","className","defaultChecked","disabled","disableFocusRipple","edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"],g=(0,u.ZP)(h.ZP)((({ownerState:e})=>(0,s.Z)({padding:9,borderRadius:"50%"},"start"===e.edge&&{marginLeft:"small"===e.size?-3:-12},"end"===e.edge&&{marginRight:"small"===e.size?-3:-12}))),y=(0,u.ZP)("input")({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),b=a.forwardRef((function(e,t){const{autoFocus:n,checked:a,checkedIcon:u,className:h,defaultChecked:b,disabled:x,disableFocusRipple:v=!1,edge:w=!1,icon:k,id:S,inputProps:I,inputRef:N,name:C,onBlur:T,onChange:$,onFocus:E,readOnly:R,required:_,tabIndex:A,type:F,value:O}=e,D=(0,r.Z)(e,m),[M,L]=(0,c.Z)({controlled:a,default:Boolean(b),name:"SwitchBase",state:"checked"}),z=(0,d.Z)();let P=x;z&&void 0===P&&(P=z.disabled);const B="checkbox"===F||"radio"===F,W=(0,s.Z)({},e,{checked:M,disabled:P,disableFocusRipple:v,edge:w}),V=(e=>{const{classes:t,checked:n,disabled:r,edge:s}=e,a={root:["root",n&&"checked",r&&"disabled",s&&`edge${(0,l.Z)(s)}`],input:["input"]};return(0,o.V_)(a,p,t)})(W);return(0,f.jsxs)(g,(0,s.Z)({component:"span",className:(0,i.Z)(V.root,h),centerRipple:!0,focusRipple:!v,disabled:P,tabIndex:null,role:void 0,onFocus:e=>{E&&E(e),z&&z.onFocus&&z.onFocus(e)},onBlur:e=>{T&&T(e),z&&z.onBlur&&z.onBlur(e)},ownerState:W,ref:t},D,{children:[(0,f.jsx)(y,(0,s.Z)({autoFocus:n,checked:a,defaultChecked:b,className:V.input,disabled:P,id:B&&S,name:C,onChange:e=>{if(e.nativeEvent.defaultPrevented)return;const t=e.target.checked;L(t),$&&$(e,t)},readOnly:R,ref:N,required:_,ownerState:W,tabIndex:A,type:F},"checkbox"===F&&void 0===O?{}:{value:O},I)),M?u:k]}))}))},81455:(e,t,n)=>{"use strict";n.d(t,{Z:()=>T});var r=n(76805),s=n(8339),a=n(80807),i=(n(4647),n(42205));const o={black:"#000",white:"#fff"},l={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"},u={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"},c={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"},d={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"},h={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"},p={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"},f={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"},m=["mode","contrastThreshold","tonalOffset"],g={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:o.white,default:o.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},y={text:{primary:o.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:o.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function b(e,t,n,r){const s=r.light||r,a=r.dark||1.5*r;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=(0,i.$n)(e.main,s):"dark"===t&&(e.dark=(0,i._j)(e.main,a)))}function x(e){const{mode:t="light",contrastThreshold:n=3,tonalOffset:x=.2}=e,v=(0,s.Z)(e,m),w=e.primary||function(e="light"){return"dark"===e?{main:h[200],light:h[50],dark:h[400]}:{main:h[700],light:h[400],dark:h[800]}}(t),k=e.secondary||function(e="light"){return"dark"===e?{main:u[200],light:u[50],dark:u[400]}:{main:u[500],light:u[300],dark:u[700]}}(t),S=e.error||function(e="light"){return"dark"===e?{main:c[500],light:c[300],dark:c[700]}:{main:c[700],light:c[400],dark:c[800]}}(t),I=e.info||function(e="light"){return"dark"===e?{main:p[400],light:p[300],dark:p[700]}:{main:p[700],light:p[500],dark:p[900]}}(t),N=e.success||function(e="light"){return"dark"===e?{main:f[400],light:f[300],dark:f[700]}:{main:f[800],light:f[500],dark:f[900]}}(t),C=e.warning||function(e="light"){return"dark"===e?{main:d[400],light:d[300],dark:d[700]}:{main:"#ed6c02",light:d[500],dark:d[900]}}(t);function T(e){return(0,i.mi)(e,y.text.primary)>=n?y.text.primary:g.text.primary}const $=({color:e,name:t,mainShade:n=500,lightShade:s=300,darkShade:i=700})=>{if(!(e=(0,r.Z)({},e)).main&&e[n]&&(e.main=e[n]),!e.hasOwnProperty("main"))throw new Error((0,a.fe)(11,t?` (${t})`:"",n));if("string"!=typeof e.main)throw new Error((0,a.fe)(12,t?` (${t})`:"",JSON.stringify(e.main)));return b(e,"light",s,x),b(e,"dark",i,x),e.contrastText||(e.contrastText=T(e.main)),e},E={dark:y,light:g};return(0,a.vb)((0,r.Z)({common:(0,r.Z)({},o),mode:t,primary:$({color:w,name:"primary"}),secondary:$({color:k,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:$({color:S,name:"error"}),warning:$({color:C,name:"warning"}),info:$({color:I,name:"info"}),success:$({color:N,name:"success"}),grey:l,contrastThreshold:n,getContrastText:T,augmentColor:$,tonalOffset:x},E[t]),v)}var v=n(46554);function w(...e){return[`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,0.2)`,`${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,0.14)`,`${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,0.12)`].join(",")}const k=["none",w(0,2,1,-1,0,1,1,0,0,1,3,0),w(0,3,1,-2,0,2,2,0,0,1,5,0),w(0,3,3,-2,0,3,4,0,0,1,8,0),w(0,2,4,-1,0,4,5,0,0,1,10,0),w(0,3,5,-1,0,5,8,0,0,1,14,0),w(0,3,5,-1,0,6,10,0,0,1,18,0),w(0,4,5,-2,0,7,10,1,0,2,16,1),w(0,5,5,-3,0,8,10,1,0,3,14,2),w(0,5,6,-3,0,9,12,1,0,3,16,2),w(0,6,6,-3,0,10,14,1,0,4,18,3),w(0,6,7,-4,0,11,15,1,0,4,20,3),w(0,7,8,-4,0,12,17,2,0,5,22,4),w(0,7,8,-4,0,13,19,2,0,5,24,4),w(0,7,9,-4,0,14,21,2,0,5,26,4),w(0,8,9,-5,0,15,22,2,0,6,28,5),w(0,8,10,-5,0,16,24,2,0,6,30,5),w(0,8,11,-5,0,17,26,2,0,6,32,5),w(0,9,11,-5,0,18,28,2,0,7,34,6),w(0,9,12,-6,0,19,29,2,0,7,36,6),w(0,10,13,-6,0,20,31,3,0,8,38,7),w(0,10,13,-6,0,21,33,3,0,8,40,7),w(0,10,14,-6,0,22,35,3,0,8,42,7),w(0,11,14,-7,0,23,36,3,0,9,44,8),w(0,11,15,-7,0,24,38,3,0,9,46,8)];var S=n(80734);const I={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500},N=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function C(e={},...t){const{mixins:n={},palette:o={},transitions:l={},typography:u={}}=e,c=(0,s.Z)(e,N),d=x(o),h=(0,i.jG)(e);let p=(0,a.vb)(h,{mixins:(f=h.breakpoints,m=n,(0,r.Z)({toolbar:{minHeight:56,[f.up("xs")]:{"@media (orientation: landscape)":{minHeight:48}},[f.up("sm")]:{minHeight:64}}},m)),palette:d,shadows:k.slice(),typography:(0,v.Z)(d,u),transitions:(0,S.ZP)(l),zIndex:(0,r.Z)({},I)});var f,m;return p=(0,a.vb)(p,c),p=t.reduce(((e,t)=>(0,a.vb)(e,t)),p),p}const T=C},80734:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>c});var r=n(8339),s=n(76805);const a=["duration","easing","delay"],i={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},o={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function l(e){return`${Math.round(e)}ms`}function u(e){if(!e)return 0;const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}function c(e){const t=(0,s.Z)({},i,e.easing),n=(0,s.Z)({},o,e.duration);return(0,s.Z)({getAutoHeightDuration:u,create:(e=["all"],s={})=>{const{duration:i=n.standard,easing:o=t.easeInOut,delay:u=0}=s;(0,r.Z)(s,a);return(Array.isArray(e)?e:[e]).map((e=>`${e} ${"string"==typeof i?i:l(i)} ${o} ${"string"==typeof u?u:l(u)}`)).join(",")}},e,{easing:t,duration:n})}},46554:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});var r=n(76805),s=n(8339),a=n(80807);const i=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];const o={textTransform:"uppercase"},l='"Roboto", "Helvetica", "Arial", sans-serif';function u(e,t){const n="function"==typeof t?t(e):t,{fontFamily:u=l,fontSize:c=14,fontWeightLight:d=300,fontWeightRegular:h=400,fontWeightMedium:p=500,fontWeightBold:f=700,htmlFontSize:m=16,allVariants:g,pxToRem:y}=n,b=(0,s.Z)(n,i);const x=c/14,v=y||(e=>e/m*x+"rem"),w=(e,t,n,s,a)=>{return(0,r.Z)({fontFamily:u,fontWeight:e,fontSize:v(t),lineHeight:n},u===l?{letterSpacing:(i=s/t,Math.round(1e5*i)/1e5)+"em"}:{},a,g);var i},k={h1:w(d,96,1.167,-1.5),h2:w(d,60,1.2,-.5),h3:w(h,48,1.167,0),h4:w(h,34,1.235,.25),h5:w(h,24,1.334,0),h6:w(p,20,1.6,.15),subtitle1:w(h,16,1.75,.15),subtitle2:w(p,14,1.57,.1),body1:w(h,16,1.5,.15),body2:w(h,14,1.43,.15),button:w(p,14,1.75,.4,o),caption:w(h,12,1.66,.4),overline:w(h,12,2.66,1,o)};return(0,a.vb)((0,r.Z)({htmlFontSize:m,pxToRem:v,fontFamily:u,fontSize:c,fontWeightLight:d,fontWeightRegular:h,fontWeightMedium:p,fontWeightBold:f},k),b,{clone:!1})}},21590:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=(0,n(81455).Z)()},10543:(e,t,n)=>{"use strict";n.d(t,{Dz:()=>i,FO:()=>a,ZP:()=>o});var r=n(42205),s=n(21590);const a=e=>(0,r.x9)(e)&&"classes"!==e,i=r.x9,o=(0,r.Se)({defaultTheme:s.Z,rootShouldForwardProp:a})},91348:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});n(43001);var r=n(42205),s=n(21590);function a(){return(0,r.Fg)(s.Z)}},66954:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(42205),s=n(21590);function a({props:e,name:t}){return(0,r.eU)({props:e,name:t,defaultTheme:s.Z})}},50349:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).vc},39143:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).ks},57257:(e,t,n)=>{"use strict";n.d(t,{Z:()=>y});var r=n(76805),s=n(43001),a=n(8339),i=(n(3827),n(11358)),o=n(4647),l=n(50349),u=n(66954),c=n(10543);function d(e){return(0,o.d6)("MuiSvgIcon",e)}(0,o.sI)("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);var h=n(2574);const p=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],f=(0,c.ZP)("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,"inherit"!==n.color&&t[`color${(0,l.Z)(n.color)}`],t[`fontSize${(0,l.Z)(n.fontSize)}`]]}})((({theme:e,ownerState:t})=>{var n,r,s,a,i,o,l,u,c,d,h,p,f,m,g,y,b;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0,transition:null==(n=e.transitions)||null==(r=n.create)?void 0:r.call(n,"fill",{duration:null==(s=e.transitions)||null==(a=s.duration)?void 0:a.shorter}),fontSize:{inherit:"inherit",small:(null==(i=e.typography)||null==(o=i.pxToRem)?void 0:o.call(i,20))||"1.25rem",medium:(null==(l=e.typography)||null==(u=l.pxToRem)?void 0:u.call(l,24))||"1.5rem",large:(null==(c=e.typography)||null==(d=c.pxToRem)?void 0:d.call(c,35))||"2.1875"}[t.fontSize],color:null!=(h=null==(p=(e.vars||e).palette)||null==(f=p[t.color])?void 0:f.main)?h:{action:null==(m=(e.vars||e).palette)||null==(g=m.action)?void 0:g.active,disabled:null==(y=(e.vars||e).palette)||null==(b=y.action)?void 0:b.disabled,inherit:void 0}[t.color]}})),m=s.forwardRef((function(e,t){const n=(0,u.Z)({props:e,name:"MuiSvgIcon"}),{children:s,className:c,color:m="inherit",component:g="svg",fontSize:y="medium",htmlColor:b,inheritViewBox:x=!1,titleAccess:v,viewBox:w="0 0 24 24"}=n,k=(0,a.Z)(n,p),S=(0,r.Z)({},n,{color:m,component:g,fontSize:y,instanceFontSize:e.fontSize,inheritViewBox:x,viewBox:w}),I={};x||(I.viewBox=w);const N=(e=>{const{color:t,fontSize:n,classes:r}=e,s={root:["root","inherit"!==t&&`color${(0,l.Z)(t)}`,`fontSize${(0,l.Z)(n)}`]};return(0,o.V_)(s,d,r)})(S);return(0,h.jsxs)(f,(0,r.Z)({as:g,className:(0,i.Z)(N.root,c),ownerState:S,focusable:"false",color:b,"aria-hidden":!v||void 0,role:v?"img":void 0,ref:t},I,k,{children:[s,v?(0,h.jsx)("title",{children:v}):null]}))}));m.muiName="SvgIcon";const g=m;function y(e,t){const n=(n,s)=>(0,h.jsx)(g,(0,r.Z)({"data-testid":`${t}Icon`,ref:s},n,{children:e}));return n.muiName=g.muiName,s.memo(s.forwardRef(n))}},93874:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).uC},7103:(e,t,n)=>{"use strict";n.r(t),n.d(t,{capitalize:()=>s.Z,createChainedFunction:()=>a.Z,createSvgIcon:()=>i.Z,debounce:()=>o.Z,deprecatedPropType:()=>l,isMuiElement:()=>u.Z,ownerDocument:()=>c.Z,ownerWindow:()=>d.Z,requirePropFactory:()=>h,setRef:()=>p,unstable_ClassNameGenerator:()=>w,unstable_useEnhancedEffect:()=>f.Z,unstable_useId:()=>m.Z,unsupportedProp:()=>g,useControlled:()=>y.Z,useEventCallback:()=>b.Z,useForkRef:()=>x.Z,useIsFocusVisible:()=>v.Z});var r=n(80807),s=n(50349),a=n(39143),i=n(57257),o=n(93874);const l=r.E8;var u=n(55772),c=n(36847),d=n(8751);const h=r.qB,p=r.X8;var f=n(62056),m=n(28701);const g=r.NI;var y=n(11133),b=n(15976),x=n(901),v=n(59832);const w={configure:e=>{console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.","","You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead","","The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401","","The updated documentation: https://mui.com/guides/classname-generator/"].join("\n")),r.$g.configure(e)}}},55772:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).oq},36847:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).Bu},8751:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).Mg},11133:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).bQ},62056:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).Q4},15976:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).Ai},901:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).c8},28701:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).ii},59832:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n(80807).W7},42205:(e,t,n)=>{"use strict";n.d(t,{nz:()=>Ve,Fq:()=>Ft,n8:()=>Et,Se:()=>It,jG:()=>ze,iv:()=>u.iv,_j:()=>Ot,_4:()=>Mt,mi:()=>At,F4:()=>u.F4,$n:()=>Dt,x9:()=>bt,OI:()=>Qt,so:()=>en,mX:()=>st,Fg:()=>We,eU:()=>Ct});var r=n(16198),s=n(76805),a=n(43001),i=n(80171),o=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,l=(0,i.Z)((function(e){return o.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),u=n(68118),c=n(11652),d=n(45613),h=l,p=function(e){return"theme"!==e},f=function(e){return"string"==typeof e&&e.charCodeAt(0)>96?h:p},m=function(e,t,n){var r;if(t){var s=t.shouldForwardProp;r=e.__emotion_forwardProp&&s?function(t){return e.__emotion_forwardProp(t)&&s(t)}:s}return"function"!=typeof r&&n&&(r=e.__emotion_forwardProp),r},g=function(){return null};const y=function e(t,n){var r,i,o=t.__emotion_real===t,l=o&&t.__emotion_base||t;void 0!==n&&(r=n.label,i=n.target);var h=m(t,n,o),p=h||f(l),y=!p("as");return function(){var b=arguments,x=o&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==r&&x.push("label:"+r+";"),null==b[0]||void 0===b[0].raw)x.push.apply(x,b);else{0,x.push(b[0][0]);for(var v=b.length,w=1;w<v;w++)x.push(b[w],b[0][w])}var k=(0,u.Xn)((function(e,t,n){var r=y&&e.as||l,s="",o=[],m=e;if(null==e.theme){for(var b in m={},e)m[b]=e[b];m.theme=(0,a.useContext)(u.Ni)}"string"==typeof e.className?s=(0,c.fp)(t.registered,o,e.className):null!=e.className&&(s=e.className+" ");var v=(0,d.O)(x.concat(o),t.registered,m);(0,c.My)(t,v,"string"==typeof r);s+=t.key+"-"+v.name,void 0!==i&&(s+=" "+i);var w=y&&void 0===h?f(r):p,k={};for(var S in e)y&&"as"===S||w(S)&&(k[S]=e[S]);k.className=s,k.ref=n;var I=(0,a.createElement)(r,k),N=(0,a.createElement)(g,null);return(0,a.createElement)(a.Fragment,null,N,I)}));return k.displayName=void 0!==r?r:"Styled("+("string"==typeof l?l:l.displayName||l.name||"Component")+")",k.defaultProps=t.defaultProps,k.__emotion_real=k,k.__emotion_base=l,k.__emotion_styles=x,k.__emotion_forwardProp=h,Object.defineProperty(k,"toString",{value:function(){return"."+i}}),k.withComponent=function(t,r){return e(t,(0,s.Z)({},n,r,{shouldForwardProp:m(k,r,!0)})).apply(void 0,x)},k}};var b=y.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){b[e]=b(e)}));const x=b;n(3827);var v=n(24445),w=n(2574);let k;function S(e){const{styles:t,defaultTheme:n={}}=e,r="function"==typeof t?e=>{return t(null==(r=e)||0===Object.keys(r).length?n:e);var r}:t;return(0,w.jsx)(u.xB,{styles:r})}function I(e,t){return x(e,t)}"object"==typeof document&&(k=(0,v.Z)({key:"css",prepend:!0}));const N=(e,t)=>{Array.isArray(e.__emotion_styles)&&(e.__emotion_styles=t(e.__emotion_styles))};var C=n(8339),T=n(80807);const $=["values","unit","step"],E=e=>{const t=Object.keys(e).map((t=>({key:t,val:e[t]})))||[];return t.sort(((e,t)=>e.val-t.val)),t.reduce(((e,t)=>(0,s.Z)({},e,{[t.key]:t.val})),{})};const R={borderRadius:4};const _=function(e,t){return t?(0,T.vb)(e,t,{clone:!1}):e},A={xs:0,sm:600,md:900,lg:1200,xl:1536},F={keys:["xs","sm","md","lg","xl"],up:e=>`@media (min-width:${A[e]}px)`};function O(e,t,n){const r=e.theme||{};if(Array.isArray(t)){const e=r.breakpoints||F;return t.reduce(((r,s,a)=>(r[e.up(e.keys[a])]=n(t[a]),r)),{})}if("object"==typeof t){const e=r.breakpoints||F;return Object.keys(t).reduce(((r,s)=>{if(-1!==Object.keys(e.values||A).indexOf(s)){r[e.up(s)]=n(t[s],s)}else{const e=s;r[e]=t[e]}return r}),{})}return n(t)}function D(e={}){var t;return(null==(t=e.keys)?void 0:t.reduce(((t,n)=>(t[e.up(n)]={},t)),{}))||{}}function M(e,t){return e.reduce(((e,t)=>{const n=e[t];return(!n||0===Object.keys(n).length)&&delete e[t],e}),t)}function L({values:e,breakpoints:t,base:n}){const r=n||function(e,t){if("object"!=typeof e)return{};const n={},r=Object.keys(t);return Array.isArray(e)?r.forEach(((t,r)=>{r<e.length&&(n[t]=!0)})):r.forEach((t=>{null!=e[t]&&(n[t]=!0)})),n}(e,t),s=Object.keys(r);if(0===s.length)return e;let a;return s.reduce(((t,n,r)=>(Array.isArray(e)?(t[n]=null!=e[r]?e[r]:e[a],a=r):"object"==typeof e?(t[n]=null!=e[n]?e[n]:e[a],a=n):t[n]=e,t)),{})}function z(e,t,n=!0){if(!t||"string"!=typeof t)return null;if(e&&e.vars&&n){const n=`vars.${t}`.split(".").reduce(((e,t)=>e&&e[t]?e[t]:null),e);if(null!=n)return n}return t.split(".").reduce(((e,t)=>e&&null!=e[t]?e[t]:null),e)}function P(e,t,n,r=n){let s;return s="function"==typeof e?e(n):Array.isArray(e)?e[n]||r:z(e,n)||r,t&&(s=t(s,r,e)),s}const B=function(e){const{prop:t,cssProperty:n=e.prop,themeKey:r,transform:s}=e,a=e=>{if(null==e[t])return null;const a=e[t],i=z(e.theme,r)||{};return O(e,a,(e=>{let r=P(i,s,e);return e===r&&"string"==typeof e&&(r=P(i,s,`${t}${"default"===e?"":(0,T.vc)(e)}`,e)),!1===n?r:{[n]:r}}))};return a.propTypes={},a.filterProps=[t],a};const W={m:"margin",p:"padding"},V={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},U={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},Z=function(e){const t={};return n=>(void 0===t[n]&&(t[n]=e(n)),t[n])}((e=>{if(e.length>2){if(!U[e])return[e];e=U[e]}const[t,n]=e.split(""),r=W[t],s=V[n]||"";return Array.isArray(s)?s.map((e=>r+e)):[r+s]})),G=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],j=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],H=[...G,...j];function q(e,t,n,r){var s;const a=null!=(s=z(e,t,!1))?s:n;return"number"==typeof a?e=>"string"==typeof e?e:a*e:Array.isArray(a)?e=>"string"==typeof e?e:a[e]:"function"==typeof a?a:()=>{}}function K(e){return q(e,"spacing",8)}function X(e,t){if("string"==typeof t||null==t)return t;const n=e(Math.abs(t));return t>=0?n:"number"==typeof n?-n:`-${n}`}function Y(e,t,n,r){if(-1===t.indexOf(n))return null;const s=function(e,t){return n=>e.reduce(((e,r)=>(e[r]=X(t,n),e)),{})}(Z(n),r);return O(e,e[n],s)}function J(e,t){const n=K(e.theme);return Object.keys(e).map((r=>Y(e,t,r,n))).reduce(_,{})}function Q(e){return J(e,G)}function ee(e){return J(e,j)}function te(e){return J(e,H)}Q.propTypes={},Q.filterProps=G,ee.propTypes={},ee.filterProps=j,te.propTypes={},te.filterProps=H;const ne=te;const re=function(...e){const t=e.reduce(((e,t)=>(t.filterProps.forEach((n=>{e[n]=t})),e)),{}),n=e=>Object.keys(e).reduce(((n,r)=>t[r]?_(n,t[r](e)):n),{});return n.propTypes={},n.filterProps=e.reduce(((e,t)=>e.concat(t.filterProps)),[]),n};function se(e){return"number"!=typeof e?e:`${e}px solid`}function ae(e,t){return B({prop:e,themeKey:"borders",transform:t})}const ie=ae("border",se),oe=ae("borderTop",se),le=ae("borderRight",se),ue=ae("borderBottom",se),ce=ae("borderLeft",se),de=ae("borderColor"),he=ae("borderTopColor"),pe=ae("borderRightColor"),fe=ae("borderBottomColor"),me=ae("borderLeftColor"),ge=ae("outline",se),ye=ae("outlineColor"),be=e=>{if(void 0!==e.borderRadius&&null!==e.borderRadius){const t=q(e.theme,"shape.borderRadius",4),n=e=>({borderRadius:X(t,e)});return O(e,e.borderRadius,n)}return null};be.propTypes={},be.filterProps=["borderRadius"];const xe=re(ie,oe,le,ue,ce,de,he,pe,fe,me,be,ge,ye),ve=e=>{if(void 0!==e.gap&&null!==e.gap){const t=q(e.theme,"spacing",8),n=e=>({gap:X(t,e)});return O(e,e.gap,n)}return null};ve.propTypes={},ve.filterProps=["gap"];const we=e=>{if(void 0!==e.columnGap&&null!==e.columnGap){const t=q(e.theme,"spacing",8),n=e=>({columnGap:X(t,e)});return O(e,e.columnGap,n)}return null};we.propTypes={},we.filterProps=["columnGap"];const ke=e=>{if(void 0!==e.rowGap&&null!==e.rowGap){const t=q(e.theme,"spacing",8),n=e=>({rowGap:X(t,e)});return O(e,e.rowGap,n)}return null};ke.propTypes={},ke.filterProps=["rowGap"];const Se=re(ve,we,ke,B({prop:"gridColumn"}),B({prop:"gridRow"}),B({prop:"gridAutoFlow"}),B({prop:"gridAutoColumns"}),B({prop:"gridAutoRows"}),B({prop:"gridTemplateColumns"}),B({prop:"gridTemplateRows"}),B({prop:"gridTemplateAreas"}),B({prop:"gridArea"}));function Ie(e,t){return"grey"===t?t:e}const Ne=re(B({prop:"color",themeKey:"palette",transform:Ie}),B({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette",transform:Ie}),B({prop:"backgroundColor",themeKey:"palette",transform:Ie}));function Ce(e){return e<=1&&0!==e?100*e+"%":e}const Te=B({prop:"width",transform:Ce}),$e=e=>{if(void 0!==e.maxWidth&&null!==e.maxWidth){const t=t=>{var n,r;const s=(null==(n=e.theme)||null==(n=n.breakpoints)||null==(n=n.values)?void 0:n[t])||A[t];return s?"px"!==(null==(r=e.theme)||null==(r=r.breakpoints)?void 0:r.unit)?{maxWidth:`${s}${e.theme.breakpoints.unit}`}:{maxWidth:s}:{maxWidth:Ce(t)}};return O(e,e.maxWidth,t)}return null};$e.filterProps=["maxWidth"];const Ee=B({prop:"minWidth",transform:Ce}),Re=B({prop:"height",transform:Ce}),_e=B({prop:"maxHeight",transform:Ce}),Ae=B({prop:"minHeight",transform:Ce}),Fe=(B({prop:"size",cssProperty:"width",transform:Ce}),B({prop:"size",cssProperty:"height",transform:Ce}),re(Te,$e,Ee,Re,_e,Ae,B({prop:"boxSizing"}))),Oe={border:{themeKey:"borders",transform:se},borderTop:{themeKey:"borders",transform:se},borderRight:{themeKey:"borders",transform:se},borderBottom:{themeKey:"borders",transform:se},borderLeft:{themeKey:"borders",transform:se},borderColor:{themeKey:"palette"},borderTopColor:{themeKey:"palette"},borderRightColor:{themeKey:"palette"},borderBottomColor:{themeKey:"palette"},borderLeftColor:{themeKey:"palette"},outline:{themeKey:"borders",transform:se},outlineColor:{themeKey:"palette"},borderRadius:{themeKey:"shape.borderRadius",style:be},color:{themeKey:"palette",transform:Ie},bgcolor:{themeKey:"palette",cssProperty:"backgroundColor",transform:Ie},backgroundColor:{themeKey:"palette",transform:Ie},p:{style:ee},pt:{style:ee},pr:{style:ee},pb:{style:ee},pl:{style:ee},px:{style:ee},py:{style:ee},padding:{style:ee},paddingTop:{style:ee},paddingRight:{style:ee},paddingBottom:{style:ee},paddingLeft:{style:ee},paddingX:{style:ee},paddingY:{style:ee},paddingInline:{style:ee},paddingInlineStart:{style:ee},paddingInlineEnd:{style:ee},paddingBlock:{style:ee},paddingBlockStart:{style:ee},paddingBlockEnd:{style:ee},m:{style:Q},mt:{style:Q},mr:{style:Q},mb:{style:Q},ml:{style:Q},mx:{style:Q},my:{style:Q},margin:{style:Q},marginTop:{style:Q},marginRight:{style:Q},marginBottom:{style:Q},marginLeft:{style:Q},marginX:{style:Q},marginY:{style:Q},marginInline:{style:Q},marginInlineStart:{style:Q},marginInlineEnd:{style:Q},marginBlock:{style:Q},marginBlockStart:{style:Q},marginBlockEnd:{style:Q},displayPrint:{cssProperty:!1,transform:e=>({"@media print":{display:e}})},display:{},overflow:{},textOverflow:{},visibility:{},whiteSpace:{},flexBasis:{},flexDirection:{},flexWrap:{},justifyContent:{},alignItems:{},alignContent:{},order:{},flex:{},flexGrow:{},flexShrink:{},alignSelf:{},justifyItems:{},justifySelf:{},gap:{style:ve},rowGap:{style:ke},columnGap:{style:we},gridColumn:{},gridRow:{},gridAutoFlow:{},gridAutoColumns:{},gridAutoRows:{},gridTemplateColumns:{},gridTemplateRows:{},gridTemplateAreas:{},gridArea:{},position:{},zIndex:{themeKey:"zIndex"},top:{},right:{},bottom:{},left:{},boxShadow:{themeKey:"shadows"},width:{transform:Ce},maxWidth:{style:$e},minWidth:{transform:Ce},height:{transform:Ce},maxHeight:{transform:Ce},minHeight:{transform:Ce},boxSizing:{},fontFamily:{themeKey:"typography"},fontSize:{themeKey:"typography"},fontStyle:{themeKey:"typography"},fontWeight:{themeKey:"typography"},letterSpacing:{},textTransform:{},lineHeight:{},textAlign:{},typography:{cssProperty:!1,themeKey:"typography"}};const De=function(){function e(e,t,n,r){const s={[e]:t,theme:n},a=r[e];if(!a)return{[e]:t};const{cssProperty:i=e,themeKey:o,transform:l,style:u}=a;if(null==t)return null;if("typography"===o&&"inherit"===t)return{[e]:t};const c=z(n,o)||{};if(u)return u(s);return O(s,t,(t=>{let n=P(c,l,t);return t===n&&"string"==typeof t&&(n=P(c,l,`${e}${"default"===t?"":(0,T.vc)(t)}`,t)),!1===i?n:{[i]:n}}))}return function t(n){var r;const{sx:s,theme:a={}}=n||{};if(!s)return null;const i=null!=(r=a.unstable_sxConfig)?r:Oe;function o(n){let r=n;if("function"==typeof n)r=n(a);else if("object"!=typeof n)return n;if(!r)return null;const s=D(a.breakpoints),o=Object.keys(s);let l=s;return Object.keys(r).forEach((n=>{const s=(o=r[n],u=a,"function"==typeof o?o(u):o);var o,u;if(null!=s)if("object"==typeof s)if(i[n])l=_(l,e(n,s,a,i));else{const e=O({theme:a},s,(e=>({[n]:e})));!function(...e){const t=e.reduce(((e,t)=>e.concat(Object.keys(t))),[]),n=new Set(t);return e.every((e=>n.size===Object.keys(e).length))}(e,s)?l=_(l,e):l[n]=t({sx:s,theme:a})}else l=_(l,e(n,s,a,i))})),M(o,l)}return Array.isArray(s)?s.map(o):o(s)}}();De.filterProps=["sx"];const Me=De,Le=["breakpoints","palette","spacing","shape"];const ze=function(e={},...t){const{breakpoints:n={},palette:r={},spacing:a,shape:i={}}=e,o=(0,C.Z)(e,Le),l=function(e){const{values:t={xs:0,sm:600,md:900,lg:1200,xl:1536},unit:n="px",step:r=5}=e,a=(0,C.Z)(e,$),i=E(t),o=Object.keys(i);function l(e){return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n})`}function u(e){return`@media (max-width:${("number"==typeof t[e]?t[e]:e)-r/100}${n})`}function c(e,s){const a=o.indexOf(s);return`@media (min-width:${"number"==typeof t[e]?t[e]:e}${n}) and (max-width:${(-1!==a&&"number"==typeof t[o[a]]?t[o[a]]:s)-r/100}${n})`}return(0,s.Z)({keys:o,values:i,up:l,down:u,between:c,only:function(e){return o.indexOf(e)+1<o.length?c(e,o[o.indexOf(e)+1]):l(e)},not:function(e){const t=o.indexOf(e);return 0===t?l(o[1]):t===o.length-1?u(o[t]):c(e,o[o.indexOf(e)+1]).replace("@media","@media not all and")},unit:n},a)}(n),u=function(e=8){if(e.mui)return e;const t=K({spacing:e}),n=(...e)=>(0===e.length?[1]:e).map((e=>{const n=t(e);return"number"==typeof n?`${n}px`:n})).join(" ");return n.mui=!0,n}(a);let c=(0,T.vb)({breakpoints:l,direction:"ltr",components:{},palette:(0,s.Z)({mode:"light"},r),spacing:u,shape:(0,s.Z)({},R,i)},o);return c=t.reduce(((e,t)=>(0,T.vb)(e,t)),c),c.unstable_sxConfig=(0,s.Z)({},Oe,null==o?void 0:o.unstable_sxConfig),c.unstable_sx=function(e){return Me({sx:e,theme:this})},c};const Pe=function(e=null){const t=a.useContext(u.Ni);return t&&(n=t,0!==Object.keys(n).length)?t:e;var n},Be=ze();const We=function(e=Be){return Pe(e)};const Ve=function({styles:e,themeId:t,defaultTheme:n={}}){const r=We(n),s="function"==typeof e?e(t&&r[t]||r):e;return(0,w.jsx)(S,{styles:s})},Ue=re(B({prop:"displayPrint",cssProperty:!1,transform:e=>({"@media print":{display:e}})}),B({prop:"display"}),B({prop:"overflow"}),B({prop:"textOverflow"}),B({prop:"visibility"}),B({prop:"whiteSpace"})),Ze=re(B({prop:"flexBasis"}),B({prop:"flexDirection"}),B({prop:"flexWrap"}),B({prop:"justifyContent"}),B({prop:"alignItems"}),B({prop:"alignContent"}),B({prop:"order"}),B({prop:"flex"}),B({prop:"flexGrow"}),B({prop:"flexShrink"}),B({prop:"alignSelf"}),B({prop:"justifyItems"}),B({prop:"justifySelf"})),Ge=re(B({prop:"position"}),B({prop:"zIndex",themeKey:"zIndex"}),B({prop:"top"}),B({prop:"right"}),B({prop:"bottom"}),B({prop:"left"})),je=B({prop:"boxShadow",themeKey:"shadows"}),He=B({prop:"fontFamily",themeKey:"typography"}),qe=B({prop:"fontSize",themeKey:"typography"}),Ke=B({prop:"fontStyle",themeKey:"typography"}),Xe=B({prop:"fontWeight",themeKey:"typography"}),Ye=B({prop:"letterSpacing"}),Je=B({prop:"textTransform"}),Qe=B({prop:"lineHeight"}),et=B({prop:"textAlign"}),tt=re(B({prop:"typography",cssProperty:!1,themeKey:"typography"}),He,qe,Ke,Xe,Ye,Qe,et,Je),nt=["sx"],rt=e=>{var t,n;const r={systemProps:{},otherProps:{}},s=null!=(t=null==e||null==(n=e.theme)?void 0:n.unstable_sxConfig)?t:Oe;return Object.keys(e).forEach((t=>{s[t]?r.systemProps[t]=e[t]:r.otherProps[t]=e[t]})),r};function st(e){const{sx:t}=e,n=(0,C.Z)(e,nt),{systemProps:r,otherProps:a}=rt(n);let i;return i=Array.isArray(t)?[r,...t]:"function"==typeof t?(...e)=>{const n=t(...e);return(0,T.PO)(n)?(0,s.Z)({},r,n):r}:(0,s.Z)({},r,t),(0,s.Z)({},a,{sx:i})}const at={borders:xe.filterProps,display:Ue.filterProps,flexbox:Ze.filterProps,grid:Se.filterProps,positions:Ge.filterProps,palette:Ne.filterProps,shadows:je.filterProps,sizing:Fe.filterProps,spacing:ne.filterProps,typography:tt.filterProps},it={borders:xe,display:Ue,flexbox:Ze,grid:Se,positions:Ge,palette:Ne,shadows:je,sizing:Fe,spacing:ne,typography:tt};Object.keys(at).reduce(((e,t)=>(at[t].forEach((n=>{e[n]=it[t]})),e)),{});var ot=n(11358);const lt=["className","component"];!function(e={}){const{themeId:t,defaultTheme:n,defaultClassName:r="MuiBox-root",generateClassName:s}=e,a=I("div",{shouldForwardProp:e=>"theme"!==e&&"sx"!==e&&"as"!==e})(Me)}({defaultClassName:(0,T.IO)("MuiBox",["root"]).root,generateClassName:T.$g.generate});const ut=["variant"];function ct(e){return 0===e.length}function dt(e){const{variant:t}=e,n=(0,C.Z)(e,ut);let r=t||"";return Object.keys(n).sort().forEach((t=>{r+="color"===t?ct(r)?e[t]:(0,T.vc)(e[t]):`${ct(r)?t:(0,T.vc)(t)}${(0,T.vc)(e[t].toString())}`})),r}const ht=["name","slot","skipVariantsResolver","skipSx","overridesResolver"];const pt=(e,t)=>t.components&&t.components[e]&&t.components[e].styleOverrides?t.components[e].styleOverrides:null,ft=e=>{let t=0;const n={};return e&&e.forEach((e=>{let r="";"function"==typeof e.props?(r=`callback${t}`,t+=1):r=dt(e.props),n[r]=e.style})),n},mt=(e,t)=>{let n=[];return t&&t.components&&t.components[e]&&t.components[e].variants&&(n=t.components[e].variants),ft(n)},gt=(e,t,n)=>{const{ownerState:r={}}=e,a=[];let i=0;return n&&n.forEach((n=>{let o=!0;if("function"==typeof n.props){const t=(0,s.Z)({},e,r);o=n.props(t)}else Object.keys(n.props).forEach((t=>{r[t]!==n.props[t]&&e[t]!==n.props[t]&&(o=!1)}));o&&("function"==typeof n.props?a.push(t[`callback${i}`]):a.push(t[dt(n.props)])),"function"==typeof n.props&&(i+=1)})),a},yt=(e,t,n,r)=>{var s;const a=null==n||null==(s=n.components)||null==(s=s[r])?void 0:s.variants;return gt(e,t,a)};function bt(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}const xt=ze(),vt=e=>e?e.charAt(0).toLowerCase()+e.slice(1):e;function wt({defaultTheme:e,theme:t,themeId:n}){return r=t,0===Object.keys(r).length?e:t[n]||t;var r}function kt(e){return e?(t,n)=>n[e]:null}const St=({styledArg:e,props:t,defaultTheme:n,themeId:r})=>{const a=e((0,s.Z)({},t,{theme:wt((0,s.Z)({},t,{defaultTheme:n,themeId:r}))}));let i;if(a&&a.variants&&(i=a.variants,delete a.variants),i){return[a,...gt(t,ft(i),i)]}return a};function It(e={}){const{themeId:t,defaultTheme:n=xt,rootShouldForwardProp:r=bt,slotShouldForwardProp:a=bt}=e,i=e=>Me((0,s.Z)({},e,{theme:wt((0,s.Z)({},e,{defaultTheme:n,themeId:t}))}));return i.__mui_systemSx=!0,(e,o={})=>{N(e,(e=>e.filter((e=>!(null!=e&&e.__mui_systemSx)))));const{name:l,slot:u,skipVariantsResolver:c,skipSx:d,overridesResolver:h=kt(vt(u))}=o,p=(0,C.Z)(o,ht),f=void 0!==c?c:u&&"Root"!==u&&"root"!==u||!1,m=d||!1;let g=bt;"Root"===u||"root"===u?g=r:u?g=a:function(e){return"string"==typeof e&&e.charCodeAt(0)>96}(e)&&(g=void 0);const y=I(e,(0,s.Z)({shouldForwardProp:g,label:undefined},p)),b=(r,...a)=>{const o=a?a.map((e=>{if("function"==typeof e&&e.__emotion_real!==e)return r=>St({styledArg:e,props:r,defaultTheme:n,themeId:t});if((0,T.PO)(e)){let t,n=e;return e&&e.variants&&(t=e.variants,delete n.variants,n=n=>{let r=e;return gt(n,ft(t),t).forEach((e=>{r=(0,T.vb)(r,e)})),r}),n}return e})):[];let u=r;if((0,T.PO)(r)){let e;r&&r.variants&&(e=r.variants,delete u.variants,u=t=>{let n=r;return gt(t,ft(e),e).forEach((e=>{n=(0,T.vb)(n,e)})),n})}else"function"==typeof r&&r.__emotion_real!==r&&(u=e=>St({styledArg:r,props:e,defaultTheme:n,themeId:t}));l&&h&&o.push((e=>{const r=wt((0,s.Z)({},e,{defaultTheme:n,themeId:t})),a=pt(l,r);if(a){const t={};return Object.entries(a).forEach((([n,a])=>{t[n]="function"==typeof a?a((0,s.Z)({},e,{theme:r})):a})),h(e,t)}return null})),l&&!f&&o.push((e=>{const r=wt((0,s.Z)({},e,{defaultTheme:n,themeId:t}));return yt(e,mt(l,r),r,l)})),m||o.push(i);const c=o.length-a.length;if(Array.isArray(r)&&c>0){const e=new Array(c).fill("");u=[...r,...e],u.raw=[...r.raw,...e]}const d=y(u,...o);return e.muiName&&(d.muiName=e.muiName),d};return y.withConfig&&(b.withConfig=y.withConfig),b}}const Nt=It();function Ct({props:e,name:t,defaultTheme:n,themeId:r}){let s=We(n);r&&(s=s[r]||s);const a=function(e){const{theme:t,name:n,props:r}=e;return t&&t.components&&t.components[n]&&t.components[n].defaultProps?(0,T.yr)(t.components[n].defaultProps,r):r}({theme:s,name:t,props:e});return a}function Tt(e,t=0,n=1){return(0,T.uZ)(e,t,n)}function $t(e){if(e.type)return e;if("#"===e.charAt(0))return $t(function(e){e=e.slice(1);const t=new RegExp(`.{1,${e.length>=6?2:1}}`,"g");let n=e.match(t);return n&&1===n[0].length&&(n=n.map((e=>e+e))),n?`rgb${4===n.length?"a":""}(${n.map(((e,t)=>t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3)).join(", ")})`:""}(e));const t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error((0,r.Z)(9,e));let s,a=e.substring(t+1,e.length-1);if("color"===n){if(a=a.split(" "),s=a.shift(),4===a.length&&"/"===a[3].charAt(0)&&(a[3]=a[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(s))throw new Error((0,r.Z)(10,s))}else a=a.split(",");return a=a.map((e=>parseFloat(e))),{type:n,values:a,colorSpace:s}}const Et=e=>{const t=$t(e);return t.values.slice(0,3).map(((e,n)=>-1!==t.type.indexOf("hsl")&&0!==n?`${e}%`:e)).join(" ")};function Rt(e){const{type:t,colorSpace:n}=e;let{values:r}=e;return-1!==t.indexOf("rgb")?r=r.map(((e,t)=>t<3?parseInt(e,10):e)):-1!==t.indexOf("hsl")&&(r[1]=`${r[1]}%`,r[2]=`${r[2]}%`),r=-1!==t.indexOf("color")?`${n} ${r.join(" ")}`:`${r.join(", ")}`,`${t}(${r})`}function _t(e){let t="hsl"===(e=$t(e)).type||"hsla"===e.type?$t(function(e){e=$t(e);const{values:t}=e,n=t[0],r=t[1]/100,s=t[2]/100,a=r*Math.min(s,1-s),i=(e,t=(e+n/30)%12)=>s-a*Math.max(Math.min(t-3,9-t,1),-1);let o="rgb";const l=[Math.round(255*i(0)),Math.round(255*i(8)),Math.round(255*i(4))];return"hsla"===e.type&&(o+="a",l.push(t[3])),Rt({type:o,values:l})}(e)).values:e.values;return t=t.map((t=>("color"!==e.type&&(t/=255),t<=.03928?t/12.92:((t+.055)/1.055)**2.4))),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function At(e,t){const n=_t(e),r=_t(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)}function Ft(e,t){return e=$t(e),t=Tt(t),"rgb"!==e.type&&"hsl"!==e.type||(e.type+="a"),"color"===e.type?e.values[3]=`/${t}`:e.values[3]=t,Rt(e)}function Ot(e,t){if(e=$t(e),t=Tt(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]*=1-t;return Rt(e)}function Dt(e,t){if(e=$t(e),t=Tt(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(let n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]+=(1-e.values[n])*t;return Rt(e)}function Mt(e,t=.15){return _t(e)>.5?Ot(e,t):Dt(e,t)}const Lt=a.createContext(null);function zt(){return a.useContext(Lt)}const Pt="function"==typeof Symbol&&Symbol.for?Symbol.for("mui.nested"):"__THEME_NESTED__";const Bt=function(e){const{children:t,theme:n}=e,r=zt(),i=a.useMemo((()=>{const e=null===r?n:function(e,t){if("function"==typeof t)return t(e);return(0,s.Z)({},e,t)}(r,n);return null!=e&&(e[Pt]=null!==r),e}),[n,r]);return(0,w.jsx)(Lt.Provider,{value:i,children:t})},Wt={};function Vt(e,t,n,r=!1){return a.useMemo((()=>{const a=e&&t[e]||t;if("function"==typeof n){const i=n(a),o=e?(0,s.Z)({},t,{[e]:i}):i;return r?()=>o:o}return e?(0,s.Z)({},t,{[e]:n}):(0,s.Z)({},t,n)}),[e,t,n,r])}const Ut=function(e){const{children:t,theme:n,themeId:r}=e,s=Pe(Wt),a=zt()||Wt,i=Vt(r,s,n),o=Vt(r,a,n,!0);return(0,w.jsx)(Bt,{theme:o,children:(0,w.jsx)(u.Ni.Provider,{value:i,children:t})})},Zt="mode",Gt="color-scheme",jt="data-color-scheme";function Ht(e){if("undefined"!=typeof window&&"system"===e){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}}function qt(e,t){return"light"===e.mode||"system"===e.mode&&"light"===e.systemMode?t("light"):"dark"===e.mode||"system"===e.mode&&"dark"===e.systemMode?t("dark"):void 0}function Kt(e,t){if("undefined"==typeof window)return;let n;try{n=localStorage.getItem(e)||void 0,n||localStorage.setItem(e,t)}catch(e){}return n||t}function Xt(e){const{defaultMode:t="light",defaultLightColorScheme:n,defaultDarkColorScheme:r,supportedColorSchemes:i=[],modeStorageKey:o=Zt,colorSchemeStorageKey:l=Gt,storageWindow:u=("undefined"==typeof window?void 0:window)}=e,c=i.join(","),[d,h]=a.useState((()=>{const e=Kt(o,t),s=Kt(`${l}-light`,n),a=Kt(`${l}-dark`,r);return{mode:e,systemMode:Ht(e),lightColorScheme:s,darkColorScheme:a}})),p=function(e){return qt(e,(t=>"light"===t?e.lightColorScheme:"dark"===t?e.darkColorScheme:void 0))}(d),f=a.useCallback((e=>{h((n=>{if(e===n.mode)return n;const r=e||t;try{localStorage.setItem(o,r)}catch(e){}return(0,s.Z)({},n,{mode:r,systemMode:Ht(r)})}))}),[o,t]),m=a.useCallback((e=>{e?"string"==typeof e?e&&!c.includes(e)?console.error(`\`${e}\` does not exist in \`theme.colorSchemes\`.`):h((t=>{const n=(0,s.Z)({},t);return qt(t,(t=>{try{localStorage.setItem(`${l}-${t}`,e)}catch(e){}"light"===t&&(n.lightColorScheme=e),"dark"===t&&(n.darkColorScheme=e)})),n})):h((t=>{const a=(0,s.Z)({},t),i=null===e.light?n:e.light,o=null===e.dark?r:e.dark;if(i)if(c.includes(i)){a.lightColorScheme=i;try{localStorage.setItem(`${l}-light`,i)}catch(e){}}else console.error(`\`${i}\` does not exist in \`theme.colorSchemes\`.`);if(o)if(c.includes(o)){a.darkColorScheme=o;try{localStorage.setItem(`${l}-dark`,o)}catch(e){}}else console.error(`\`${o}\` does not exist in \`theme.colorSchemes\`.`);return a})):h((e=>{try{localStorage.setItem(`${l}-light`,n),localStorage.setItem(`${l}-dark`,r)}catch(e){}return(0,s.Z)({},e,{lightColorScheme:n,darkColorScheme:r})}))}),[c,l,n,r]),g=a.useCallback((e=>{"system"===d.mode&&h((t=>(0,s.Z)({},t,{systemMode:null!=e&&e.matches?"dark":"light"})))}),[d.mode]),y=a.useRef(g);return y.current=g,a.useEffect((()=>{const e=(...e)=>y.current(...e),t=window.matchMedia("(prefers-color-scheme: dark)");return t.addListener(e),e(t),()=>t.removeListener(e)}),[]),a.useEffect((()=>{const e=e=>{const n=e.newValue;"string"!=typeof e.key||!e.key.startsWith(l)||n&&!c.match(n)||(e.key.endsWith("light")&&m({light:n}),e.key.endsWith("dark")&&m({dark:n})),e.key!==o||n&&!["light","dark","system"].includes(n)||f(n||t)};if(u)return u.addEventListener("storage",e),()=>u.removeEventListener("storage",e)}),[m,f,o,l,c,t,u]),(0,s.Z)({},d,{colorScheme:p,setMode:f,setColorScheme:m})}const Yt=["colorSchemes","components","generateCssVars","cssVarPrefix"],Jt="*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";function Qt(e){const{themeId:t,theme:n={},attribute:i=jt,modeStorageKey:o=Zt,colorSchemeStorageKey:l=Gt,defaultMode:u="light",defaultColorScheme:c,disableTransitionOnChange:d=!1,resolveTheme:h,excludeVariablesFromRoot:p}=e;(!n.colorSchemes||"string"==typeof c&&!n.colorSchemes[c]||"object"==typeof c&&!n.colorSchemes[null==c?void 0:c.light]||"object"==typeof c&&!n.colorSchemes[null==c?void 0:c.dark])&&console.error(`MUI: \`${c}\` does not exist in \`theme.colorSchemes\`.`);const f=a.createContext(void 0);const m="string"==typeof c?c:c.light,g="string"==typeof c?c:c.dark;return{CssVarsProvider:function({children:e,theme:r=n,modeStorageKey:m=o,colorSchemeStorageKey:g=l,attribute:y=i,defaultMode:b=u,defaultColorScheme:x=c,disableTransitionOnChange:v=d,storageWindow:k=("undefined"==typeof window?void 0:window),documentNode:I=("undefined"==typeof document?void 0:document),colorSchemeNode:N=("undefined"==typeof document?void 0:document.documentElement),colorSchemeSelector:$=":root",disableNestedContext:E=!1,disableStyleSheetGeneration:R=!1}){const _=a.useRef(!1),A=zt(),F=a.useContext(f),O=!!F&&!E,D=r[t],M=D||r,{colorSchemes:L={},components:z={},generateCssVars:P=(()=>({vars:{},css:{}})),cssVarPrefix:B}=M,W=(0,C.Z)(M,Yt),V=Object.keys(L),U="string"==typeof x?x:x.light,Z="string"==typeof x?x:x.dark,{mode:G,setMode:j,systemMode:H,lightColorScheme:q,darkColorScheme:K,colorScheme:X,setColorScheme:Y}=Xt({supportedColorSchemes:V,defaultLightColorScheme:U,defaultDarkColorScheme:Z,modeStorageKey:m,colorSchemeStorageKey:g,defaultMode:b,storageWindow:k});let J=G,Q=X;O&&(J=F.mode,Q=F.colorScheme);const ee=Q||("dark"===(J||("system"===b?u:b))?Z:U),{css:te,vars:ne}=P(),re=(0,s.Z)({},W,{components:z,colorSchemes:L,cssVarPrefix:B,vars:ne,getColorSchemeSelector:e=>`[${y}="${e}"] &`}),se={},ae={};Object.entries(L).forEach((([e,t])=>{const{css:n,vars:r}=P(e);re.vars=(0,T.vb)(re.vars,r),e===ee&&(Object.keys(t).forEach((e=>{t[e]&&"object"==typeof t[e]?re[e]=(0,s.Z)({},re[e],t[e]):re[e]=t[e]})),re.palette&&(re.palette.colorScheme=e));if(e===("string"==typeof x?x:"dark"===b?x.dark:x.light)){if(p){const t={};p(B).forEach((e=>{t[e]=n[e],delete n[e]})),se[`[${y}="${e}"]`]=t}se[`${$}, [${y}="${e}"]`]=n}else ae[`${":root"===$?"":$}[${y}="${e}"]`]=n})),re.vars=(0,T.vb)(re.vars,ne),a.useEffect((()=>{Q&&N&&N.setAttribute(y,Q)}),[Q,y,N]),a.useEffect((()=>{let e;if(v&&_.current&&I){const t=I.createElement("style");t.appendChild(I.createTextNode(Jt)),I.head.appendChild(t),window.getComputedStyle(I.body),e=setTimeout((()=>{I.head.removeChild(t)}),1)}return()=>{clearTimeout(e)}}),[Q,v,I]),a.useEffect((()=>(_.current=!0,()=>{_.current=!1})),[]);const ie=a.useMemo((()=>({mode:J,systemMode:H,setMode:j,lightColorScheme:q,darkColorScheme:K,colorScheme:Q,setColorScheme:Y,allColorSchemes:V})),[V,Q,K,q,J,Y,j,H]);let oe=!0;(R||O&&(null==A?void 0:A.cssVarPrefix)===B)&&(oe=!1);const le=(0,w.jsxs)(a.Fragment,{children:[oe&&(0,w.jsxs)(a.Fragment,{children:[(0,w.jsx)(S,{styles:{[$]:te}}),(0,w.jsx)(S,{styles:se}),(0,w.jsx)(S,{styles:ae})]}),(0,w.jsx)(Ut,{themeId:D?t:void 0,theme:h?h(re):re,children:e})]});return O?le:(0,w.jsx)(f.Provider,{value:ie,children:le})},useColorScheme:()=>{const e=a.useContext(f);if(!e)throw new Error((0,r.Z)(19));return e},getInitColorSchemeScript:e=>function(e){const{defaultMode:t="light",defaultLightColorScheme:n="light",defaultDarkColorScheme:r="dark",modeStorageKey:s=Zt,colorSchemeStorageKey:a=Gt,attribute:i=jt,colorSchemeNode:o="document.documentElement"}=e||{};return(0,w.jsx)("script",{dangerouslySetInnerHTML:{__html:`(function() {\ntry {\n  var mode = localStorage.getItem('${s}') || '${t}';\n  var colorScheme = '';\n  if (mode === 'system') {\n    // handle system mode\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = localStorage.getItem('${a}-dark') || '${r}';\n    } else {\n      colorScheme = localStorage.getItem('${a}-light') || '${n}';\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = localStorage.getItem('${a}-light') || '${n}';\n  }\n  if (mode === 'dark') {\n    colorScheme = localStorage.getItem('${a}-dark') || '${r}';\n  }\n  if (colorScheme) {\n    ${o}.setAttribute('${i}', colorScheme);\n  }\n} catch(e){}})();`}},"mui-color-scheme-init")}((0,s.Z)({attribute:i,colorSchemeStorageKey:l,defaultMode:u,defaultLightColorScheme:m,defaultDarkColorScheme:g,modeStorageKey:o},e))}}function en(e=""){function t(...n){if(!n.length)return"";const r=n[0];return"string"!=typeof r||r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/)?`, ${r}`:`, var(--${e?`${e}-`:""}${r}${t(...n.slice(1))})`}return(n,...r)=>`var(--${e?`${e}-`:""}${n}${t(...r)})`}const tn=["className","component","disableGutters","fixed","maxWidth","classes"],nn=ze(),rn=Nt("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`maxWidth${(0,T.vc)(String(n.maxWidth))}`],n.fixed&&t.fixed,n.disableGutters&&t.disableGutters]}}),sn=e=>Ct({props:e,name:"MuiContainer",defaultTheme:nn});!function(e={}){const{createStyledComponent:t=rn,useThemeProps:n=sn,componentName:r="MuiContainer"}=e,i=t((({theme:e,ownerState:t})=>(0,s.Z)({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",display:"block"},!t.disableGutters&&{paddingLeft:e.spacing(2),paddingRight:e.spacing(2),[e.breakpoints.up("sm")]:{paddingLeft:e.spacing(3),paddingRight:e.spacing(3)}})),(({theme:e,ownerState:t})=>t.fixed&&Object.keys(e.breakpoints.values).reduce(((t,n)=>{const r=n,s=e.breakpoints.values[r];return 0!==s&&(t[e.breakpoints.up(r)]={maxWidth:`${s}${e.breakpoints.unit}`}),t}),{})),(({theme:e,ownerState:t})=>(0,s.Z)({},"xs"===t.maxWidth&&{[e.breakpoints.up("xs")]:{maxWidth:Math.max(e.breakpoints.values.xs,444)}},t.maxWidth&&"xs"!==t.maxWidth&&{[e.breakpoints.up(t.maxWidth)]:{maxWidth:`${e.breakpoints.values[t.maxWidth]}${e.breakpoints.unit}`}}))),o=a.forwardRef((function(e,t){const a=n(e),{className:o,component:l="div",disableGutters:u=!1,fixed:c=!1,maxWidth:d="lg"}=a,h=(0,C.Z)(a,tn),p=(0,s.Z)({},a,{component:l,disableGutters:u,fixed:c,maxWidth:d}),f=((e,t)=>{const{classes:n,fixed:r,disableGutters:s,maxWidth:a}=e,i={root:["root",a&&`maxWidth${(0,T.vc)(String(a))}`,r&&"fixed",s&&"disableGutters"]};return(0,T.V_)(i,(e=>(0,T.ZU)(t,e)),n)})(p,r);return(0,w.jsx)(i,(0,s.Z)({as:l,ownerState:p,className:(0,ot.Z)(f.root,o),ref:t},h))}))}();(0,T.IO)("MuiContainer",["root","disableGutters","fixed","maxWidthXs","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl"]);const an=(e,t,n)=>{const r=e.keys[0];if(Array.isArray(t))t.forEach(((t,r)=>{n(((t,n)=>{r<=e.keys.length-1&&(0===r?Object.assign(t,n):t[e.up(e.keys[r])]=n)}),t)}));else if(t&&"object"==typeof t){(Object.keys(t).length>e.keys.length?e.keys:(s=e.keys,a=Object.keys(t),s.filter((e=>a.includes(e))))).forEach((s=>{if(-1!==e.keys.indexOf(s)){const a=t[s];void 0!==a&&n(((t,n)=>{r===s?Object.assign(t,n):t[e.up(s)]=n}),a)}}))}else"number"!=typeof t&&"string"!=typeof t||n(((e,t)=>{Object.assign(e,t)}),t);var s,a};function on(e){return e?`Level${e}`:""}function ln(e){return e.unstable_level>0&&e.container}function un(e){return function(t){return`var(--Grid-${t}Spacing${on(e.unstable_level)})`}}function cn(e){return function(t){return 0===e.unstable_level?`var(--Grid-${t}Spacing)`:`var(--Grid-${t}Spacing${on(e.unstable_level-1)})`}}function dn(e){return 0===e.unstable_level?"var(--Grid-columns)":`var(--Grid-columns${on(e.unstable_level-1)})`}const hn=({theme:e,ownerState:t})=>{const n=un(t),r={};return an(e.breakpoints,t.gridSize,((e,s)=>{let a={};!0===s&&(a={flexBasis:0,flexGrow:1,maxWidth:"100%"}),"auto"===s&&(a={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"}),"number"==typeof s&&(a={flexGrow:0,flexBasis:"auto",width:`calc(100% * ${s} / ${dn(t)}${ln(t)?` + ${n("column")}`:""})`}),e(r,a)})),r},pn=({theme:e,ownerState:t})=>{const n={};return an(e.breakpoints,t.gridOffset,((e,r)=>{let s={};"auto"===r&&(s={marginLeft:"auto"}),"number"==typeof r&&(s={marginLeft:0===r?"0px":`calc(100% * ${r} / ${dn(t)})`}),e(n,s)})),n},fn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=ln(t)?{[`--Grid-columns${on(t.unstable_level)}`]:dn(t)}:{"--Grid-columns":12};return an(e.breakpoints,t.columns,((e,r)=>{e(n,{[`--Grid-columns${on(t.unstable_level)}`]:r})})),n},mn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=cn(t),r=ln(t)?{[`--Grid-rowSpacing${on(t.unstable_level)}`]:n("row")}:{};return an(e.breakpoints,t.rowSpacing,((n,s)=>{var a;n(r,{[`--Grid-rowSpacing${on(t.unstable_level)}`]:"string"==typeof s?s:null==(a=e.spacing)?void 0:a.call(e,s)})})),r},gn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n=cn(t),r=ln(t)?{[`--Grid-columnSpacing${on(t.unstable_level)}`]:n("column")}:{};return an(e.breakpoints,t.columnSpacing,((n,s)=>{var a;n(r,{[`--Grid-columnSpacing${on(t.unstable_level)}`]:"string"==typeof s?s:null==(a=e.spacing)?void 0:a.call(e,s)})})),r},yn=({theme:e,ownerState:t})=>{if(!t.container)return{};const n={};return an(e.breakpoints,t.direction,((e,t)=>{e(n,{flexDirection:t})})),n},bn=({ownerState:e})=>{const t=un(e),n=cn(e);return(0,s.Z)({minWidth:0,boxSizing:"border-box"},e.container&&(0,s.Z)({display:"flex",flexWrap:"wrap"},e.wrap&&"wrap"!==e.wrap&&{flexWrap:e.wrap},{margin:`calc(${t("row")} / -2) calc(${t("column")} / -2)`},e.disableEqualOverflow&&{margin:`calc(${t("row")} * -1) 0px 0px calc(${t("column")} * -1)`}),(!e.container||ln(e))&&(0,s.Z)({padding:`calc(${n("row")} / 2) calc(${n("column")} / 2)`},(e.disableEqualOverflow||e.parentDisableEqualOverflow)&&{padding:`${n("row")} 0px 0px ${n("column")}`}))},xn=e=>{const t=[];return Object.entries(e).forEach((([e,n])=>{!1!==n&&void 0!==n&&t.push(`grid-${e}-${String(n)}`)})),t},vn=(e,t="xs")=>{function n(e){return void 0!==e&&("string"==typeof e&&!Number.isNaN(Number(e))||"number"==typeof e&&e>0)}if(n(e))return[`spacing-${t}-${String(e)}`];if("object"==typeof e&&!Array.isArray(e)){const t=[];return Object.entries(e).forEach((([e,r])=>{n(r)&&t.push(`spacing-${e}-${String(r)}`)})),t}return[]},wn=e=>void 0===e?[]:"object"==typeof e?Object.entries(e).map((([e,t])=>`direction-${e}-${t}`)):[`direction-xs-${String(e)}`],kn=["className","children","columns","container","component","direction","wrap","spacing","rowSpacing","columnSpacing","disableEqualOverflow","unstable_level"],Sn=ze(),In=Nt("div",{name:"MuiGrid",slot:"Root",overridesResolver:(e,t)=>t.root});function Nn(e){return Ct({props:e,name:"MuiGrid",defaultTheme:Sn})}!function(e={}){const{createStyledComponent:t=In,useThemeProps:n=Nn,componentName:r="MuiGrid"}=e,i=a.createContext(void 0),o=t(fn,gn,mn,hn,yn,bn,pn),l=a.forwardRef((function(e,t){var l,u,c,d,h,p,f,m;const g=We(),y=st(n(e)),b=a.useContext(i),{className:x,children:v,columns:k=12,container:S=!1,component:I="div",direction:N="row",wrap:$="wrap",spacing:E=0,rowSpacing:R=E,columnSpacing:_=E,disableEqualOverflow:A,unstable_level:F=0}=y,O=(0,C.Z)(y,kn);let D=A;F&&void 0!==A&&(D=e.disableEqualOverflow);const M={},L={},z={};Object.entries(O).forEach((([e,t])=>{void 0!==g.breakpoints.values[e]?M[e]=t:void 0!==g.breakpoints.values[e.replace("Offset","")]?L[e.replace("Offset","")]=t:z[e]=t}));const P=null!=(l=e.columns)?l:F?void 0:k,B=null!=(u=e.spacing)?u:F?void 0:E,W=null!=(c=null!=(d=e.rowSpacing)?d:e.spacing)?c:F?void 0:R,V=null!=(h=null!=(p=e.columnSpacing)?p:e.spacing)?h:F?void 0:_,U=(0,s.Z)({},y,{level:F,columns:P,container:S,direction:N,wrap:$,spacing:B,rowSpacing:W,columnSpacing:V,gridSize:M,gridOffset:L,disableEqualOverflow:null!=(f=null!=(m=D)?m:b)&&f,parentDisableEqualOverflow:b}),Z=((e,t)=>{const{container:n,direction:s,spacing:a,wrap:i,gridSize:o}=e,l={root:["root",n&&"container","wrap"!==i&&`wrap-xs-${String(i)}`,...wn(s),...xn(o),...n?vn(a,t.breakpoints.keys[0]):[]]};return(0,T.V_)(l,(e=>(0,T.ZU)(r,e)),{})})(U,g);let G=(0,w.jsx)(o,(0,s.Z)({ref:t,as:I,ownerState:U,className:(0,ot.Z)(Z.root,x)},z,{children:a.Children.map(v,(e=>{var t;return a.isValidElement(e)&&(0,T.oq)(e,["Grid"])?a.cloneElement(e,{unstable_level:null!=(t=e.props.unstable_level)?t:F+1}):e}))}));return void 0!==D&&D!==(null!=b&&b)&&(G=(0,w.jsx)(i.Provider,{value:D,children:G})),G}));l.muiName="Grid"}();const Cn=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],Tn=((0,T.IO)("MuiGrid",["root","container","item",...[0,1,2,3,4,5,6,7,8,9,10].map((e=>`spacing-xs-${e}`)),...["column-reverse","column","row-reverse","row"].map((e=>`direction-xs-${e}`)),...["nowrap","wrap-reverse","wrap"].map((e=>`wrap-xs-${e}`)),...Cn.map((e=>`grid-xs-${e}`)),...Cn.map((e=>`grid-sm-${e}`)),...Cn.map((e=>`grid-md-${e}`)),...Cn.map((e=>`grid-lg-${e}`)),...Cn.map((e=>`grid-xl-${e}`))]),["component","direction","spacing","divider","children","className","useFlexGap"]),$n=ze(),En=Nt("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,t)=>t.root});function Rn(e){return Ct({props:e,name:"MuiStack",defaultTheme:$n})}function _n(e,t){const n=a.Children.toArray(e).filter(Boolean);return n.reduce(((e,r,s)=>(e.push(r),s<n.length-1&&e.push(a.cloneElement(t,{key:`separator-${s}`})),e)),[])}const An=({ownerState:e,theme:t})=>{let n=(0,s.Z)({display:"flex",flexDirection:"column"},O({theme:t},L({values:e.direction,breakpoints:t.breakpoints.values}),(e=>({flexDirection:e}))));if(e.spacing){const r=K(t),s=Object.keys(t.breakpoints.values).reduce(((t,n)=>(("object"==typeof e.spacing&&null!=e.spacing[n]||"object"==typeof e.direction&&null!=e.direction[n])&&(t[n]=!0),t)),{}),a=L({values:e.direction,base:s}),i=L({values:e.spacing,base:s});"object"==typeof a&&Object.keys(a).forEach(((e,t,n)=>{if(!a[e]){const r=t>0?a[n[t-1]]:"column";a[e]=r}}));const o=(t,n)=>{return e.useFlexGap?{gap:X(r,t)}:{"& > :not(style):not(style)":{margin:0},"& > :not(style) ~ :not(style)":{[`margin${s=n?a[n]:e.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[s]}`]:X(r,t)}};var s};n=(0,T.vb)(n,O({theme:t},i,o))}return n=function(e,...t){const n=D(e),r=[n,...t].reduce(((e,t)=>(0,T.vb)(e,t)),{});return M(Object.keys(n),r)}(t.breakpoints,n),n};!function(e={}){const{createStyledComponent:t=En,useThemeProps:n=Rn,componentName:r="MuiStack"}=e,i=t(An),o=a.forwardRef((function(e,t){const a=st(n(e)),{component:o="div",direction:l="column",spacing:u=0,divider:c,children:d,className:h,useFlexGap:p=!1}=a,f=(0,C.Z)(a,Tn),m={direction:l,spacing:u,useFlexGap:p},g=(0,T.V_)({root:["root"]},(e=>(0,T.ZU)(r,e)),{});return(0,w.jsx)(i,(0,s.Z)({as:o,ownerState:m,ref:t,className:(0,ot.Z)(g.root,h)},f,{children:c?_n(d,c):d}))}))}();(0,T.IO)("MuiStack",["root"])},16198:(e,t,n)=>{"use strict";function r(e){let t="https://mui.com/production-error/?code="+e;for(let e=1;e<arguments.length;e+=1)t+="&args[]="+encodeURIComponent(arguments[e]);return"Minified MUI error #"+e+"; visit "+t+" for the full message."}n.d(t,{Z:()=>r})},80807:(e,t,n)=>{"use strict";n.d(t,{uZ:()=>K,vb:()=>i,fe:()=>c.Z,yr:()=>V,PO:()=>s,$g:()=>G,vc:()=>d,V_:()=>U,ks:()=>h,uC:()=>p,E8:()=>f,ZU:()=>H,IO:()=>q,Ok:()=>P,oq:()=>y,Bu:()=>b,Mg:()=>x,qB:()=>v,X8:()=>w,NI:()=>C,bQ:()=>T,Q4:()=>k,Ai:()=>$,c8:()=>E,ii:()=>N,W7:()=>z,jy:()=>B});var r=n(76805);function s(e){if("object"!=typeof e||null===e)return!1;const t=Object.getPrototypeOf(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)}function a(e){if(!s(e))return e;const t={};return Object.keys(e).forEach((n=>{t[n]=a(e[n])})),t}function i(e,t,n={clone:!0}){const o=n.clone?(0,r.Z)({},e):e;return s(e)&&s(t)&&Object.keys(t).forEach((r=>{"__proto__"!==r&&(s(t[r])&&r in e&&s(e[r])?o[r]=i(e[r],t[r],n):n.clone?o[r]=s(t[r])?a(t[r]):t[r]:o[r]=t[r])})),o}var o=n(3827),l=n.n(o);const u=(l().element,()=>null);u.isRequired=(l().element.isRequired,()=>null);l().elementType;var c=n(16198);n(65031);"undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),l().oneOfType([l().func,l().object]);function d(e){if("string"!=typeof e)throw new Error((0,c.Z)(7));return e.charAt(0).toUpperCase()+e.slice(1)}function h(...e){return e.reduce(((e,t)=>null==t?e:function(...n){e.apply(this,n),t.apply(this,n)}),(()=>{}))}function p(e,t=166){let n;function r(...r){clearTimeout(n),n=setTimeout((()=>{e.apply(this,r)}),t)}return r.clear=()=>{clearTimeout(n)},r}function f(e,t){return()=>null}var m=n(43001),g=n.t(m,2);function y(e,t){var n,r;return m.isValidElement(e)&&-1!==t.indexOf(null!=(n=e.type.muiName)?n:null==(r=e.type)||null==(r=r._payload)||null==(r=r.value)?void 0:r.muiName)}function b(e){return e&&e.ownerDocument||document}function x(e){return b(e).defaultView||window}function v(e,t){return()=>null}function w(e,t){"function"==typeof e?e(t):e&&(e.current=t)}const k="undefined"!=typeof window?m.useLayoutEffect:m.useEffect;let S=0;const I=g["useId".toString()];function N(e){if(void 0!==I){const t=I();return null!=e?e:t}return function(e){const[t,n]=m.useState(e),r=e||t;return m.useEffect((()=>{null==t&&(S+=1,n(`mui-${S}`))}),[t]),r}(e)}function C(e,t,n,r,s){return null}function T({controlled:e,default:t,name:n,state:r="value"}){const{current:s}=m.useRef(void 0!==e),[a,i]=m.useState(t);return[s?e:a,m.useCallback((e=>{s||i(e)}),[])]}const $=function(e){const t=m.useRef(e);return k((()=>{t.current=e})),m.useRef(((...e)=>(0,t.current)(...e))).current};function E(...e){return m.useMemo((()=>e.every((e=>null==e))?null:t=>{e.forEach((e=>{w(e,t)}))}),e)}let R,_=!0,A=!1;const F={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function O(e){e.metaKey||e.altKey||e.ctrlKey||(_=!0)}function D(){_=!1}function M(){"hidden"===this.visibilityState&&A&&(_=!0)}function L(e){const{target:t}=e;try{return t.matches(":focus-visible")}catch(e){}return _||function(e){const{type:t,tagName:n}=e;return!("INPUT"!==n||!F[t]||e.readOnly)||"TEXTAREA"===n&&!e.readOnly||!!e.isContentEditable}(t)}function z(){const e=m.useCallback((e=>{var t;null!=e&&((t=e.ownerDocument).addEventListener("keydown",O,!0),t.addEventListener("mousedown",D,!0),t.addEventListener("pointerdown",D,!0),t.addEventListener("touchstart",D,!0),t.addEventListener("visibilitychange",M,!0))}),[]),t=m.useRef(!1);return{isFocusVisibleRef:t,onFocus:function(e){return!!L(e)&&(t.current=!0,!0)},onBlur:function(){return!!t.current&&(A=!0,window.clearTimeout(R),R=window.setTimeout((()=>{A=!1}),100),t.current=!1,!0)},ref:e}}function P(e){const t=e.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}const B={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:-1,overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"};Number.isInteger;function W(){return null}W.isRequired=W;function V(e,t){const n=(0,r.Z)({},t);return Object.keys(e).forEach((s=>{if(s.toString().match(/^(components|slots)$/))n[s]=(0,r.Z)({},e[s],n[s]);else if(s.toString().match(/^(componentsProps|slotProps)$/)){const a=e[s]||{},i=t[s];n[s]={},i&&Object.keys(i)?a&&Object.keys(a)?(n[s]=(0,r.Z)({},i),Object.keys(a).forEach((e=>{n[s][e]=V(a[e],i[e])}))):n[s]=i:n[s]=a}else void 0===n[s]&&(n[s]=e[s])})),n}function U(e,t,n=void 0){const r={};return Object.keys(e).forEach((s=>{r[s]=e[s].reduce(((e,r)=>{if(r){const s=t(r);""!==s&&e.push(s),n&&n[r]&&e.push(n[r])}return e}),[]).join(" ")})),r}const Z=e=>e,G=(()=>{let e=Z;return{configure(t){e=t},generate:t=>e(t),reset(){e=Z}}})(),j={active:"active",checked:"checked",completed:"completed",disabled:"disabled",error:"error",expanded:"expanded",focused:"focused",focusVisible:"focusVisible",open:"open",readOnly:"readOnly",required:"required",selected:"selected"};function H(e,t,n="Mui"){const r=j[t];return r?`${n}-${r}`:`${G.generate(e)}-${t}`}function q(e,t,n="Mui"){const r={};return t.forEach((t=>{r[t]=H(e,t,n)})),r}const K=function(e,t=Number.MIN_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER){return Math.max(t,Math.min(e,n))}},22239:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>et,Acos:()=>tt,Acosh:()=>nt,AdadeltaOptimizer:()=>Up,AdagradOptimizer:()=>Zp,AdamOptimizer:()=>Gp,AdamaxOptimizer:()=>jp,Add:()=>rt,AddN:()=>st,All:()=>at,Any:()=>it,ArgMax:()=>ot,ArgMin:()=>lt,Asin:()=>ut,Asinh:()=>ct,Atan:()=>dt,Atan2:()=>pt,Atanh:()=>ht,AvgPool:()=>ft,AvgPool3D:()=>gt,AvgPool3DGrad:()=>yt,AvgPoolGrad:()=>mt,BatchMatMul:()=>bt,BatchToSpaceND:()=>xt,Bincount:()=>vt,BitwiseAnd:()=>wt,BroadcastArgs:()=>St,BroadcastTo:()=>kt,Callback:()=>NN,CallbackList:()=>av,Cast:()=>It,Ceil:()=>Nt,ClipByValue:()=>Ct,Complex:()=>Tt,ComplexAbs:()=>$t,Concat:()=>Et,Conv2D:()=>Rt,Conv2DBackpropFilter:()=>_t,Conv2DBackpropInput:()=>At,Conv3D:()=>Ft,Conv3DBackpropFilterV2:()=>Ot,Conv3DBackpropInputV2:()=>Dt,Cos:()=>Mt,Cosh:()=>Lt,CropAndResize:()=>Bt,Cumprod:()=>zt,Cumsum:()=>Pt,CustomCallback:()=>lv,DataStorage:()=>K,DenseBincount:()=>Wt,DepthToSpace:()=>Vt,DepthwiseConv2dNative:()=>Ut,DepthwiseConv2dNativeBackpropFilter:()=>Zt,DepthwiseConv2dNativeBackpropInput:()=>Gt,Diag:()=>jt,Dilation2D:()=>Ht,Dilation2DBackpropFilter:()=>Kt,Dilation2DBackpropInput:()=>qt,Draw:()=>Xt,ENV:()=>Ye,EarlyStopping:()=>$N,Einsum:()=>Jt,Elu:()=>Qt,EluGrad:()=>en,Environment:()=>He,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>sn,Expm1:()=>an,FFT:()=>on,Fill:()=>ln,FlipLeftRight:()=>un,Floor:()=>cn,FloorDiv:()=>dn,FromPixels:()=>fs,FusedBatchNorm:()=>hn,FusedConv2D:()=>ys,FusedDepthwiseConv2D:()=>bs,GPGPUContext:()=>nL,GatherNd:()=>fn,GatherV2:()=>pn,GraphModel:()=>YC,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>ov,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>cx,IsFinite:()=>vn,IsInf:()=>wn,IsNan:()=>kn,KernelBackend:()=>X,LRN:()=>Dn,LRNGrad:()=>Mn,LayerVariable:()=>ox,LayersModel:()=>pw,LeakyRelu:()=>Sn,Less:()=>In,LessEqual:()=>Nn,LinSpace:()=>Cn,Log:()=>Tn,Log1p:()=>$n,LogSoftmax:()=>Fn,LogicalAnd:()=>En,LogicalNot:()=>Rn,LogicalOr:()=>_n,LogicalXor:()=>An,LowerBound:()=>On,MathBackendCPU:()=>f$,MathBackendWebGL:()=>Nz,MatrixBandPart:()=>Ln,Max:()=>zn,MaxPool:()=>Bn,MaxPool3D:()=>Vn,MaxPool3DGrad:()=>Un,MaxPoolGrad:()=>Wn,MaxPoolWithArgmax:()=>Zn,Maximum:()=>Pn,Mean:()=>Gn,Min:()=>jn,Minimum:()=>Hn,MirrorPad:()=>qn,Mod:()=>Kn,MomentumOptimizer:()=>qp,Multinomial:()=>Xn,Multiply:()=>Yn,Neg:()=>Jn,NonMaxSuppressionV3:()=>er,NonMaxSuppressionV4:()=>tr,NonMaxSuppressionV5:()=>nr,NotEqual:()=>Qn,OP_SCOPE_SUFFIX:()=>Xa,OneHot:()=>sr,OnesLike:()=>rr,Optimizer:()=>Vp,OptimizerConstructors:()=>Kf,Pack:()=>ar,PadV2:()=>ir,Pool:()=>or,Pow:()=>lr,Prelu:()=>ur,Prod:()=>cr,RMSPropOptimizer:()=>Kp,RNN:()=>wk,RaggedGather:()=>dr,RaggedRange:()=>hr,RaggedTensorToTensor:()=>pr,Range:()=>fr,Rank:()=>xa,Real:()=>mr,RealDiv:()=>Yt,Reciprocal:()=>gr,Reduction:()=>dp,Relu:()=>yr,Relu6:()=>Sr,Reshape:()=>br,ResizeBilinear:()=>wr,ResizeBilinearGrad:()=>kr,ResizeNearestNeighbor:()=>xr,ResizeNearestNeighborGrad:()=>vr,Reverse:()=>Ir,RotateWithOffset:()=>ms,Round:()=>Nr,Rsqrt:()=>Cr,SGDOptimizer:()=>Hp,ScatterNd:()=>Tr,SearchSorted:()=>Er,Select:()=>Rr,Selu:()=>_r,Sequential:()=>yw,Sigmoid:()=>Mr,Sign:()=>Dr,Sin:()=>Fr,Sinh:()=>Or,Slice:()=>Ar,Softmax:()=>Vr,Softplus:()=>Lr,SpaceToBatchND:()=>Br,SparseFillEmptyRows:()=>Ur,SparseReshape:()=>Zr,SparseSegmentMean:()=>Gr,SparseSegmentSum:()=>jr,SparseToDense:()=>Hr,SplitV:()=>Wr,Sqrt:()=>zr,Square:()=>Kr,SquaredDifference:()=>qr,StaticRegexReplace:()=>Xr,Step:()=>ps,StridedSlice:()=>Yr,StringNGrams:()=>Jr,StringSplit:()=>Qr,StringToHashBucketFast:()=>es,Sub:()=>ts,Sum:()=>Pr,SymbolicTensor:()=>dx,Tan:()=>ns,Tanh:()=>rs,Tensor:()=>ga,TensorBuffer:()=>ha,TensorScatterUpdate:()=>$r,Tile:()=>ss,TopK:()=>as,Transform:()=>is,Transpose:()=>os,Unique:()=>ls,Unpack:()=>us,UnsortedSegmentSum:()=>cs,UpperBound:()=>ds,Variable:()=>ba,ZerosLike:()=>hs,_FusedMatMul:()=>gs,abs:()=>Mo,acos:()=>Lo,acosh:()=>zo,add:()=>Ao,addN:()=>Po,all:()=>Bo,any:()=>Wo,argMax:()=>Vo,argMin:()=>Uo,asin:()=>Zo,asinh:()=>Go,atan:()=>jo,atan2:()=>Ho,atanh:()=>qo,avgPool:()=>dl,avgPool3d:()=>hl,backend:()=>ki,backend_util:()=>y,basicLSTMCell:()=>bl,batchNorm:()=>vl,batchNorm2d:()=>wl,batchNorm3d:()=>kl,batchNorm4d:()=>Sl,batchToSpaceND:()=>xl,bincount:()=>Il,bitwiseAnd:()=>Nl,booleanMaskAsync:()=>hh,broadcastArgs:()=>Cl,broadcastTo:()=>Tl,broadcast_util:()=>i,browser:()=>p,buffer:()=>$o,callbacks:()=>EN,cast:()=>Eo,ceil:()=>$l,clipByValue:()=>Rl,clone:()=>Ro,complex:()=>Ja,concat:()=>pl,concat1d:()=>_l,concat2d:()=>Al,concat3d:()=>Fl,concat4d:()=>Ol,constraints:()=>x,conv1d:()=>Ml,conv2d:()=>Dl,conv2dTranspose:()=>zl,conv3d:()=>Pl,conv3dTranspose:()=>Wl,copyRegisteredKernels:()=>Rs,cos:()=>Vl,cosh:()=>Ul,cosineWindow:()=>vh,cumprod:()=>Zl,cumsum:()=>Gl,customGrad:()=>Ju,data:()=>G,denseBincount:()=>jl,deprecationWarn:()=>ii,depthToSpace:()=>Hl,depthwiseConv2d:()=>ql,deregisterOp:()=>DN,device_util:()=>a,diag:()=>Kl,dilation2d:()=>Xl,disableDeprecationWarnings:()=>ai,dispose:()=>hi,disposeVariables:()=>oi,div:()=>Oo,divNoNan:()=>ru,dot:()=>su,dropout:()=>bh,einsum:()=>au,elu:()=>iu,enableDebugMode:()=>si,enableProdMode:()=>ri,enclosingPowerOfTwo:()=>xh,engine:()=>li,ensureShape:()=>ou,env:()=>Ke,equal:()=>eu,erf:()=>lu,euclideanNorm:()=>Cu,exp:()=>Tu,expandDims:()=>$u,expm1:()=>Eu,eye:()=>_u,fft:()=>Md,fill:()=>El,findBackend:()=>xi,findBackendFactory:()=>vi,floor:()=>Au,floorDiv:()=>Fo,forceHalfFloat:()=>Tz,fused:()=>u,gather:()=>Fu,gatherND:()=>yh,gather_util:()=>f,getBackend:()=>yi,getGradient:()=>Is,getKernel:()=>Ss,getKernelsForBackend:()=>Ns,gpgpu_util:()=>q,grad:()=>Hu,grads:()=>qu,greater:()=>Ou,greaterEqual:()=>Du,ifft:()=>Ld,imag:()=>Mu,image:()=>_p,inTopKAsync:()=>wh,initializers:()=>v,input:()=>vw,io:()=>d,irfft:()=>zd,isFinite:()=>Lu,isInf:()=>zu,isNaN:()=>Pu,keep:()=>pi,kernel_impls:()=>b,layers:()=>w,leakyRelu:()=>Bu,less:()=>Wu,lessEqual:()=>Vu,linalg:()=>Ap,linspace:()=>Uu,loadGraphModel:()=>JC,loadGraphModelSync:()=>QC,loadLayersModel:()=>gw,localResponseNormalization:()=>Zu,log:()=>Gu,log1p:()=>ju,logSigmoid:()=>nc,logSoftmax:()=>sc,logSumExp:()=>ac,logicalAnd:()=>ic,logicalNot:()=>oc,logicalOr:()=>lc,logicalXor:()=>uc,losses:()=>Fp,lowerBound:()=>hc,matMul:()=>fl,math:()=>h,max:()=>yu,maxPool:()=>pc,maxPool3d:()=>fc,maxPoolWithArgmax:()=>mc,maximum:()=>gc,mean:()=>yc,memory:()=>ui,meshgrid:()=>vc,metrics:()=>k,min:()=>bu,minimum:()=>wc,mirrorPad:()=>kc,mod:()=>Sc,model:()=>bw,models:()=>S,moments:()=>Ic,movingAverage:()=>fh,mul:()=>Do,multiRNNCell:()=>Nc,multinomial:()=>Cc,neg:()=>ec,nextFrame:()=>Jf,norm:()=>Nu,notEqual:()=>Tc,oneHot:()=>$c,ones:()=>xc,onesLike:()=>Ec,op:()=>Ya,outerProduct:()=>Rc,pad:()=>_c,pad1d:()=>Ac,pad2d:()=>Fc,pad3d:()=>Oc,pad4d:()=>Dc,pool:()=>Lc,pow:()=>xu,prelu:()=>zc,print:()=>_o,prod:()=>Pc,profile:()=>ci,raggedGather:()=>Bc,raggedRange:()=>Wc,raggedTensorToTensor:()=>Vc,rand:()=>Uc,randomGamma:()=>ld,randomNormal:()=>ud,randomStandardNormal:()=>cd,randomUniform:()=>dd,randomUniformInt:()=>hd,range:()=>pd,ready:()=>gi,real:()=>fd,reciprocal:()=>md,registerBackend:()=>wi,registerCallbackConstructor:()=>ww,registerGradient:()=>Ts,registerKernel:()=>Cs,registerOp:()=>FN,regularizers:()=>I,relu:()=>gd,relu6:()=>yd,removeBackend:()=>bi,reshape:()=>cl,reverse:()=>bd,reverse1d:()=>xd,reverse2d:()=>vd,reverse3d:()=>wd,reverse4d:()=>kd,rfft:()=>Bd,round:()=>Sd,rsqrt:()=>Id,scalar:()=>vu,scatterND:()=>mh,scatter_util:()=>l,searchSorted:()=>dc,selu:()=>Nd,separableConv2d:()=>Cd,sequential:()=>xw,serialization:()=>c,setBackend:()=>mi,setPlatform:()=>Si,setWebGLContext:()=>KO,setdiff1dAsync:()=>Td,shared:()=>j,sigmoid:()=>ml,sign:()=>$d,signal:()=>Rp,sin:()=>Ed,sinh:()=>Rd,slice:()=>gl,slice1d:()=>_d,slice2d:()=>Ad,slice3d:()=>Fd,slice4d:()=>Od,slice_util:()=>m,softmax:()=>Dd,softplus:()=>tc,spaceToBatchND:()=>Mc,sparse:()=>Op,sparseToDense:()=>gh,spectral:()=>Ep,split:()=>Pd,sqrt:()=>wu,square:()=>ku,squaredDifference:()=>Wd,squeeze:()=>Vd,stack:()=>Ud,step:()=>Zd,stridedSlice:()=>Gd,string:()=>Dp,sub:()=>rc,sum:()=>Su,sumOutType:()=>Ca,tan:()=>jd,tanh:()=>yl,tensor:()=>ei,tensor1d:()=>Hd,tensor2d:()=>qd,tensor3d:()=>Kd,tensor4d:()=>Xd,tensor5d:()=>Yd,tensor6d:()=>Jd,tensorScatterUpdate:()=>nh,tensor_util:()=>s,test_util:()=>o,tidy:()=>di,tile:()=>Ru,time:()=>fi,topk:()=>rh,train:()=>Xf,transpose:()=>ph,truncatedNormal:()=>sh,unique:()=>ah,unregisterGradient:()=>Es,unregisterKernel:()=>$s,unsortedSegmentSum:()=>ih,unstack:()=>oh,upcastType:()=>Na,upperBound:()=>lh,util:()=>r,valueAndGrad:()=>Ku,valueAndGrads:()=>Xu,variable:()=>uh,variableGrads:()=>Yu,version:()=>kG,version_converter:()=>eT,version_core:()=>qf,version_cpu:()=>WR,version_layers:()=>Hv,version_webgl:()=>Cz,webgl:()=>$z,webgl_util:()=>H,where:()=>tu,whereAsync:()=>dh,zeros:()=>bc,zerosLike:()=>nu});var r={};n.r(r),n.d(r,{arraysEqual:()=>he,arraysEqualWithNull:()=>de,assert:()=>ie,assertNonNegativeIntegerDimensions:()=>Ve,assertNonNull:()=>le,assertShapesMatch:()=>oe,bytesFromStringArray:()=>$e,bytesPerElement:()=>Te,checkConversionForErrors:()=>Ie,clamp:()=>ee,computeStrides:()=>De,convertBackendValuesAndArrayBuffer:()=>ze,createScalarValue:()=>Hs,createShuffledIndices:()=>ge,decodeString:()=>Js,distSquared:()=>ae,encodeString:()=>Ys,fetch:()=>Xs,fingerPrint64:()=>js,flatten:()=>ea,getArrayFromDType:()=>Se,getTypedArrayFromDType:()=>ke,hasEncodingLoss:()=>Ce,hexToLong:()=>Ds,indexToLoc:()=>Ze,inferDtype:()=>Ae,inferFromImplicitShape:()=>xe,isBoolean:()=>Re,isFunction:()=>Fe,isInt:()=>pe,isNumber:()=>_e,isPromise:()=>Ge,isScalarShape:()=>ce,isString:()=>Ee,isTypedArray:()=>Qs,isValidDtype:()=>Ne,locToIndex:()=>Ue,makeOnesTypedArray:()=>Pe,makeZerosNestedTypedArray:()=>We,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Oe,nearestLargerEven:()=>te,now:()=>Ks,parseAxisParam:()=>ve,randUniform:()=>se,repeatedTry:()=>be,rightPad:()=>ye,shuffle:()=>J,shuffleCombo:()=>Q,sizeFromShape:()=>ue,sizeToSquarishShape:()=>me,squeezeShape:()=>we,sum:()=>re,swap:()=>ne,tanh:()=>fe,toNestedArray:()=>Le,toTypedArray:()=>qs});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ra,getTensorsInContainer:()=>Aa,isTensorInList:()=>_a,makeTypesMatch:()=>Ea});var a={};n.r(a),n.d(a,{isBrowser:()=>Ua,isMobile:()=>Va,mockIsMobile:()=>Wa});var i={};n.r(i),n.d(i,{assertAndGetBroadcastShape:()=>Ql,getBroadcastDims:()=>Yl,getReductionAxes:()=>Jl});var o={};n.r(o),n.d(o,{TEST_EPSILON_FLOAT16:()=>jc,createVideoElement:()=>rd,encodeStrings:()=>nd,expectArrayBuffersEqual:()=>td,expectArraysClose:()=>Hc,expectArraysEqual:()=>Yc,expectNumbersClose:()=>Jc,expectPromiseToFail:()=>Xc,expectValuesInRange:()=>ed,play:()=>sd,testEpsilon:()=>qc});var l={};n.r(l),n.d(l,{calculateShapes:()=>th,validateInput:()=>eh,validateUpdateShape:()=>Qd});var u={};n.r(u),n.d(u,{conv2d:()=>Th,depthwiseConv2d:()=>Rh,matMul:()=>_h});var c={};n.r(c),n.d(c,{Serializable:()=>zp,SerializationMap:()=>Pp,getRegisteredName:()=>Wp,registerClass:()=>Bp});var d={};n.r(d),n.d(d,{CompositeArrayBuffer:()=>ni,browserFiles:()=>ef,browserHTTPRequest:()=>cf,concatenateArrayBuffers:()=>Mi,copyModel:()=>ko,decodeWeights:()=>Ti,decodeWeightsStream:()=>Ai,encodeWeights:()=>Ci,fromMemory:()=>ff,fromMemorySync:()=>mf,getLoadHandlers:()=>Hi,getModelArtifactsForJSON:()=>Bi,getModelArtifactsForJSONSync:()=>Pi,getModelArtifactsInfoForJSON:()=>Wi,getSaveHandlers:()=>ji,getWeightSpecs:()=>Vi,http:()=>uf,isHTTPScheme:()=>of,listModels:()=>vo,loadWeights:()=>rf,moveModel:()=>So,registerLoadRouter:()=>Gi,registerSaveRouter:()=>Zi,removeModel:()=>wo,weightsLoaderFactory:()=>sf,withSaveHandler:()=>gf,withSaveHandlerSync:()=>yf});var h={};n.r(h),n.d(h,{confusionMatrix:()=>bf});var p={};n.r(p),n.d(p,{draw:()=>Cf,fromPixels:()=>Tf,fromPixelsAsync:()=>Sf,toPixels:()=>Nf});var f={};n.r(f),n.d(f,{prepareAndValidate:()=>$f});var m={};n.r(m),n.d(m,{assertParamsValid:()=>_f,computeFlatOffset:()=>Zf,computeOutShape:()=>Ff,getNormalizedAxes:()=>Lf,isSliceContinous:()=>Uf,maskToAxes:()=>Af,parseSliceParams:()=>Gf,sliceInfo:()=>jf,startForAxis:()=>Wf,startIndicesWithElidedDims:()=>zf,stopForAxis:()=>Vf,stopIndicesWithElidedDims:()=>Pf,stridesForAxis:()=>Bf,stridesWithElidedDims:()=>Of});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>tg,computeOutShape:()=>eg,segOpComputeOptimalWindowSize:()=>Qm});var y={};n.r(y),n.d(y,{ERF_A1:()=>ym,ERF_A2:()=>bm,ERF_A3:()=>xm,ERF_A4:()=>vm,ERF_A5:()=>wm,ERF_P:()=>gm,PARALLELIZE_THRESHOLD:()=>im,RowPartitionType:()=>tm,SELU_SCALE:()=>mm,SELU_SCALEALPHA:()=>fm,applyActivation:()=>Nh,assertAndGetBroadcastShape:()=>Ql,assertAxesAreInnerMostDims:()=>pu,assertParamsConsistent:()=>Qf,assignToTypedArray:()=>Tm,axesAreInnerMostDims:()=>uu,calculateShapes:()=>th,checkEinsumDimSizes:()=>Mm,checkPadOnDimRoundingMode:()=>ul,combineLocations:()=>cu,combineRaggedTensorToTensorShapes:()=>nm,complexWithEvenIndex:()=>Im,complexWithOddIndex:()=>Nm,computeConv2DInfo:()=>Jo,computeConv3DInfo:()=>Qo,computeDefaultPad:()=>el,computeDilation2DInfo:()=>Ko,computeOptimalWindowSize:()=>om,computeOutAndReduceShapes:()=>du,computeOutShape:()=>em,computePool2DInfo:()=>Xo,computePool3DInfo:()=>Yo,convertConv2DDataFormat:()=>ll,decodeEinsumEquation:()=>Om,eitherStridesOrDilationsAreOne:()=>il,expandShapeToKeepDim:()=>hu,exponent:()=>Em,exponents:()=>$m,fromStringArrayToUint8:()=>rg,fromUint8ToStringArray:()=>ng,getAxesPermutation:()=>fu,getBroadcastDims:()=>Yl,getComplexWithIndex:()=>Cm,getEinsumComputePath:()=>Lm,getEinsumPermutation:()=>Dm,getFusedBiasGradient:()=>Ih,getFusedDyActivation:()=>Sh,getImageCenter:()=>lm,getInnerMostAxes:()=>gu,getPermuted:()=>cm,getRaggedRank:()=>sm,getReductionAxes:()=>Jl,getReshaped:()=>um,getReshapedPermuted:()=>dm,getRowPartitionTypesHelper:()=>rm,getSliceBeginCoords:()=>hm,getSliceSize:()=>pm,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Wm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Vm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Um,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>jm,getSparseReshapeInputOutputMismatchErrorMessage:()=>qm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Hm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Zm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Gm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Jm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Km,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Xm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Ym,getUndoAxesPermutation:()=>mu,isIdentityPermutation:()=>zm,log:()=>vs,mergeRealAndImagArrays:()=>km,prepareAndValidate:()=>$f,prepareSplitSize:()=>Bm,segment_util:()=>g,shouldFuse:()=>Ch,slice_util:()=>m,splitRealAndImagArrays:()=>Sm,stridesOrDilationsArePositive:()=>ol,tupleValuesAreOne:()=>al,upcastType:()=>Na,validateDefaultValueShape:()=>am,validateInput:()=>eh,validateUpdateShape:()=>Qd,warn:()=>xs});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>Gh,nonMaxSuppressionV4Impl:()=>jh,nonMaxSuppressionV5Impl:()=>Hh,whereImpl:()=>ch});var x={};n.r(x),n.d(x,{maxNorm:()=>Mx,minMaxNorm:()=>Px,nonNeg:()=>zx,unitNorm:()=>Lx});var v={};n.r(v),n.d(v,{constant:()=>Vx,glorotNormal:()=>Kx,glorotUniform:()=>qx,heNormal:()=>Xx,heUniform:()=>Yx,identity:()=>jx,leCunNormal:()=>Jx,leCunUniform:()=>Qx,ones:()=>Wx,orthogonal:()=>ev,randomNormal:()=>Zx,randomUniform:()=>Ux,truncatedNormal:()=>Gx,varianceScaling:()=>Hx,zeros:()=>Bx});var w={};n.r(w),n.d(w,{Layer:()=>mx,RNN:()=>wk,RNNCell:()=>kk,activation:()=>tI,add:()=>cI,alphaDropout:()=>eN,average:()=>dI,averagePooling1d:()=>vI,averagePooling2d:()=>SI,averagePooling3d:()=>CI,avgPool1d:()=>wI,avgPool2d:()=>II,avgPool3d:()=>TI,avgPooling1d:()=>kI,avgPooling2d:()=>NI,avgPooling3d:()=>$I,batchNormalization:()=>yI,bidirectional:()=>jI,categoryEncoding:()=>aN,centerCrop:()=>rN,concatenate:()=>hI,conv1d:()=>jS,conv2d:()=>HS,conv2dTranspose:()=>qS,conv3d:()=>KS,conv3dTranspose:()=>XS,convLstm2d:()=>VI,convLstm2dCell:()=>UI,cropping2D:()=>JS,dense:()=>nI,depthwiseConv2d:()=>eI,dot:()=>gI,dropout:()=>rI,elu:()=>BS,embedding:()=>uI,flatten:()=>aI,gaussianDropout:()=>QI,gaussianNoise:()=>JI,globalAveragePooling1d:()=>EI,globalAveragePooling2d:()=>RI,globalMaxPool1d:()=>qI,globalMaxPool2d:()=>KI,globalMaxPooling1d:()=>_I,globalMaxPooling2d:()=>AI,gru:()=>MI,gruCell:()=>LI,input:()=>vw,inputLayer:()=>PS,layerNormalization:()=>bI,leakyReLU:()=>VS,lstm:()=>zI,lstmCell:()=>PI,masking:()=>tN,maxPool1d:()=>XI,maxPool2d:()=>YI,maxPooling1d:()=>FI,maxPooling2d:()=>OI,maxPooling3d:()=>DI,maximum:()=>pI,minimum:()=>fI,multiply:()=>mI,permute:()=>lI,prelu:()=>US,randomWidth:()=>iN,reLU:()=>WS,repeatVector:()=>iI,rescaling:()=>nN,reshape:()=>oI,resizing:()=>sN,rnn:()=>ZI,separableConv2d:()=>YS,simpleRNN:()=>BI,simpleRNNCell:()=>WI,softmax:()=>ZS,spatialDropout1d:()=>sI,stackedRNNCells:()=>GI,thresholdedReLU:()=>GS,timeDistributed:()=>HI,upSampling2d:()=>QS,zeroPadding2d:()=>xI});var k={};n.r(k),n.d(k,{MAPE:()=>yN,MSE:()=>vN,binaryAccuracy:()=>oN,binaryCrossentropy:()=>lN,categoricalAccuracy:()=>cN,categoricalCrossentropy:()=>dN,cosineProximity:()=>fN,mape:()=>bN,meanAbsoluteError:()=>mN,meanAbsolutePercentageError:()=>gN,meanSquaredError:()=>xN,mse:()=>wN,precision:()=>hN,recall:()=>pN,sparseCategoricalAccuracy:()=>uN});var S={};n.r(S),n.d(S,{modelFromJSON:()=>mw});var I={};n.r(I),n.d(I,{l1:()=>SN,l1l2:()=>kN,l2:()=>IN});var N={};n.r(N),n.d(N,{json:()=>ZN});var C={};n.r(C),n.d(C,{json:()=>GN});var T={};n.r(T),n.d(T,{json:()=>jN});var $={};n.r($),n.d($,{json:()=>HN});var E={};n.r(E),n.d(E,{json:()=>qN});var R={};n.r(R),n.d(R,{json:()=>KN});var _={};n.r(_),n.d(_,{json:()=>XN});var A={};n.r(A),n.d(A,{json:()=>YN});var F={};n.r(F),n.d(F,{json:()=>JN});var O={};n.r(O),n.d(O,{json:()=>QN});var D={};n.r(D),n.d(D,{json:()=>eC});var M={};n.r(M),n.d(M,{json:()=>tC});var L={};n.r(L),n.d(L,{json:()=>nC});var z={};n.r(z),n.d(z,{json:()=>rC});var P={};n.r(P),n.d(P,{json:()=>sC});var B={};n.r(B),n.d(B,{json:()=>aC});var W={};n.r(W),n.d(W,{json:()=>iC});var V={};n.r(V),n.d(V,{json:()=>oC});var U={};n.r(U),n.d(U,{json:()=>lC});var Z={};n.r(Z),n.d(Z,{OP_SCOPE_SUFFIX:()=>Xa,abs:()=>Mo,acos:()=>Lo,acosh:()=>zo,add:()=>Ao,addN:()=>Po,all:()=>Bo,any:()=>Wo,argMax:()=>Vo,argMin:()=>Uo,asin:()=>Zo,asinh:()=>Go,atan:()=>jo,atan2:()=>Ho,atanh:()=>qo,avgPool:()=>dl,avgPool3d:()=>hl,basicLSTMCell:()=>bl,batchNorm:()=>vl,batchNorm2d:()=>wl,batchNorm3d:()=>kl,batchNorm4d:()=>Sl,batchToSpaceND:()=>xl,bincount:()=>Il,bitwiseAnd:()=>Nl,booleanMaskAsync:()=>hh,broadcastArgs:()=>Cl,broadcastTo:()=>Tl,buffer:()=>$o,cast:()=>Eo,ceil:()=>$l,clipByValue:()=>Rl,clone:()=>Ro,complex:()=>Ja,concat:()=>pl,concat1d:()=>_l,concat2d:()=>Al,concat3d:()=>Fl,concat4d:()=>Ol,conv1d:()=>Ml,conv2d:()=>Dl,conv2dTranspose:()=>zl,conv3d:()=>Pl,conv3dTranspose:()=>Wl,cos:()=>Vl,cosh:()=>Ul,cosineWindow:()=>vh,cumprod:()=>Zl,cumsum:()=>Gl,denseBincount:()=>jl,depthToSpace:()=>Hl,depthwiseConv2d:()=>ql,diag:()=>Kl,dilation2d:()=>Xl,div:()=>Oo,divNoNan:()=>ru,dot:()=>su,dropout:()=>bh,einsum:()=>au,elu:()=>iu,enclosingPowerOfTwo:()=>xh,ensureShape:()=>ou,equal:()=>eu,erf:()=>lu,euclideanNorm:()=>Cu,exp:()=>Tu,expandDims:()=>$u,expm1:()=>Eu,eye:()=>_u,fft:()=>Md,fill:()=>El,floor:()=>Au,floorDiv:()=>Fo,fused:()=>u,gather:()=>Fu,gatherND:()=>yh,greater:()=>Ou,greaterEqual:()=>Du,ifft:()=>Ld,imag:()=>Mu,image:()=>_p,inTopKAsync:()=>wh,irfft:()=>zd,isFinite:()=>Lu,isInf:()=>zu,isNaN:()=>Pu,leakyRelu:()=>Bu,less:()=>Wu,lessEqual:()=>Vu,linalg:()=>Ap,linspace:()=>Uu,localResponseNormalization:()=>Zu,log:()=>Gu,log1p:()=>ju,logSigmoid:()=>nc,logSoftmax:()=>sc,logSumExp:()=>ac,logicalAnd:()=>ic,logicalNot:()=>oc,logicalOr:()=>lc,logicalXor:()=>uc,losses:()=>Fp,lowerBound:()=>hc,matMul:()=>fl,max:()=>yu,maxPool:()=>pc,maxPool3d:()=>fc,maxPoolWithArgmax:()=>mc,maximum:()=>gc,mean:()=>yc,meshgrid:()=>vc,min:()=>bu,minimum:()=>wc,mirrorPad:()=>kc,mod:()=>Sc,moments:()=>Ic,movingAverage:()=>fh,mul:()=>Do,multiRNNCell:()=>Nc,multinomial:()=>Cc,neg:()=>ec,norm:()=>Nu,notEqual:()=>Tc,oneHot:()=>$c,ones:()=>xc,onesLike:()=>Ec,op:()=>Ya,outerProduct:()=>Rc,pad:()=>_c,pad1d:()=>Ac,pad2d:()=>Fc,pad3d:()=>Oc,pad4d:()=>Dc,pool:()=>Lc,pow:()=>xu,prelu:()=>zc,print:()=>_o,prod:()=>Pc,raggedGather:()=>Bc,raggedRange:()=>Wc,raggedTensorToTensor:()=>Vc,rand:()=>Uc,randomGamma:()=>ld,randomNormal:()=>ud,randomStandardNormal:()=>cd,randomUniform:()=>dd,randomUniformInt:()=>hd,range:()=>pd,real:()=>fd,reciprocal:()=>md,relu:()=>gd,relu6:()=>yd,reshape:()=>cl,reverse:()=>bd,reverse1d:()=>xd,reverse2d:()=>vd,reverse3d:()=>wd,reverse4d:()=>kd,rfft:()=>Bd,round:()=>Sd,rsqrt:()=>Id,scalar:()=>vu,scatterND:()=>mh,searchSorted:()=>dc,selu:()=>Nd,separableConv2d:()=>Cd,setdiff1dAsync:()=>Td,sigmoid:()=>ml,sign:()=>$d,signal:()=>Rp,sin:()=>Ed,sinh:()=>Rd,slice:()=>gl,slice1d:()=>_d,slice2d:()=>Ad,slice3d:()=>Fd,slice4d:()=>Od,softmax:()=>Dd,softplus:()=>tc,spaceToBatchND:()=>Mc,sparse:()=>Op,sparseToDense:()=>gh,spectral:()=>Ep,split:()=>Pd,sqrt:()=>wu,square:()=>ku,squaredDifference:()=>Wd,squeeze:()=>Vd,stack:()=>Ud,step:()=>Zd,stridedSlice:()=>Gd,string:()=>Dp,sub:()=>rc,sum:()=>Su,tan:()=>jd,tanh:()=>yl,tensor:()=>ei,tensor1d:()=>Hd,tensor2d:()=>qd,tensor3d:()=>Kd,tensor4d:()=>Xd,tensor5d:()=>Yd,tensor6d:()=>Jd,tensorScatterUpdate:()=>nh,tile:()=>Ru,topk:()=>rh,transpose:()=>ph,truncatedNormal:()=>sh,unique:()=>ah,unsortedSegmentSum:()=>ih,unstack:()=>oh,upperBound:()=>lh,variable:()=>uh,where:()=>tu,whereAsync:()=>dh,zeros:()=>bc,zerosLike:()=>nu});var G={};n.r(G),n.d(G,{CSVDataset:()=>ZT,Dataset:()=>AT,FileDataSource:()=>s$,TextLineDataset:()=>LT,URLDataSource:()=>a$,array:()=>OT,csv:()=>i$,func:()=>o$,generator:()=>l$,microphone:()=>c$,version_data:()=>d$,webcam:()=>u$,zip:()=>DT});var j={};n.r(j),n.d(j,{addImpl:()=>R$,bincountImpl:()=>O$,bincountReduceImpl:()=>D$,bitwiseAndImpl:()=>M$,castImpl:()=>N$,ceilImpl:()=>V$,concatImpl:()=>G$,equalImpl:()=>j$,expImpl:()=>K$,expm1Impl:()=>J$,floorDivImpl:()=>sE,floorImpl:()=>tE,gatherNdImpl:()=>oE,gatherV2Impl:()=>lE,greaterEqualImpl:()=>hE,greaterImpl:()=>uE,lessEqualImpl:()=>bE,lessImpl:()=>mE,linSpaceImpl:()=>wE,logImpl:()=>kE,maxImpl:()=>NE,maximumImpl:()=>CE,minimumImpl:()=>EE,multiplyImpl:()=>AE,negImpl:()=>ME,notEqualImpl:()=>zE,prodImpl:()=>ZE,raggedGatherImpl:()=>KE,raggedRangeImpl:()=>YE,raggedTensorToTensorImpl:()=>nR,rangeImpl:()=>rR,rsqrtImpl:()=>sR,scatterImpl:()=>oR,sigmoidImpl:()=>lR,simpleAbsImpl:()=>m$,sliceImpl:()=>dR,sparseFillEmptyRowsImpl:()=>fR,sparseReshapeImpl:()=>mR,sparseSegmentReductionImpl:()=>gR,sqrtImpl:()=>yR,squaredDifferenceImpl:()=>vR,staticRegexReplaceImpl:()=>SR,stridedSliceImpl:()=>CR,stringNGramsImpl:()=>$R,stringSplitImpl:()=>RR,stringToHashBucketFastImpl:()=>_R,subImpl:()=>AR,tileImpl:()=>MR,topKImpl:()=>PR,transposeImpl:()=>WE,uniqueImpl:()=>BR});var H={};n.r(H),n.d(H,{assertNotComplex:()=>tM,bindCanvasToFramebuffer:()=>ED,bindColorTextureToFramebuffer:()=>RD,bindTextureToProgramUniformSampler:()=>$D,bindTextureUnit:()=>ID,bindVertexBufferToProgramAttribute:()=>SD,callAndCheck:()=>sD,canBeRepresented:()=>oD,createFragmentShader:()=>dD,createFramebuffer:()=>kD,createProgram:()=>fD,createStaticIndexBuffer:()=>bD,createStaticVertexBuffer:()=>yD,createTexture:()=>vD,createVertexShader:()=>cD,getBatchDim:()=>MD,getExtensionOrThrow:()=>uD,getFramebufferErrorMessage:()=>FD,getMaxTexturesInShader:()=>HD,getNumChannels:()=>xD,getProgramUniformLocation:()=>TD,getProgramUniformLocationOrThrow:()=>CD,getRowsCols:()=>LD,getShapeAs3D:()=>zD,getTextureShapeFromLogicalShape:()=>PD,getWebGLDisjointQueryTimerVersion:()=>qD,getWebGLErrorMessage:()=>lD,getWebGLMaxTextureSize:()=>ZD,hasExtension:()=>KD,isCapableOfRenderingToFloatTexture:()=>YD,isDownloadFloatTextureEnabled:()=>JD,isReshapeFree:()=>WD,isWebGLFenceEnabled:()=>eM,isWebGLVersionEnabled:()=>XD,linkProgram:()=>mD,logShaderSourceAndInfoLog:()=>pD,resetMaxTextureSize:()=>GD,resetMaxTexturesInShader:()=>jD,unbindColorTextureFromFramebuffer:()=>_D,unbindTextureUnit:()=>ND,validateFramebuffer:()=>AD,validateProgram:()=>gD,validateTextureSize:()=>wD});var q={};n.r(q),n.d(q,{bindVertexProgramAttributeStreams:()=>qM,createBufferFromOutputTexture:()=>YM,createFloat16MatrixTexture:()=>WM,createFloat16PackedMatrixTexture:()=>HM,createFloat32MatrixTexture:()=>PM,createIndexBuffer:()=>MM,createPackedMatrixTexture:()=>GM,createUnsignedBytesMatrixTexture:()=>UM,createVertexBuffer:()=>DM,createVertexShader:()=>OM,downloadByteEncodedFloatMatrixFromOutputTexture:()=>QM,downloadFloat32MatrixFromBuffer:()=>JM,downloadMatrixFromPackedOutputTexture:()=>tL,downloadPackedMatrixFromBuffer:()=>eL,getInternalFormatForFloat16MatrixTexture:()=>BM,getInternalFormatForFloat16PackedMatrixTexture:()=>jM,getInternalFormatForFloat32MatrixTexture:()=>zM,getInternalFormatForPackedMatrixTexture:()=>ZM,getInternalFormatForUnsignedBytesMatrixTexture:()=>VM,uploadDenseMatrixToTexture:()=>KM,uploadPixelDataToTexture:()=>XM});class K{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class X{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}readToGPU(e,t){return Y("readToGPU")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,r,s){return Y("move")}createTensorFromGPUData(e,t,n){return Y("createTensorFromGPUData")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Y("dispose")}}function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function J(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ne(e,t,n)}function Q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2==0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function oe(e,t,n=""){ie(he(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function le(e){ie(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function de(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pe(e){return e%1==0}function fe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function me(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ge(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return J(t),t}function ye(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function be(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ve(e,t){const n=t.length;return ie((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ie(e.every((e=>pe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function we(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ve(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ke(e,t){return Se(e,t)}function Se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ie(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ne(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ce(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Te(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function $e(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ee(e){return"string"==typeof e||e instanceof String}function Re(e){return"boolean"==typeof e}function _e(e){return"number"==typeof e}function Ae(e){return Array.isArray(e)?Ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":_e(e)?"float32":Ee(e)?"string":Re(e)?"bool":"float32"}function Fe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oe(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function De(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Me(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Me(e+t*o,i,n,r)}return s}function Le(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Me(0,e,t,n)}function ze(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Pe(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function We(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Le(e,new Float32Array(n));if("int32"===t)return Le(e,new Int32Array(n));if("bool"===t)return Le(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ve(e){e.forEach((t=>{ie(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ue(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ze(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Ge(e){return e&&e.then&&"function"==typeof e.then}const je="tfjsflags";class He{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ge(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(je in e){e[je].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function qe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ke(){return Ye}let Xe,Ye=null;function Je(){if(null==Xe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Xe=e}return Xe}function Qe(e,t){const n=function(){const e=Je();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const et="Abs",tt="Acos",nt="Acosh",rt="Add",st="AddN",at="All",it="Any",ot="ArgMax",lt="ArgMin",ut="Asin",ct="Asinh",dt="Atan",ht="Atanh",pt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",yt="AvgPool3DGrad",bt="BatchMatMul",xt="BatchToSpaceND",vt="Bincount",wt="BitwiseAnd",kt="BroadcastTo",St="BroadcastArgs",It="Cast",Nt="Ceil",Ct="ClipByValue",Tt="Complex",$t="ComplexAbs",Et="Concat",Rt="Conv2D",_t="Conv2DBackpropFilter",At="Conv2DBackpropInput",Ft="Conv3D",Ot="Conv3DBackpropFilterV2",Dt="Conv3DBackpropInputV2",Mt="Cos",Lt="Cosh",zt="Cumprod",Pt="Cumsum",Bt="CropAndResize",Wt="DenseBincount",Vt="DepthToSpace",Ut="DepthwiseConv2dNative",Zt="DepthwiseConv2dNativeBackpropFilter",Gt="DepthwiseConv2dNativeBackpropInput",jt="Diag",Ht="Dilation2D",qt="Dilation2DBackpropInput",Kt="Dilation2DBackpropFilter",Xt="Draw",Yt="RealDiv",Jt="Einsum",Qt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",sn="ExpandDims",an="Expm1",on="FFT",ln="Fill",un="FlipLeftRight",cn="Floor",dn="FloorDiv",hn="FusedBatchNorm",pn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",vn="IsFinite",wn="IsInf",kn="IsNan",Sn="LeakyRelu",In="Less",Nn="LessEqual",Cn="LinSpace",Tn="Log",$n="Log1p",En="LogicalAnd",Rn="LogicalNot",_n="LogicalOr",An="LogicalXor",Fn="LogSoftmax",On="LowerBound",Dn="LRN",Mn="LRNGrad",Ln="MatrixBandPart",zn="Max",Pn="Maximum",Bn="MaxPool",Wn="MaxPoolGrad",Vn="MaxPool3D",Un="MaxPool3DGrad",Zn="MaxPoolWithArgmax",Gn="Mean",jn="Min",Hn="Minimum",qn="MirrorPad",Kn="Mod",Xn="Multinomial",Yn="Multiply",Jn="Neg",Qn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",ir="PadV2",or="Pool",lr="Pow",ur="Prelu",cr="Prod",dr="RaggedGather",hr="RaggedRange",pr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",vr="ResizeNearestNeighborGrad",wr="ResizeBilinear",kr="ResizeBilinearGrad",Sr="Relu6",Ir="Reverse",Nr="Round",Cr="Rsqrt",Tr="ScatterNd",$r="TensorScatterUpdate",Er="SearchSorted",Rr="Select",_r="Selu",Ar="Slice",Fr="Sin",Or="Sinh",Dr="Sign",Mr="Sigmoid",Lr="Softplus",zr="Sqrt",Pr="Sum",Br="SpaceToBatchND",Wr="SplitV",Vr="Softmax",Ur="SparseFillEmptyRows",Zr="SparseReshape",Gr="SparseSegmentMean",jr="SparseSegmentSum",Hr="SparseToDense",qr="SquaredDifference",Kr="Square",Xr="StaticRegexReplace",Yr="StridedSlice",Jr="StringNGrams",Qr="StringSplit",es="StringToHashBucketFast",ts="Sub",ns="Tan",rs="Tanh",ss="Tile",as="TopK",is="Transform",os="Transpose",ls="Unique",us="Unpack",cs="UnsortedSegmentSum",ds="UpperBound",hs="ZerosLike",ps="Step",fs="FromPixels",ms="RotateWithOffset",gs="_FusedMatMul",ys="FusedConv2D",bs="FusedDepthwiseConv2D";function xs(...e){Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.warn(...e)}function vs(...e){Ke().getBool("IS_TEST")||Ke().getBool("PROD")||console.log(...e)}const ws=Qe("kernelRegistry",(()=>new Map)),ks=Qe("gradRegistry",(()=>new Map));function Ss(e,t){const n=_s(e,t);return ws.get(n)}function Is(e){return ks.get(e)}function Ns(e){const t=ws.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Cs(e){const{kernelName:t,backendName:n}=e,r=_s(t,n);ws.has(r)&&xs(`The kernel '${t}' for backend '${n}' is already registered`),ws.set(r,e)}function Ts(e){const{kernelName:t}=e;ks.has(t)&&Ke().getBool("DEBUG")&&xs(`Overriding the gradient for '${t}'`),ks.set(t,e)}function $s(e,t){const n=_s(e,t);if(!ws.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ws.delete(n)}function Es(e){if(!ks.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ks.delete(e)}function Rs(e,t){Ns(e).forEach((e=>{Cs(Object.assign({},e,{backendName:t}))}))}function _s(e,t){return`${t}_${e}`}function As(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Fs=n(81690);const Os=n.n(Fs)()||Fs;function Ds(e){return Os.fromString(e,!0,16)}const Ms=Ds("c3a5c85c97cb3127"),Ls=Ds("b492b66fbe98f273"),zs=Ds("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Bs(e,t,n){const r=e.slice(t,t+n);return Os.fromBytes(Array.from(r),!0,!0)}function Ws(e,t){return Bs(e,t,8)}function Vs(e,t){return Bs(e,t,4)}function Us(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Zs(e,t,n=Ds("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Gs(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Us(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Us(s,44)),[s.add(r),a.add(i)]}(Ws(e,t),Ws(e,t+8),Ws(e,t+16),Ws(e,t+24),n,r)}function js(e,t=e.length){const n=Os.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zs.add(2*t),r=Ws(e,0).add(zs),s=Ws(e,t-8);return Zs(Us(s,37).mul(n).add(r),Us(r,25).add(s).mul(n),n)}if(t>=4){const n=zs.add(2*t);return Zs(Vs(e,0).shl(3).add(t),Vs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ps(zs.mul(n).xor(Ms.mul(r))).mul(zs)}return zs}(e,t):function(e,t=e.length){const n=zs.add(2*t),r=Ws(e,0).mul(Ls),s=Ws(e,8),a=Ws(e,t-8).mul(n),i=Ws(e,t-16).mul(zs);return Zs(Us(r.add(s),43).add(Us(a,30)).add(i),r.add(Us(s.add(zs),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zs.add(2*t),r=Ws(e,0).mul(zs),s=Ws(e,8),a=Ws(e,t-8).mul(n),i=Ws(e,t-16).mul(zs),o=Us(r.add(s),43).add(Us(a,30)).add(i),l=Zs(o,r.add(Us(s.add(zs),18)).add(a),n),u=Ws(e,16).mul(n),c=Ws(e,24),d=o.add(Ws(e,t-32)).mul(n),h=l.add(Ws(e,t-24)).mul(n);return Zs(Us(u.add(c),43).add(Us(d,30)).add(h),u.add(Us(c.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(Ls).add(113),a=Ps(s.mul(zs).add(113)).mul(zs),i=[Os.UZERO,Os.UZERO],o=[Os.UZERO,Os.UZERO];r=r.mul(zs).add(Ws(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Us(r.add(s).add(i[0]).add(Ws(e,l+8)),37).mul(Ls),s=Us(s.add(i[1]).add(Ws(e,l+48)),42).mul(Ls),r=r.xor(o[1]),s=s.add(i[0]).add(Ws(e,l+40)),a=Us(a.add(o[0]),33).mul(Ls),i=Gs(e,l,i[1].mul(Ls),r.add(o[0])),o=Gs(e,l+32,a.add(o[1]),s.add(Ws(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const d=Ls.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Us(r.add(s).add(i[0]).add(Ws(e,l+8)),37).mul(d),s=Us(s.add(i[1]).add(Ws(e,l+48)),42).mul(d),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Ws(e,l+40))),a=Us(a.add(o[0]),33).mul(d),i=Gs(e,l,i[1].mul(d),r.add(o[0])),o=Gs(e,l+32,a.add(o[1]),s.add(Ws(e,l+16))),[a,r]=[r,a],Zs(Zs(i[0],o[0],d).add(Ps(s).mul(Ms)).add(a),Zs(i[1],o[1],d).add(r),d)}function Hs(e,t){return"string"===t?Ys(e):qs([e],t)}function qs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ea(e)),Ke().getBool("DEBUG")&&Ie(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ks(){return Ke().platform.now()}function Xs(e,t){return Ke().platform.fetch(e,t)}function Ys(e,t="utf-8"){return t=t||"utf-8",Ke().platform.encode(e,t)}function Js(e,t="utf-8"){return t=t||"utf-8",Ke().platform.decode(e,t)}function Qs(e){return null!=Ke().platform.isTypedArray?Ke().platform.isTypedArray(e):As(e)}function ea(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Ge(e)||null==e||Qs(e)&&n)t.push(e);else if(Array.isArray(e)||Qs(e))for(let r=0;r<e.length;++r)ea(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ea(e[s],t,n)}return t}class ta{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Ks();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Ks()-i})}if(Ke().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{na(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ra{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?ye(`${r}ms`,9):r.error,o=ye(e,25),l=t.rank,u=t.size,c=ye(t.shape.toString(),14);let d="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;d+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const sa=20,aa=3,ia=7;function oa(e,t,n,r){const s=De(t),a=function(e,t,n,r){const s=ue(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?da(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],la(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=ca(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function la(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(ia))} + ${parseFloat(e[1].toFixed(ia))}j`:Ee(e)?`'${e}'`:"bool"===n?ua(e):parseFloat(e.toFixed(ia)).toString(),ye(r,t)}function ua(e){return 0===e?"false":"true"}function ca(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[la(da(e)[0],0,n)]}return"bool"===n?[ua(e[0])]:[e[0].toString()]}if(1===l){if(o>sa){const t=aa*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-aa)*i,o*i));return"complex64"===n&&(r=da(r),a=da(a)),["["+r.map(((e,t)=>la(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>la(e,s[o-aa+t],n))).join(", ")+"]"]}return["["+("complex64"===n?da(e):Array.from(e)).map(((e,t)=>la(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>sa){for(let t=0;t<aa;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,!1))}h.push("...");for(let t=o-aa;t<o;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,a=r+d;h.push(...ca(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";h[0]="["+(o>0?h[0]+p:"");for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function da(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ha{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),null!=n){const e=n.length;ie(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Se(t,this.size),this.strides=De(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pa().makeTensor(this.values,this.shape,this.dtype)}}let pa=null,fa=null,ma=null;class ga{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=De(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fa.buffer(this.shape,this.dtype,e)}bufferSync(){return fa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Le(this.shape,e,"complex64"===this.dtype)}arraySync(){return Le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=pa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),pa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=pa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Js(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),pa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fa.print(this,e)}clone(){return this.throwIfDisposed(),fa.clone(this)}toString(e=!1){return oa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),pa().makeVariable(this,e,t,n)}}function ya(){return Qe("Tensor",(()=>ga))}Object.defineProperty(ga,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ya();class ba extends ga{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!he(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pa().disposeTensor(this),this.dataId=e.dataId,pa().incRef(this,null)}dispose(){pa().disposeVariable(this),this.isDisposedInternal=!0}}var xa,va,wa,ka,Sa;Object.defineProperty(ba,Symbol.hasInstance,{value:e=>e instanceof ga&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(xa||(xa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(va||(va={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(wa||(wa={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ka||(ka={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Sa||(Sa={}));const Ia={float32:ka,int32:va,bool:wa,complex64:Sa};function Na(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ia[e][t]}function Ca(e){return Na(e,"int32")}function Ta(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function $a(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ea(e,t){if(e.dtype===t.dtype)return[e,t];const n=Na(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ra(e,t){ie(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function _a(e,t){return t.some((t=>t.id===e.id))}function Aa(e){const t=[];return Fa(e,t,new Set),t}function Fa(e,t,n){if(null==e)return;if(e instanceof ga)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Fa(r,t,n))}}function Oa(e){return null!=e.kernelName}class Da{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Da}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ta(this.backendInstance),!0}setupRegisteredKernels(){Ns(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ns(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof X||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return xs(`Initialization of backend ${e} failed`),xs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ma.nextTensorId++}nextVariableId(){return Ma.nextVariableId++}clone(e){const t=za.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return za.runKernel(It,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ss(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Oa(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Oa(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Ss(t,this.backendName);ie(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,d=Oa(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=i()})),r&&this.addTapeNode(l,u,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Is(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ie(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Ee(e[0])&&(s=e.map((e=>Ys(e))));const a=r.write(s,t,n),i=new ga(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=$e(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new ga(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ba(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Te(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ba||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Te(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Is(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Aa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ie(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ie(s instanceof ga,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Pe(ue(e),"float32");return za.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!he(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Pa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return ie(Fe(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ie(t.every((e=>e instanceof ga)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ie(n.value instanceof ga,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ie(Fe(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ie(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ie(a.every((e=>e instanceof ga)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ks(),n=await this.backend.time(e);return n.wallMs=Ks()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Da;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function La(){const e=Je();if(null==e._tfengine){const t=new He(e);e._tfengine=new Ma(t)}var t;return t=e._tfengine.ENV,Ye=t,pa=()=>e._tfengine,e._tfengine}Ma.nextTensorId=0,Ma.nextVariableId=0;const za=La();function Pa(e,t){const n={a:e,b:t};return za.runKernel(rt,n)}let Ba;function Wa(e){Ba=e}function Va(e){if(void 0!==Ba)return Ba;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ua(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Za=Ke();function Ga(e,t){let n=e;if(Qs(e))return"string"===t?[]:[e.length];if(Ta(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if($a(e))return[e.buffer.size/(null==t?4:Te(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Qs(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ke().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ja(e,r,[]),r}function ja(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qs(e))return void ie(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ie(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ie(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ja(e[t],r,n.concat(t))}function Ha(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function qa(e,t,n,r="numeric"){if(e instanceof ya())return Ha(r,e.dtype,t,n),e;let s=Ae(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ha(r,s,t,n),null==e||!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ga(e,s);Qs(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?qs(e,s):ea(e,[],!0);return za.makeTensor(i,a,s)}function Ka(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>qa(e,`${t}[${s}]`,n,r)))}Za.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Za.registerFlag("IS_BROWSER",(()=>Ua())),Za.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Za.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Za.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Za.registerFlag("PROD",(()=>!1)),Za.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Za.getBool("DEBUG"))),Za.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Za.registerFlag("IS_TEST",(()=>!1)),Za.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Za.getBool("DEBUG"))),Za.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Za.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Za.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Xa="__op";function Ya(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Xa;const s=(...e)=>{za.startScope(n);try{const t=r(...e);return Ge(t)&&console.error("Cannot return a Promise inside of tidy."),za.endScope(t),t}catch(e){throw za.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ja=Ya({complex_:function(e,t){const n=qa(e,"real","complex"),r=qa(t,"imag","complex");oe(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return za.runKernel(Tt,s)}});function Qa(e,t,n,r){if(null==r)r=Ae(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if($a(e)||Ta(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return za.backend.createTensorFromGPUData(e,t||n,r)}if(!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ve(t);const e=ue(t),r=ue(n);ie(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==ue(t.slice(e));ie(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Qs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?qs(e,r):ea(e,[],!0),za.makeTensor(e,t,r)}function ei(e,t,n){return Qa(e,t,Ga(e,n),n)}const ti={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ni{static join(e){return new ni(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Qs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ri(){Ke().set("PROD",!0)}function si(){Ke().set("DEBUG",!0)}function ai(){Ke().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ii(e){Ke().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function oi(){za.disposeVariables()}function li(){return za}function ui(){return za.memory()}function ci(e){return za.profile(e)}function di(e,t){return za.tidy(e,t)}function hi(e){Aa(e).forEach((e=>e.dispose()))}function pi(e){return za.keep(e)}function fi(e){return za.time(e)}function mi(e){return za.setBackend(e)}function gi(){return za.ready()}function yi(){return za.backendName}function bi(e){za.removeBackend(e)}function xi(e){return za.findBackend(e)}function vi(e){return za.findBackendFactory(e)}function wi(e,t,n=1){return za.registerBackend(e,t,n)}function ki(){return za.backend}function Si(e,t){Ke().setPlatform(e,t)}ma=ii;var Ii=n(58955).lW;const Ni=4;async function Ci(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ni*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=Ni,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Fi(await Promise.all(r)),specs:n}}function Ti(e,t){const n=new ni(e),r={};let s=0;for(const e of t){const t=$i(e,((e,t)=>n.slice(s+e,s+t)));r[e.name]=Ri(e,n.slice(s,s+t)),s+=t}return r}function $i(e,t){const n=ue(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ti[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ni+new Uint32Array(t(e,e+Ni))[0];return e}r=ti[e.dtype]}return n*r}async function Ei(e,t){const n=ue(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ti[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ni+new Uint32Array(await t(e,e+Ni))[0];return e}r=ti[e.dtype]}return n*r}function Ri(e,t){const n=e.name,r=e.dtype,s=e.shape,a=ue(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=ti[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}();i=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*l}else if("string"===r){const n=ue(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Ni))[0];o+=Ni;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=ti[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=ei(e,s,"float32"),a=ei(n,s,"float32"),o=Ja(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return ei(i,s,r)}async function _i(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function Ai(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await Ei(e,(async(e,t)=>(s=await _i(r,s,t),s.slice(e,t))));s=await _i(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=Ri(e,a);if(n[e.name]=i,"webgpu"===yi()){const e=ki();"uploadToGPU"in e&&ue(i.shape)>=Ke().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function Fi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Oi=void 0!==Ii&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Di(e){return Oi?Ii.byteLength(e,"utf8"):new Blob([e]).size}function Mi(e){return ni.join(e)}function Li(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function zi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Pi(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Bi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Pi(e,n,r)}function Wi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Di(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Di(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ni(e.weightData).byteLength}}function Vi(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ui{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ui.instance&&(Ui.instance=new Ui),Ui.instance}static registerSaveRouter(e){Ui.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ui.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ui.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ui.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ui.getInstance().loadRouters:Ui.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Zi=e=>Ui.registerSaveRouter(e),Gi=e=>Ui.registerLoadRouter(e),ji=e=>Ui.getSaveHandlers(e),Hi=(e,t)=>Ui.getLoadHandlers(e,t),qi="tensorflowjs",Ki="models_store",Xi="model_info_store";function Yi(){if(!Ke().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ji(e){const t=e.result;t.createObjectStore(Ki,{keyPath:"modelPath"}),t.createObjectStore(Xi,{keyPath:"modelPath"})}class Qi{constructor(e){if(this.indexedDB=Yi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Ji(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ki,"readonly"),r=t.objectStore(Ki).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=ni.join(t.weightData);const r=Wi(t),a=s.transaction(Xi,"readwrite");let i,o,l=a.objectStore(Xi);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Ki,"readwrite");const i=o.objectStore(Ki);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(Xi);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Qi.URL_SCHEME="indexeddb://";const eo=e=>{return Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qi.URL_SCHEME)?(t=e.slice(Qi.URL_SCHEME.length),new Qi(t)):null;var t};Ui.registerSaveRouter(eo),Ui.registerLoadRouter(eo);class to{constructor(){this.indexedDB=Yi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qi,1);n.onupgradeneeded=()=>Ji(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xi,"readonly"),a=s.objectStore(Xi).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Qi.URL_SCHEME)?t.slice(Qi.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qi,1);r.onupgradeneeded=()=>Ji(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Xi,"readwrite"),i=a.objectStore(Xi),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Ki,"readwrite");const r=l.objectStore(Ki).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const no="/",ro="tensorflowjs_models",so="info",ao="model_topology",io="weight_specs",oo="weight_data",lo="model_metadata";function uo(e){return{info:[ro,e,so].join(no),topology:[ro,e,ao].join(no),weightSpecs:[ro,e,io].join(no),weightData:[ro,e,oo].join(no),modelMetadata:[ro,e,lo].join(no)}}function co(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ho(e){const t=e.split(no);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(no)}class po{constructor(e){if(!Ke().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=uo(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Wi(e),s=ni.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Oi)return Ii.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw co(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Oi){const t=Ii.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}po.URL_SCHEME="localstorage://";const fo=e=>{return Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(po.URL_SCHEME)?(t=e.slice(po.URL_SCHEME.length),new po(t)):null;var t};Ui.registerSaveRouter(fo),Ui.registerLoadRouter(fo);class mo{constructor(){ie(Ke().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ie("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ro+no,n=no+so;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ho(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=uo(e=(t=e).startsWith(po.URL_SCHEME)?t.slice(po.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return co(n),r}}const go="://";class yo{constructor(){this.managers={}}static getInstance(){return null==yo.instance&&(yo.instance=new yo),yo.instance}static registerManager(e,t){ie(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(go)&&(e=e.slice(0,e.indexOf(go))),ie(e.length>0,(()=>"scheme must not be an empty string."));const n=yo.getInstance();ie(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=yo.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(yo.getInstance().managers)}}function bo(e){if(-1===e.indexOf(go))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${yo.getSchemes().join(",")}`);return{scheme:e.split(go)[0],path:e.split(go)[1]}}async function xo(e,t,n=!1){ie(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ui.getLoadHandlers(e);ie(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ie(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Ui.getSaveHandlers(t);ie(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ie(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=bo(e).scheme,l=bo(e).path,u=o===bo(e).scheme,c=await s.load();n&&u&&await yo.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await yo.getManager(o).removeModel(l),d.modelArtifactsInfo}async function vo(){const e=yo.getSchemes(),t={};for(const n of e){const e=await yo.getManager(n).listModels();for(const r in e){t[n+go+r]=e[r]}}return t}async function wo(e){const t=bo(e);return yo.getManager(t.scheme).removeModel(t.path)}async function ko(e,t){return xo(e,t,!1)}async function So(e,t){return xo(e,t,!0)}class Io{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ke().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return As(e)}}if(Ke().get("IS_BROWSER")){Ke().setPlatform("browser",new Io);try{yo.registerManager(po.URL_SCHEME,new mo)}catch(e){}try{yo.registerManager(Qi.URL_SCHEME,new to)}catch(e){}}const No=()=>n(88658);let Co;class To{constructor(){this.util=n(7189),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ke().global.fetch?Ke().global.fetch(e,t):(null==Co&&(Co=No()),Co(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function $o(e,t="float32",n){return t=t||"float32",Ve(e),new ha(e,t,n)}Ke().get("IS_NODE")&&!Ke().get("IS_BROWSER")&&Ke().setPlatform("node",new To);const Eo=Ya({cast_:function(e,t){const n=qa(e,"x","cast");if(!Ne(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return za.runKernel(It,r,s)}});const Ro=Ya({clone_:function(e){const t={x:qa(e,"x","clone","string_or_numeric")};return za.runKernel(yn,t)}});function _o(e,t=!1){console.log(e.toString(t))}La();fa={buffer:$o,cast:Eo,clone:Ro,print:_o};const Ao=Ya({add_:function(e,t){let n=qa(e,"a","add"),r=qa(t,"b","add");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(rt,s)}});const Fo=Ya({floorDiv_:function(e,t){let n=qa(e,"a","floorDiv"),r=qa(t,"b","floorDiv");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(dn,s)}});const Oo=Ya({div_:function(e,t){let n=qa(e,"a","div"),r=qa(t,"b","div");if([n,r]=Ea(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Fo(n,r);const s={a:n,b:r};return za.runKernel(Yt,s,{})}});const Do=Ya({mul_:function(e,t){let n=qa(e,"a","mul"),r=qa(t,"b","mul");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(Yn,s)}});const Mo=Ya({abs_:function(e){const t=qa(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return za.runKernel($t,e)}{const e={x:t};return za.runKernel(et,e)}}});const Lo=Ya({acos_:function(e){const t={x:qa(e,"x","acos")};return za.runKernel(tt,t)}});const zo=Ya({acosh_:function(e){const t={x:qa(e,"x","acosh")};return za.runKernel(nt,t)}});const Po=Ya({addN_:function(e){ie(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ie(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>qa(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!he(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return za.runKernel(st,r)}});const Bo=Ya({all_:function(e,t=null,n=!1){const r={x:qa(e,"x","all","bool")},s={axis:t,keepDims:n};return za.runKernel(at,r,s)}});const Wo=Ya({any_:function(e,t=null,n=!1){const r={x:qa(e,"x","any","bool")},s={axis:t,keepDims:n};return za.runKernel(it,r,s)}});const Vo=Ya({argMax_:function(e,t=0){const n={x:qa(e,"x","argMax")},r={axis:t};return za.runKernel(ot,n,r)}});const Uo=Ya({argMin_:function(e,t=0){const n={x:qa(e,"x","argMin")},r={axis:t};return za.runKernel(lt,n,r)}});const Zo=Ya({asin_:function(e){const t={x:qa(e,"x","asin")};return za.runKernel(ut,t)}});const Go=Ya({asinh_:function(e){const t={x:qa(e,"x","asinh")};return za.runKernel(ct,t)}});const jo=Ya({atan_:function(e){const t={x:qa(e,"x","atan")};return za.runKernel(dt,t)}});const Ho=Ya({atan2_:function(e,t){let n=qa(e,"a","atan2"),r=qa(t,"b","atan2");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(pt,s)}});const qo=Ya({atanh_:function(e){const t={x:qa(e,"x","atanh")};return za.runKernel(ht,t)}});function Ko(e,t,n,r,s="NHWC",a){return Jo(e,[...t,e[3]],n,a,r,null,null,ll(s))}function Xo(e,t,n,r,s,a,i="channelsLast"){const[o,l]=tl(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Jo(e,u,n,r,s,a,!1,i)}function Yo(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=nl(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,l,u,e[1],e[1]]}return Qo(e,c,n,r,s,!1,d,a)}function Jo(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c]=e}const[h,p,,f]=t,[m,g]=tl(n),[y,b]=tl(r),x=rl(h,y),v=rl(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,r,s,a,i,o,l){let u,c,d;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=el(e,t,n));const a=e[0],i=e[1],o=sl((a-t+2*r)/n+1,s),l=sl((i-t+2*r)/n+1,s);return[o,l]}([t,n],a,r,e,o);c=s[0],d=s[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(d-1)*s+i-n),l=Math.floor(e/2),h=e-l,p=Math.floor(o/2);u={top:l,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=sl((t-a+h+p)/r+1,o),d=sl((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:d}}(s,u,c,m,g,x,v,a,o),I=i?f*d:f;let N;return"channelsFirst"===o?N=[l,I,k,S]:"channelsLast"===o&&(N=[l,k,S,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:k,outWidth:S,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function Qo(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c,d]=e}const[p,f,m,,g]=t,[y,b,x]=nl(n),[v,w,k]=nl(r),S=rl(p,v),I=rl(f,w),N=rl(m,k),{padInfo:C,outDepth:T,outHeight:$,outWidth:E}=function(e,t,n,r,s,a,i,o,l,u,c){let d,h,p,f;"valid"===e&&(e=0);if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=el(e,t[0],r[0]));const i=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=sl((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],1,[s,a,i],e,c);h=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(h-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);d={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(s,u,c,d,y,b,x,S,I,N,o),R=a?g*h:g;let _;return"channelsFirst"===i?_=[l,R,T,$,E]:"channelsLast"===i&&(_=[l,T,$,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:T,outHeight:$,outWidth:E,outChannels:R,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function el(e,t,n,r=1){const s=rl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function tl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function nl(e){return"number"==typeof e?[e,e,e]:e}function rl(e,t){return t<=1?e:e+(e-1)*(t-1)}function sl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function al(e){const[t,n,r]=tl(e);return 1===t&&1===n&&1===r}function il(e,t){return al(e)||al(t)}function ol(e){return tl(e).every((e=>e>0))}function ll(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ul(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ie(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const cl=Ya({reshape_:function(e,t){const n={x:qa(e,"x","reshape","string_or_numeric")},r={shape:t};return za.runKernel(br,n,r)}});const dl=Ya({avgPool_:function(e,t,n,r,s){const a=qa(e,"x","avgPool","float32");ie(il(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ul("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=za.runKernel(ft,l,u);return c=Eo(c,a.dtype),o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const hl=Ya({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=qa(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ie("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),ul("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let d=za.runKernel(gt,u,c);return d=Eo(d,o.dtype),l?cl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const pl=Ya({concat_:function(e,t=0){ie(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ka(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ro(n[0]);const r=n,s={axis:t};return za.runKernel(Et,r,s)}});const fl=Ya({matMul_:function(e,t,n=!1,r=!1){let s=qa(e,"a","matMul"),a=qa(t,"b","matMul");[s,a]=Ea(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return za.runKernel(bt,i,o)}});const ml=Ya({sigmoid_:function(e){const t={x:qa(e,"x","sigmoid","float32")};return za.runKernel(Mr,t)}});const gl=Ya({slice_:function(e,t,n){const r=qa(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return za.runKernel(Ar,s,a)}});const yl=Ya({tanh_:function(e){const t={x:qa(e,"x","tanh","float32")};return za.runKernel(rs,t)}});const bl=Ya({basicLSTMCell_:function(e,t,n,r,s,a){const i=qa(e,"forgetBias","basicLSTMCell"),o=qa(t,"lstmKernel","basicLSTMCell"),l=qa(n,"lstmBias","basicLSTMCell"),u=qa(r,"data","basicLSTMCell"),c=qa(s,"c","basicLSTMCell"),d=qa(a,"h","basicLSTMCell"),h=pl([u,d],1),p=fl(h,o),f=Ao(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=gl(f,[0,0],y),x=gl(f,[0,g],y),v=gl(f,[0,2*g],y),w=gl(f,[0,3*g],y),k=Ao(Do(ml(b),yl(x)),Do(c,ml(Ao(i,v))));return[k,Do(yl(k),ml(w))]}});const xl=Ya({batchToSpaceND_:function(e,t,n){const r=qa(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));ie(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ie(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ie(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return za.runKernel(xt,a,i)}});const vl=Ya({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=qa(e,"x","batchNorm"),o=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),ie(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:function(e){let t;return t=0===e.rank||1===e.rank?cl(e,[1,1,1,e.size]):2===e.rank?cl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},h={varianceEpsilon:a},p=za.runKernel(hn,d,h);return cl(p,i.shape)}});const wl=Ya({batchNorm2d_:function(e,t,n,r,s,a){const i=qa(e,"x","batchNorm"),o=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),ie(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ie(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ie(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),vl(i,o,l,c,u,a)}});const kl=Ya({batchNorm3d_:function(e,t,n,r,s,a){const i=qa(e,"x","batchNorm"),o=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),ie(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ie(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ie(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),vl(i,o,l,c,u,a)}});const Sl=Ya({batchNorm4d_:function(e,t,n,r,s,a){const i=qa(e,"x","batchNorm"),o=qa(t,"mean","batchNorm"),l=qa(n,"variance","batchNorm");let u,c;return null!=s&&(u=qa(s,"scale","batchNorm")),null!=r&&(c=qa(r,"offset","batchNorm")),ie(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ie(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ie(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),vl(i,o,l,c,u,a)}});const Il=Ya({bincount_:function(e,t,n){const r=qa(e,"x","bincount"),s=qa(t,"weights","bincount");ie("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return za.runKernel(vt,a,i)}});const Nl=Ya({bitwiseAnd_:function(e,t){const n=qa(e,"x","bitwiseAnd"),r=qa(t,"y","bitwiseAnd");if(!he(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return za.runKernel(wt,s)}});const Cl=Ya({broadcastArgs_:function(e,t){const n=qa(e,"s0","broadcastArgs","int32"),r=qa(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return za.runKernel(St,s)}});const Tl=Ya({broadcastTo_:function(e,t){let n=qa(e,"broadcastTo","x");const r=n.shape;if(Ve(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=cl(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ro(n);const i={x:n},o={reps:a};return za.runKernel(ss,i,o)}});const $l=Ya({ceil_:function(e){const t={x:qa(e,"x","ceil","float32")};return za.runKernel(Nt,t)}});function El(e,t,n){Ve(e);const r={shape:e,value:t,dtype:n=n||Ae(t)};return za.runKernel(ln,{},r)}const Rl=Ya({clipByValue_:function(e,t,n){const r=qa(e,"x","clipByValue");if(ie(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return El(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return za.runKernel(Ct,s,a)}});const _l=Ya({concat1d_:function(e){return pl(e,0)}});const Al=Ya({concat2d_:function(e,t){return pl(e,t)}});const Fl=Ya({concat3d_:function(e,t){return pl(e,t)}});const Ol=Ya({concat4d_:function(e,t){return pl(e,t)}});const Dl=Ya({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=qa(e,"x","conv2d","float32"),l=qa(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ul("conv2d",r,i);const d="NHWC"===s?u.shape[3]:u.shape[1];ie(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),ie(il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie(ol(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),ie(ol(n),(()=>"Error in conv2D: Strides should be larger than 0."));const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=za.runKernel(Rt,h,p);return c?cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ml=Ya({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=qa(e,"x","conv1d"),l=qa(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=cl(o,[1,o.shape[0],o.shape[1]])),ie(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ie(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ul("conv1d",r,i),ie(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ie(il(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),ie(ol(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),ie(ol(n),(()=>"Error in conv1D: Stride should be larger than 0.")),ie("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const d=cl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=cl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Dl(h,d,[1,n],r,"NHWC",[1,a],i);return cl(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Ll=Ya({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ie(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ie(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],d="NHWC"===a?l.shape[3]:l.shape[1];ie(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ie(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),ul("conv2dDerInput",s,i);const h={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=za.runKernel(At,h,p);return u?cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const zl=Ya({conv2dTranspose_:function(e,t,n,r,s,a){const i=qa(e,"x","conv2dTranspose"),o=qa(t,"filter","conv2dTranspose");return Ll(n,i,o,r,s,"NHWC",a)}});const Pl=Ya({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=qa(e,"x","conv3d"),o=qa(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ie(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ie(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ie(il(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),ie(ol(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),ie(ol(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},d={strides:n,pad:r,dataFormat:s,dilations:a},h=za.runKernel(Ft,c,d);return u?cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Bl=Ya({conv3DBackpropInput_:function(e,t,n,r,s){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];ie(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),ie(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ie(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ie(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ie(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:s,strides:r,inputShape:a},h=za.runKernel(Dt,c,d);return o?cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Wl=Ya({conv3dTranspose_:function(e,t,n,r,s){const a=qa(e,"x","conv3dTranspose"),i=qa(t,"filter","conv3dTranspose");return Bl(n,a,i,r,s)}});const Vl=Ya({cos_:function(e){const t={x:qa(e,"x","cos","float32")};return za.runKernel(Mt,t)}});const Ul=Ya({cosh_:function(e){const t={x:qa(e,"x","cosh","float32")};return za.runKernel(Lt,t)}});const Zl=Ya({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:qa(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return za.runKernel(zt,s,a)}});const Gl=Ya({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:qa(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return za.runKernel(Pt,s,a)}});const jl=Ya({denseBincount_:function(e,t,n,r=!1){const s=qa(e,"x","denseBincount"),a=qa(t,"weights","denseBincount");ie("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),ie(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return za.runKernel(Wt,i,o)}});const Hl=Ya({depthToSpace_:function(e,t,n="NHWC"){const r=qa(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ie(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ie(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ie(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ie(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return za.runKernel(Vt,o,l)}});const ql=Ya({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=qa(e,"x","depthwiseConv2d","float32"),l=qa(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const d="NHWC"===s?u.shape[3]:u.shape[1];ie(d===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ul("depthwiseConv2d",r,i);const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=za.runKernel(Ut,h,p);return c?cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Kl=Ya({diag_:function(e){const t={x:qa(e,"x","diag")};return za.runKernel(jt,t)}});const Xl=Ya({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=qa(e,"x","dilation2d"),o=qa(t,"filter","dilation2d");ie(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ie(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ie("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),ie(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},d={strides:n,pad:r,dilations:s},h=za.runKernel(Ht,c,d);return u?cl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});function Yl(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Jl(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ql(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}const eu=Ya({equal_:function(e,t){let n=qa(e,"a","equal","string_or_numeric"),r=qa(t,"b","equal","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(nn,s)}});const tu=Ya({where_:function(e,t,n){const r=qa(t,"a","where"),s=qa(n,"b","where"),a=qa(e,"condition","where","bool"),i=Ql(Ql(a.shape,r.shape),s.shape),o={condition:Tl(a,i),t:Tl(r,i),e:Tl(s,i)};return za.runKernel(Rr,o)}});const nu=Ya({zerosLike_:function(e){const t={x:qa(e,"x","zerosLike")};return za.runKernel(hs,t)}});const ru=Ya({divNoNan_:function(e,t){let n=qa(e,"a","div"),r=qa(t,"b","div");[n,r]=Ea(n,r);const s=Oo(n,r),a=nu(s),i=eu(r,a);return tu(i,a,s)}});const su=Ya({dot_:function(e,t){const n=qa(e,"t1","dot"),r=qa(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ie(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=cl(n,[1,-1]),t=cl(r,[-1,1]),s=fl(e,t);return cl(s,[])}if(1===n.rank&&2===r.rank){const e=cl(n,[1,-1]),t=cl(r,[r.shape[0],r.shape[1]]),s=fl(e,t);return cl(s,[s.size])}if(2===n.rank&&1===r.rank){const e=cl(r,[-1,1]),t=fl(n,e);return cl(t,[t.size])}{const e=cl(r,[r.shape[0],r.shape[1]]);return fl(n,e)}}});const au=Ya({einsum_:function(e,...t){const n=t.map(((e,t)=>qa(e,`tensors${t}`,"einsum"))),r={equation:e};return za.runKernel(Jt,n,r)}});const iu=Ya({elu_:function(e){const t={x:qa(e,"x","elu","float32")};return za.runKernel(Qt,t)}});const ou=Ya({ensureShape_:function(e,t){const n=qa(e,"x","ensureShape","string_or_numeric");if(!de(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const lu=Ya({erf_:function(e){let t=qa(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Eo(t,"float32"));const n={x:t};return za.runKernel(tn,n)}});function uu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function cu(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function du(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function hu(e,t){return cu(e,t.map((e=>1)),t)}function pu(e,t,n){ie(uu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function fu(e,t){if(uu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function mu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function gu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const yu=Ya({max_:function(e,t=null,n=!1){const r={x:qa(e,"x","max")},s={reductionIndices:t,keepDims:n};return za.runKernel(zn,r,s)}});const bu=Ya({min_:function(e,t=null,n=!1){const r={x:qa(e,"x","min")},s={axis:t,keepDims:n};return za.runKernel(jn,r,s)}});const xu=Ya({pow_:function(e,t){let n=qa(e,"base","pow"),r=qa(t,"exp","pow");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(lr,s)}});function vu(e,t){if((Qs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qa(e,[],[],t)}const wu=Ya({sqrt_:function(e){const t={x:qa(e,"x","sqrt","float32")};return za.runKernel(zr,t)}});const ku=Ya({square_:function(e){const t=qa(e,"x","square");return za.runKernel("Square",{x:t},{})}});const Su=Ya({sum_:function(e,t=null,n=!1){let r=qa(e,"x","sum");"bool"===r.dtype&&(r=Eo(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return za.runKernel(Pr,s,a)}});function Iu(e,t,n=null){if(0===e.rank)return Mo(e);if(1!==e.rank&&null===n)return Iu(cl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Su(Mo(e),n);if(t===1/0)return yu(Mo(e),n);if(t===-1/0)return bu(Mo(e),n);if("euclidean"===t||2===t)return wu(Su(xu(Mo(e),vu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return yu(Su(Mo(e),n[0]),n[1]-1);if(t===1/0)return yu(Su(Mo(e),n[1]),n[0]);if(t===-1/0)return bu(Su(Mo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return wu(Su(ku(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Nu=Ya({norm_:function(e,t="euclidean",n=null,r=!1){const s=Iu(e=qa(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ve(n,e.shape);a=hu(s.shape,t)}return cl(s,a)}});const Cu=Ya({euclideanNorm_:function(e,t=null,n=!1){return Nu(e,"euclidean",t,n)}});const Tu=Ya({exp_:function(e){const t={x:qa(e,"x","exp")};return za.runKernel(rn,t)}});const $u=Ya({expandDims_:function(e,t=0){const n=qa(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return za.runKernel(sn,r,s)}});const Eu=Ya({expm1_:function(e){const t={x:qa(e,"x","expm1")};return za.runKernel(an,t)}});const Ru=Ya({tile_:function(e,t){const n=qa(e,"x","tile","string_or_numeric");ie(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return za.runKernel(ss,r,s)}});const _u=Ya({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=$o([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=cl(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Ru($u(i,0),[n[0],1,1]);if(2===n.length)return Ru($u($u(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ru($u($u($u(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Au=Ya({floor_:function(e){const t={x:qa(e,"x","floor","float32")};return za.runKernel(cn,t)}});const Fu=Ya({gather_:function(e,t,n=0,r=0){const s={x:qa(e,"x","gather"),indices:qa(t,"indices","gather","int32")},a={axis:n,batchDims:r};return za.runKernel(pn,s,a)}});const Ou=Ya({greater_:function(e,t){let n=qa(e,"a","greater","string_or_numeric"),r=qa(t,"b","greater","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(mn,s)}});const Du=Ya({greaterEqual_:function(e,t){let n=qa(e,"a","greaterEqual","string_or_numeric"),r=qa(t,"b","greaterEqual","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(gn,s)}});const Mu=Ya({imag_:function(e){const t={input:qa(e,"input","imag")};return za.runKernel(xn,t)}});const Lu=Ya({isFinite_:function(e){const t={x:qa(e,"x","isFinite")};return za.runKernel(vn,t)}});const zu=Ya({isInf_:function(e){const t={x:qa(e,"x","isInf")};return za.runKernel(wn,t)}});const Pu=Ya({isNaN_:function(e){const t={x:qa(e,"x","isNaN")};return za.runKernel(kn,t)}});const Bu=Ya({leakyRelu_:function(e,t=.2){const n={x:qa(e,"x","leakyRelu")},r={alpha:t};return za.runKernel(Sn,n,r)}});const Wu=Ya({less_:function(e,t){let n=qa(e,"a","less","string_or_numeric"),r=qa(t,"b","less","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(In,s)}});const Vu=Ya({lessEqual_:function(e,t){let n=qa(e,"a","lessEqual","string_or_numeric"),r=qa(t,"b","lessEqual","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Nn,s)}});function Uu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return za.runKernel(Cn,{},r)}const Zu=Ya({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=qa(e,"x","localResponseNormalization");ie(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),ie(pe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=za.runKernel(Dn,l,u);return o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Gu=Ya({log_:function(e){const t={x:qa(e,"x","log","float32")};return za.runKernel(Tn,t)}});const ju=Ya({log1p_:function(e){const t={x:qa(e,"x","log1p")};return za.runKernel($n,t)}});function Hu(e){return ie(Fe(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=qa(t,"x","tf.grad","string_or_numeric"),s=null!=n?qa(n,"dy","tf.grad"):null;return za.tidy((()=>{const{value:t,grads:n}=za.gradients((()=>e(r)),[r],s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Qu(n),n[0]}))}}function qu(e){return ie(Fe(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ie(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ka(t,"args","tf.grads","string_or_numeric"),s=null!=n?qa(n,"dy","tf.grads"):null;return za.tidy((()=>{const{value:t,grads:n}=za.gradients((()=>e(...r)),r,s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qu(n),n}))}}function Ku(e){return ie(Fe(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ie(t instanceof ga,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ie(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=za.gradients((()=>e(t)),[t],n);return Qu(r),{grad:r[0],value:s}}}function Xu(e){return ie(Fe(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ie(Array.isArray(t)&&t.every((e=>e instanceof ga)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ie(null==n||n instanceof ga,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=za.gradients((()=>e(...t)),t,n);return null!=n&&oe(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qu(r.grads),r}}function Yu(e,t){ie(Fe(e),(()=>"The f passed in variableGrads(f) must be a function")),ie(null==t||Array.isArray(t)&&t.every((e=>e instanceof ba)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in za.registeredVariables)t.push(za.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),ie(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=za.gradients(e,t,null,!0);ie(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ie(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function Ju(e){return za.customGrad(e)}function Qu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const ec=Ya({neg_:function(e){const t={x:qa(e,"x","neg")};return za.runKernel(Jn,t)}});const tc=Ya({softplus_:function(e){const t={x:qa(e,"x","softplus")};return za.runKernel(Lr,t)}});const nc=Ya({logSigmoid_:function(e){const t=qa(e,"x","logSigmoid");return Ju((e=>({value:ec(tc(ec(e))),gradFunc:t=>Do(t,ml(ec(e)))})))(t)}});const rc=Ya({sub_:function(e,t){let n=qa(e,"a","sub"),r=qa(t,"b","sub");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(ts,s)}});const sc=Ya({logSoftmax_:function(e,t=-1){const n=qa(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ju(((e,n)=>{const r=yu(e,t,!0),s=rc(e,r),a=rc(Eo(s,"float32"),Gu(Su(Tu(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Tu(r);return rc(e,Do(Su(e,t,!0),s))}}}));return r(n)}});const ac=Ya({logSumExp_:function(e,t=null,n=!1){const r=qa(e,"x","logSumExp"),s=ve(t,r.shape),a=yu(r,s,!0),i=rc(r,a),o=Tu(i),l=Su(o,s),u=Gu(l),c=Ao(cl(a,u.shape),u);if(n){const e=hu(c.shape,s);return cl(c,e)}return c}});const ic=Ya({logicalAnd_:function(e,t){const n=qa(e,"a","logicalAnd","bool"),r=qa(t,"b","logicalAnd","bool");Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(En,s)}});const oc=Ya({logicalNot_:function(e){const t={x:qa(e,"x","logicalNot","bool")};return za.runKernel(Rn,t)}});const lc=Ya({logicalOr_:function(e,t){const n=qa(e,"a","logicalOr","bool"),r=qa(t,"b","logicalOr","bool");Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(_n,s)}});const uc=Ya({logicalXor_:function(e,t){const n=qa(e,"a","logicalXor","bool"),r=qa(t,"b","logicalXor","bool");return Ql(n.shape,r.shape),ic(lc(e,t),oc(ic(e,t)))}}),cc=2147483648;const dc=Ya({searchSorted_:function(e,t,n="left"){const r=qa(e,"sortedSequence","searchSorted"),s=qa(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=cl(r,[-1,a]),l=cl(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ue(l.shape)>=cc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=cc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return za.runKernel(Er,u,c)}});function hc(e,t){return dc(e,t,"left")}const pc=Ya({maxPool_:function(e,t,n,r,s){const a=qa(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ie(il(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ul("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=za.runKernel(Bn,l,u);return o?cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const fc=Ya({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=qa(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ul("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=za.runKernel(Vn,u,c);return l?cl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const mc=Ya({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:qa(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=za.runKernel(Zn,a,i);return{result:o[0],indexes:o[1]}}});const gc=Ya({maximum_:function(e,t){let n=qa(e,"a","maximum"),r=qa(t,"b","maximum");[n,r]=Ea(n,r),"bool"===n.dtype&&(n=Eo(n,"int32"),r=Eo(r,"int32")),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Pn,s)}});const yc=Ya({mean_:function(e,t=null,n=!1){const r={x:qa(e,"x","mean")},s={axis:t,keepDims:n};return za.runKernel(Gn,r,s)}});function bc(e,t="float32"){if(Ve(e),"complex64"===t){const t=bc(e,"float32"),n=bc(e,"float32");return Ja(t,n)}const n=Be(ue(e),t);return za.makeTensor(n,e,t)}function xc(e,t="float32"){if(Ve(e),"complex64"===t){const t=xc(e,"float32"),n=bc(e,"float32");return Ja(t,n)}const n=Pe(ue(e),t);return za.makeTensor(n,e,t)}function vc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=qa(e,"x","meshgrid",e instanceof ga?e.dtype:"float32");if(void 0===t)return[r];let s=qa(t,"y","meshgrid",t instanceof ga?t.dtype:"float32");const a=ue(r.shape),i=ue(s.shape);return"xy"===n?(r=cl(r,[1,-1]),s=cl(s,[-1,1]),[fl(xc([i,1],r.dtype),r),fl(s,xc([1,a],s.dtype))]):(r=cl(r,[-1,1]),s=cl(s,[1,-1]),[fl(r,xc([1,i],r.dtype)),fl(xc([a,1],s.dtype),s)])}const wc=Ya({minimum_:function(e,t){let n=qa(e,"a","minimum"),r=qa(t,"b","minimum");[n,r]=Ea(n,r),"bool"===n.dtype&&(n=Eo(n,"int32"),r=Eo(r,"int32")),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Hn,s)}});const kc=Ya({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=qa(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ie(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ie(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return za.runKernel(qn,i,a)}});const Sc=Ya({mod_:function(e,t){let n=qa(e,"a","mod"),r=qa(t,"b","mod");[n,r]=Ea(n,r);const s={a:n,b:r};return za.runKernel(Kn,s)}});const Ic=Ya({moments_:function(e,t=null,n=!1){const r=ve(t,(e=qa(e,"x","moments")).shape),s=yc(e,r,n);let a=s.shape;n||(a=hu(s.shape,r));const i=ku(rc(Eo(e,"float32"),cl(s,a)));return{mean:s,variance:yc(i,r,n)}}});const Nc=Ya({multiRNNCell_:function(e,t,n,r){const s=qa(t,"data","multiRNNCell"),a=Ka(n,"c","multiRNNCell"),i=Ka(r,"h","multiRNNCell");let o=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});const Cc=Ya({multinomial_:function(e,t,n,r=!1){const s=qa(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?cl(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=za.runKernel(Xn,o,l);return 1===i?cl(u,[u.size]):u}});const Tc=Ya({notEqual_:function(e,t){let n=qa(e,"a","notEqual","string_or_numeric"),r=qa(t,"b","notEqual","string_or_numeric");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(Qn,s)}});const $c=Ya({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:qa(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return za.runKernel(sr,a,i)}});const Ec=Ya({onesLike_:function(e){const t={x:qa(e,"x","onesLike")};return za.runKernel(rr,t)}});const Rc=Ya({outerProduct_:function(e,t){const n=qa(e,"v1","outerProduct"),r=qa(t,"v2","outerProduct");ie(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=cl(n,[-1,1]),a=cl(r,[1,-1]);return fl(s,a)}});const _c=Ya({pad_:function(e,t,n=0){const r=qa(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return za.runKernel(ir,a,s)}});const Ac=Ya({pad1d_:function(e,t,n=0){return ie(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),_c(e,[t],n)}});const Fc=Ya({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),_c(e,t,n)}});const Oc=Ya({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),_c(e,t,n)}});const Dc=Ya({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),_c(e,t,n)}});const Mc=Ya({spaceToBatchND_:function(e,t,n){const r=qa(e,"x","spaceToBatchND");ie(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ie(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ie(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return za.runKernel(Br,s,a)}});const Lc=Ya({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=qa(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(il(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Xo(l.shape,t,a,s,r),d=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],d,h),g=p?r:"valid",y=p?l:Mc(l,d,f),b=("avg"===n?()=>dl(y,t,a,g,i):()=>pc(y,t,a,g,i))(),x=p?b:xl(b,d,m);return u?cl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const zc=Ya({prelu_:function(e,t){const n={x:qa(e,"x","prelu"),alpha:qa(t,"alpha","prelu")};return za.runKernel(ur,n)}});const Pc=Ya({prod_:function(e,t=null,n=!1){let r=qa(e,"x","prod");"bool"===r.dtype&&(r=Eo(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return za.runKernel(cr,s,a)}});const Bc=Ya({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>qa(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:qa(t,"paramsDenseValues","raggedGather"),indices:qa(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=za.runKernel(dr,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Wc=Ya({raggedRange_:function(e,t,n){const r=qa(e,"starts","raggedRange"),s={starts:r,limits:qa(t,"limits","raggedRange",r.dtype),deltas:qa(n,"deltas","raggedRange",r.dtype)},a=za.runKernel(hr,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const Vc=Ya({raggedTensorToTensor_:function(e,t,n,r,s){const a=qa(e,"shape","raggedTensorToTensor","int32"),i=qa(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:qa(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>qa(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return za.runKernel(pr,o,l)}});const Uc=Ya({rand_:function(e,t,n){Ve(e);const r=ue(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return za.makeTensor(s,e,n)}});var Zc=n(53775);const Gc=.001,jc=.1;function Hc(e,t,n){return null==n&&(n=qc()),Kc(e,t,((e,t)=>Qc(e,t,n)))}function qc(){return 32===za.backend.floatPrecision()?Gc:jc}function Kc(e,t,n){let r=!0;if((Qs(e)||Qs(t))&&(r=!1),Qs(e)&&Qs(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ga(e),r=Ga(t);if(!he(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Qs(e)?e:ea(e),a=Qs(t)?t:ea(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function Xc(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Yc(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ee(e)||Ee(e[0])||Ee(t)||Ee(t[0])?Kc(e,n,((e,t)=>e==t)):Kc(e,t,((e,t)=>Qc(e,t,0)))}function Jc(e,t,n){if(null==n&&(n=qc()),!Qc(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Qc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ed(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function td(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function nd(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?nd(n):e[t]=Ys(n)}return e}function rd(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function sd(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}class ad{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Zc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class id{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Zc.alea(s.toString()),this.randn=new ad(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class od{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Zc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ld=Ya({randomGamma_:function(e,t,n=1,r="float32",s){if(Ve(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new id(t,n,r,s),i=$o(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const ud=Ya({randomNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new ad(t,n,r,!1,s),i=$o(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const cd=Ya({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return ud(e,0,1,t,n)}});const dd=Ya({randomUniform_:function(e,t=0,n=1,r="float32",s){Ve(e);const a=$o(e,r),i=new od(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});const hd=Ya({randomUniformInt_:function(e,t,n,r){return dd(e,t,n,"int32",r)}});function pd(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return za.runKernel(fr,{},s)}const fd=Ya({real_:function(e){const t={input:qa(e,"input","real")};return za.runKernel(mr,t)}});const md=Ya({reciprocal_:function(e){const t={x:qa(e,"x","reciprocal")};return za.runKernel(gr,t)}});const gd=Ya({relu_:function(e){const t={x:qa(e,"x","relu")};return za.runKernel(yr,t)}});const yd=Ya({relu6_:function(e){const t={x:qa(e,"x","relu6")};return za.runKernel(Sr,t)}});const bd=Ya({reverse_:function(e,t){const n={x:qa(e,"x","reverse")},r={dims:t};return za.runKernel(Ir,n,r)}});const xd=Ya({reverse1d_:function(e){const t=qa(e,"x","reverse");return ie(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),bd(t,0)}});const vd=Ya({reverse2d_:function(e,t){const n=qa(e,"x","reverse");return ie(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),bd(n,t)}});const wd=Ya({reverse3d_:function(e,t){const n=qa(e,"x","reverse");return ie(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),bd(n,t)}});const kd=Ya({reverse4d_:function(e,t){const n=qa(e,"x","reverse");return ie(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),bd(n,t)}});const Sd=Ya({round_:function(e){const t={x:qa(e,"x","round")};return za.runKernel(Nr,t)}});const Id=Ya({rsqrt_:function(e){const t={x:qa(e,"x","rsqrt","float32")};return za.runKernel(Cr,t)}});const Nd=Ya({selu_:function(e){const t={x:qa(e,"x","selu")};return za.runKernel(_r,t)}});const Cd=Ya({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=qa(e,"x","separableConv2d"),l=qa(t,"depthwiseFilter","separableConv2d"),u=qa(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ie(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ie(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ie(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const h=l.shape[2],p=l.shape[3];ie(u.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`));const f=ql(c,l,r,s,i,a),m=Dl(f,u,1,"valid",i);return d?cl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Td=async function(e,t){const n=qa(e,"x","setdiff1d"),r=qa(t,"y","setdiff1d");ie(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ie(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ie(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const l=new ha([o],n.dtype),u=new ha([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};const $d=Ya({sign_:function(e){const t={x:qa(e,"x","sign")};return za.runKernel(Dr,t)}});const Ed=Ya({sin_:function(e){const t={x:qa(e,"x","sin","float32")};return za.runKernel(Fr,t)}});const Rd=Ya({sinh_:function(e){const t={x:qa(e,"x","sinh")};return za.runKernel(Or,t)}});const _d=Ya({slice1d_:function(e,t,n){const r=qa(e,"x","slice1d");return ie(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),gl(r,[t],[n])}});const Ad=Ya({slice2d_:function(e,t,n){const r=qa(e,"x","slice2d");return ie(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),gl(r,t,n)}});const Fd=Ya({slice3d_:function(e,t,n){const r=qa(e,"x","slice3d");return ie(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),gl(r,t,n)}});const Od=Ya({slice4d_:function(e,t,n){const r=qa(e,"x","slice4d");return ie(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),gl(r,t,n)}});const Dd=Ya({softmax_:function(e,t=-1){const n=qa(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return za.runKernel(Vr,r,s)}});const Md=Ya({fft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return za.runKernel(on,t)}});const Ld=Ya({ifft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return za.runKernel(bn,t)}});const zd=Ya({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=cl(e,[n,t]);r=Ld(s)}else{const s=[n,2*(t-1)],a=cl(fd(e),[n,t]),i=cl(Mu(e),[n,t]),o=bd(gl(a,[0,1],[n,t-2]),1),l=Do(bd(gl(i,[0,1],[n,t-2]),1),vu(-1)),u=pl([a,o],1),c=pl([i,l],1),d=cl(Ja(u,c),[s[0],s[1]]);r=Ld(d)}if(r=fd(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=cl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Pd=Ya({split_:function(e,t,n=0){const r={x:qa(e,"x","split")},s={numOrSizeSplits:t,axis:n};return za.runKernel(Wr,r,s)}});const Bd=Ya({rfft_:function(e,t){ie("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=gl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=pl([e,bc(r)],e.shape.length-1),n=t}else s=e;const a=nu(s),i=cl(Ja(s,a),[r,n]),o=Md(i),l=Math.floor(n/2)+1,u=fd(o),c=Mu(o),d=Pd(u,[l,n-l],u.shape.length-1),h=Pd(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,cl(Ja(d[0],h[0]),p)}});const Wd=Ya({squaredDifference_:function(e,t){let n=qa(e,"a","squaredDifference"),r=qa(t,"b","squaredDifference");[n,r]=Ea(n,r),Ql(n.shape,r.shape);const s={a:n,b:r};return za.runKernel(qr,s,{})}});const Vd=Ya({squeeze_:function(e,t){const n=qa(e,"x","squeeze","string_or_numeric");return cl(n,we(n.shape,t).newShape)}});const Ud=Ya({stack_:function(e,t=0){const n=Ka(e,"tensors","stack","string_or_numeric");ie(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ie(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return za.runKernel(ar,r,s)}});const Zd=Ya({step_:function(e,t=0){const n={x:qa(e,"x","step")},r={alpha:t};return za.runKernel(ps,n,r)}});const Gd=Ya({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:qa(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return za.runKernel(Yr,u,c)}});const jd=Ya({tan_:function(e){const t={x:qa(e,"x","tan","float32")};return za.runKernel(ns,t)}});function Hd(e,t){le(e);const n=Ga(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qa(e,null,n,t)}function qd(e,t,n){if(le(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ga(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qa(e,t,r,n)}function Kd(e,t,n){if(le(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ga(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function Xd(e,t,n){if(le(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ga(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function Yd(e,t,n){if(le(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ga(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qa(e,t,r,n)}function Jd(e,t,n){if(le(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ga(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Qa(e,t=t||r,r,n)}function Qd(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function eh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Qd(n,t,e)}function th(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:ue(t.shape)/o,sliceSize:i,strides:[...De(n.slice(0,s)),1],outputSize:ue(n)}}const nh=Ya({tensorScatterUpdate_:function(e,t,n){const r=qa(e,"tensor","tensorScatterupdate"),s=qa(t,"indices","tensorScatterupdate","int32"),a=qa(n,"updates","tensorScatterupdate");if(eh(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return za.runKernel($r,i,{})}});const rh=Ya({topk_:function(e,t=1,n=!0){const r=qa(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=za.runKernel(as,a,i);return{values:o,indices:l}}});const sh=Ya({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ve(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new ad(t,n,r,!0,s),i=$o(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});const ah=Ya({unique_:function(e,t=0){const n=qa(e,"x","unique","string_or_numeric");ie(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=za.runKernel(ls,r,s);return{values:a,indices:i}}});const ih=Ya({unsortedSegmentSum_:function(e,t,n){const r=qa(e,"x","unsortedSegmentSum"),s=qa(t,"segmentIds","unsortedSegmentSum","int32");ie(pe(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return za.runKernel(cs,a,i)}});const oh=Ya({unstack_:function(e,t=0){const n=qa(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return za.runKernel(us,r,s)}});function lh(e,t){return dc(e,t,"right")}function uh(e,t=!0,n,r){return za.makeVariable(e,t,n,r)}function ch(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=$o(e,"int32"),s=$o([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const dh=async function(e){const t=qa(e,"condition","whereAsync","bool"),n=await t.data(),r=ch(t.shape,n);return e!==t&&t.dispose(),r};const hh=async function(e,t,n){const r=qa(e,"tensor","boolMask"),s=qa(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;ie(i>0,(()=>"mask cannot be scalar")),oe(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=cl(r,u),d=cl(s,[-1]),h=await dh(d),p=Vd(h,[1]),f=Fu(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f};const ph=Ya({transpose_:function(e,t,n){const r=qa(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),ie(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{ie(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?di((()=>{let e=fd(r),t=Mu(r);return e=za.runKernel(os,{x:e},a),t=za.runKernel(os,{x:t},a),n&&(t=ec(t)),Ja(e,t)})):za.runKernel(os,s,a)}});const fh=Ya({movingAverage_:function(e,t,n,r,s=!0){const a=qa(e,"v","movingAverage"),i=qa(t,"x","movingAverage"),o=qa(n,"decay","movingAverage");Ra(a,i),ie(he(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=vu(1),u=rc(l,o);let c=Do(rc(i,a),u);if(s){ie(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=qa(r,"step","movingAverage");c=Oo(c,rc(l,xu(o,e)))}return Ao(a,c)}});const mh=Ya({scatterND_:function(e,t,n){Ve(n);const r=qa(e,"indices","scatterND","int32"),s=qa(t,"updates","scatterND");eh(s,r,n);const a={indices:r,updates:s},i={shape:n};return za.runKernel(Tr,a,i)}});const gh=Ya({sparseToDense_:function(e,t,n,r=0){Ve(n);const s=qa(e,"sparseIndices","sparseToDense","int32"),a=qa(t,"sparseValues","sparseToDense","string_or_numeric"),i=qa(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return za.runKernel(Hr,o,l)}});const yh=Ya({gatherND_:function(e,t){const n=qa(t,"indices","gatherND","int32"),r={params:qa(e,"x","gatherND","string_or_numeric"),indices:n};return za.runKernel(fn,r)}});const bh=Ya({dropout_:function(e,t,n,r){const s=qa(e,"x","dropout");if(ie("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),ie(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ga?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(he(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Oo(Au(Ao(dd(a,0,1,"float32",r),i)),i);return Do(s,o)}});function xh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function vh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Hd(s,"float32")}const wh=async function(e,t,n=1){const r=qa(e,"predictions","inTopK"),s=qa(t,"targets","inTopK");ie(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ie(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),oe(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];ie(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=ke("bool",l);for(let e=0;e<l;e++){const t=e*u,r=i.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),ei(c,s.shape,"bool")};const kh=Ya({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ie(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ie(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];ie(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ie(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),ul("conv2dDerFilter",s,i);const d={x:o,dy:l},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return za.runKernel(_t,d,h)}});function Sh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Do(e,Zd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ih(e,t){let n=t;const r=Jl(e.shape,t.shape);return r.length>0&&(n=Su(n,r)),cl(n,e.shape)}function Nh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return gd(e);if("elu"===t)return iu(e);if("relu6"===t)return yd(e);if("prelu"===t)return zc(e,n);if("leakyrelu"===t)return Bu(e,r);if("sigmoid"===t)return ml(e);throw new Error(`Unknown fused activation ${t}.`)}const Ch=(e,t)=>!(e>0)||"linear"===t;const Th=Ya({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Ch(za.state.gradientDepth,l)){ie("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=Dl(e,t,n,r,s,a,i);return null!=o&&(d=Ao(d,o)),Nh(d,l,u,c)}const d=qa(e,"x","conv2d","float32"),h=qa(t,"filter","conv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=cl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ie(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),ie(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),ul("fused conv2d",r,i);const m="NHWC"===s?p.shape[3]:p.shape[1];ie(h.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`)),ie(il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=Jo(p.shape,h.shape,n,a,r,i);let y,b;if(null!=o&&(y=qa(o,"bias","fused conv2d"),[y]=Ea(y,d),"NHWC"===s?Ql(g.outShape,y.shape):(ie(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),ie(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(ie(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)ie(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Ql(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=qa(u,"prelu weights","fused conv2d")}const x=(e,t)=>{ie("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,d=Sh(e,u,l);ie(al(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ll(o.shape,d,i,n,r),kh(o,d,i.shape,n,r)];if(null!=c){const e=Ih(c,d);h.push(e)}return h},v={x:p,filter:h,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ju(((e,t,n)=>{let r=za.runKernel(ys,v,w);return n([t,e,r]),f&&(r=cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,h)}{const e=Ju(((e,t,n,r)=>{let s=za.runKernel(ys,v,w);return r([t,e,s,n]),f&&(s=cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,h,y)}}});const $h=Ya({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return za.runKernel(Zt,u,c)}});const Eh=Ya({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},d=za.runKernel(Gt,u,c);return l?cl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Rh=Ya({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ch(za.state.gradientDepth,l)){let d=ql(e,t,n,r,s,a,i);return null!=o&&(d=Ao(d,o)),Nh(d,l,u,c)}const d=qa(e,"x","depthwiseConv2d","float32"),h=qa(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=cl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ie(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),ie(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),ie(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==a&&(a=[1,1]),ie(il(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ul("fused depthwiseConv2d",r,i);const m=Jo(p.shape,h.shape,n,a,r,i,!0);let g,y;null!=o&&(g=qa(o,"bias","fused conv2d"),[g]=Ea(g,d),Ql(m.outShape,g.shape)),null!=u&&(y=qa(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ie(al(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,d=Sh(e,u,l),h=Eh(o.shape,d,s,n,r,a,i),p=$h(o,d,s.shape,n,r,a,i);if(null!=c){return[h,p,Ih(g,d)]}return[h,p]},x={x:p,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ju(((e,t,n)=>{let r=za.runKernel(bs,x,v);return n([t,e,r]),f&&(r=cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,h)}{const e=Ju(((e,t,n,r)=>{let s=za.runKernel(bs,x,v);return r([t,e,s,n]),f&&(s=cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,h,g)}}});const _h=Ya({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Ch(za.state.gradientDepth,a)){let l=fl(e,t,n,r);return null!=s&&(l=Ao(l,s)),Nh(l,a,i,o)}let l=qa(e,"a","fused matMul"),u=qa(t,"b","fused matMul");[l,u]=Ea(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ue(f),y=ue(m);ie(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Ql(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),x=cl(l,n?[g,c,h]:[g,h,c]),v=cl(u,r?[y,p,d]:[y,d,p]);let w,k;null!=s&&(w=qa(s,"bias","fused matMul"),[w]=Ea(w,l),Ql(b,w.shape)),null!=i&&(k=qa(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,l,u]=t,c=Sh(cl(e,l.shape),l,a);let d,h;if(n||r?!n&&r?(d=fl(c,o,!1,!1),h=fl(c,i,!0,!1)):n&&!r?(d=fl(o,c,!1,!0),h=fl(i,c,!1,!1)):(d=fl(o,c,!0,!0),h=fl(c,i,!0,!0)):(d=fl(c,o,!1,!0),h=fl(i,c,!0,!1)),null!=s){return[d,h,Ih(u,c)]}return[d,h]},I={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Ju(((e,t,n)=>{const r=za.runKernel(gs,I,N);return n([e,t,r]),{value:cl(r,b),gradFunc:S}}));return e(x,v)}{const e=Ju(((e,t,n,r)=>{const s=za.runKernel(gs,I,N);return r([e,t,s,n]),{value:cl(s,b),gradFunc:S}}));return e(x,v,w)}}});const Ah=Ya({hammingWindow_:function(e){return vh(e,.54,.46)}});const Fh=Ya({hannWindow_:function(e){return vh(e,.5,.5)}});const Oh=Ya({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(gl(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=pl([gl(e,a,t-r),El([r],s)]);i.push(o),a+=n}return 0===i.length?qd([],[0,t]):cl(pl(i),[i.length,t])}});const Dh=Ya({stft_:function(e,t,n,r,s=Fh){null==r&&(r=xh(t));const a=Oh(e,t,n),i=Do(a,s(t));return Bd(i,r)}});const Mh=Ya({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=qa(e,"image","cropAndResize"),o=qa(t,"boxes","cropAndResize","float32"),l=qa(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ie(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ie(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ie(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ie(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ie("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},d={method:s,extrapolationValue:a,cropSize:r};return za.runKernel(Bt,c,d)}});const Lh=Ya({flipLeftRight_:function(e){const t=qa(e,"image","flipLeftRight","float32");ie(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return za.runKernel(un,n,{})}});const zh=Ya({grayscaleToRGB_:function(e){const t=qa(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ie(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Ru(t,s)}});const Ph=Ya({rgbToGrayscale_:function(e){const t=qa(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),ie(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=Eo(t,"float32"),i=Hd([.2989,.587,.114]);let o;switch(t.rank){case 2:o=au("ij,j->i",a,i);break;case 3:o=au("ijk,k->ij",a,i);break;case 4:o=au("ijkl,l->ijk",a,i);break;case 5:o=au("ijklm,m->ijkl",a,i);break;case 6:o=au("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=$u(o,-1),Eo(o,s)}});const Bh=Ya({rotateWithOffset_:function(e,t,n=0,r=.5){const s=qa(e,"image","rotateWithOffset","float32");ie(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return za.runKernel(ms,a,i)}});function Wh(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ie(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ie(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ie(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ie(1===t.rank,(()=>"scores must be a 1D tensor")),ie(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ie(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Vh=Ya({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=qa(e,"boxes","nonMaxSuppression","float32"),i=qa(t,"scores","nonMaxSuppression","float32"),o=Wh(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return za.runKernel(er,{boxes:a,scores:i},l)}});function Uh(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Zh)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Zh(e,t){return e>t?1:e<t?-1:0}function Gh(e,t,n,r,s){return qh(e,t,n,r,s,0)}function jh(e,t,n,r,s,a){return qh(e,t,n,r,s,0,!1,a,!0)}function Hh(e,t,n,r,s,a){return qh(e,t,n,r,s,a,!0)}function qh(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Yh);const c=a>0?-.5/a:0,d=[],h=[];for(;d.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=Kh(e,a,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*Xh(r,c,i),t.score<=s)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(a),h.push(t.score)):t.score>s&&Uh(u,t,Yh))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function Kh(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(d-u)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(l,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Xh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Yh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Jh=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=qa(e,"boxes","nonMaxSuppressionAsync"),i=qa(t,"scores","nonMaxSuppressionAsync"),o=Wh(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=Gh(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Hd(d,"int32")};const Qh=Ya({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=qa(e,"boxes","nonMaxSuppression"),o=qa(t,"scores","nonMaxSuppression"),l=Wh(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},d=za.runKernel(nr,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}});const ep=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=qa(e,"boxes","nonMaxSuppressionAsync"),o=qa(t,"scores","nonMaxSuppressionAsync"),l=Wh(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Hh(c,d,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Hd(h,"int32"),selectedScores:Hd(p)}};const tp=Ya({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=qa(e,"boxes","nonMaxSuppression"),o=qa(t,"scores","nonMaxSuppression"),l=Wh(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},d=za.runKernel(tr,u,c);return{selectedIndices:d[0],validOutputs:d[1]}}});const np=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=qa(e,"boxes","nonMaxSuppressionAsync"),o=qa(t,"scores","nonMaxSuppressionAsync"),l=Wh(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=jh(h,p,u,c,d,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Hd(f,"int32"),validOutputs:vu(m,"int32")}};const rp=Ya({resizeBilinear_:function(e,t,n=!1,r=!1){const s=qa(e,"images","resizeBilinear");ie(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),ie(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ie(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=za.runKernel(wr,o,l);return i?cl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const sp=Ya({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=qa(e,"images","resizeNearestNeighbor");ie(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),ie(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ie("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ie(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=za.runKernel(xr,o,l);return i?cl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const ap=Ya({threshold_:function(e,t="binary",n=!1,r=.5){const s=qa(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Do(Hd([r]),255);if(ie(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),ie(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),ie("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),ie("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Pd(s,[1,1,1],-1);const e=Do(i,.2989),t=Do(o,.587),n=Do(l,.114);u=Ao(Ao(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,s,a,i,o,l=Hd([-1]),u=Hd([0]),c=Hd([0]);for(let d=0;d<e.size-1;d++){n=gl(e,0,d+1),r=gl(e,d+1),i=Oo(Su(n),t),o=Oo(Su(r),t);const h=Su(Do(n,pd(0,n.size)));s=Oo(h,Su(n));const p=El(r.shape,n.size),f=Ao(pd(0,r.size),p),m=Do(r,f);a=Oo(Su(m),Su(r));const g=rc(s,a),y=rc(s,a),b=Do(i,o);c=Do(Do(b,g),y);const x=Ou(c,u);u=tu(x,c,u),l=tu(x,Hd([d]),l)}return l}(Il(Eo(Sd(u),"int32"),ei([]),256),a)}const d=n?Vu(u,c):Ou(u,c);return Eo(Do(d,255),"int32")}});const ip=Ya({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=qa(e,"image","transform","float32"),o=qa(t,"transforms","transform","float32");ie(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ie(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return za.runKernel(is,l,u)}});const op=Ya({bandPart_:function(e,t,n){const r=qa(e,"a","bandPart");ie(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"==typeof t?(ie(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ie(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=qa(t<0?a:t,"numLower","bandPart")):(ie("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=tu(Wu(t,0),a,wc(t,a))),"number"==typeof n?(ie(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),ie(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=qa(n<0?i:n,"numUpper","bandPart")):(ie("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=tu(Wu(n,0),i,wc(n,i)));const u=cl(pd(0,a,1,"int32"),[-1,1]),c=pd(0,i,1,"int32"),d=rc(u,c),h=ic(Vu(d,o),Du(d,ec(l))),p=bc([a,i],r.dtype);return cl(Ud(oh(cl(r,[-1,a,i])).map((e=>tu(h,e,p)))),s)}});const lp=Ya({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Pd(e,e.shape[0],0).map((e=>Vd(e,[0])));ie(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(za.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Do(Su(Do(n[r],e)),n[r]);e=rc(e,t)}return Oo(e,Nu(e,"euclidean"))})));return t?Ud(n,0):n}});function up(e,t=!1){return za.tidy((()=>{ie(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=_u(n),a=Ro(e);const i=qd([[1]],[1,1]);let o=Ro(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=za.tidy((()=>{const t=gl(a,[e,e],[n-e,1]),l=Nu(t),u=gl(a,[e,e],[1,1]),c=tu(Ou(u,0),qd([[-1]]),qd([[1]])),d=rc(u,Do(c,l)),h=Oo(t,d);o=1===h.shape[0]?Ro(i):pl([i,gl(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=ec(Oo(fl(c,d),l)),f=gl(a,[e,0],[n-e,r]),m=Do(p,o),g=ph(o);if(0===e)a=rc(f,fl(m,fl(g,f)));else{const t=rc(f,fl(m,fl(g,f)));a=pl([gl(a,[0,0],[e,r]),t],0)}const y=ph(m),b=gl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=rc(b,fl(fl(b,o),y));else{const t=rc(b,fl(fl(b,o),y));s=pl([gl(s,[0,0],[n,e]),t],1)}return[o,a,s]})),hi([t,l,u])}return!t&&n>r&&(s=gl(s,[0,0],[n,r]),a=gl(a,[0,0],[r,r])),[s,a]}))}const cp=Ya({qr_:function(e,t=!1){if(ie(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return up(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=oh(cl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=up(e,t);s.push(n),a.push(r)}));return[cl(Ud(s,0),e.shape),cl(Ud(a,0),e.shape)]}}});var dp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(dp||(dp={}));const hp=Ya({computeWeightedLoss_:function(e,t,n=dp.SUM_BY_NONZERO_WEIGHTS){const r=qa(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=qa(t,"weights","computeWeightedLoss"));const a=null==s?r:Do(r,s);if(n===dp.NONE)return a;if(n===dp.SUM)return Su(a);if(n===dp.MEAN){if(null==s)return yc(a);{const e=r.size/s.size,t=Oo(Su(a),Su(s));return e>1?Oo(t,vu(e)):t}}if(n===dp.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Oo(Su(a),vu(r.size));{const e=Do(s,xc(r.shape)),t=Eo(Su(Tc(e,vu(0))),"float32");return Oo(Su(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const pp=Ya({absoluteDifference_:function(e,t,n,r=dp.SUM_BY_NONZERO_WEIGHTS){const s=qa(e,"labels","absoluteDifference"),a=qa(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=qa(n,"weights","absoluteDifference")),oe(s.shape,a.shape,"Error in absoluteDifference: ");const o=Mo(rc(s,a));return hp(o,i,r)}});const fp=Ya({cosineDistance_:function(e,t,n,r,s=dp.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","cosineDistance"),i=qa(t,"predictions","cosineDistance");let o=null;null!=r&&(o=qa(r,"weights","cosineDistance")),oe(a.shape,i.shape,"Error in cosineDistance: ");const l=vu(1),u=rc(l,Su(Do(a,i),n,!0));return hp(u,o,s)}});const mp=Ya({hingeLoss_:function(e,t,n,r=dp.SUM_BY_NONZERO_WEIGHTS){let s=qa(e,"labels","hingeLoss");const a=qa(t,"predictions","hingeLoss");let i=null;null!=n&&(i=qa(n,"weights","hingeLoss")),oe(s.shape,a.shape,"Error in hingeLoss: ");const o=vu(1);s=rc(Do(vu(2),s),o);const l=gd(rc(o,Do(s,a)));return hp(l,i,r)}});const gp=Ya({huberLoss_:function(e,t,n,r=1,s=dp.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","huberLoss"),i=qa(t,"predictions","huberLoss");let o=null;null!=n&&(o=qa(n,"weights","huberLoss")),oe(a.shape,i.shape,"Error in huberLoss: ");const l=vu(r),u=Mo(rc(i,a)),c=wc(u,l),d=rc(u,c),h=Ao(Do(vu(.5),ku(c)),Do(l,d));return hp(h,o,s)}});const yp=Ya({logLoss_:function(e,t,n,r=1e-7,s=dp.SUM_BY_NONZERO_WEIGHTS){const a=qa(e,"labels","logLoss"),i=qa(t,"predictions","logLoss");let o=null;null!=n&&(o=qa(n,"weights","logLoss")),oe(a.shape,i.shape,"Error in logLoss: ");const l=vu(1),u=vu(r),c=ec(Do(a,Gu(Ao(i,u)))),d=Do(rc(l,a),Gu(Ao(rc(l,i),u))),h=rc(c,d);return hp(h,o,s)}});const bp=Ya({meanSquaredError_:function(e,t,n,r=dp.SUM_BY_NONZERO_WEIGHTS){const s=qa(e,"labels","meanSquaredError"),a=qa(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=qa(n,"weights","meanSquaredError")),oe(s.shape,a.shape,"Error in meanSquaredError: ");const o=Wd(s,a);return hp(o,i,r)}});const xp=Ya({sigmoidCrossEntropy_:function(e,t,n,r=0,s=dp.SUM_BY_NONZERO_WEIGHTS){let a=qa(e,"multiClassLabels","sigmoidCrossEntropy");const i=qa(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=qa(n,"weights","sigmoidCrossEntropy")),oe(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=vu(r),t=vu(1),n=vu(.5);a=Ao(Do(a,rc(t,e)),Do(n,e))}const l=function(e,t){const n=qa(e,"labels","sigmoidCrossEntropyWithLogits"),r=qa(t,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=gd(r),a=Do(r,n),i=ju(Tu(ec(Mo(r))));return Ao(rc(s,a),i)}(a,i);return hp(l,o,s)}});const vp=Ya({softmaxCrossEntropy_:function(e,t,n,r=0,s=dp.SUM_BY_NONZERO_WEIGHTS){let a=qa(e,"onehotLabels","softmaxCrossEntropy");const i=qa(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=qa(n,"weights","softmaxCrossEntropy")),oe(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=vu(r),t=vu(1),n=vu(a.shape[1]);a=Ao(Do(a,rc(t,e)),Oo(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Ju(((e,t,r)=>{const s=ac(t,[n],!0),a=rc(Eo(t,"float32"),s);r([e,a]);const i=ec(Do(a,e));return{value:Su(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=hu(e.shape,[n]);return[Do(cl(e,a),rc(Eo(r,"float32"),Tu(s))),Do(cl(e,a),rc(Tu(s),Eo(r,"float32")))]}}}));return r(e,t)}(a,i);return hp(l,o,s)}});const wp=Ya({sparseFillEmptyRows_:function(e,t,n,r){const s=qa(e,"indices","sparseFillEmptyRows","int32"),a=qa(t,"values","sparseFillEmptyRows"),i=qa(n,"denseShape","sparseFillEmptyRows","int32"),o=qa(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=za.runKernel(Ur,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const kp=Ya({sparseReshape_:function(e,t,n){const r=qa(e,"inputIndices","sparseReshape","int32"),s=qa(t,"inputShape","sparseReshape","int32"),a=qa(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=za.runKernel(Zr,i);return{outputIndices:o[0],outputShape:o[1]}}});const Sp=Ya({sparseSegmentMean_:function(e,t,n){const r=qa(e,"data","sparseSegmentMean"),s=qa(t,"indices","sparseSegmentMean","int32"),a=qa(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return za.runKernel(Gr,i)}});const Ip=Ya({sparseSegmentSum_:function(e,t,n){const r=qa(e,"data","sparseSegmentSum"),s=qa(t,"indices","sparseSegmentSum","int32"),a=qa(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return za.runKernel(jr,i)}});const Np=Ya({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=qa(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=qa(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},h=za.runKernel(Jr,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}});const Cp=Ya({stringSplit_:function(e,t,n=!0){const r=qa(e,"input","stringSplit","string"),s=qa(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=za.runKernel(Qr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}});const Tp=Ya({stringToHashBucketFast_:function(e,t){const n=qa(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return za.runKernel(es,s,r)}});const $p=Ya({staticRegexReplace_:function(e,t,n,r=!0){const s=qa(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return za.runKernel(Xr,{x:s},a)}}),Ep={fft:Md,ifft:Ld,rfft:Bd,irfft:zd},Rp={hammingWindow:Ah,hannWindow:Fh,frame:Oh,stft:Dh},_p={flipLeftRight:Lh,grayscaleToRGB:zh,resizeNearestNeighbor:sp,resizeBilinear:rp,rgbToGrayscale:Ph,rotateWithOffset:Bh,cropAndResize:Mh,nonMaxSuppression:Vh,nonMaxSuppressionAsync:Jh,nonMaxSuppressionWithScore:Qh,nonMaxSuppressionWithScoreAsync:ep,nonMaxSuppressionPadded:tp,nonMaxSuppressionPaddedAsync:np,threshold:ap,transform:ip},Ap={bandPart:op,gramSchmidt:lp,qr:cp},Fp={absoluteDifference:pp,computeWeightedLoss:hp,cosineDistance:fp,hingeLoss:mp,huberLoss:gp,logLoss:yp,meanSquaredError:bp,sigmoidCrossEntropy:xp,softmaxCrossEntropy:vp},Op={sparseFillEmptyRows:wp,sparseReshape:kp,sparseSegmentMean:Sp,sparseSegmentSum:Ip},Dp={stringNGrams:Np,stringSplit:Cp,stringToHashBucketFast:Tp,staticRegexReplace:$p},Mp=new Map,Lp=new Map;class zp{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Pp{constructor(){this.classNameMap={}}static getMap(){return null==Pp.instance&&(Pp.instance=new Pp),Pp.instance}static register(e){Pp.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Bp(e,t,n){ie(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ie("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ie(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Pp.register(e),Mp.set(r,e),Lp.set(e,r),e}function Wp(e){return Lp.has(e)?Lp.get(e):e.className}class Vp extends zp{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return hi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Yu(e,t)}dispose(){null!=this.iterations_&&hi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:vu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Vp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Up extends Vp{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=za.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:di((()=>nu(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:di((()=>nu(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;di((()=>{const e=Ao(Do(a,this.rho),Do(ku(s),1-this.rho)),t=Do(Oo(wu(Ao(i,this.epsilon)),wu(Ao(a,this.epsilon))),s),n=Ao(Do(i,this.rho),Do(ku(t),1-this.rho));a.assign(e),i.assign(n);const o=Ao(Do(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(hi(this.accumulatedGrads.map((e=>e.variable))),hi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}class Zp extends Vp{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:di((()=>El(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;di((()=>{const e=Ao(a,ku(s));a.assign(e);const t=Ao(Do(Oo(s,wu(Ao(e,za.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&hi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}class Gp extends Vp{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],di((()=>{this.accBeta1=vu(t).variable(),this.accBeta2=vu(n).variable()})),null==r&&(this.epsilon=za.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);di((()=>{const n=rc(1,this.accBeta1),r=rc(1,this.accBeta2);t.forEach(((t,s)=>{const a=za.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:di((()=>nu(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:di((()=>nu(a).variable(false)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Ao(Do(o,this.beta1),Do(i,1-this.beta1)),c=Ao(Do(l,this.beta2),Do(ku(i),1-this.beta2)),d=Oo(u,n),h=Oo(c,r);o.assign(u),l.assign(c);const p=Ao(Do(Oo(d,Ao(wu(h),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(Do(this.accBeta1,this.beta1)),this.accBeta2.assign(Do(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&hi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&hi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),di((()=>{this.accBeta1.assign(xu(this.beta1,this.iterations_+1)),this.accBeta2.assign(xu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}class jp extends Vp{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],di((()=>{this.iteration=vu(0).variable(),this.accBeta1=vu(t).variable()})),null==r&&(this.epsilon=za.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);di((()=>{const n=rc(1,this.accBeta1),r=Oo(-this.learningRate,Ao(Do(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=za.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:nu(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:nu(a).variable(false)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Ao(Do(o,this.beta1),Do(i,1-this.beta1)),c=Do(l,this.beta2),d=Mo(i),h=gc(c,d);o.assign(u),l.assign(h);const p=Ao(Do(Oo(r,n),Oo(u,Ao(h,this.epsilon))),a);a.assign(p)})),this.iteration.assign(Ao(this.iteration,1)),this.accBeta1.assign(Do(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&hi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&hi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Hp extends Vp{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=za.registeredVariables[t];di((()=>{const e=Ao(Do(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=pi(vu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class qp extends Hp{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=vu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:di((()=>nu(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&di((()=>{let e;const t=Ao(Do(this.m,s),a);e=this.useNesterov?Ao(Do(this.c,Ao(a,Do(t,this.m))),r):Ao(Do(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&hi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Kp extends Vp{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=za.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=za.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:di((()=>nu(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:di((()=>nu(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:di((()=>nu(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;di((()=>{const e=Ao(Do(i,this.decay),Do(ku(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Ao(Do(t,this.decay),Do(a,1-this.decay)),l=Oo(Do(a,this.learningRate),wu(rc(e,Ao(ku(s),this.epsilon)))),u=Ao(Do(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=rc(r,u);r.assign(c)}else{const e=Ao(Do(i,this.decay),Do(ku(a),1-this.decay)),t=Ao(Do(o,this.momentum),Oo(Do(a,this.learningRate),wu(Ao(e,this.epsilon))));i.assign(e),o.assign(t);const n=rc(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&hi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&hi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&hi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Xp=[Up,Zp,Gp,jp,qp,Kp,Hp];function Yp(e){return new Promise((e=>setTimeout(e))).then(e)}class Jp{constructor(e){if(!Ke().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Jp.URL_SCHEME)&&(e=e.slice(Jp.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ni.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=zi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Yp((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Yp((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Wi(e)}}}}Jp.URL_SCHEME="downloads://";class Qp{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=Bi(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Li(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Li(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function ef(e){return new Qp(e)}function tf(e,t,n,r){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ie(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ie(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ie(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function nf(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ke().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await tf(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await tf(s,t.onProgress,.5,1)}async function rf(e,t="",n,r){return sf((e=>nf(e,{requestInit:r})))(e,t,n)}function sf(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=ti[l]*ue(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let h=0;return l.forEach((e=>{const n=t[e].paths.length,r=new ni(c.slice(h,h+n));a[e].forEach((e=>{const t=Ti(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),h+=n})),d}}Ui.registerSaveRouter((e=>Ke().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jp.URL_SCHEME)?function(e="model"){return new Jp(e)}(e.slice(Jp.URL_SCHEME.length)):null));class af{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ke().platform.fetch,ie(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ie(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=zi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=ni.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Wi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Bi(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Vi(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Ke().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[Vi(e),await nf(t,this.loadOptions)]}}function of(e){return null!=e.match(af.URL_SCHEME_REGEX)}af.URL_SCHEME_REGEX=/^https?:\/\//;const lf=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>of(e))):of(e),n)return uf(e,t)}return null};function uf(e,t){return new af(e,t)}function cf(e,t){return uf(e,t)}Ui.registerSaveRouter(lf),Ui.registerLoadRouter(lf);class df{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class hf{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class pf{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ff(e,t,n,r){return new pf(mf(...arguments))}function mf(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new df(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new df({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new df({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function gf(e){return new hf(e)}function yf(e){return new hf(e)}const bf=Ya({confusionMatrix_:function(e,t,n){const r=qa(e,"labels","confusionMatrix"),s=qa(t,"predictions","confusionMatrix");ie(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ie(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ie(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),ie(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),ie(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=$c(Eo(r,"int32"),n),i=$c(Eo(s,"int32"),n),o=ph(a),l=fl(o,i);return Eo(l,"int32")}});let xf,vf=!1;function wf(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Ss(fs,za.backendName)){const n={pixels:e},r={numChannels:t};return za.runKernel(fs,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==xf)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xf=new OffscreenCanvas(1,1).getContext("2d")}else xf=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xf.canvas.width=l,xf.canvas.height=u,xf.drawImage(e,0,0,l,u),c=xf.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return Kd(d,[u,l,t],"int32")}function kf(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Sf(e,t=3){let n=null;if(Ke().getBool("WRAP_TO_IMAGEBITMAP")&&kf(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return wf(n,t)}function If(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Nf(e,t){let n=qa(e,"img","toPixels");if(!(e instanceof ga)){const e=n;n=Eo(e,"int32"),e.dispose()}If(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){if(!vf){null!=Ss(Xt,za.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),vf=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Cf(e,t,n){let r=qa(e,"img","draw");if(!(e instanceof ga)){const e=r;r=Eo(e,"int32"),e.dispose()}If(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};za.runKernel(Xt,s,a)}const Tf=Ya({fromPixels_:wf});function $f(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ue(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...De(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}const Ef=-2,Rf=-1;function _f(e,t,n){const r=e.shape.length;ie(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ie(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)ie(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Af(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ff(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Of(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Df(e,t,n){return n<=e?n:n-(t-1)}function Mf(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Lf(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=zf(i,l,u,r,e),d=Pf(o,l,u,s,e),h=Of(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Wf(i,r,a,e,t,l),d[t]=Vf(o,s,a,e,t,l),h[t]=Bf(a,t,l);return{begin:c,end:d,strides:h}}function zf(e,t,n,r,s){const a=[...s],i=Mf(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Df(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Pf(e,t,n,r,s){const a=[...s],i=Mf(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Df(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ee(0,a[e],s[e])}return a}function Bf(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Wf(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=ee(0,i,l-1),i}function Vf(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?ee(0,i,l):ee(-1,i,l-1),i}function Uf(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Zf(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Gf(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{ie(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ie(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function jf(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)c&&0!=(1<<e&o)&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ef),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Rf),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[h.beginMask&1<<t,h.endMask&1<<t],a=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Hf(h.begin[t],0,h.strides[t],r,s,a),h.end[t]=Hf(h.end[t],1,h.strides[t],r,s,a);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,l=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Ef&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>h.finalShapeGatherIndices[t]!==Ef)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Hf(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const qf="4.16.0";class Kf{static sgd(e){return new Hp(e)}static momentum(e,t,n=!1){return new qp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Kp(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Gp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Up(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new jp(e,t,n,r,s)}static adagrad(e,t=.1){return new Zp(e,t)}}const Xf=Kf,Yf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Jf(){return new Promise((e=>Yf((()=>e()))))}function Qf(e,t){const n=e[0].length;e.forEach(((e,t)=>{ie(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ie(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)ie(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function em(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var tm;function nm(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function rm(e){const t={FIRST_DIM_SIZE:tm.FIRST_DIM_SIZE,VALUE_ROWIDS:tm.VALUE_ROWIDS,ROW_LENGTHS:tm.ROW_LENGTHS,ROW_SPLITS:tm.ROW_SPLITS,ROW_LIMITS:tm.ROW_LIMITS,ROW_STARTS:tm.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function sm(e){return 0===e.length?0:e[0]===tm.FIRST_DIM_SIZE?e.length-1:e.length}function am(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(tm||(tm={}));const im=30;function om(e){return e<=im?e:Oe(e,Math.floor(Math.sqrt(e)))}function lm(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function um(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function cm(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function dm(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function hm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pm(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const fm=1.7580993408473768,mm=1.0507009873554805,gm=.3275911,ym=.254829592,bm=-.284496736,xm=1.421413741,vm=-1.453152027,wm=1.061405429;function km(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Sm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Im(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Nm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Cm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Tm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function $m(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Em(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Rm="->",_m=/->/g,Am=",",Fm="...";function Om(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(_m,"").length)/Rm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Rm}").`);const[r,s]=e.split(Rm);ie(-1===r.indexOf(Fm),(()=>`The ellipsis notation ("${Fm}") is not supported yet.`));const a=r.split(Am),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==Am&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Dm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Mm(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ie(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Lm(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=Pm(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function zm(e){return e.every(((e,t)=>e===t))}function Pm(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Bm(e,t,n=0){let r=[];if("number"==typeof t)ie(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ie(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}ie(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Wm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Vm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Um(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Zm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Gm(e,t){return`size ${e} must be non-negative, not ${t}`}function jm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Hm(e,t){return`Input to reshape is a SparseTensor with ${ue(e)}\n  dense values, but the requested shape requires a multiple of ${ue(t)}. inputShape=${e} outputShape= ${t}`}function qm(e,t){return`Input to reshape is a tensor with ${ue(e)} dense values, but the requested shape has ${ue(t)}. inputShape=${e} outputShape=${t}`}function Km(){return"segment ids must be >= 0"}function Xm(){return"segment ids are not increasing"}function Ym(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Jm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Qm(e,t){let n,r=!1;for(e<=im?(n=e,r=!0):n=Oe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Oe(e,n+1);return n}function eg(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function tg(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function ng(e){try{return e.map((e=>Js(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function rg(e){return e.map((e=>Ys(e)))}!function(){for(const e of Xp)Bp(e)}();const sg={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Zd(Eo(n,"float32"),-1))}}},ag={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ku(Eo(n,"float32")),r=wu(rc(vu(1),t));return ec(Oo(e,r))}}}},ig={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=wu(rc(ku(Eo(n,"float32")),1));return Oo(e,t)}}}},og={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{let t=e;const r=Jl(n.shape,s);return r.length>0&&(t=Su(t,r)),cl(t,n.shape)},b:()=>{let t=e;const n=Jl(r.shape,s);return n.length>0&&(t=Su(t,n)),cl(t,r.shape)}}}},lg={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ug={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(n)}}},cg={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(n)}}},dg={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,wu(rc(vu(1),ku(Eo(n,"float32")))))}}},hg={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=wu(Ao(vu(1),ku(Eo(n,"float32"))));return Oo(e,t)}}}},pg={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{const t=Ao(ku(n),ku(r));let a=Do(e,Oo(r,t));const i=Jl(n.shape,s);return i.length>0&&(a=Su(a,i)),cl(a,n.shape)},b:()=>{const t=Ao(ku(n),ku(r));let a=ec(Do(e,Oo(n,t)));const i=Jl(r.shape,s);return i.length>0&&(a=Su(a,i)),cl(a,r.shape)}}}},fg={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Ao(ku(Eo(n,"float32")),1))}}},mg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,rc(vu(1),ku(Eo(n,"float32"))))}}};const gg=Ya({avgPool3dGrad_:function(e,t,n,r,s,a){const i=qa(e,"dy","avgPool3dGrad"),o=qa(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ie(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),ul("avgPool3dGrad",s,a);const d={dy:l,input:u},h={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=za.runKernel(yt,d,h);return c?cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),yg={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>gg(e,r,s,a,i,o)}}};const bg=Ya({avgPoolGrad_:function(e,t,n,r,s){const a=qa(e,"dy","avgPoolGrad"),i=qa(t,"input","avgPoolGrad");ie(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ie(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},d={filterSize:n,strides:r,pad:s},h=za.runKernel(mt,c,d);return u?cl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),xg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>bg(e,r,s,a,i)}}},vg={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>fl(e,s,!1,!1),b:()=>fl(e,r,!0,!1)}:a&&!i?{a:()=>fl(s,e,!1,!0),b:()=>fl(r,e,!1,!1)}:{a:()=>fl(s,e,!0,!0),b:()=>fl(e,r,!0,!0)}:{a:()=>fl(e,s,!1,!0),b:()=>fl(r,e,!0,!1)}}},wg={kernelName:xt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Mc(e,r,s)}}},kg={kernelName:kt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Su(e,o,!0)}}},Sg={kernelName:It,gradFunc:e=>({x:()=>e.clone()})},Ig={kernelName:Nt,gradFunc:e=>({x:()=>nu(e)})},Ng={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>tu(ic(Du(r,s),Vu(r,a)),e,nu(e))}}},Cg={kernelName:$t,inputsToSave:["x"],gradFunc:sg.gradFunc},Tg={kernelName:Et,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=ve(s,t[0].shape)[0],i=r.map((e=>e[a]));return Pd(e,i,a).map((e=>()=>e))}},$g={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ie(al(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ll(r.shape,e,s,i,o,l),filter:()=>kh(r,e,s.shape,i,o,l)}}},Eg={kernelName:At,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Dl(e,s,a,i,o,1,l),filter:()=>kh(e,r,s.shape,a,i,o,l)}}};const Rg=Ya({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=cl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ie(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ie(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ie(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ie(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return za.runKernel(Ot,o,l)}}),_g={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ie(al(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Bl(i.shape,e,o,s,a),filter:()=>Rg(i,e,o.shape,s,a)}}},Ag={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(ec(Ed(Eo(n,"float32"))),e)}}},Fg={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(Rd(Eo(n,"float32")),e)}}},Og={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=fu([s],r.rank);let n=Gl(e,s,a,!i);return null!=t&&(n=ph(n,t)),n}}}},Dg={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ie(al(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ie(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ie(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ie(il(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),ul("depthwiseConv2d",a,i),{x:()=>Eh(l.shape,e,u,s,a,o,i),filter:()=>$h(l,e,u.shape,s,a,o,i)}}},Mg={kernelName:Ht,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>za.runKernel(qt,a,n),filter:()=>za.runKernel(Kt,i,n)}}},Lg={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>za.runKernel(en,r)}}},zg={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Do(Tu(ec(ku(n))),2/Math.sqrt(Math.PI));return{x:()=>Do(e,r)}}},Pg={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,n)}}},Bg={kernelName:sn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>cl(e,n.shape)}}},Wg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Tu(n))}}},Vg={kernelName:cn,gradFunc:e=>({x:()=>nu(e)})},Ug={kernelName:dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{const t=Oo(e,Eo(r,"float32")),a=Jl(n.shape,s);return a.length>0?cl(Su(t,a),n.shape):t},b:()=>{let t=Do(e,Eo(n,"float32"));const a=Jl(r.shape,s);a.length>0&&(t=cl(Su(t,a),r.shape));const i=ku(r);return ec(Oo(t,Eo(i,"float32")))}}}},Zg={kernelName:hn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?vu(1):o,u=Jl(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const d=rc(s,a),h=Do(e,l),p=Id(Ao(i,vu(r))),f=Do(Do(Do(p,p),p),vu(-.5));return{x:()=>1===a.rank?cl(Do(Do(e,Ru(cl(p,[1,1,1,a.shape[0]]),c)),l),s.shape):cl(Do(Do(e,p),l),s.shape),mean:()=>{let e=Do(Do(p,vu(-1)),h);return 1===a.rank&&(e=Su(e,u)),cl(e,a.shape)},variance:()=>{let e=Do(Do(f,d),h);return 1===a.rank&&(e=Su(e,u)),cl(e,a.shape)},scale:()=>{const t=Do(d,p);let n=Do(e,t);return 1===a.rank&&(n=Su(n,u)),cl(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Su(t,u)),cl(t,a.shape)}}}},Gg={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=ve(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,d=jg(0,l),h=jg(l+1,l+1+c),p=Hg([i,[s],u]),f=cl(n,p),m=cl(t,[s]),g=Hg([[l],d,h]),y=ph(f,g);let b=ih(y,m,e.shape[o]);const x=mu(g);return b=ph(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=Ud(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function jg(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Hg(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const qg={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>nu(n),b:()=>nu(r)}}},Kg={kernelName:yn,gradFunc:e=>({x:()=>Eo(e,"float32")})},Xg={kernelName:vn,gradFunc:e=>({x:()=>nu(e)})},Yg={kernelName:wn,gradFunc:e=>({x:()=>nu(e)})},Jg={kernelName:kn,gradFunc:e=>({x:()=>nu(e)})},Qg={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Ou(r,0);return{x:()=>tu(a,e,Do(e,s))}}},ey={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Ao(n,1))}}},ty={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Eo(n,"float32"))}}},ny={kernelName:Fn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Tu(r);return rc(e,Do(Su(e,s,!0),t))}}}};const ry=Ya({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return za.runKernel(Mn,o,l)}}),sy={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>ry(r,s,e,a,i,o,l)}}};function ay(e,t,n,r){return t.rank<n.rank&&(t=cl(t,hu(t.shape,r))),e.rank<n.rank&&(e=cl(e,hu(e.shape,r))),{x:()=>Do(e,Eo(eu(n,t),e.dtype))}}const iy={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=ay(e,t[1],a,ve(s,a.shape));return{x:()=>i.x()}}},oy={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Do(e,Eo(Du(n,r),"float32")),b:()=>Do(e,Eo(Wu(n,r),"float32"))}}};const ly=Ya({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=qa(e,"dy","maxPool3dGrad"),l=qa(t,"input","maxPool3dGrad"),u=qa(n,"output","maxPool3dGrad");let c=o,d=l,h=u,p=!1;4===l.rank&&(p=!0,c=cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=cl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=cl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ie(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ie(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),ie(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),ul("maxPool3dGrad",a,i);const f={dy:c,input:d,output:h},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=za.runKernel(Un,f,m);return p?cl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),uy={kernelName:Vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ly(e,r,s,a,i,o,l)}}};const cy=Ya({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=qa(e,"dy","maxPoolGrad"),l=qa(t,"input","maxPoolGrad"),u=qa(n,"output","maxPoolGrad");ie(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ie(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ie(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),ul("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},d={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return za.runKernel(Wn,c,d)}}),dy={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>cy(e,r,s,a,i,o)}}},hy={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>gl(e,a,r.shape)}}},py={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>gl(e,a,r.shape)}}},fy={kernelName:lr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ql(a.shape,i.shape);return{a:()=>{const t=Eo(i,"float32");let n=Do(e,Do(t,xu(a,rc(t,vu(1)))));const r=Jl(a.shape,o);return r.length>0&&(n=Su(n,r)),cl(n,a.shape)},b:()=>{const t=Ou(a,0),n=tu(t,Gu(a),nu(a));let r=Do(e,Do(s,n));const l=Jl(i.shape,o);return l.length>0&&(r=Su(r,l)),cl(r,i.shape)}}}};function my(e,t,n){const r=e.shape.length,s=r-n.length,a=fu(n,r);let i=e;null!=a&&(i=ph(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=cl(t,r),a=Zl(e,n,!0,!1),i=Zl(e,n,!0,!0),o=Do(a,i);return Do(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=mu(a);u=ph(u,e)}return u}const gy={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ou(n,vu(0)),r=vu(fm),s=vu(mm),a=Do(e,s),i=Do(Do(e,r),Tu(Eo(n,"float32")));return tu(t,a,i)}}}},yy={kernelName:Br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>xl(e,r,s)}}},by={kernelName:Wr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pl(e,r)}}};const xy=[sg,ag,ig,og,lg,ug,cg,dg,hg,pg,fg,mg,yg,xg,vg,wg,kg,Sg,Ig,Ng,Cg,Tg,Eg,$g,_g,Ag,Fg,Og,Dg,Mg,{kernelName:Yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{const t=Oo(e,Eo(r,"float32")),a=Jl(n.shape,s);return a.length>0?cl(Su(t,a),n.shape):t},b:()=>{let t=Do(e,Eo(n,"float32"));const a=Jl(r.shape,s);a.length>0&&(t=cl(Su(t,a),r.shape));const i=ku(r);return ec(Oo(t,Eo(i,"float32")))}}}},Lg,zg,Pg,Bg,Wg,Ug,Vg,Zg,Gg,qg,Kg,Xg,Yg,Jg,Qg,ey,ty,ny,sy,iy,iy,oy,uy,dy,{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ve(s,r.shape),i=ue(du(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=cl(e,t);return Oo(Do(n,xc(r.shape,"float32")),i)}}}},{kernelName:jn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=ay(e,i,a,ve(s,a.shape));return{x:()=>o.x()}}},{kernelName:Hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Do(e,Eo(Vu(n,r),"float32")),b:()=>Do(e,Eo(Ou(n,r),"float32"))}}},hy,{kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{const t=Jl(n.shape,s);return t.length>0?cl(Su(e,t),n.shape):e},b:()=>{const t=Do(e,ec(Au(Oo(n,r)))),a=Jl(r.shape,s);return a.length>0?cl(Su(t,a),r.shape):t}}}},{kernelName:Yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{const t=Do(e,Eo(r,"float32")),a=Jl(n.shape,s);return a.length>0?cl(Su(t,a),n.shape):t},b:()=>{const t=Do(e,Eo(n,"float32")),a=Jl(r.shape,s);return a.length>0?cl(Su(t,a),r.shape):t}}}},{kernelName:Jn,gradFunc:e=>({x:()=>ec(e)})},{kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>bc(n.shape,"float32")}}},{kernelName:rr,gradFunc:e=>({x:()=>nu(e)})},{kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return oh(e,r).map((e=>()=>e))}},py,py,fy,{kernelName:ur,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Ou(n,0);return{x:()=>tu(s,e,Do(e,r)),alpha:()=>{let t=tu(s,nu(e),Do(e,n));const a=Jl(r.shape,e.shape);return a.length>0&&(t=Su(t,a)),cl(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>my(r,e,a)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,ec(ku(n)))}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Do(Vu(n,6),Zd(n));return{x:()=>Do(e,Eo(r,"float32"))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Eo(Zd(n),"float32"))}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,n.shape)}}},{kernelName:wr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>za.runKernel(kr,s,n)}}},{kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>za.runKernel(vr,s,n)}}},{kernelName:Ir,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ve(r,e.shape);return{x:()=>bd(e,s)}}},{kernelName:Nr,gradFunc:e=>({x:()=>nu(e)})},{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ec(Oo(e,Do(xu(n,1.5),2)))}}},{kernelName:Rr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Eo(nu(n),"float32"),t:()=>Do(e,Eo(n,e.dtype)),e:()=>Do(e,Eo(oc(n),e.dtype))}}},gy,{kernelName:Mr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Do(n,rc(vu(1),n)))}}},{kernelName:Dr,gradFunc:e=>({x:()=>nu(e)})},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(Vl(Eo(n,"float32")),e)}}},{kernelName:Or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(Ul(Eo(n,"float32")),e)}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Gf(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>_c(e,u)}}},{kernelName:Vr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Do(e,r);return{logits:()=>rc(a,Do(Su(a,[s],true),r))}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,ml(n))}}},yy,yy,by,by,{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Do(wu(Eo(n,"float32")),2))}}},{kernelName:qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=vu(2);return{a:()=>Do(e,Do(s,rc(n,r))),b:()=>Do(e,Do(s,rc(r,n)))}}},{kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Do(Eo(n,"float32"),2))}}},{kernelName:ps,gradFunc:e=>({x:()=>nu(e)})},{kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ql(n.shape,r.shape);return{a:()=>{let t=e;const r=Jl(n.shape,s);return r.length>0&&(t=Su(t,r)),cl(t,n.shape)},b:()=>{let t=e;const n=Jl(r.shape,s);return n.length>0&&(t=Su(t,n)),cl(ec(t),r.shape)}}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ve(a,r.shape).forEach((e=>{s[e]=1}));const i=cl(e,s),o=Do(i,xc(r.shape,"float32"));return{x:()=>o}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,ku(Vl(n)))}}},{kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(rc(vu(1),ku(n)),e)}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=nu(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Ao(t,gl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Ao(t,gl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=Ao(t,gl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Ao(t,gl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:os,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=mu(s);return{x:()=>ph(e,a)}}},{kernelName:us,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Ud(e,s)}}},{kernelName:cs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=gc(t,nu(t)),r=Fu(e,n);let s=Du(t,vu(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=$u(s,e+1);s=ic(s,xc(r.shape,"bool"));const i=nu(r);return tu(s,r,i)}(e,n)}}},{kernelName:hs,gradFunc:e=>({x:()=>nu(e)})}];for(const e of xy)Ts(e);ya().prototype.abs=function(){return this.throwIfDisposed(),Mo(this)},ya().prototype.acos=function(){return this.throwIfDisposed(),Lo(this)},ya().prototype.acosh=function(){return this.throwIfDisposed(),zo(this)},ya().prototype.add=function(e){return this.throwIfDisposed(),Ao(this,e)},ya().prototype.all=function(e,t){return this.throwIfDisposed(),Bo(this,e,t)},ya().prototype.any=function(e,t){return this.throwIfDisposed(),Wo(this,e,t)},ya().prototype.argMax=function(e){return this.throwIfDisposed(),Vo(this,e)},ya().prototype.argMin=function(e){return this.throwIfDisposed(),Uo(this,e)},ya().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,(()=>"The array must have only 1 element.")),cl(this,[])},ya().prototype.asType=function(e){return this.throwIfDisposed(),Eo(this,e)},ya().prototype.as1D=function(){return this.throwIfDisposed(),cl(this,[this.size])},ya().prototype.as2D=function(e,t){return this.throwIfDisposed(),cl(this,[e,t])},ya().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),cl(this,[e,t,n])},ya().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),cl(this,[e,t,n,r])},ya().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),cl(this,[e,t,n,r,s])},ya().prototype.asin=function(){return this.throwIfDisposed(),Zo(this)},ya().prototype.asinh=function(){return this.throwIfDisposed(),Go(this)},ya().prototype.atan=function(){return this.throwIfDisposed(),jo(this)},ya().prototype.atan2=function(e){return this.throwIfDisposed(),Ho(this,e)},ya().prototype.atanh=function(){return this.throwIfDisposed(),qo(this)},ya().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),dl(this,e,t,n,r)},ya().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),xl(this,e,t)},ya().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),vl(this,e,t,n,r,s)},ya().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Tl(this,e)},ya().prototype.cast=function(e){return this.throwIfDisposed(),Eo(this,e)},ya().prototype.ceil=function(){return this.throwIfDisposed(),$l(this)},ya().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},ya().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ga&&(e=[e]),pl([this,...e],t)},ya().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ml(this,e,t,n,r,s,a)},ya().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),zl(this,e,t,n,r,s)},ya().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Dl(this,e,t,n,r,s,a)},ya().prototype.cos=function(){return this.throwIfDisposed(),Vl(this)},ya().prototype.cosh=function(){return this.throwIfDisposed(),Ul(this)},ya().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Zl(this,e,t,n)},ya().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Gl(this,e,t,n)},ya().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},ya().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ql(this,e,t,n,r,s,a)},ya().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Xl(this,e,t,n,r,s)},ya().prototype.divNoNan=function(e){return this.throwIfDisposed(),ru(this,e)},ya().prototype.div=function(e){return this.throwIfDisposed(),Oo(this,e)},ya().prototype.dot=function(e){return this.throwIfDisposed(),su(this,e)},ya().prototype.elu=function(){return this.throwIfDisposed(),iu(this)},ya().prototype.equal=function(e){return this.throwIfDisposed(),eu(this,e)},ya().prototype.erf=function(){return this.throwIfDisposed(),lu(this)},ya().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Cu(this,e,t)},ya().prototype.exp=function(){return this.throwIfDisposed(),Tu(this)},ya().prototype.expandDims=function(e){return this.throwIfDisposed(),$u(this,e)},ya().prototype.expm1=function(){return this.throwIfDisposed(),Eu(this)},ya().prototype.fft=function(){return this.throwIfDisposed(),Md(this)},ya().prototype.flatten=function(){return this.throwIfDisposed(),cl(this,[this.size])},ya().prototype.floor=function(){return this.throwIfDisposed(),Au(this)},ya().prototype.floorDiv=function(e){return this.throwIfDisposed(),Fo(this,e)},ya().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Fu(this,e,t,n)},ya().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Du(this,e)},ya().prototype.greater=function(e){return this.throwIfDisposed(),Ou(this,e)},ya().prototype.ifft=function(){return this.throwIfDisposed(),Ld(this)},ya().prototype.irfft=function(){return this.throwIfDisposed(),zd(this)},ya().prototype.isFinite=function(){return this.throwIfDisposed(),Lu(this)},ya().prototype.isInf=function(){return this.throwIfDisposed(),zu(this)},ya().prototype.isNaN=function(){return this.throwIfDisposed(),Pu(this)},ya().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Bu(this,e)},ya().prototype.lessEqual=function(e){return this.throwIfDisposed(),Vu(this,e)},ya().prototype.less=function(e){return this.throwIfDisposed(),Wu(this,e)},ya().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Zu(this,e,t,n,r)},ya().prototype.logSigmoid=function(){return this.throwIfDisposed(),nc(this)},ya().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sc(this,e)},ya().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},ya().prototype.log=function(){return this.throwIfDisposed(),Gu(this)},ya().prototype.log1p=function(){return this.throwIfDisposed(),ju(this)},ya().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ic(this,e)},ya().prototype.logicalNot=function(){return this.throwIfDisposed(),oc(this)},ya().prototype.logicalOr=function(e){return this.throwIfDisposed(),lc(this,e)},ya().prototype.logicalXor=function(e){return this.throwIfDisposed(),uc(this,e)},ya().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),fl(this,e,t,n)},ya().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),pc(this,e,t,n,r)},ya().prototype.max=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},ya().prototype.maximum=function(e){return this.throwIfDisposed(),gc(this,e)},ya().prototype.mean=function(e,t){return this.throwIfDisposed(),yc(this,e,t)},ya().prototype.min=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},ya().prototype.minimum=function(e){return this.throwIfDisposed(),wc(this,e)},ya().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},ya().prototype.mod=function(e){return this.throwIfDisposed(),Sc(this,e)},ya().prototype.mul=function(e){return this.throwIfDisposed(),Do(this,e)},ya().prototype.neg=function(){return this.throwIfDisposed(),ec(this)},ya().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Nu(this,e,t,n)},ya().prototype.notEqual=function(e){return this.throwIfDisposed(),Tc(this,e)},ya().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),$c(this,e,t,n)},ya().prototype.onesLike=function(){return this.throwIfDisposed(),Ec(this)},ya().prototype.pad=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},ya().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Lc(this,e,t,n,r,s,a)},ya().prototype.pow=function(e){return this.throwIfDisposed(),xu(this,e)},ya().prototype.prelu=function(e){return this.throwIfDisposed(),zc(this,e)},ya().prototype.prod=function(e,t){return this.throwIfDisposed(),Pc(this,e,t)},ya().prototype.reciprocal=function(){return this.throwIfDisposed(),md(this)},ya().prototype.relu=function(){return this.throwIfDisposed(),gd(this)},ya().prototype.relu6=function(){return this.throwIfDisposed(),yd(this)},ya().prototype.reshapeAs=function(e){return this.throwIfDisposed(),cl(this,e.shape)},ya().prototype.reshape=function(e){return this.throwIfDisposed(),cl(this,e)},ya().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),rp(this,e,t,n)},ya().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),sp(this,e,t,n)},ya().prototype.reverse=function(e){return this.throwIfDisposed(),bd(this,e)},ya().prototype.rfft=function(){return this.throwIfDisposed(),Bd(this)},ya().prototype.round=function(){return this.throwIfDisposed(),Sd(this)},ya().prototype.rsqrt=function(){return this.throwIfDisposed(),Id(this)},ya().prototype.selu=function(){return this.throwIfDisposed(),Nd(this)},ya().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Cd(this,e,t,n,r,s,a)},ya().prototype.sigmoid=function(){return this.throwIfDisposed(),ml(this)},ya().prototype.sign=function(){return this.throwIfDisposed(),$d(this)},ya().prototype.sin=function(){return this.throwIfDisposed(),Ed(this)},ya().prototype.sinh=function(){return this.throwIfDisposed(),Rd(this)},ya().prototype.slice=function(e,t){return this.throwIfDisposed(),gl(this,e,t)},ya().prototype.softmax=function(e){return this.throwIfDisposed(),Dd(this,e)},ya().prototype.softplus=function(){return this.throwIfDisposed(),tc(this)},ya().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Mc(this,e,t)},ya().prototype.split=function(e,t){return this.throwIfDisposed(),Pd(this,e,t)},ya().prototype.sqrt=function(){return this.throwIfDisposed(),wu(this)},ya().prototype.square=function(){return this.throwIfDisposed(),ku(this)},ya().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Wd(this,e)},ya().prototype.squeeze=function(e){return this.throwIfDisposed(),Vd(this,e)},ya().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ga?[this,e]:[this,...e];return Ud(n,t)},ya().prototype.step=function(e){return this.throwIfDisposed(),Zd(this,e)},ya().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Gd(this,e,t,n,r,s,a,i,o)},ya().prototype.sub=function(e){return this.throwIfDisposed(),rc(this,e)},ya().prototype.sum=function(e,t){return this.throwIfDisposed(),Su(this,e,t)},ya().prototype.tan=function(){return this.throwIfDisposed(),jd(this)},ya().prototype.tanh=function(){return this.throwIfDisposed(),yl(this)},ya().prototype.tile=function(e){return this.throwIfDisposed(),Ru(this,e)},ya().prototype.toBool=function(){return this.throwIfDisposed(),Eo(this,"bool")},ya().prototype.toFloat=function(){return this.throwIfDisposed(),Eo(this,"float32")},ya().prototype.toInt=function(){return this.throwIfDisposed(),Eo(this,"int32")},ya().prototype.topk=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},ya().prototype.transpose=function(e){return this.throwIfDisposed(),ph(this,e)},ya().prototype.unique=function(e){return this.throwIfDisposed(),ah(this,e)},ya().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ih(this,e,t)},ya().prototype.unstack=function(e){return this.throwIfDisposed(),oh(this,e)},ya().prototype.where=function(e,t){return this.throwIfDisposed(),tu(e,this,t)},ya().prototype.zerosLike=function(){return this.throwIfDisposed(),nu(this)};class vy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vy.prototype)}}class wy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wy.prototype)}}class ky extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ky.prototype)}}class Sy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sy.prototype)}}class Iy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Iy.prototype)}}class Ny{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Cy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Ty(e,t){if(!e)throw new Iy(t)}function $y(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Ey(e){return 1===e.length?e[0]:e}function Ry(e){return Array.isArray(e)?e:[e]}function _y(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ay(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Fy={};function Oy(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Dy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Dy(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Dy(t):e[n]=t.value)}}}function My(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Fy)a=Fy[s];else if(a=t[s],null==a)throw new ky(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new ky(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Fy?[o,l]=Fy.className:i in t&&([o,l]=t[i]),null==o)throw new ky(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Fy))e[t]=Fy[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Fy);for(const e of Object.keys(n))Fy[e]=n[e];Dy(a.config);const r=l(o,a.config,n,s);return Fy=Object.assign({},t),r}{const e=Object.assign({},Fy);for(const e of Object.keys(n))Fy[e]=n[e];const t=new o(a.config);return Fy=Object.assign({},e),t}}}function Ly(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function zy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Py(e){if(null==e)throw new ky(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function By(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ky(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Wy(e,t,n=0,r=1/0){return Ty(n>=0),Ty(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Vy(e,t){Array.isArray(e)?(ie(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Vy(e,`element ${n+1} of ${t}`)))):ie(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Uy(e)}.`))}function Uy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Uy(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Zy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Gy=0;function jy(){return Gy++}const Hy={};function qy(e=""){return e in Hy||(Hy[e]=0),Hy[e]+=1,e+Hy[e].toString()}const Ky=["channelsFirst","channelsLast"],Xy=["nearest","bilinear"],Yy=["valid","same","causal"],Jy=["max","avg"],Qy=["sum","mul","concat","ave"],eb=new Map;function tb(e){By(Ky,"DataFormat",e)}function nb(e){By(Yy,"PaddingMode",e)}function rb(e){By(Jy,"PoolMode",e)}const sb=[],ab="/";function ib(e,t){sb.push(e);try{const e=t();return sb.pop(),e}catch(e){throw sb.pop(),e}}function ob(e){if(!cb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===sb.length?"":sb.join(ab)+ab)+e}function lb(e){if(!cb(e))throw new Error("Not a valid tensor name: '"+e+"'");eb.has(e)||eb.set(e,0);const t=eb.get(e);if(eb.set(e,eb.get(e)+1),t>0){const n=`${e}_${t}`;return eb.set(n,1),n}return e}const ub=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cb(e){return!!e.match(ub)}function db(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function hb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function pb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function fb(e,t){if(t<e)throw new ky(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let mb;function gb(){return null==mb&&(mb=ki().epsilon()),mb}function yb(e,t){return Eo(e,t)}function bb(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),cl(e,n)}function xb(e,t,n){return di((()=>{switch(e.rank){case 1:return _d(e,t,n);case 2:return Ad(e,[t,0],[n,e.shape[1]]);case 3:return Fd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Od(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return gl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return gl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ky(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function vb(e,t,n){return di((()=>{switch(e.rank){case 1:return _d(e,t,n);case 2:return Ad(e,[0,t],[e.shape[0],n]);case 3:return Fd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Od(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function wb(e,t,n,r){return di((()=>{switch(e.rank){case 1:return _d(e,t,n);case 2:switch(r){case 1:return xb(e,t,n);case 2:return vb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return xb(e,t,n);case 2:return Fd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return vb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return xb(e,t,n);case 2:return Od(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Od(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return vb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}default:throw new ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function kb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pl(e,t)}function Sb(e,t){switch(e.rank){case 1:return _l([e,t]);case 2:return Al([e,t],0);case 3:return Fl([e,t],0);case 4:return Ol([e,t],0);default:throw new ky(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ib(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ky(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ru(e,t)}function Nb(e,t=0,n=1,r,s){return ud(e,t,n,r,s)}function Cb(e,t,n,r){if(e.rank<2||t.rank<2)throw new Sy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Sy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return _h({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Eb(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=cl(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=cl(ph(t,c),[l,-1]);const d=[...s,...u];return cl(_h({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Eb(e.rank,r,"channelsLast"):null,activation:n}),d)}}function Tb(e,t,n){return di((()=>(t=Array.isArray(t)?Hd(t,"int32"):Eo(t,"int32"),Fu(e,t,n))))}function $b(e){return Do(e,e)}function Eb(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ky(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1,1,1]):cl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,1,1,r[0]]):cl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1,1]):cl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,1,r[0]]):cl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?cl(t,[1,r[0],1]):cl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?cl(t,[1,1,r[0]]):cl(t,[1].concat(r))}else if(e<3)return t;throw new ky(`Unsupported input rank by biasAdd: ${t.rank}`)}function Rb(e,t,n){return di((()=>(null==n&&(n="channelsLast"),tb(n),Ao(e,Eb(e.rank,t,n)))))}function _b(e,t,n,r){return di((()=>bh(e,t,n,r)))}function Ab(e,t,n=!1){return n?e():t()}const Fb=["fanIn","fanOut","fanAvg"],Ob=["normal","uniform","truncatedNormal"];class Db extends zp{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Mb extends Db{apply(e,t){return bc(e,t)}}Mb.className="Zeros",Bp(Mb);class Lb extends Db{apply(e,t){return xc(e,t)}}Lb.className="Ones",Bp(Lb);class zb extends Db{constructor(e){if(super(),"object"!=typeof e)throw new ky(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ky(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return di((()=>Do(vu(this.value),xc(e,t))))}getConfig(){return{value:this.value}}}zb.className="Constant",Bp(zb);class Pb extends Db{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return dd(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Pb.className="RandomUniform",Bp(Pb);class Bb extends Db{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Sy(`randomNormal does not support dType ${t}.`);return Nb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Bb.className="RandomNormal",Bp(Bb);class Wb extends Db{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Sy(`truncatedNormal does not support dType ${t}.`);return sh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Wb.className="TruncatedNormal",Bp(Wb);class Vb extends Db{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return di((()=>{if(2!==e.length||e[0]!==e[1])throw new ky("Identity matrix initializer can only be used for 2D square matrices.");return Do(this.gain,_u(e[0]))}))}getConfig(){return{gain:this.gain}}}Vb.className="Identity",Bp(Vb);class Ub extends Db{constructor(e){if(super(),e.scale<0)throw new ky(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,By(Fb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){By(Ob,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(tb(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=db(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=db(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=db(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Sy(`${this.getClassName()} does not support dType ${t}.`);return sh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return dd(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ub.className="VarianceScaling",Bp(Ub);class Zb extends Ub{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}Zb.className="GlorotUniform",Bp(Zb);class Gb extends Ub{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}Gb.className="GlorotNormal",Bp(Gb);class jb extends Ub{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}jb.className="HeNormal",Bp(jb);class Hb extends Ub{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}Hb.className="HeUniform",Bp(Hb);class qb extends Ub{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}qb.className="LeCunNormal",Bp(qb);class Kb extends Ub{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ub.className}}Kb.className="LeCunUniform",Bp(Kb);class Xb extends Db{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return di((()=>{if(e.length<2)throw new Sy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=ue(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Nb([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=Ap.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Do(o,l.sign()),n<r&&(o=o.transpose()),Do(vu(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Xb.className="Orthogonal",Bp(Xb);const Yb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Jb(e,t={}){return My(e,Pp.getMap().classNameMap,t,"initializer")}function Qb(e){return Oy(e)}function ex(e){if("string"==typeof e){const t=e in Yb?Yb[e]:e;if("GlorotNormal"===t)return new Gb;if("GlorotUniform"===t)return new Zb;if("HeNormal"===t)return new jb;if("HeUniform"===t)return new Hb;if("LeCunNormal"===t)return new qb;if("LeCunUniform"===t)return new Kb;{const e={};return e.className=t,e.config={},Jb(e)}}return e instanceof Db?e:Jb(e)}function tx(e){return Array.isArray(e)&&Array.isArray(e[0])}function nx(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function rx(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ky(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function sx(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ky(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ax(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const ix="Variable";class ox{constructor(e,t="float32",n=ix,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=jy(),n=null==n?ix:n,this.originalName=ob(n),this.name=lb(this.originalName),this.trainable_=r,this.constraint=s,this.val=uh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function lx(e){return e.map((e=>e.read()))}function ux(e){e.forEach((e=>{e[0].write(e[1])}))}class cx{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class dx{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=jy(),null!=a&&(this.originalName=ob(a),this.name=lb(this.originalName)),this.rank=t.length}}let hx=0;class px{constructor(e,t){this.callArgs=t,this.id=hx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fx=0;class mx extends zp{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=_y(e)+"_"+qy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new wy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ky(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ey(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ey(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new vy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new vy(`Layer ${this.name} is not connected, no input to return.`);return Ey(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new vy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new vy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ey(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ry(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Ry(this.inputSpec);if(t.length!==n.length)throw new ky(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new ky(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new ky(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new ky(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new ky(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new ky(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new ky(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ry(e),r=function(e){let t=!0;for(const n of Ry(e))if(!(n instanceof dx)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Ry(e))if(n instanceof dx){t=!1;break}return t}(e);if(r===s)throw new ky("Arguments to apply() must be all SymbolicTensors or all Tensors");return ib(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ry(e))t.push(n.shape);this.build(Ey(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Ry(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Ey(a),null!=this.activityRegularizer)throw new Sy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ry(e);const t=[];for(const n of e)t.push(n.shape);return Ey(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new dx(a,n,this,Ry(e),t,this.name,r))):new dx(a,r,this,Ry(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Sy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new vy(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new vy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new wy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ax(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lx(e?this.trainableWeights:this.weights)}setWeights(e){di((()=>{const t=this.weights;if(t.length!==e.length)throw new ky(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=lx(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!he(a.shape,o.shape))throw new ky(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ux(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ky(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():ex("zeros"));const l=r.apply(t,n),u=new ox(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ry(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=Ry(t),a=Ry(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=Ry(e);t=Ry(t),n=Ry(n),r=Ry(r),s=nx(s),a=nx(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new px({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function gx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=gx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class yx extends mx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:qy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ky("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ky("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ky("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new dx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ky(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function bx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ky("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new yx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}yx.className="InputLayer",Bp(yx);class xx{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof xx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ky(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Eo(t,e.dtype)}catch(n){throw new ky(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof dx){if(null==this.id2Value[e.id])throw new ky(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof dx){if(null==this.id2Value[e.id])throw new ky(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&hi(this.id2Mask)}}const vx=new Ny,wx=new Ny;function kx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let d,h=vx.get(c);if(null==h){const e=function(e,t){ie(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Ix(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ix(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Sx(r)}}(i,t);h=e.sorted,d=e.recipientCounts,vx.put(c,h),wx.put(c,d)}d={},s||Object.assign(d,wx.get(c));const p=new xx(t);for(let e=0;e<h.length;++e){if(null!=r){const e=ui().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof yx)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Ry(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Nx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||hi(f)}return p.disposeMasks(),a?l:l[0]}function Sx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ix(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Nx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Cx(e,t){return di((()=>wu(Su(Do(e,e),t,!0))))}Ke().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=vx&&vx.setMaxEntries(e),null!=wx&&wx.setMaxEntries(e)}));class Tx extends zp{getConfig(){return{}}}class $x extends Tx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return di((()=>{const t=Cx(e,this.axis),n=Rl(t,0,this.maxValue);return Do(e,Oo(n,Ao(gb(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}$x.className="MaxNorm",Bp($x);class Ex extends Tx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return di((()=>Oo(e,Ao(gb(),Cx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ex.className="UnitNorm",Bp(Ex);class Rx extends Tx{apply(e){return gd(e)}}Rx.className="NonNeg",Bp(Rx);class _x extends Tx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return di((()=>{const t=Cx(e,this.axis),n=Ao(Do(this.rate,Rl(t,this.minValue,this.maxValue)),Do(1-this.rate,t));return Do(e,Oo(n,Ao(gb(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_x.className="MinMaxNorm",Bp(_x);const Ax={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Fx(e){return Oy(e)}function Ox(e,t={}){return My(e,Pp.getMap().classNameMap,t,"constraint")}function Dx(e){if(null==e)return null;if("string"==typeof e){return Ox({className:e in Ax?Ax[e]:e,config:{}})}return e instanceof Tx?e:Ox(e)}function Mx(e){return new $x(e)}function Lx(e){return new Ex(e)}function zx(){return new Rx}function Px(e){return new _x(e)}function Bx(){return new Mb}function Wx(){return new Lb}function Vx(e){return new zb(e)}function Ux(e){return new Pb(e)}function Zx(e){return new Bb(e)}function Gx(e){return new Wb(e)}function jx(e){return new Vb(e)}function Hx(e){return new Ub(e)}function qx(e){return new Zb(e)}function Kx(e){return new Gb(e)}function Xx(e){return new jb(e)}function Yx(e){return new Hb(e)}function Jx(e){return new qb(e)}function Qx(e){return new Kb(e)}function ev(e){return new Xb(e)}async function tv(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];hi(r)}}function nv(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var rv;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(rv||(rv={}));class sv{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class av{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class iv extends sv{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=di((()=>Ao(this.totals[e],Do(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:di((()=>{const n=Do(Oo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),pi(t[e])})))}}class ov extends sv{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class lv extends sv{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Jf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");_e(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Ks();return(...a)=>{const i=null!=n?n():Ks();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await tv(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await tv(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await tv(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await tv(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await tv(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):_e(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await tv(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await tv(e),await this.trainEnd(e))}}function uv(e,t){if(null==e&&(e={}),e instanceof sv)return[e];if(Array.isArray(e)&&e[0]instanceof sv)return e;return Ry(e).map((e=>new lv(e,t)))}class cv{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),cv.checkForDuplicate(t),null==cv.constructors[e]&&(cv.constructors[e]=[]),cv.constructors[e].push(t)}static checkForDuplicate(e){for(const t in cv.constructors){cv.constructors[+t].forEach((t=>{if(t===e)throw new ky("Duplicate callback constructor.")}))}}static clear(){cv.constructors={}}static createCallbacks(e){const t=[];for(const n in cv.constructors){const r=+n;e>=r&&t.push(...cv.constructors[r])}return t.map((e=>new e))}}function dv(e,t,n,r,s,a,i,o,l){const u=new ov,c=[new iv,...cv.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new av(c);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function hv(e,t={},n=!1){return My(e,Pp.getMap().classNameMap,t,"layer",n)}function pv(e,t){return di((()=>{"float32"!==e.dtype&&(e=Eo(e,"float32"));const n=Su($b(e),t,!0),r=El(n.shape,gb()),s=wu(gc(n,r));return Oo(e,s)}))}function fv(e,t){return di((()=>yc($b(rc(t,e)),-1)))}function mv(e,t){return di((()=>yc(Mo(rc(t,e)),-1)))}function gv(e,t){return di((()=>{const n=rc(e,t),r=Rl(Mo(e),gb(),Number.MAX_VALUE),s=Mo(Oo(n,r));return Do(100,yc(s,-1))}))}function yv(e,t){return di((()=>{const n=Rl(t,gb(),Number.MAX_VALUE),r=Gu(Ao(1,n)),s=Rl(e,gb(),Number.MAX_VALUE),a=Gu(Ao(1,s));return yc($b(rc(r,a)),-1)}))}function bv(e,t,n=!1){return di((()=>{if(n)t=Dd(t);else{const e=Su(t,t.shape.length-1,!0);t=Oo(t,e)}return t=Rl(t,gb(),1-gb()),ec(Su(Do(Eo(e,"float32"),Gu(t)),t.shape.length-1))}))}function xv(e,t,n=!1){return di((()=>{const r=Eo(Au(function(e){const t=[db(e.shape)];return cl(e,t)}(e)),"int32"),s=(t=Rl(t,gb(),1-gb())).shape;return bv(cl($c(r,s[s.length-1]),s),t,n)}))}function vv(e,t){return di((()=>{let n;return n=Rl(t,gb(),1-gb()),n=Gu(Oo(n,rc(1,n))),yc(function(e,t){if(!he(e.shape,t.shape))throw new ky(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return di((()=>{const n=gd(t),r=ec(Mo(t));return Ao(rc(n,Do(t,e)),ju(Tu(r)))}))}(e,n),-1)}))}function wv(e,t){return di((()=>{const n=Rl(e,gb(),1),r=Rl(t,gb(),1);return Su(Do(e,Gu(Oo(n,r))),-1)}))}function kv(e,t){return di((()=>{const n=pv(e,-1),r=pv(t,-1),s=Do(n,r);return ec(Su(s,-1))}))}cv.constructors={};const Sv={meanSquaredError:fv,meanAbsoluteError:mv,meanAbsolutePercentageError:gv,meanSquaredLogarithmicError:yv,squaredHinge:function(e,t){return di((()=>{const n=gc(0,rc(1,Do(e,t)));return yc($b(n),-1)}))},hinge:function(e,t){return di((()=>{const n=gc(0,rc(1,Do(e,t)));return yc(n,-1)}))},categoricalHinge:function(e,t){return di((()=>{const n=Su(Do(e,t),-1),r=yu(Do(rc(1,e),t),-1);return gc(0,Ao(1,rc(r,n)))}))},logcosh:function(e,t){return di((()=>{const n=Math.log(2),r=rc(t,e),s=rc(Ao(r,tc(Do(-2,r))),n);return yc(s,-1)}))},categoricalCrossentropy:bv,sparseCategoricalCrossentropy:xv,binaryCrossentropy:vv,kullbackLeiblerDivergence:wv,poisson:function(e,t){return di((()=>{const n=Gu(Ao(gb(),t));return yc(rc(t,Do(e,n)),-1)}))},cosineProximity:kv};function Iv(e){if("string"==typeof e){if(e in Sv)return Sv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ky(t)}return e}function Nv(e,t){return di((()=>{const n=Do(.5,Ec(t)),r=yb(Ou(t,n),e.dtype);return yc(eu(e,r),-1)}))}function Cv(e,t){return di((()=>yb(eu(Vo(e,-1),Vo(t,-1)),"float32")))}function Tv(e,t){return di((()=>Eo(Su(ic(eu(e,1),eu(t,1))),"float32")))}function $v(e,t){return di((()=>{const n=Tv(e,t),r=function(e,t){return di((()=>Eo(Su(ic(eu(e,0),eu(t,1))),"float32")))}(e,t),s=Ao(n,r);return Eo(tu(Ou(s,0),Oo(n,s),0),"float32")}))}function Ev(e,t){return di((()=>{const n=Tv(e,t),r=function(e,t){return di((()=>Eo(Su(ic(eu(e,1),eu(t,0))),"float32")))}(e,t),s=Ao(n,r);return Eo(tu(Ou(s,0),Oo(n,s),0),"float32")}))}function Rv(e,t){return vv(e,t)}function _v(e,t){return e.rank===t.rank&&(e=Vd(e,[e.rank-1])),(t=Vo(t,-1)).dtype!==e.dtype&&(t=Eo(t,e.dtype)),Eo(eu(e,t),"float32")}const Av=bv,Fv=xv,Ov={binaryAccuracy:Nv,categoricalAccuracy:Cv,precision:$v,categoricalCrossentropy:Av,sparseCategoricalCrossentropy:Fv,mse:fv,MSE:fv,mae:mv,MAE:mv,mape:gv,MAPE:gv,cosine:kv};function Dv(e){if("string"==typeof e&&e in Ov)return Ov[e];if("string"!=typeof e&&null!=e)return e;throw new ky(`Unknown metric ${e}`)}function Mv(e){if(Ty(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Sv))if(Sv[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ov))if(Ov[n]===e){t=n;break}return void 0!==t?t:e.name}}const Lv=1048576;function zv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Pv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Lv&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Pv(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Pv(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Pv(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Bv(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Wv(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Vv(o[e],n,r):Uv(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?ax(e.collectedTrainableWeights):ax(e.trainableWeights);return t}(e),u=ax(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Wv(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Vv(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Wv([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Uv(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Wv([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Wv(["","","","",i[e]],t,r)}function Zv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Gv(e,t){if(null===e)return null;if("string"==typeof e)return Ay(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Zv(t,s,r)?n.push(r):n.push(Gv(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Ay(n);t[e]=Gv(r,e)}}return t}}function jv(e,t){if(null==e)return null;if("string"==typeof e)return _y(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Zv(t,s,r)?n.push(r):n.push(jv(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=_y(n);t[s]="name"!==n&&"className"!==n||"string"!=typeof r?jv(r,n):r}return t}}const Hv="4.16.0";class qv extends mx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=qy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],zy(this.inputs).length!==this.inputs.length)throw new ky(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);zy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Ty(0===n,"input layer has >1 nodes"),Ty(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof yx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new wy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(qv.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(s[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(Ly);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof qv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(Ly);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new wy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new wy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ky("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new ky(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new ky(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ky(`${e.length} of ${r} weights are not set: ${e}`)}ux(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Hv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=jv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return di((()=>{e=Ry(e);const n=new xx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return kx(this.outputs,n,t)}))}computeMask(e,t){return di((()=>{let n;return e=Ry(e),n=null==t?Cy(null,e.length):Ry(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=nx(e);if(t.length!==this.inputLayers.length)throw new ky(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ly);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=nx(t.computeOutputShape(Ey(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n[`${t.name}_${a}_${e}`]=s[e]}}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Ty(t in n),s.push(n[t])}return Ey(s)}runInternalGraph(e,t){null==t&&(t=Cy(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ly);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Ry(t.call(e,u)),l=Ry(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Ry(t.call(r,u)),l=Ry(t.computeMask(r,i));if(t.activityRegularizer)throw new Sy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Ty(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof qv?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=qv.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new ky("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new ky(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ky(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return di((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=qv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=qv.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[qv.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=qv.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=qv.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(Ey(n),r)}function l(e){const n=e.name,a=hv(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ky(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Py(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Ty(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Ty(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}return new e({inputs:d,outputs:h,name:u})}get stateful(){if(this._stateful)throw new ky("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){di((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Kv(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Xv(e,t){return Kv(e,t,"classWeight")}async function Yv(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=di((()=>{if(1===e.shape.length)return Ro(e);if(2===e.shape.length){if(e.shape[1]>1){return Vo(e,1)}if(1===e.shape[1])return cl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());hi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Hd(s,"float32")}return null}function Jv(e,t){return Do(e,t)}function Qv(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ie(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=ew("input",e.inputNames,n),i=ew("output",e.outputNames,r),o=a[0].shape[0];ie(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ie(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)ie(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function ew(e,t,n){if(n instanceof ga)return[n];if(Array.isArray(n))return ie(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new ky(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function tw(e,t,n){const r=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ie(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ie(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ie(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(nw(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Sy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=uv(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=dv(c,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await h.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Qv(e,t.value),a={};a.batch=d,a.size=r[0].shape[0],await h.onBatchBegin(d,a);const i=[];if(null!=n.classWeight){const t=Xv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Yv(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);hi(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,pi(n)}await h.onBatchEnd(d,a),nv(a),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=nw(n.validationData)?Ry(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ry(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,u),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function nw(e){return"function"==typeof e.iterator}function rw(e){ie(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function sw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>xb(e,t,n-t))):xb(e,t,n-t)}function aw(e,t){return di((()=>null==e?null:Array.isArray(e)?e.map((e=>aw(e,t))):Tb(e,"int32"===t.dtype?t:Eo(t,"int32"))))}function iw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function ow(e){const t=[];e instanceof ga&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(bb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function lw(e,t){if(null==e)return;const n=[];if(t instanceof ga)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ga)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function uw(e){return Array.isArray(e)}function cw(e){return!function(e){return e instanceof ga}(e)&&!uw(e)}function dw(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(uw(e)&&e.length>0)t=!0;else if(cw(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ky(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(cw(e)){a=[];for(const n of t){if(null==e[n])throw new ky(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(uw(e)){if(e.length!==t.length)throw new ky(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new ky(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=ow(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ky(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new ky(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function hw(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new ky(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new ky(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ky(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new ky(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class pw extends qv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ky("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Bv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Xf.adagrad(.01),Adadelta:()=>Xf.adadelta(1,.95,gb()),Adam:()=>Xf.adam(.001,.9,.999,gb()),Adamax:()=>Xf.adamax(.002,.9,.999,gb(),0),RMSProp:()=>Xf.rmsprop(.001,.9,0,gb()),SGD:()=>Xf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ky(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vp))throw new ky("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ky(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Iv(e)))}else{const n=Iv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ky(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Iv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ib("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ib("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===vv?-1!==["accuracy","acc"].indexOf(i)?r=Nv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Rv):this.lossFunctions[e]===xv?-1!==["accuracy","acc"].indexOf(i)?r=_v:-1!==["crossentropy","ce"].indexOf(i)&&(r=Fv):-1!==["accuracy","acc"].indexOf(i)?r=Cv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Av),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Dv(i);a=e,n=""+Mv(i)}let t;ib(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;rw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Ey(this.testLoop(t,e,r,n.verbose,n.steps))}finally{lw(s[0],e),lw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Sy("Verbose mode is not implemented yet.");ie(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=di((()=>{if(t.value){const{xs:n,ys:r}=Qv(e,t.value),i=n.concat(r),u=di((()=>s(i)));if(hi(i),0===l)for(let e=0;e<u.length;++e)a.push(vu(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=di((()=>Ao(a[e],Do(c,t)))),l>0&&hi(n)}hi(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Oo(a[e],o),hi(t)}return Ey(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new ky(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ky(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ky("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new xx;if(e instanceof ga&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ky(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ky(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=kx(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Cy(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ky(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return di((()=>{const r=this.checkNumSamples(e);if(n)throw new Sy("Verbose predictLoop() is not implemented yet.");const s=iw(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){di((()=>{const n=s[t][0],r=s[t][1],a=sw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new xx(i);return kx(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return Ey(a.map((e=>pl(e,0))))}))}predict(e,t={}){const n=ow(e);hw(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return rw(e),this.predictLoop(n,e)}finally{lw(n,e)}}predictOnBatch(e){hw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new wy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===xv?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=zy(e.map((e=>e.shape[0])));r.sort();const s=zy(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new ky(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new ky(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!he(r,s))throw new ky(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=dw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=dw(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[fv,vv,bv];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===bv&&1===a.shape[a.shape.length-1])throw new ky(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new ky(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ky(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Xv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Yv(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return di((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Sy("Verbose mode is not implemented yet.");if(null!=s)throw new Sy("steps mode in testLoop() is not implemented yet");{const r=iw(a,n),s=Hd(fb(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=xb(s,a,o-a),u=aw(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(vu(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ao(i[e],Do(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Oo(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if($y(e,r)>1){s+=`_${$y(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new xx(e),o=kx(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Jv(n,s[e]));const a=yc(n);t.push(a),l=0===e?n:Ao(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=yc(t(r[s],o[s]))}pi(n),a.push(n)}return l=yc(l),this.calculateLosses().forEach((e=>{l=Ao(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>di((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new xx(a),o=kx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=yc(r(s[e],o[e]));n=0===e?a:Ao(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=yc(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,d;this.isTraining=!0;try{const h=null==n.batchSize?32:n.batchSize;rw(h);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,h);r=f[0],s=f[1],d=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Sy("validationData including sample weights is not supported yet."):new ky(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,h);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=sw(r,e,t),a=r,r=sw(r,0,e),c=sw(s,e,t),i=s,s=sw(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=uv(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,h,n.epochs,n.verbose,k,v,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,lw(r,e),lw(s,t),lw(a,e),lw(i,t),lw(u,o),lw(c,l),null!=d&&hi(d)}}async fitLoop(e,t,n,r,s,a,i,o,l,u,c,d,h,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==d&&(d=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==h))throw new ky("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,h,"steps_per_epoch");let g;null!=m&&(g=fb(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=dv(i,a,s,d,m,h,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=d;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=h)throw new Sy("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Sy("batch shuffling is not implemneted yet");u&&J(g);const a=Hd(g),i=iw(m,r);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),di((()=>{const d=i[u][0],h=i[u][1],p=xb(a,d,h-d);c.batch=u,c.size=h-d;const m=aw(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,pi(r)}if(u===i.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];pi(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),nv(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return tw(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return hi(a),lw(n[0],e),lw(n[1],t),Ey(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ui().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ui().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=_y(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>_y(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=_y(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[_y(Mv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>_y(Mv(e))));{const e={};for(const t in this.metrics)e[t]=_y(Mv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=hv(Gv(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Ay(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ay(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ay(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Ay(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ay(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ji(e);if(0===t.length)throw new ky(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ky(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ky("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ci(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Hv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Ci(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Mi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;zv(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){zv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}pw.className="Model",Bp(pw);class fw extends pw{}async function mw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=hv(Gv(n),t);if(null!=e.weightsManifest){const t=await rf(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),hi(t)}return r}async function gw(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Hi(e,t);if(0===n.length)n.push(cf(e,t));else if(n.length>1)throw new ky(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new ky("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=hv(Gv(s),t,i),l=r.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new ky("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ti(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),hi(e),hi(t.map((e=>e.tensor)))}return o}(e,void 0,t)}fw.className="Functional",Bp(fw);class yw extends pw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:qy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ky(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof yw||e instanceof pw;let n;if(t){if(n=e,1!==n.outputs.length)throw new ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ky("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ky("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=bx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ky(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=gx(this.outputs[0])}this.inboundNodes=[],new px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Cy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(sx(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new pw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new wy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new wy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new wy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new wy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ky("Legacy serialization format not supported yet.");s=t}else ie(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof yw))throw new Sy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=hv(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ky("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ky("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function bw(e){return new pw(e)}function xw(e){return new yw(e)}function vw(e){return bx(e)}function ww(e,t){cv.registerCallbackConstructor(e,t)}yw.className="Sequential",Bp(yw);class kw extends zp{getConfig(){return{}}}class Sw extends kw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Sy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return iu(e)}(e,t)}}Sw.className="elu",Bp(Sw);class Iw extends kw{apply(e){return Nd(e)}}Iw.className="selu",Bp(Iw);class Nw extends kw{apply(e){return gd(e)}}Nw.className="relu",Bp(Nw);class Cw extends kw{apply(e){return di((()=>wc(6,gd(e))))}}Cw.className="relu6",Bp(Cw);class Tw extends kw{apply(e){return e}}Tw.className="linear",Bp(Tw);class $w extends kw{apply(e){return ml(e)}}$w.className="sigmoid",Bp($w);class Ew extends kw{apply(e){return function(e){return di((()=>{const t=Ao(.5,Do(.2,e));return Rl(t,0,1)}))}(e)}}Ew.className="hardSigmoid",Bp(Ew);class Rw extends kw{apply(e){return tc(e)}}Rw.className="softplus",Bp(Rw);class _w extends kw{apply(e){return function(e){return di((()=>Oo(e,Ao(Mo(e),1))))}(e)}}_w.className="softsign",Bp(_w);class Aw extends kw{apply(e){return yl(e)}}Aw.className="tanh",Bp(Aw);class Fw extends kw{apply(e,t=-1){return Dd(e,t)}}Fw.className="softmax",Bp(Fw);class Ow extends kw{apply(e,t=-1){return sc(e,t)}}Ow.className="logSoftmax",Bp(Ow);class Dw extends kw{apply(e,t=1){return di((()=>Do(ml(Do(e,t)),e)))}}Dw.className="swish",Bp(Dw);class Mw extends kw{apply(e){return di((()=>Do(e,yl(tc(e)))))}}function Lw(e){return e.getClassName()}function zw(e,t={}){return My(e,Pp.getMap().classNameMap,t,"activation")}function Pw(e){if(null==e){const e={className:"linear",config:{}};return zw(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},zw(t)}return e instanceof kw?e:zw(e)}function Bw(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Mw.className="mish",Bp(Mw);class Ww extends zp{}class Vw extends Ww{constructor(e){super(),Bw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return di((()=>{let t=bc([1]);return this.hasL1&&(t=Ao(t,Su(Do(this.l1,Mo(e))))),this.hasL2&&(t=Ao(t,Su(Do(this.l2,$b(e))))),cl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Vw.className="L1L2",Bp(Vw);const Uw={l1l2:"L1L2"};function Zw(e){return Oy(e)}function Gw(e,t={}){return My(e,Pp.getMap().classNameMap,t,"regularizer")}function jw(e){if(null==e)return null;if("string"==typeof e){return Gw({className:e in Uw?Uw[e]:e,config:{}})}return e instanceof Ww?e:Gw(e)}class Hw extends mx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=rx(e);let n=gd(e);return null!=this.maxValue&&(n=Rl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="ReLU",Bp(Hw);class qw extends mx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rx(e);return Bu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}qw.className="LeakyReLU",Bp(qw);class Kw extends mx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ex(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=jw(e.alphaRegularizer),this.alphaConstraint=Dx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ky(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=sx(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new cx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=rx(e),zc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Qb(this.alphaInitializer),alphaRegularizer:Zw(this.alphaRegularizer),alphaConstraint:Fx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Kw.className="PReLU",Bp(Kw);class Xw extends mx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Sy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rx(e);return iu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Xw.className="ELU",Bp(Xw);class Yw extends mx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=rx(e);return Do(n,Eo(Ou(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Yw.className="ThresholdedReLU",Bp(Yw);class Jw extends mx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Fw).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return di((()=>{let n=rx(e);const r=t.mask;if(null!=r){const e=Do(rc(xc(n.shape),Eo(r,n.dtype)),vu(-1e9));n=Ao(n,e)}return this.axis instanceof Array?this.axis.length>1?Tu(rc(n,ac(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Qw(e,t,n){if("number"==typeof e)return Cy(e,t);if(e.length!==t)throw new ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function ek(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function tk(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+pb([n-t,0]);else{if("same"!==r)throw new ky(`Unsupport padding mode: ${r}.`);e*=t}return e}function nk(e,t){return di((()=>(tb(t),"channelsFirst"===t?ph(e,[0,2,3,1]):e)))}function rk(e,t){return di((()=>(tb(t),"channelsFirst"===t?ph(e,[0,2,3,4,1]):e)))}function sk(e,t,n,r=1,s="valid",a,i=1){return di((()=>{if(null==a&&(a="channelsLast"),tb(a),3!==e.shape.length)throw new ky(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ky(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ky(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=ph(e,[0,2,1])),"causal"===s)throw new Sy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ml(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Rb(o,n)),o}))}function ak(e,t,n,r=[1,1],s="valid",a,i,o=null){return di((()=>{if(null==a&&(a="channelsLast"),tb(a),3!==e.rank&&4!==e.rank)throw new ky(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ky(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=nk(e,a);if("causal"===s)throw new Sy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Th({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=ph(l,[0,3,1,2])),l}))}function ik(e,t,n,r=[1,1,1],s="valid",a,i){return di((()=>{if(null==a&&(a="channelsLast"),tb(a),4!==e.rank&&5!==e.rank)throw new ky(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ky(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=rk(e,a);if("causal"===s)throw new Sy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Pl(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Rb(o,n)),"channelsFirst"===a&&(o=ph(o,[0,4,1,2,3])),o}))}Jw.className="Softmax",Bp(Jw);class ok extends mx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ok.verifyArgs(t),this.rank=e,Vy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Sy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qw(t.kernelSize,e,"kernelSize"),this.strides=Qw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,nb(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tb(this.dataFormat),this.activation=Pw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ex(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Dx(t.biasConstraint),this.biasRegularizer=jw(t.biasRegularizer),this.activityRegularizer=jw(t.activityRegularizer),this.dilationRate=Qw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ky(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ky(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ky(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Ty("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Wy(e.kernelSize,"number",1,3))throw new ky(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Lw(this.activation),useBias:this.useBias,biasInitializer:Qb(this.biasInitializer),biasRegularizer:Zw(this.biasRegularizer),activityRegularizer:Zw(this.activityRegularizer),biasConstraint:Fx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class lk extends ok{constructor(e,t){super(e,t),this.kernel=null,lk.verifyArgs(t),this.filters=t.filters,Vy(this.filters,"filters"),this.kernelInitializer=ex(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Dx(t.kernelConstraint),this.kernelRegularizer=jw(t.kernelRegularizer)}build(e){e=sx(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return di((()=>{let t;e=rx(e);const n=null==this.bias?null:this.bias.read(),r=Zy(this.activation.getClassName());if(null!=r&&2===this.rank)t=ak(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=sk(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ak(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Sy("convolutions greater than 3D are not implemented yet.");t=ik(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=sx(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=ek(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Qb(this.kernelInitializer),kernelRegularizer:Zw(this.kernelRegularizer),kernelConstraint:Fx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ky(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class uk extends lk{constructor(e){super(2,e),uk.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Wy(e.kernelSize,"number",1,2))throw new ky(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}uk.className="Conv2D",Bp(uk);class ck extends lk{constructor(e){super(3,e),ck.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ky(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ck.className="Conv3D",Bp(ck);class dk extends uk{constructor(e){if(super(e),this.inputSpec=[new cx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ky(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=sx(e)).length)throw new ky("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return di((()=>{let t=rx(e);if(4!==t.shape.length)throw new ky(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=[r,tk(i,c,l,this.padding),tk(o,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ph(t,[0,2,3,1]));let p=zl(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ph(p,[0,3,1,2])),null!=this.bias&&(p=Rb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=sx(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=tk(t[r],o,a,this.padding),t[s]=tk(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dk.className="Conv2DTranspose",Bp(dk);class hk extends ck{constructor(e){if(super(e),this.inputSpec=[new cx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ky(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=sx(e)).length)throw new ky("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return di((()=>{let t=rx(e);if(5!==t.shape.length)throw new ky(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,tk(o,p,c,this.padding),tk(l,f,d,this.padding),tk(u,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ph(t,[0,2,3,4,1]));let y=Wl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=ph(y,[0,4,1,2,3])),null!==this.bias&&(y=Rb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=sx(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=tk(t[r],u,i,this.padding),t[s]=tk(t[s],c,o,this.padding),t[a]=tk(t[a],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}hk.className="Conv3DTranspose",Bp(hk);class pk extends lk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ky("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ky("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ky(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ex(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=jw(t.depthwiseRegularizer),this.depthwiseConstraint=Dx(t.depthwiseConstraint),this.pointwiseInitializer=ex(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=jw(t.pointwiseRegularizer),this.pointwiseConstraint=Dx(t.pointwiseConstraint)}build(e){if((e=sx(e)).length<this.rank+2)throw new ky(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ky(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new cx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return di((()=>{let t;if(e=rx(e),1===this.rank)throw new Sy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ph(e,[0,2,3,1])),t=Cd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Rb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ph(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Qb(this.depthwiseInitializer),e.pointwiseInitializer=Qb(this.pointwiseInitializer),e.depthwiseRegularizer=Zw(this.depthwiseRegularizer),e.pointwiseRegularizer=Zw(this.pointwiseRegularizer),e.depthwiseConstraint=Fx(this.depthwiseConstraint),e.pointwiseConstraint=Fx(this.pointwiseConstraint),e}}pk.className="SeparableConv";class fk extends pk{constructor(e){super(2,e)}}fk.className="SeparableConv2D",Bp(fk);class mk extends lk{constructor(e){super(1,e),mk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Wy(e.kernelSize,"number",1,1))throw new ky(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}mk.className="Conv1D",Bp(mk);class gk extends mx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return di((()=>{if(e=rx(e),"channelsLast"===this.dataFormat){const t=wb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=wb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}gk.className="Cropping2D",Bp(gk);class yk extends mx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,By(Xy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return di((()=>{let t=rx(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ph(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?_p.resizeNearestNeighbor(t,[e,r]):_p.resizeBilinear(t,[e,r]);return ph(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?_p.resizeNearestNeighbor(t,[e,r]):_p.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}yk.className="UpSampling2D",Bp(yk);class bk extends ok{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ex(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Dx(e.depthwiseConstraint),this.depthwiseRegularizer=jw(e.depthwiseRegularizer)}build(e){if((e=sx(e)).length<4)throw new ky(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ky(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return di((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return di((()=>{null==s&&(s="channelsLast"),tb(s);let i=nk(e,s);if(4!==e.rank)throw new ky(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ky(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ql(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ph(i,[0,3,1,2])),i}))}(e=rx(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Rb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=sx(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=ek(t,this.kernelSize[0],this.padding,this.strides[0]),a=ek(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Qb(this.depthwiseInitializer),e.depthwiseRegularizer=Zw(this.depthwiseRegularizer),e.depthwiseConstraint=Fx(this.depthwiseRegularizer),e}}function xk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ky("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function vk(e,t,n,r=!1,s,a,i=!1,o=!1){return di((()=>{const l=t.shape.length;if(l<3)throw new ky(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(fb(2,l));if(t=ph(t,u),null!=a)throw new Sy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Eo(Eo(s,"bool"),"float32")).rank===l-1&&(s=$u(s,-1)),s=ph(s,u)),r&&(t=bd(t,0),null!=s&&(s=bd(s,0)));const c=[];let d,h=n;const p=t.shape[0],f=oh(t);let m,g;null!=s&&(m=oh(s));for(let t=0;t<p;++t){const n=f[t],r=di((()=>e(n,h)));if(null==s)d=r[0],h=r[1];else{const e=di((()=>{const e=m[t],n=rc(Ec(e),e);return{output:Ao(Do(r[0],e),Do(h[0],n)),newStates:h.map(((t,s)=>Ao(Do(r[1][s],e),Do(t,n))))}}));d=e.output,h=e.newStates}o&&c.push(d)}if(o){g=Ud(c,1)}return[d,g,h]}))}bk.className="DepthwiseConv2D",Bp(bk);class wk extends mx{constructor(e){let t;if(super(e),null==e.cell)throw new ky("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ek({cells:e.cell}):e.cell,null==t.stateSize)throw new ky("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new cx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return fb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){tx(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return di((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Sy("Constants support is not implemented in RNN yet.");tx(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new cx({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!he(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new ky(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new cx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){di((()=>{if(!this.stateful)throw new vy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>bc([n,e]))):this.states_=[bc([n,this.cell.stateSize])];else if(null==e)hi(this.states_),null!=this.keptStates&&(hi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>bc([n,e]))):this.states_[0]=bc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):hi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!he(r.shape,a))throw new ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>pi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=xk(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new cx({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof dx){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return di((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=rx(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new ky(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=vk(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return di((()=>{let t=bc(e.shape);return t=Su(t,[1,2]),t=bb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ib(t,[1,e]):t)):this.cell.stateSize>1?[Ib(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===wk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=hv(t.cell,n);return new e(Object.assign(t,{cell:r}))}}wk.className="RNN",Bp(wk);class kk extends mx{}class Sk extends kk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vy(this.units,"units"),this.activation=Pw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ex(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ex(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ex(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jw(e.kernelRegularizer),this.recurrentRegularizer=jw(e.recurrentRegularizer),this.biasRegularizer=jw(e.biasRegularizer),this.kernelConstraint=Dx(e.kernelConstraint),this.recurrentConstraint=Dx(e.recurrentConstraint),this.biasConstraint=Dx(e.biasConstraint),this.dropout=hb([1,pb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hb([1,pb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sx(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return di((()=>{if(2!==e.length)throw new ky(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rk({ones:()=>Ec(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rk({ones:()=>Ec(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Cb(null!=a?Do(e,a):e,this.kernel.read()),null!=this.bias&&(s=Rb(s,this.bias.read())),null!=i&&(n=Do(n,i));let o=Ao(s,Cb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lw(this.activation),useBias:this.useBias,kernelInitializer:Qb(this.kernelInitializer),recurrentInitializer:Qb(this.recurrentInitializer),biasInitializer:Qb(this.biasInitializer),kernelRegularizer:Zw(this.kernelRegularizer),recurrentRegularizer:Zw(this.recurrentRegularizer),biasRegularizer:Zw(this.biasRegularizer),activityRegularizer:Zw(this.activityRegularizer),kernelConstraint:Fx(this.kernelConstraint),recurrentConstraint:Fx(this.recurrentConstraint),biasConstraint:Fx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Sk.className="SimpleRNNCell",Bp(Sk);class Ik extends wk{constructor(e){e.cell=new Sk(e),super(e)}call(e,t){return di((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Ik.className="SimpleRNN",Bp(Ik);class Nk extends kk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ky("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Vy(this.units,"units"),this.activation=Pw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Pw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ex(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ex(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ex(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jw(e.kernelRegularizer),this.recurrentRegularizer=jw(e.recurrentRegularizer),this.biasRegularizer=jw(e.biasRegularizer),this.kernelConstraint=Dx(e.kernelConstraint),this.recurrentConstraint=Dx(e.recurrentConstraint),this.biasConstraint=Dx(e.biasConstraint),this.dropout=hb([1,pb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hb([1,pb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=sx(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return di((()=>{if(2!==e.length)throw new ky(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rk({ones:()=>Ec(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rk({ones:()=>Ec(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Do(e,s[0]));let u=Cb(e,this.kernel.read());this.useBias&&(u=Rb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Do(r,a[0]));const c=this.recurrentKernel.read(),[d,h]=Pd(c,[2*this.units,this.units],c.rank-1),p=Cb(r,d),[f,m,g]=Pd(u,3,u.rank-1),[y,b]=Pd(p,2,p.rank-1);i=this.recurrentActivation.apply(Ao(f,y)),o=this.recurrentActivation.apply(Ao(m,b));const x=Cb(Do(o,r),h);l=this.activation.apply(Ao(g,x));const v=Ao(Do(i,r),Do(Ao(1,ec(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lw(this.activation),recurrentActivation:Lw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Qb(this.kernelInitializer),recurrentInitializer:Qb(this.recurrentInitializer),biasInitializer:Qb(this.biasInitializer),kernelRegularizer:Zw(this.kernelRegularizer),recurrentRegularizer:Zw(this.recurrentRegularizer),biasRegularizer:Zw(this.biasRegularizer),activityRegularizer:Zw(this.activityRegularizer),kernelConstraint:Fx(this.kernelConstraint),recurrentConstraint:Fx(this.recurrentConstraint),biasConstraint:Fx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Nk.className="GRUCell",Bp(Nk);class Ck extends wk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Nk(e),super(e)}call(e,t){return di((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ck.className="GRU",Bp(Ck);class Tk extends kk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vy(this.units,"units"),this.activation=Pw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Pw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ex(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ex(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ex(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=jw(e.kernelRegularizer),this.recurrentRegularizer=jw(e.recurrentRegularizer),this.biasRegularizer=jw(e.biasRegularizer),this.kernelConstraint=Dx(e.kernelConstraint),this.recurrentConstraint=Dx(e.recurrentConstraint),this.biasConstraint=Dx(e.biasConstraint),this.dropout=hb([1,pb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=hb([1,pb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=sx(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Db{apply(t,r){const s=e.apply([n]),a=(new Lb).apply([n]),i=e.apply([2*n]);return Sb(Sb(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return di((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new ky(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rk({ones:()=>Ec(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rk({ones:()=>Ec(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Do(e,a[0]));let d=Cb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Do(r,i[0])),d=Ao(d,Cb(r,this.recurrentKernel.read())),this.useBias&&(d=Rb(d,this.bias.read()));const[h,p,f,m]=Pd(d,4,d.rank-1);o=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(p),u=Ao(Do(l,s),Do(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Do(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Lw(this.activation),recurrentActivation:Lw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Qb(this.kernelInitializer),recurrentInitializer:Qb(this.recurrentInitializer),biasInitializer:Qb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Zw(this.kernelRegularizer),recurrentRegularizer:Zw(this.recurrentRegularizer),biasRegularizer:Zw(this.biasRegularizer),activityRegularizer:Zw(this.activityRegularizer),kernelConstraint:Fx(this.kernelConstraint),recurrentConstraint:Fx(this.recurrentConstraint),biasConstraint:Fx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Tk.className="LSTMCell",Bp(Tk);class $k extends wk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tk(e),super(e)}call(e,t){return di((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}$k.className="LSTM",Bp($k);class Ek extends kk{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return di((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;tx(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{ib(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(hv(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lx(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}ux(t)}}function Rk(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):_b(t(),n),o=()=>Ab(i,t,r);if(!s||s<=1)return pi(o().clone());return Array(s).fill(void 0).map(o).map((e=>pi(e.clone())))}Ek.className="StackedRNNCells",Bp(Ek);var _k=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class Ak extends wk{constructor(e){if(e.unroll)throw new Sy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Sy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cx({ndim:5})]}call(e,t){return di((()=>{if(null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ky("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return di((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=bc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){di((()=>{if(!this.stateful)throw new vy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>bc(s))):this.states_=[bc(s)];else if(null==e)hi(this.states_),null!=this.keptStates&&(hi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>bc(s))):this.states_[0]=bc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):hi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!he(n.shape,r))throw new ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>pi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=ek(l,r[0],s,a[0],i[0]),d=ek(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}Ak.className="ConvRNN2D";class Fk extends Tk{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Vy(this.filters,"filters"),this.kernelSize=Qw(n,2,"kernelSize"),this.kernelSize.forEach((e=>Vy(e,"kernelSize"))),this.strides=Qw(r||1,2,"strides"),this.strides.forEach((e=>Vy(e,"strides"))),this.padding=s||"valid",nb(this.padding),this.dataFormat=a||"channelsLast",tb(this.dataFormat),this.dilationRate=Qw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Vy(e,"dilationRate")))}build(e){var t;e=sx(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ky(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Db{apply(e,t){return kb([n.apply([r]),xc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return di((()=>{if(3!==e.length)throw new ky(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rk({ones:()=>Ec(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Do(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rk({ones:()=>Ec(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=o(s,h,0),f=o(s,h,1),m=o(s,h,2),g=o(s,h,3);const[y,b,x,v]=Pd(this.kernel.read(),4,3),[w,k,S,I]=this.useBias?Pd(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,S,this.padding),d=this.inputConv(d,v,I,this.padding);const[N,C,T,$]=Pd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(Ao(l,p)),R=this.recurrentActivation.apply(Ao(u,f)),_=Ao(Do(R,a),Do(E,this.activation.apply(Ao(c,m)))),A=Do(this.recurrentActivation.apply(Ao(d,g)),this.activation.apply(_));return[A,A,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=_k(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Dl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Rb(s,n,this.dataFormat):s}recurrentConv(e,t){return Dl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Fk.className="ConvLSTM2DCell",Bp(Fk);class Ok extends Ak{constructor(e){const t=new Fk(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Ok.className="ConvLSTM2D",Bp(Ok);class Dk extends mx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Ab((()=>_b(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Dk.className="Dropout",Bp(Dk);class Mk extends Dk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Mk.className="SpatialDropout1D",Bp(Mk);class Lk extends mx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Vy(this.units,"units"),this.activation=Pw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ex(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ex(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Dx(e.kernelConstraint),this.biasConstraint=Dx(e.biasConstraint),this.kernelRegularizer=jw(e.kernelRegularizer),this.biasRegularizer=jw(e.biasRegularizer),this.activityRegularizer=jw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=sx(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=sx(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e),r=Zy(this.activation.getClassName());let s;return null!=r?s=Cb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Cb(n,this.kernel.read()),null!=this.bias&&(s=Rb(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Lw(this.activation),useBias:this.useBias,kernelInitializer:Qb(this.kernelInitializer),biasInitializer:Qb(this.biasInitializer),kernelRegularizer:Zw(this.kernelRegularizer),biasRegularizer:Zw(this.biasRegularizer),activityRegularizer:Zw(this.activityRegularizer),kernelConstraint:Fx(this.kernelConstraint),biasConstraint:Fx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Lk.className="Dense",Bp(Lk);class zk extends mx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=sx(e);for(const t of e.slice(1))if(null==t)throw new ky(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],db(e,1)]}call(e,t){return di((()=>{this.invokeCallHook(e,t);let n=rx(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ph(n,e)}return function(e){if(e.rank<=1)throw new ky(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],db(e.shape,1)];return cl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}zk.className="Flatten",Bp(zk);class Pk extends mx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Pw(e.activation)}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Lw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Pk.className="Activation",Bp(Pk);class Bk extends mx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return di((()=>{return e=rx(e),t=e,n=this.n,di((()=>{if(2!==t.shape.length)throw new ky(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ib(bb(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="RepeatVector",Bp(Bk);class Wk extends mx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new ky("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=db(e);if(null!==a){if(0===s||i%s!=0)throw new ky(n);r[a]=i/s}else if(i!==s)throw new ky(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return cl(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Wk.className="Reshape",Bp(Wk);class Vk extends mx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=fb(1,e.dims.length+1);if(!he(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cx({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=sx(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return ph(rx(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Vk.className="Permute",Bp(Vk);class Uk extends mx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=rx(e);return Wo(Tc(n,this.maskValue),-1)}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e),r=Wo(Tc(n,this.maskValue),-1,!0);return Do(n,Eo(r,n.dtype))}))}}Uk.className="Masking",Bp(Uk);class Zk extends mx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ry(e.inputLength))}this.inputDim=e.inputDim,Vy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Vy(this.outputDim,"outputDim"),this.embeddingsInitializer=ex(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=jw(e.embeddingsRegularizer),this.activityRegularizer=jw(e.activityRegularizer),this.embeddingsConstraint=Dx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return di((()=>this.maskZero?(e=rx(e),Tc(e,nu(e))):null))}computeOutputShape(e){if(e=sx(e),null==this.inputLength)return[...e,this.outputDim];const t=Ry(this.inputLength);if(t.length!==e.length-1)throw new ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return di((()=>{this.invokeCallHook(e,t);let n=rx(e);"int32"!==n.dtype&&(n=yb(n,"int32"));const r=Tb(this.embeddings.read(),cl(n,[n.size]));return cl(r,sx(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Qb(this.embeddingsInitializer),embeddingsRegularizer:Zw(this.embeddingsRegularizer),activityRegularizer:Zw(this.activityRegularizer),embeddingsConstraint:Fx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Zk.className="Embedding",Bp(Zk);class Gk extends mx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Sy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new ky("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[sx(e)]),e.length<2)throw new ky(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=zy(t),t.length>1)throw new ky(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===zy(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return di((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=pb(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=bb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=cl(r,[s].concat(db(e.slice(1))));i=ph(i,[1,0]),i=cl(i,a),t.push(i),n=!0}else if(e>1){const s=fb(1,e).concat([0]);t.push(ph(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=cl(ph(cl(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(fb(0,s-1));r=ph(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=zy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return di((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ky("`mask` should be an Array");if(!Array.isArray(e))throw new ky("`inputs` should be an Array");if(t.length!==e.length)throw new ky(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:$u(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ic(n,t[e]);return n}))}}class jk extends Gk{constructor(e){super(e)}mergeFunction(e){return di((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return t}))}}jk.className="Add",Bp(jk);class Hk extends Gk{constructor(e){super(e)}mergeFunction(e){return di((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Do(t,e[n]);return t}))}}Hk.className="Multiply",Bp(Hk);class qk extends Gk{constructor(e){super(e)}mergeFunction(e){return di((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return Do(1/e.length,t)}))}}qk.className="Average",Bp(qk);class Kk extends Gk{constructor(e){super(e)}mergeFunction(e){return di((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=gc(t,e[n]);return t}))}}Kk.className="Maximum",Bp(Kk);class Xk extends Gk{constructor(e){super(e)}mergeFunction(e){return di((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wc(t,e[n]);return t}))}}Xk.className="Minimum",Bp(Xk);class Yk extends Gk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ky("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(he(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new ky("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return di((()=>kb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ky("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ky("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ky("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ky(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return di((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Eo(Ec(e[n]),"bool")):t[n].rank<e[n].rank?r.push($u(t[n],-1)):r.push(t[n]);const s=pl(r,this.axis);return Bo(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Jk(e,t){for(;e<0;)e+=t;return e}Yk.className="Concatenate",Bp(Yk);class Qk extends Gk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Sy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ky(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ky(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Jk(t,e[n].shape.length))):[Jk(this.axes,n.shape.length),Jk(this.axes,r.shape.length)],this.normalize&&(n=pv(n,t[0]),r=pv(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Sy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ie(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Sy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return di((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=cl(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=cl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Su(Do(e,t),a[0]):Su(Do(ph(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=fl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Vd(i,t)}return 1===i.shape.length&&(i=$u(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Jk(this.axes,e.length),Jk(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Sy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Qk.className="Dot",Bp(Qk);class eS extends mx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e);return Ab((()=>Ao(Nb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}eS.className="GaussianNoise",Bp(eS);class tS extends mx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return di((()=>{this.invokeCallHook(e,t);const n=rx(e);if(this.rate>0&&this.rate<1){return Ab((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Do(n,Nb(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}tS.className="GaussianDropout",Bp(tS);class nS extends mx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||rx(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return di((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=rx(e),r=-1.7580993408473766;let s=Du(dd(n),this.rate);s=yb(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=Ao(Do(t,s),Do(Ao(s,-1),r));return Ao(Do(o,a),i)};return Ab(r,(()=>rx(e)),t.training||!1)}return e}))}}function rS(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=wl(e,t,n,r,s,a);else if(3===e.rank)i=kl(e,t,n,r,s,a);else{if(4!==e.rank)throw new Sy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Sl(e,t,n,r,s,a)}return i}function sS(e,t,n,r,s=.001){return he(r.slice().sort(),fb(0,e.rank-1))?function(e,t,n,r,s=.001){return di((()=>{const a=Ic(e,r),i=a.mean,o=a.variance;return[rS(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return di((()=>{const a=Ic(e,r),i=a.mean,o=a.variance,l=[];for(const t of fb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=cl(i,l),c=cl(o,l),d=null==t?null:cl(t,l),h=null==n?null:cl(n,l);return[rS(e,u,c,h,d,s),i,o]}))}(e,t,n,r,s)}nS.className="AlphaDropout",Bp(nS);class aS extends mx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ex(e.betaInitializer||"zeros"),this.gammaInitializer=ex(e.gammaInitializer||"ones"),this.movingMeanInitializer=ex(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ex(e.movingVarianceInitializer||"ones"),this.betaConstraint=Dx(e.betaConstraint),this.gammaConstraint=Dx(e.gammaConstraint),this.betaRegularizer=jw(e.betaRegularizer),this.gammaRegularizer=jw(e.gammaRegularizer)}build(e){e=sx(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ky(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cx({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return di((()=>{const n=null!=t.training&&t.training,r=rx(e),s=r.shape,a=s.length,i=fb(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Cy(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!he(u,fb(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=cl(this.movingMean.read(),l),t=cl(this.movingVariance.read(),l),n=this.center?cl(this.beta.read(),l):null,s=this.scale?cl(this.gamma.read(),l):null;return rS(r,e,t,n,s,this.epsilon)}return rS(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=sS(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{di((()=>{const r=1-n,s=e.read(),a=Do(rc(s,t),r);e.write(rc(s,a))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Qb(this.betaInitializer),gammaInitializer:Qb(this.gammaInitializer),movingMeanInitializer:Qb(this.movingMeanInitializer),movingVarianceInitializer:Qb(this.movingVarianceInitializer),betaRegularizer:Zw(this.betaRegularizer),gammaRegularizer:Zw(this.gammaRegularizer),betaConstraint:Fx(this.betaConstraint),gammaConstraint:Fx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}aS.className="BatchNormalization",Bp(aS);class iS extends mx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ex(e.betaInitializer||"zeros"),this.gammaInitializer=ex(e.gammaInitializer||"ones"),this.betaRegularizer=jw(e.betaRegularizer),this.gammaRegularizer=jw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=sx(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==zy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=rx(e),r=n.shape,s=r.length;return di((()=>{let{mean:e,variance:t}=Ic(n,this.axis,!0);const a=Cy(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?cl(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=Ru(e,u),t=Ru(t,u),null!=o&&(o=Ru(o,c)),null!=l&&(l=Ru(l,c)),rS(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Qb(this.betaInitializer),gammaInitializer:Qb(this.gammaInitializer),betaRegularizer:Zw(this.betaRegularizer),gammaRegularizer:Zw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}iS.className="LayerNormalization",Bp(iS);class oS extends mx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ky(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ky(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ky(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new cx({ndim:4})]}computeOutputShape(e){let t,n;return e=sx(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return di((()=>{return t=rx(e),n=this.padding,r=this.dataFormat,di((()=>{if(4!==t.rank)throw new ky(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ky("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ky(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],_c(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function lS(e,t,n,r,s,a){return di((()=>{let i;tb(s),rb(a),nb(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=nk(e,s);const o="same"===r?"same":"valid";return i="max"===a?pc(e,t,n,o):dl(e,t,n,o),"channelsFirst"===s&&(i=ph(i,[0,3,1,2])),i}))}function uS(e,t,n,r,s,a){return di((()=>{let i;tb(s),rb(a),nb(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=rk(e,s);const o="same"===r?"same":"valid";return i="max"===a?fc(e,t,n,o):hl(e,t,n,o),"channelsFirst"===s&&(i=ph(i,[0,4,1,2,3])),i}))}oS.className="ZeroPadding2D",Bp(oS);class cS extends mx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ky(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Vy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ky(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Vy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,nb(this.padding),this.inputSpec=[new cx({ndim:3})]}computeOutputShape(e){const t=ek((e=sx(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return di((()=>{this.invokeCallHook(e,t),e=bb(rx(e),2);const n=this.poolingFunction(rx(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Vd(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dS extends cS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),lS(e,t,n,r,s,"max")}}dS.className="MaxPooling1D",Bp(dS);class hS extends cS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),lS(e,t,n,r,s,"avg")}}hS.className="AveragePooling1D",Bp(hS);class pS extends mx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ky(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Vy(this.poolSize,"poolSize"),Vy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),nb(this.padding),this.inputSpec=[new cx({ndim:4})]}computeOutputShape(e){e=sx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=ek(t,this.poolSize[0],this.padding,this.strides[0]),n=ek(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return di((()=>(this.invokeCallHook(e,t),this.poolingFunction(rx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fS extends pS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),lS(e,t,n,r,s,"max")}}fS.className="MaxPooling2D",Bp(fS);class mS extends pS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),lS(e,t,n,r,s,"avg")}}mS.className="AveragePooling2D",Bp(mS);class gS extends mx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ky(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Vy(this.poolSize,"poolSize"),Vy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),nb(this.padding),this.inputSpec=[new cx({ndim:5})]}computeOutputShape(e){e=sx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=ek(t,this.poolSize[0],this.padding,this.strides[0]),n=ek(n,this.poolSize[1],this.padding,this.strides[1]),r=ek(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return di((()=>(this.invokeCallHook(e,t),this.poolingFunction(rx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class yS extends gS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),uS(e,t,n,r,s,"max")}}yS.className="MaxPooling3D",Bp(yS);class bS extends gS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return tb(s),nb(r),uS(e,t,n,r,s,"avg")}}bS.className="AveragePooling3D",Bp(bS);class xS extends mx{constructor(e){super(e),this.inputSpec=[new cx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Sy}}class vS extends xS{constructor(e){super(e||{})}call(e,t){return di((()=>{const t=rx(e);return yc(t,1)}))}}vS.className="GlobalAveragePooling1D",Bp(vS);class wS extends xS{constructor(e){super(e||{})}call(e,t){return di((()=>{const t=rx(e);return yu(t,1)}))}}wS.className="GlobalMaxPooling1D",Bp(wS);class kS extends mx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tb(this.dataFormat),this.inputSpec=[new cx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Sy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class SS extends kS{call(e,t){return di((()=>{const t=rx(e);return"channelsLast"===this.dataFormat?yc(t,[1,2]):yc(t,[2,3])}))}}SS.className="GlobalAveragePooling2D",Bp(SS);class IS extends kS{call(e,t){return di((()=>{const t=rx(e);return"channelsLast"===this.dataFormat?yu(t,[1,2]):yu(t,[2,3])}))}}IS.className="GlobalMaxPooling2D",Bp(IS);class NS extends mx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=hv(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class CS extends NS{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=sx(e)).length<3)throw new ky(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=sx(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return di((()=>vk(((e,n)=>[rx(this.layer.call(e,t)),[]]),e=rx(e),[],!1,null,null,!1,!0)[1]))}}CS.className="TimeDistributed",Bp(CS);class TS extends NS{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=hv(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=hv(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,By(Qy,"BidirectionalMergeMode",s),e.weights)throw new Sy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Ey(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=xk(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ky("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new cx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Sy("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof dx;for(const e of a)if(e instanceof dx!==o)throw new ky("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return di((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=bd(s,1)),"concat"===this.mergeMode?i=kb([r,s]):"sum"===this.mergeMode?i=Ao(r,s):"ave"===this.mergeMode?i=Do(.5,Ao(r,s)):"mul"===this.mergeMode?i=Do(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ib(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ib(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=hv(t.layer);if(delete t.layer,null!=t.numConstants)throw new Sy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}TS.className="Bidirectional",Bp(TS);class $S extends mx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return di((()=>("float32"!==(e=rx(e)).dtype&&(e=yb(e,"float32")),Ao(Do(e,this.scale),this.offset))))}}$S.className="Rescaling",Bp($S);const{resizeBilinear:ES,cropAndResize:RS}=_p;class _S extends mx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return di((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],d=[];3===e.rank?(u=!0,l=Ud([e])):l=e;for(let e=0;e<l.shape[0];e++)d.push(c);const h=ei(d,[d.length,4]),p=pd(0,d.length,1,"int32"),f=RS(l,h,p,[r,s],"nearest");return yb(u?rx(oh(f)):f,o)}))}upsize(e,t,n,r){return di((()=>yb(ES(e,[t,n]),r)))}call(e,t){return di((()=>{const t=rx(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=sx(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}_S.className="CenterCrop",Bp(_S);class AS extends mx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=sx(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return di((()=>{let n;if("int32"!==(e=rx(e)).dtype&&(e=yb(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new ky(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=rx(t.countWeights)}const r=yu(e),s=bu(e),a=Ou(this.numTokens,r).bufferSync().get(0),i=Du(s,0).bufferSync().get(0);if(!a||!i)throw new ky(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=rx(e);if("int32"!==s.dtype&&(s=yb(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=$u(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=$u(s,-1)),s.rank>2)throw new ky(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t),o=s;let l;if(l=jl(o,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return l;if(r)return Do(l,r);throw new ky("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}AS.className="CategoryEncoding",Bp(AS);const FS=new Set(["bilinear","nearest"]);class OS extends mx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!FS.has(e.interpolation))throw new ky(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=sx(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return di((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return _p.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return _p.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...FS]} are supported`)}))}}OS.className="Resizing",Bp(OS);class DS{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}DS.className="RandomSeed";class MS extends mx{constructor(e){super(e),this.randomGenerator=new DS(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}MS.className="BaseRandomLayer";const LS=new Set(["bilinear","nearest"]);class zS extends MS{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new ky(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new ky(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ky(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!LS.has(n))throw new ky(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=sx(e))[2];return[this.imgHeight,-1,t]}call(e,t){return di((()=>{const t=rx(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=dd([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return _p.resizeBilinear(e,s);case"nearest":return _p.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...LS]} are supported`)}}))}}function PS(e){return new yx(e)}function BS(e){return new Xw(e)}function WS(e){return new Hw(e)}function VS(e){return new qw(e)}function US(e){return new Kw(e)}function ZS(e){return new Jw(e)}function GS(e){return new Yw(e)}function jS(e){return new mk(e)}function HS(e){return new uk(e)}function qS(e){return new dk(e)}function KS(e){return new ck(e)}function XS(e){return new hk(e)}function YS(e){return new fk(e)}function JS(e){return new gk(e)}function QS(e){return new yk(e)}function eI(e){return new bk(e)}function tI(e){return new Pk(e)}function nI(e){return new Lk(e)}function rI(e){return new Dk(e)}function sI(e){return new Mk(e)}function aI(e){return new zk(e)}function iI(e){return new Bk(e)}function oI(e){return new Wk(e)}function lI(e){return new Vk(e)}function uI(e){return new Zk(e)}function cI(e){return new jk(e)}function dI(e){return new qk(e)}function hI(e){return new Yk(e)}function pI(e){return new Kk(e)}function fI(e){return new Xk(e)}function mI(e){return new Hk(e)}function gI(e){return new Qk(e)}function yI(e){return new aS(e)}function bI(e){return new iS(e)}function xI(e){return new oS(e)}function vI(e){return new hS(e)}function wI(e){return vI(e)}function kI(e){return vI(e)}function SI(e){return new mS(e)}function II(e){return SI(e)}function NI(e){return SI(e)}function CI(e){return new bS(e)}function TI(e){return CI(e)}function $I(e){return CI(e)}function EI(e){return new vS(e)}function RI(e){return new SS(e)}function _I(e){return new wS(e)}function AI(e){return new IS(e)}function FI(e){return new dS(e)}function OI(e){return new fS(e)}function DI(e){return new yS(e)}function MI(e){return new Ck(e)}function LI(e){return new Nk(e)}function zI(e){return new $k(e)}function PI(e){return new Tk(e)}function BI(e){return new Ik(e)}function WI(e){return new Sk(e)}function VI(e){return new Ok(e)}function UI(e){return new Fk(e)}function ZI(e){return new wk(e)}function GI(e){return new Ek(e)}function jI(e){return new TS(e)}function HI(e){return new CS(e)}zS.className="RandomWidth",Bp(zS);const qI=_I,KI=AI,XI=FI,YI=OI;function JI(e){return new eS(e)}function QI(e){return new tS(e)}function eN(e){return new nS(e)}function tN(e){return new Uk(e)}function nN(e){return new $S(e)}function rN(e){return new _S(e)}function sN(e){return new OS(e)}function aN(e){return new AS(e)}function iN(e){return new zS(e)}function oN(e,t){return Nv(e,t)}function lN(e,t){return Rv(e,t)}function uN(e,t){return _v(e,t)}function cN(e,t){return Cv(e,t)}function dN(e,t){return Av(e,t)}function hN(e,t){return $v(e,t)}function pN(e,t){return Ev(e,t)}function fN(e,t){return kv(e,t)}function mN(e,t){return mv(e,t)}function gN(e,t){return gv(e,t)}function yN(e,t){return gv(e,t)}function bN(e,t){return gv(e,t)}function xN(e,t){return fv(e,t)}function vN(e,t){return fv(e,t)}function wN(e,t){return fv(e,t)}function kN(e){return new Vw(e)}function SN(e){return Bw(t=e),new Vw({l1:null!=t?t.l1:null,l2:0});var t}function IN(e){return Bw(t=e),new Vw({l2:null!=t?t.l2:null,l1:0});var t}class NN extends sv{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof pw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function CN(e,t){return e<t}function TN(e,t){return e>t}class $N extends NN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Sy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=CN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=TN:this.monitorFunc=CN,this.monitorFunc===CN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===CN?1/0:-1/0}async onEpochEnd(e,t){await tv(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const EN={earlyStopping:function(e){return new $N(e)}};var RN,_N;Ke().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(RN||(RN={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_N||(_N={}));const AN={};function FN(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};AN[e]=n}function ON(e){return AN[e]}function DN(e){delete AN[e]}function MN(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return LN(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>LN(e,n,r,s)))}const l=LN(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:Le(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function LN(e,t,n,r){const[s,a]=WN(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[BN(s,e)]));return void 0!==i?t[BN(s,i)][a]:void 0}function zN(e,t,n){return t[BN(e,n.currentContextId)]}function PN(e,t){const[n,r,s]=WN(e,t);return[BN(n,t&&t.currentContextId),r,s]}function BN(e,t){return t?`${e}-${t}`:e}function WN(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function VN(e,t,n){let r=MN("pad",e,t,n);if("explicit"===r){r=MN("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function UN(e){return e.kept?e:Ro(e)}const ZN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],GN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],HN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],qN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],KN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],YN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],JN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],QN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],eC=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],tC=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],nC=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],rC=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],sC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],aC=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],iC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oC=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],lC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var uC=n(58955).lW;class cC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,C,T,$,E,R,_,A,F,O,D,M,L,z,P,B,W,V,U].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=PN(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=PN(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=PN(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=ON(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=hC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=kC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=kC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=fC(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=fC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=wC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=pC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=IC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=IC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=vC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=SC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=SC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=yC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=bC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=gC(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=PN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:mC(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=PN(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=PN(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function dC(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ke().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==uC)return new uC(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function hC(e,t,n,r=!1){const s=e[t];return null!=s?dC(s.s,r):n}function pC(e,t,n){const r=e[t];return r?r.b:n}function fC(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function mC(e){switch("string"==typeof e&&(e=RN[e]),e){case RN.DT_FLOAT:case RN.DT_HALF:return"float32";case RN.DT_INT32:case RN.DT_INT64:case RN.DT_INT8:case RN.DT_UINT8:return"int32";case RN.DT_BOOL:return"bool";case RN.DT_DOUBLE:return"float32";case RN.DT_STRING:return"string";case RN.DT_COMPLEX64:case RN.DT_COMPLEX128:return"complex64";default:return null}}function gC(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function yC(e,t,n){const r=e[t];return r&&r.type?mC(r.type):n}function bC(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>mC(e))):n}function xC(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function vC(e,t,n){const r=e[t];return r&&r.shape?xC(r.shape):n}function wC(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function kC(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>dC(e,r))):n}function SC(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>xC(e))):n}function IC(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class NC{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return LN(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return LN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return fC(this.node.rawAttrs,e,t);if(null!=n.s)return hC(this.node.rawAttrs,e,t);if(null!=n.b)return pC(this.node.rawAttrs,e,t);if(null!=n.shape)return vC(this.node.rawAttrs,e,t);if(null!=n.type)return yC(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return wC(this.node.rawAttrs,e,t);if(null!=n.list.s)return kC(this.node.rawAttrs,e,t);if(null!=n.list.shape)return SC(this.node.rawAttrs,e,t);if(null!=n.list.b)return IC(this.node.rawAttrs,e,t);if(null!=n.list.type)return bC(this.node.rawAttrs,e,t)}return t}}function CC(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];ie(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function TC(e){return"number"!=typeof e&&!e.some((e=>e<0))}function $C(e,t,n){let r=EC(e,n);const s=!TC(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=EC(e.shape,r)})),!TC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function EC(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class RC{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=vu(0),pi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),CC(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,pi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ei([],[0].concat(this.elementShape));const n=this.readMany(e);return CC(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ud(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ei([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return CC(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,oh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];di((()=>{t=cl(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=cl(gl(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class _C{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);CC(t,e.shape,"TensorList shape mismatch: "),pi(e)})),this.idTensor=vu(0),this.maxNumElements=r,pi(this.idTensor)}copy(){return new _C([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);CC(e,this.elementShape,"TensorList shape mismatch: ");const r=$C(this.elementShape,this.tensors,e);return di((()=>{const e=this.tensors.map((e=>cl(e,r)));return Ud(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=$C(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,CC(r.shape,e,"TensorList shape mismatch: "),cl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(CC(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");pi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new _C([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);CC(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=$C(this.elementShape,this.tensors,t);return cl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);CC(this.elementShape,t.shape,"TensorList shape mismatch: "),pi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);CC(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=$C(this.elementShape,this.tensors,n);return 0===e.length?ei([],[0].concat(r)):di((()=>{const t=e.map((e=>cl(this.tensors[e],r)));return Ud(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);CC(this.elementShape,t,"TensorList shape mismatch: ");const n=$C(this.elementShape,this.tensors,t);return 0===this.size()?ei([],[0].concat(n)):di((()=>{const e=this.tensors.map((e=>cl(e,n)));return pl(e,0)}))}}const AC=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=MN("thenBranch",e,t,n),s=MN("elseBranch",e,t,n),a=MN("cond",e,t,n),i=MN("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=MN("body",e,t,n),s=MN("cond",e,t,n),a=MN("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[UN(MN("pred",e,t,n))];case"Switch":{const r=MN("pred",e,t,n);let s=MN("data",e,t,n);return s.kept||(s=UN(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==LN(e,t,n)));if(r){return[UN(LN(r,t,n))]}return}case"Enter":{const r=MN("frameName",e,t,n),s=MN("tensor",e,t,n);return n.enterFrame(r),[UN(s)]}case"Exit":{const r=MN("tensor",e,t,n);return n.exitFrame(),[UN(r)]}case"NextIteration":{const r=MN("tensor",e,t,n);return n.nextIteration(),[UN(r)]}case"TensorArrayV3":{const r=MN("size",e,t,n),s=MN("dtype",e,t,n),a=MN("elementShape",e,t,n),i=MN("dynamicSize",e,t,n),o=MN("clearAfterRead",e,t,n),l=MN("identicalElementShapes",e,t,n),u=MN("name",e,t,n),c=new RC(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,vu(1)]}case"TensorArrayWriteV3":{const r=MN("tensorArrayId",e,t,n),s=MN("index",e,t,n),a=MN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=MN("tensorArrayId",e,t,n),s=MN("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=MN("tensorArrayId",e,t,n),s=MN("indices",e,t,n),a=MN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=MN("tensorArrayId",e,t,n),s=MN("indices",e,t,n),a=MN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=MN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=MN("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=MN("tensorArrayId",e,t,n),s=MN("tensor",e,t,n),a=MN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=MN("tensorArrayId",e,t,n);return[vu(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=MN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=MN("tensorListId",e,t,n),s=MN("index",e,t,n),a=MN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=MN("tensorListId",e,t,n),s=MN("index",e,t,n),a=MN("elementShape",e,t,n),i=MN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=MN("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new _C([],n,e.dtype,r),i=oh(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(MN("tensor",e,t,n),r,MN("elementShape",e,t,n),MN("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=MN("elementShape",e,t,n),s=MN("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=MN(a,e,t,n),o=function(e,t,n,r){return new _C([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=MN("tensorListId",e,t,n),s=MN("indices",e,t,n),a=MN("elementShape",e,t,n),i=MN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=MN("tensorListId",e,t,n),s=MN("elementShape",e,t,n),a=MN("elementDType",e,t,n),i=MN("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);CC(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=oh(e);return new _C(s,t,r)}(MN("tensor",e,t,n),MN("elementShape",e,t,n),MN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=MN("tensorListId",e,t,n),s=n.getTensorList(r.id),a=MN("dtype",e,t,n),i=MN("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=MN("tensorListId",e,t,n),s=MN("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=MN("tensorListId",e,t,n),s=MN("elementShape",e,t,n),a=MN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=MN("tensor",e,t,n),s=MN("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=EC(e.shape.slice(1),n),i=0===r?0:e.size/r,o=di((()=>{const n=[];e=cl(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=cl(gl(e,o,l),a)}return e.dispose(),n})),l=new _C([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,MN("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=MN("tensorListId",e,t,n);return[vu(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=MN("tensorListId",e,t,n),s=MN("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function FC(e,t,n){const[r,s]=MN("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=MN("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=MN("strides",e,t,n),d=VN(e,t,n),h=MN("dataFormat",e,t,n).toUpperCase(),p=MN("dilations",e,t,n);let[f,m]=MN("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:MN("leakyreluAlpha",e,t,n)}}function OC(e,t,n){return{boxes:MN("boxes",e,t,n),scores:MN("scores",e,t,n),maxOutputSize:MN("maxOutputSize",e,t,n),iouThreshold:MN("iouThreshold",e,t,n),scoreThreshold:MN("scoreThreshold",e,t,n),softNmsSigma:MN("softNmsSigma",e,t,n)}}class DC{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=vu(0),this.tensorMap=new Map,pi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return vu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),di((()=>{const e=oh(t),r=n.length,s=e.length;ie(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];pi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return di((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Ud(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function MC(e,t,n,r,s=di){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(MN("a",e,t,n),MN("b",e,t,n))];case"AddN":return[r.addN(MN("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(MN("a",e,t,n),MN("b",e,t,n))];case"Mul":return[r.mul(MN("a",e,t,n),MN("b",e,t,n))];case"RealDiv":case"Div":return[r.div(MN("a",e,t,n),MN("b",e,t,n))];case"DivNoNan":return[r.divNoNan(MN("a",e,t,n),MN("b",e,t,n))];case"FloorDiv":return[r.floorDiv(MN("a",e,t,n),MN("b",e,t,n))];case"Sub":return[r.sub(MN("a",e,t,n),MN("b",e,t,n))];case"Minimum":return[r.minimum(MN("a",e,t,n),MN("b",e,t,n))];case"Maximum":return[r.maximum(MN("a",e,t,n),MN("b",e,t,n))];case"Pow":return[r.pow(MN("a",e,t,n),MN("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(MN("a",e,t,n),MN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(MN("x",e,t,n))];case"Acos":return[r.acos(MN("x",e,t,n))];case"Acosh":return[r.acosh(MN("x",e,t,n))];case"Asin":return[r.asin(MN("x",e,t,n))];case"Asinh":return[r.asinh(MN("x",e,t,n))];case"Atan":return[r.atan(MN("x",e,t,n))];case"Atan2":return[r.atan2(MN("x",e,t,n),MN("y",e,t,n))];case"Atanh":return[r.atanh(MN("x",e,t,n))];case"Ceil":return[r.ceil(MN("x",e,t,n))];case"Complex":return[r.complex(MN("real",e,t,n),MN("imag",e,t,n))];case"Cos":return[r.cos(MN("x",e,t,n))];case"Cosh":return[r.cosh(MN("x",e,t,n))];case"Elu":return[r.elu(MN("x",e,t,n))];case"Erf":return[r.erf(MN("x",e,t,n))];case"Exp":return[r.exp(MN("x",e,t,n))];case"Expm1":return[r.expm1(MN("x",e,t,n))];case"Floor":return[r.floor(MN("x",e,t,n))];case"Log":return[r.log(MN("x",e,t,n))];case"Log1p":return[r.log1p(MN("x",e,t,n))];case"Imag":return[r.imag(MN("x",e,t,n))];case"Neg":return[r.neg(MN("x",e,t,n))];case"Reciprocal":return[r.reciprocal(MN("x",e,t,n))];case"Real":return[r.real(MN("x",e,t,n))];case"Relu":return[r.relu(MN("x",e,t,n))];case"Round":return[r.round(MN("x",e,t,n))];case"Selu":return[r.selu(MN("x",e,t,n))];case"Sigmoid":return[r.sigmoid(MN("x",e,t,n))];case"Sin":return[r.sin(MN("x",e,t,n))];case"Sign":return[r.sign(MN("x",e,t,n))];case"Sinh":return[r.sinh(MN("x",e,t,n))];case"Softplus":return[r.softplus(MN("x",e,t,n))];case"Sqrt":return[r.sqrt(MN("x",e,t,n))];case"Square":return[r.square(MN("x",e,t,n))];case"Tanh":return[r.tanh(MN("x",e,t,n))];case"Tan":return[r.tan(MN("x",e,t,n))];case"ClipByValue":return[r.clipByValue(MN("x",e,t,n),MN("clipValueMin",e,t,n),MN("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(MN("x",e,t,n))];case"Rsqrt":return[r.rsqrt(LN(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(MN("x",e,t,n),MN("alpha",e,t,n))];case"Prelu":return[r.prelu(MN("x",e,t,n),MN("alpha",e,t,n))];case"IsNan":return[r.isNaN(LN(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(LN(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(LN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return AC(e,t,n);case"convolution":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Conv1D":{const s=MN("stride",e,t,n),a=MN("pad",e,t,n),i=MN("dataFormat",e,t,n).toUpperCase(),o=MN("dilation",e,t,n);return[r.conv1d(MN("x",e,t,n),MN("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=MN("strides",e,t,n),a=VN(e,t,n),i=MN("dataFormat",e,t,n).toUpperCase(),o=MN("dilations",e,t,n);return[r.conv2d(MN("x",e,t,n),MN("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=FC(e,t,n);return[r.fused.conv2d({x:MN("x",e,t,n),filter:MN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=FC(e,t,n);return[r.fused.depthwiseConv2d({x:MN("x",e,t,n),filter:MN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=MN("outputShape",e,t,n),a=MN("strides",e,t,n),i=VN(e,t,n);return[r.conv2dTranspose(MN("x",e,t,n),MN("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=MN("strides",e,t,n),a=VN(e,t,n),i=MN("dilations",e,t,n),o=MN("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(MN("input",e,t,n),MN("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("dataFormat",e,t,n).toUpperCase(),o=MN("dilations",e,t,n);return[r.conv3d(MN("x",e,t,n),MN("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("kernelSize",e,t,n);return[r.avgPool(MN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("kernelSize",e,t,n);return[r.maxPool(MN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("kernelSize",e,t,n),o=MN("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(MN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("kernelSize",e,t,n);return[r.avgPool3d(MN("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("kernelSize",e,t,n);return[r.maxPool3d(MN("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=MN("strides",e,t,n),a=MN("pad",e,t,n),i=MN("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(MN("x",e,t,n),MN("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Fill":{const s=MN("shape",e,t,n),a=MN("dtype",e,t,n),i=MN("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=MN("start",e,t,n),a=MN("stop",e,t,n),i=MN("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=MN("logits",e,t,n),a=MN("numSamples",e,t,n),i=MN("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=MN("indices",e,t,n),a=MN("depth",e,t,n),i=MN("onValue",e,t,n),o=MN("offValue",e,t,n),l=MN("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(MN("shape",e,t,n),MN("dtype",e,t,n))];case"OnesLike":return[r.onesLike(MN("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(MN("shape",e,t,n),MN("dtype",e,t,n),MN("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(MN("shape",e,t,n),MN("minval",e,t,n),MN("maxval",e,t,n),MN("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(MN("shape",e,t,n),MN("minval",e,t,n),MN("maxval",e,t,n),MN("seed",e,t,n))];case"Range":{const s=MN("start",e,t,n),a=MN("stop",e,t,n),i=MN("step",e,t,n);return[r.range(s,a,i,MN("dtype",e,t,n))]}case"TruncatedNormal":{const s=MN("shape",e,t,n),a=MN("mean",e,t,n),i=MN("stdDev",e,t,n),o=MN("seed",e,t,n);return[r.truncatedNormal(s,a,i,MN("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(MN("shape",e,t,n),MN("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(MN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=Z)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=OC(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=OC(e,t,n),u=MN("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=OC(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(MN("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(MN("x",e,t,n),MN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"LowerBound":{const s=MN("sortedSequence",e,t,n),a=MN("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=MN("x",e,t,n),a=MN("k",e,t,n),i=MN("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=MN("sortedSequence",e,t,n),a=MN("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=MN("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=MN("x",e,t,n),a=MN("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"ResizeBilinear":{const s=MN("images",e,t,n),a=MN("size",e,t,n),i=MN("alignCorners",e,t,n),o=MN("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=MN("images",e,t,n),a=MN("size",e,t,n),i=MN("alignCorners",e,t,n),o=MN("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=MN("image",e,t,n),a=MN("boxes",e,t,n),i=MN("boxInd",e,t,n),o=MN("cropSize",e,t,n),l=MN("method",e,t,n),u=MN("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=MN("images",e,t,n),a=MN("transforms",e,t,n),i=MN("outputShape",e,t,n),o=MN("fillValue",e,t,n),l=MN("interpolation",e,t,n),u=MN("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=MN("default",e,t,n);return[LN(e.name,t,n)||s];case"Placeholder":return[LN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[UN(MN("x",e,t,n))];case"IdentityN":return MN("x",e,t,n).map((e=>UN(e)));case"Shape":return[r.tensor1d(MN("x",e,t,n).shape,"int32")];case"ShapeN":return MN("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(MN("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(MN("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=MN("x",e,t,n),i=MN("data",e,t,n),o=MN("message",e,t,n),l=MN("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Equal":return[r.equal(MN("a",e,t,n),MN("b",e,t,n))];case"NotEqual":return[r.notEqual(MN("a",e,t,n),MN("b",e,t,n))];case"Greater":return[r.greater(MN("a",e,t,n),MN("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(MN("a",e,t,n),MN("b",e,t,n))];case"Less":return[r.less(MN("a",e,t,n),MN("b",e,t,n))];case"LessEqual":return[r.lessEqual(MN("a",e,t,n),MN("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(MN("a",e,t,n),MN("b",e,t,n))];case"LogicalNot":return[r.logicalNot(MN("a",e,t,n))];case"LogicalOr":return[r.logicalOr(MN("a",e,t,n),MN("b",e,t,n))];case"Select":case"SelectV2":return[r.where(MN("condition",e,t,n),MN("a",e,t,n),MN("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(MN("a",e,t,n),MN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(MN("a",e,t,n),MN("b",e,t,n),MN("transposeA",e,t,n),MN("transposeB",e,t,n))];case"Einsum":return[r.einsum(MN("equation",e,t,n),...MN("tensors",e,t,n))];case"Transpose":return[r.transpose(MN("x",e,t,n),MN("perm",e,t,n))];case"_FusedMatMul":const[s,a]=MN("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=MN("numArgs",e,t,n),u=MN("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=MN("args",e,t,n);return[r.fused.matMul({a:MN("a",e,t,n),b:MN("b",e,t,n),transposeA:MN("transposeA",e,t,n),transposeB:MN("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(MN("a",e,t,n),MN("numLower",e,t,n),MN("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(MN("x",e,t,n),MN("axis",e,t,n),MN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(MN("x",e,t,n),MN("mean",e,t,n),MN("variance",e,t,n),MN("offset",e,t,n),MN("scale",e,t,n),MN("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(MN("x",e,t,n),MN("radius",e,t,n),MN("bias",e,t,n),MN("alpha",e,t,n),MN("beta",e,t,n))];case"Softmax":return[r.softmax(MN("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(MN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(MN("paramsNestedSplits",e,t,n),MN("paramsDenseValues",e,t,n),MN("indices",e,t,n),MN("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(MN("starts",e,t,n),MN("limits",e,t,n),MN("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(MN("shape",e,t,n),MN("values",e,t,n),MN("defaultValue",e,t,n),MN("rowPartitionTensors",e,t,n),MN("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Max":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.max(MN("x",e,t,n),s,a)]}case"Mean":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.mean(MN("x",e,t,n),s,a)]}case"Min":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.min(MN("x",e,t,n),s,a)]}case"Sum":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.sum(MN("x",e,t,n),s,a)]}case"All":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.all(MN("x",e,t,n),s,a)]}case"Any":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.any(MN("x",e,t,n),s,a)]}case"ArgMax":{const s=MN("axis",e,t,n);return[r.argMax(MN("x",e,t,n),s)]}case"ArgMin":{const s=MN("axis",e,t,n);return[r.argMin(MN("x",e,t,n),s)]}case"Prod":{const s=MN("axis",e,t,n),a=MN("keepDims",e,t,n);return[r.prod(MN("x",e,t,n),s,a)]}case"Cumprod":{const s=MN("axis",e,t,n),a=MN("exclusive",e,t,n),i=MN("reverse",e,t,n);return[r.cumprod(MN("x",e,t,n),s,a,i)]}case"Cumsum":{const s=MN("axis",e,t,n),a=MN("exclusive",e,t,n),i=MN("reverse",e,t,n);return[r.cumsum(MN("x",e,t,n),s,a,i)]}case"Bincount":const s=MN("x",e,t,n),a=MN("weights",e,t,n),i=MN("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=MN("x",e,t,n),a=MN("weights",e,t,n),i=MN("size",e,t,n),o=MN("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=MN("n",e,t,n),a=MN("axis",e,t,n);let i=MN("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=MN("x",e,t,n),a=MN("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=MN("axis",e,t,n),a=MN("batchDims",e,t,n),i=MN("x",e,t,n),o=MN("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=MN("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=MN("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=MN("axis",e,t,n),a=MN("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=MN("begin",e,t,n),a=MN("size",e,t,n);return[r.slice(MN("x",e,t,n),s,a)]}case"StridedSlice":{const s=MN("begin",e,t,n),a=MN("end",e,t,n),i=MN("strides",e,t,n),o=MN("beginMask",e,t,n),l=MN("endMask",e,t,n),u=MN("ellipsisMask",e,t,n),c=MN("newAxisMask",e,t,n),d=MN("shrinkAxisMask",e,t,n),h=MN("x",e,t,n);return[r.stridedSlice(h,s,a,i,o,l,u,c,d)]}case"Pack":return di((()=>{const s=MN("axis",e,t,n),a=MN("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=he(e.shape,i);if(!t&&!he(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=MN("axis",e,t,n),a=MN("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=MN("reps",e,t,n);return[r.tile(MN("x",e,t,n),s)]}case"Split":case"SplitV":{const s=MN("axis",e,t,n),a=MN("numOrSizeSplits",e,t,n),i=MN("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=MN("indices",e,t,n),a=MN("values",e,t,n),i=MN("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=MN("x",e,t,n),a=MN("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=MN("sparseIndices",e,t,n),a=MN("outputShape",e,t,n),i=MN("sparseValues",e,t,n),o=MN("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=MN("indices",e,t,n),a=MN("values",e,t,n),i=MN("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(MN("indices",e,t,n),MN("values",e,t,n),MN("denseShape",e,t,n),MN("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(MN("inputIndices",e,t,n),MN("inputShape",e,t,n),MN("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(MN("data",e,t,n),MN("indices",e,t,n),MN("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(MN("data",e,t,n),MN("indices",e,t,n),MN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"FFT":return[r.fft(MN("x",e,t,n))];case"IFFT":return[r.ifft(MN("x",e,t,n))];case"RFFT":return[r.rfft(MN("x",e,t,n))];case"IRFFT":return[r.irfft(MN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(MN("input",e,t,n),MN("pattern",e,t,n),MN("rewrite",e,t,n),MN("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(MN("data",e,t,n),MN("dataSplits",e,t,n),MN("separator",e,t,n),MN("nGramWidths",e,t,n),MN("leftPad",e,t,n),MN("rightPad",e,t,n),MN("padWidth",e,t,n),MN("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(MN("input",e,t,n),MN("delimiter",e,t,n),MN("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(MN("input",e,t,n),MN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=Z)=>{switch(e.op){case"Cast":return[r.cast(MN("x",e,t,n),MN("dtype",e,t,n))];case"ExpandDims":{const s=MN("axis",e,t,n);return[r.expandDims(MN("x",e,t,n),s)]}case"Squeeze":{const s=MN("axis",e,t,n);return[r.squeeze(MN("x",e,t,n),s)]}case"Reshape":return[r.reshape(MN("x",e,t,n),MN("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(MN("x",e,t,n),MN("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(MN("x",e,t,n),MN("padding",e,t,n),MN("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(MN("x",e,t,n),MN("padding",e,t,n),MN("constantValue",e,t,n))];case"SpaceToBatchND":{const s=MN("blockShape",e,t,n),a=MN("paddings",e,t,n);return[r.spaceToBatchND(MN("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=MN("blockShape",e,t,n),a=MN("crops",e,t,n);return[r.batchToSpaceND(MN("x",e,t,n),s,a)]}case"DepthToSpace":{const s=MN("blockSize",e,t,n),a=MN("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(MN("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(MN("x",e,t,n),MN("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(MN("s0",e,t,n),MN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=MN("keyDType",e,t,n),a=MN("valueDType",e,t,n),i=new DC(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=MN("tableHandle",e,t,n,r),a=MN("keys",e,t,n),i=MN("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=MN("tableHandle",e,t,n,r),a=MN("keys",e,t,n),i=MN("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=MN("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=ON(e.op);if(a&&a.customExecutor)return a.customExecutor(new NC(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ge(a)?a.then((e=>[].concat(e))):[].concat(a)}class LC{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function zC(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>WN(e)[0])));r=r||[];const c=new Set(r.map((e=>WN(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(ZC(e)||GC(e)||jC(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function PC(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>WN(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),d={};for(const e of u){d[e.name]=d[e.name]||0;for(const t of e.children)i(t)||(d[t.name]=Number.POSITIVE_INFINITY),d[t.name]=(d[t.name]||0)+1}const h=Object.entries(d).filter((([,e])=>0===e)).map((([e])=>e)),p=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const e of t.children.filter(i))0==--d[e.name]&&(p.push(e.name),h.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}const a=e.filter((e=>s.has(e.name)));return a}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new BC(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new BC(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new BC(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new BC(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class BC extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const WC=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),VC=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),UC=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ZC(e){return WC.has(e.op)}function GC(e){return VC.has(e.op)}function jC(e){return UC.has(e.op)}class HC{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new HC(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=zC(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=PC(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>ZC(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return pi(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[WN(e)[0]])),s=t.map((e=>WN(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return di((()=>{const n=new LC(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=WN(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=MC(e,r,n,this._resourceManager);if(Ge(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>LN(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!ZC(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(ZC(e))continue;const t=zN(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return ZC(e)||s.has(e.name)}if(!ZC(e)&&null!=a)for(const e of a){if(i(e))continue;const s=zN(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ke().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new LC(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>LN(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[WN(e)[0]])),i=n.map((e=>WN(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:h}=zC(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=WN(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!ZC(e)&&!LN(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&MN("isConstant",e.node,r,n)&&([c]=PN(e.node.name,n)),null==r[e.node.name]){const d=MC(e.node,r,n,this._resourceManager);c||([c]=PN(e.node.name,n));const h=n.currentContext;Ge(d)?u.push(d.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=PN(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!LN(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!LN(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=WN(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;ie(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&ie(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=WN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=WN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class qC{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const KC="?tfjs-format=file",XC="model.json";class YC{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=d){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new qC}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ge(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ai(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new HC(cC.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=cC.Instance.transformGraph(e.modelInitializer);this.initializer=new HC(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof ga?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ga||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&hi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function JC(e,t={},n=d){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${XC}${KC}`}(e));const r=new YC(e,t,n);return await r.load(),r}function QC(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");t=mf(Pi(n,Vi(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=mf(e)}const n=new YC(t);return n.load(),n}const eT="4.16.0";function tT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(iT(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=tT(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function nT(e,t=sT){return rT(e,t)}function rT(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(iT(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=rT(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function sT(e){return null===e?null:iT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function aT(e,t){const n=new Map;tT(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Ge(t)){const r=await t;n.set(e,r)}}return tT(e,t,n)}function iT(e){let t=!1;if(Ke().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(88218);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ga)&&!(e instanceof Promise)&&!t)}function oT(e){return function(e,t){return tT(e,t)}(e,lT)}function lT(e){return e instanceof ga?{value:e.clone(),recurse:!1}:iT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class uT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class cT extends uT{constructor(){super(cT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function dT(e){return new mT(e)}function hT(e){return new gT(e)}function pT(e,t){return new TT(e,t)}cT.INITIAL_CAPACITY=32;class fT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ST(this,e)}filter(e){return new wT(this,e)}map(e){return new kT(this,e)}mapAsync(e){return new IT(this,e)}serialMapAsync(e){return new IT(this,e).serial()}flatmap(e){return new CT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new vT(this,e,t)}columnMajorBatch(e,t=!0,n=sT){return this.rowMajorBatch(e,t).map((e=>nT(e,n)))}concatenate(e,t){return new TT(dT([this,e]),t)}take(e){return e<0||null==e?this:new xT(this,e)}skip(e){return e<0||null==e?this:new bT(this,e)}prefetch(e){return new RT(this,e)}shuffle(e,t){return new _T(this,e,t)}serial(){return new yT(this)}}class mT extends fT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:oT(e),done:!1}}}class gT extends fT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class yT extends fT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class bT extends fT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;hi(e.value)}return this.upstream.next()}}class xT extends fT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class vT extends fT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class wT extends fT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;hi(e.value)}}}class kT extends fT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Aa(e.value),n=this.transform(e.value),r=Aa(n);for(const e of t)_a(e,r)||e.dispose();return{value:n,done:!1}}}class ST extends fT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class IT extends fT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Aa(e.value),n=await this.transform(e.value),r=Aa(n);for(const e of t)_a(e,r)||e.dispose();return{value:n,done:!1}}}class NT extends fT{constructor(){super(),this.outputQueue=new cT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class CT extends NT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Aa(e.value),n=this.transform(e.value),r=Aa(n);this.outputQueue.pushAll(n);for(const e of t)_a(e,r)||e.dispose();return!0}}class TT extends fT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var $T;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}($T||($T={}));class ET extends fT{constructor(e,t=$T.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await aT(this.iterators,(function(e){if(e instanceof fT){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case $T.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case $T.SHORTEST:return{value:null,done:!0};case $T.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class RT extends fT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new uT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class _T extends RT{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Zc.alea(n||Ks().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class AT{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ie(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),FT((async()=>(await n.iterator()).columnMajorBatch(e,t,MT)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,FT((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,FT((async()=>(await t.iterator()).filter((t=>di((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return FT((async()=>(await t.iterator()).map((t=>di((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return FT((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return FT((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,FT((async()=>pT(hT((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,FT((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Zc.alea(t||Ks().toString());return FT((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,FT((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function FT(e,t=null){return new class extends AT{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function OT(e){return FT((async()=>dT(e)),e.length)}function DT(e){if(!iT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return FT((async()=>function(e,t=$T.FAIL){return new ET(e,t)}(await aT(e,(e=>{if(e instanceof AT)return{value:e.iterator(),recurse:!1};if(iT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),$T.SHORTEST)),t)}function MT(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof ga||Qs(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ga?Ud(e):ei(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}AT.MAX_BUFFER_SIZE=1e4;class LT extends AT{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const zT='"',PT=Symbol("out"),BT=Symbol("field"),WT=Symbol("quote"),VT=Symbol("quoteafterquote"),UT=Symbol("quoteinquote");class ZT extends AT{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ie(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ie(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new LT(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ie(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=PT;for(let t=0;t<s;t++)switch(a){case PT:switch(e.charAt(t)){case zT:r=t+1,a=WT;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=PT;break;default:a=BT,r=t}break;case BT:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),a=PT,r=t+1;break;case WT:if(e.charAt(t)===zT)a=VT;break;case VT:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=PT,r=t+1;break;case zT:a=WT;break;default:a=UT}break;case UT:if(e.charAt(t)===zT)a=WT}if(a===VT?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class GT extends fT{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Ke().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new GT(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ue(t));return n.set(e,n.length-e.length),ei(n,t)}}class jT extends fT{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Hd([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=qd([r,n,a,s],[1,4])}else this.cropBox=qd([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Ke().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new jT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ie("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Tf(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return di((()=>{const t=$u(Eo(e,"float32"),0);let n;n=_p.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return cl(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class HT{}class qT extends fT{split(e){return new KT(this,e)}}class KT extends qT{constructor(e,t){super(),this.upstream=e,this.impl=new XT(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class XT extends NT{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}var YT=n(58955).lW;class JT extends fT{decodeUTF8(){return new QT(this)}}class QT extends qT{constructor(e){super(),this.upstream=e,this.impl=new e$(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class e$ extends NT{constructor(e){if(super(),this.upstream=e,Ke().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(89891);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ke().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(YT.from(t.buffer)),this.outputQueue.push(n),!0)}}class t$ extends JT{constructor(e,t={}){super(),this.file=e,this.options=t,ie(e instanceof Uint8Array||!!Ke().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}const n$=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function r$(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class s$ extends HT{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(r$(this.input)&&Ke().get("IS_NODE")){const e=n(56064);this.input=e.readFileSync(this.input.slice(7))}return new t$(this.input,this.options)}}class a$ extends HT{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return r$(this.url)?new s$(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;"string"==typeof e?r=e:(r=e.url,s=n$(e));const a=await(n||Xs)(r,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new t$(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function i$(e,t={}){return new ZT(new a$(e),t)}function o$(e){const t=hT(e);return FT((async()=>t))}function l$(e){return FT((async()=>{const t=await e();return hT((()=>t.next()))}))}async function u$(e,t){return jT.create(e,t)}async function c$(e){return GT.create(e)}const d$="4.16.0";function h$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const p$=ch;class f$ extends X{nextDataId(){return f$.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new K(this,li())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ke().get("IS_NODE")&&xs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Ys(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return km(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return ze(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return $o(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $o(e.shape,e.dtype,t)}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ks();e();return{kernelMs:Ks()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){h$([e],"where");const t=this.readSync(e.dataId);return p$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function m$(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}f$.nextDataId=0;const g$={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;h$(t,"abs");let r=new Float32Array(ue(t.shape));return r=m$(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function y$(e){return(t,n,r,s,a)=>{const i=Ql(t,n),o=i.length,l=De(i),u=ke(a,ue(i)),c=t.length,d=n.length,h=De(t),p=De(n),f=Yl(t,i),m=Yl(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ze(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Ue(a,c,h),g=n.slice(-d);m.forEach((e=>g[e]=0));const y=Ue(g,d,p);u[t]=e(r[i],s[y])}return[u,i]}}function b$(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const x$={kernelName:Tt,backendName:"cpu",kernelFunc:b$};function v$(e,t,n="float32"){if("complex64"===n){return b$({inputs:{real:v$(e,t,"float32"),imag:v$(e,t,"float32")},backend:e})}const r=Be(ue(t),n);return e.makeTensorInfo(t,n,r)}function w$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const k$={kernelName:yn,backendName:"cpu",kernelFunc:w$};function S$(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const I$={kernelName:mr,backendName:"cpu",kernelFunc:S$};function N$(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=qs([0],n),[s,a]=y$(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function C$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return w$({inputs:{x:s},backend:n});const e=v$(n,s.shape,s.dtype),t=C$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=b$({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=S$({inputs:{input:s},backend:n}),t=C$({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ce(s.dtype,a)){const e=w$({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=N$(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const T$={kernelName:It,backendName:"cpu",kernelFunc:C$};function $$(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;h$([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?ng(l):l,d="string"===a.dtype?ng(u):u,h=r||a.dtype,[p,f]=t(a.shape,i.shape,c,d,h);return o.makeTensorInfo(f,h,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=C$({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=C$({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=b$({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function E$(e){return(t,n,r,s,a,i)=>{const o=Ql(t,n),l=ue(o),u=o.length,c=De(o),d=ke("float32",l),h=ke("float32",l),p=Yl(t,o),f=Yl(n,o),m=km(r,s),g=km(a,i),y=t.length,b=De(t),x=n.length,v=De(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=s.real,h[t]=s.imag}else for(let t=0;t<d.length;t++){const n=Ze(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=Ue(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Ue(a,x,v),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}const R$=y$(((e,t)=>e+t)),_$=E$(((e,t,n,r)=>({real:e+n,imag:t+r}))),A$=$$(rt,R$,_$),F$={kernelName:rt,backendName:"cpu",kernelFunc:A$};function O$(e,t,n,r,s){const a=ue(r),i=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function D$(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=$o([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const M$=y$(((e,t)=>e&t)),L$=$$(wt,M$),z$={kernelName:wt,backendName:"cpu",kernelFunc:L$};function P$(e){return(t,n,r)=>{const s=Se(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function B$(e,t,n){return W$(e,P$(t),n)}function W$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;h$(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=ng(l)}else u=l;const c=n||i.dtype,d=t(u,c,s);return o.makeTensorInfo(i.shape,c,d)}}const V$=P$((e=>Math.ceil(e))),U$=W$(Nt,V$),Z$={kernelName:Nt,backendName:"cpu",kernelFunc:U$};function G$(e,t,n,r){const s=Se(n,ue(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ue(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?ng(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}const j$=y$(((e,t)=>e===t?1:0)),H$=$$(nn,j$,null,"bool"),q$={kernelName:nn,backendName:"cpu",kernelFunc:H$},K$=P$((e=>Math.exp(e))),X$=W$(rn,K$,"float32"),Y$={kernelName:rn,backendName:"cpu",kernelFunc:X$},J$=P$((e=>Math.expm1(e))),Q$=W$(an,J$),eE={kernelName:an,backendName:"cpu",kernelFunc:Q$},tE=P$((e=>Math.floor(e))),nE=W$(cn,tE),rE={kernelName:cn,backendName:"cpu",kernelFunc:nE},sE=y$(((e,t)=>Math.floor(e/t))),aE=$$(dn,sE,null,"int32"),iE={kernelName:dn,backendName:"cpu",kernelFunc:aE};function oE(e,t,n,r,s,a,i,o,l){const u=$o([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}function lE(e,t,n){const r=$o(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const uE=y$(((e,t)=>e>t?1:0)),cE=$$(mn,uE,null,"bool"),dE={kernelName:mn,backendName:"cpu",kernelFunc:cE},hE=y$(((e,t)=>e>=t?1:0)),pE=$$(gn,hE,null,"bool"),fE={kernelName:gn,backendName:"cpu",kernelFunc:pE},mE=y$(((e,t)=>e<t?1:0)),gE=$$(In,mE,null,"bool"),yE={kernelName:In,backendName:"cpu",kernelFunc:gE},bE=y$(((e,t)=>e<=t?1:0)),xE=$$(Nn,bE,null,"bool"),vE={kernelName:Nn,backendName:"cpu",kernelFunc:xE};function wE(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const kE=P$((e=>Math.log(e))),SE=W$(Tn,kE),IE={kernelName:Tn,backendName:"cpu",kernelFunc:SE};function NE(e,t,n,r){const s=ke(r,ue(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const CE=y$(((e,t)=>Math.max(e,t))),TE=$$(Pn,CE),$E={kernelName:Pn,backendName:"cpu",kernelFunc:TE},EE=y$(((e,t)=>Math.min(e,t))),RE=$$(Hn,EE),_E={kernelName:Hn,backendName:"cpu",kernelFunc:RE},AE=y$(((e,t)=>e*t)),FE=E$(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),OE=$$(Yn,AE,FE),DE={kernelName:Yn,backendName:"cpu",kernelFunc:OE};function ME(e,t,n){const r=Hs(-1,n);return AE([],t,r,e,n)}const LE={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;h$(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=ME(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},zE=y$(((e,t)=>e!==t?1:0)),PE=$$(Qn,zE,null,"bool"),BE={kernelName:Qn,backendName:"cpu",kernelFunc:PE};function WE(e,t,n,r,s){const a=t.length,i=ue(t),o=De(t),l=De(s),u=ke(n,ue(s));for(let t=0;t<i;++t){const n=Ze(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Ue(s,a,l)]=e[t]}return u}function VE(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;h$(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=WE(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const UE={kernelName:os,backendName:"cpu",kernelFunc:VE};function ZE(e,t,n,r){const[s,a]=du(e,r),i=Na(t,"int32"),o=Be(ue(s),i),l=ue(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const GE={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;h$(s,"prod");const o=s.shape.length,l=ve(a,s.shape),u=fu(l,o);let c=l,d=s;const h=[];null!=u&&(d=VE({inputs:{x:s},backend:n,attrs:{perm:u}}),h.push(d),c=gu(c.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=ZE(d.shape,d.dtype,p,c);let y=m;return i&&(y=hu(m,l)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function jE(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}function HE(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function qE(e,t,n,r,s){const a=t.slice();a[0]=s;const i=Se(n,ue(a)),o=e.length;return function(e,t,n,r,s,a){const i=HE(t,2)[1],o=HE(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}function KE(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Ze(r,t.length,De(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:d}=jE(a,i,e,l),h=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Se("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=qE(n,r,s,c,d);return[h,p[0],p[1]]}const XE=2147483647;function YE(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===c.length?1:c[0],h=Se("int32",d+1);h[0]=0;for(let t=0;t<d;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>XE)throw new Error(`Requires ((limit - start) / delta) <= ${XE}`);h[t+1]=h[t]+c}const p=Se(n,h[d]);let f=0;for(let t=0;t<d;++t){const n=h[t+1]-h[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[h,p]}var JE=tm;class QE{constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=rm(u),this.raggedRank=sm(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===JE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===JE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case JE.VALUE_ROWIDS:return QE.getMaxWidthValueRowID(t);case JE.ROW_SPLITS:return QE.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${JE[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return tR(e,n)}calculateOutputSize(e){const t=this.valuesShape;am(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=nm(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return ie(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case JE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case JE.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${JE[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case JE.FIRST_DIM_SIZE:return e[0];case JE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case JE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${JE[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=tR(t,!1),s=Se(this.valuesDType,ue(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=ue(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;di((()=>{const t=cl(u,e),n=Tl(t,i);u=n.dataSync()}))}let c=0,d=0,h=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==h){if(d<h){const e=s.subarray(c*o);eR(a.subarray(d*o),e,(h-d)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>h)if(1===this.defaultValue.length)a.subarray(h*o,r*o).fill(this.defaultValue[0]),h=r;else for(;r>h;){eR(a.slice(h*o),u,o),++h}r<0?(c=e+1,d=h):(c=e,d=h,h=d+1)}else++h}}}function eR(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function tR(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function nR(e,t,n,r,s,a,i,o,l,u){return new QE(e,t,n,r,s,a,i,o,l,u).compute()}function rR(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const sR=P$((e=>1/Math.sqrt(e))),aR=W$(Cr,sR),iR={kernelName:Cr,backendName:"cpu",kernelFunc:aR};function oR(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],d=e.values,h=t.values;if(0===r)return $o(n,t.dtype);const p=l instanceof ha?l:$o(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=d[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=h[e*s+n]:p.values[l*s+n]=0===t.rank?h[0]:h[e*s+n]}return p}const lR=P$((e=>1/(1+Math.exp(-e)))),uR=B$(Mr,(e=>1/(1+Math.exp(-e)))),cR={kernelName:Mr,backendName:"cpu",kernelFunc:uR};function dR(e,t,n,r,s){const a=Uf(r,t,n),i=ue(n),o=De(r);if(a){const n=Zf(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=$o(r,s,"string"===s?ng(e):e),u=$o(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?rg(u.values):u.values}function hR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;h$(s,"slice");const[o,l]=Gf(s,a,i);_f(s,o,l);const u=dR(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const pR={kernelName:Ar,backendName:"cpu",kernelFunc:hR};function fR(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),d=t[1];if(0===l){if(0!==o)throw new Error(Wm(o));return[Se(n,0),[0,d],Se(s,0),u,c]}let h=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*d];if(n<0)throw new Error(Vm(t,n));if(n>=l)throw new Error(Um(t,n,l));++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,u,c]}{const t=f[l-1],a=Se(n,t*d),h=Se(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*d],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<d;++n)a[i*d+n]=e[t*d+n];h[i]=r[t],c[t]=i}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];a[t*d+0]=e;for(let e=1;e<d;++e)a[t*d+e]=0;h[t]=i}}return[a,[t,d],h,u,c]}}function mR(e,t,n,r,s){const a=ue(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Zm(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Gm(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Hm(r,l));l[c]=e}if(ue(l)!==a)throw new Error(qm(r,l));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=Se(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}function gR(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=c;const h=Se(n,d.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&h.fill(i),[h,d];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Ym(g,c));g>m&&h.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Jm(t,r[t],l[0]));for(let t=0;t<u;t++)h[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)h[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&h.fill(i,m*u,c*u),[h,d]}const yR=P$((e=>Math.sqrt(e))),bR=B$(zr,(e=>Math.sqrt(e))),xR={kernelName:zr,backendName:"cpu",kernelFunc:bR},vR=y$(((e,t)=>{const n=e-t;return n*n})),wR=$$(qr,vR),kR={kernelName:qr,backendName:"cpu",kernelFunc:wR},SR=P$(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),IR=W$(Xr,SR),NR={kernelName:Xr,backendName:"cpu",kernelFunc:IR};function CR(e,t,n,r){const s=$o(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}class TR{constructor(e,t,n,r,s,a){this.separator=Ys(e),this.nGramWidths=t,this.leftPad=Ys(n),this.rightPad=Ys(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),d=t+(l>0?0:i-o);let h=0;h+=l*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=u*this.rightPad.length;h+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=Se("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function $R(e,t,n,r,s,a,i,o){return new TR(n,r,s,a,i,o).compute(e,t)}function ER(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function RR(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;ER(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=Se("int32",2*a),u=new Array(a),c=[r,i];let d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*d]=e,l[2*d+1]=t,u[d]=s[d],++d;return[l,u,c]}function _R(e,t){const n=Se("int32",e.length);for(let r=0;r<e.length;++r)n[r]=js(e[r]).modulo(t).getLowBitsUnsigned();return n}const AR=y$(((e,t)=>e-t)),FR=E$(((e,t,n,r)=>({real:e-n,imag:t-r}))),OR=$$(ts,AR,FR),DR={kernelName:ts,backendName:"cpu",kernelFunc:OR};function MR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=$o(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const LR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function zR(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);zR(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(ne(e,n,t),LR(e[r],s)>0&&ne(e,n,r);a<i;){for(ne(e,a,i),a++,i--;LR(e[a],s)<0;)a+=1;for(;LR(e[i],s)>0;)i-=1}0===LR(e[n],s)?ne(e,n,i):(i+=1,ne(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function PR(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=ke(n,i*r),u=ke("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(zR(i,r),i=i.slice(0,r)),s&&i.sort(LR);const c=t*r,d=l.subarray(c,c+r),h=u.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[$o(c,n,l),$o(c,"int32",u)]}function BR(e,t,n,r){const s=ve(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new ha(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const d=a.slice();d[1]=i.size;const h=new ha(d,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)h.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=d[1],{outputValues:h.values,outputShape:p,indices:o}}const WR="4.16.0";wi("cpu",(()=>new f$),1);const VR=B$(Qt,(e=>e>=0?e:Math.exp(e)-1)),UR={kernelName:Qt,backendName:"cpu",kernelFunc:VR};function ZR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;h$([s],"leakyRelu");const i=ue(s.shape),o=n.data.get(s.dataId).values,l=ke("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const GR={kernelName:Sn,backendName:"cpu",kernelFunc:ZR},jR=y$(((e,t)=>e<0?t*e:e));function HR(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;h$([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=jR(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const qR={kernelName:ur,backendName:"cpu",kernelFunc:HR},KR=B$(yr,(e=>Math.max(0,e))),XR={kernelName:yr,backendName:"cpu",kernelFunc:KR},YR=B$(Sr,(e=>Math.min(Math.max(0,e),6))),JR={kernelName:Sr,backendName:"cpu",kernelFunc:YR};function QR(e,t,n,r,s){if("linear"===n)return w$({inputs:{x:t},backend:e});if("relu"===n)return KR({inputs:{x:t},backend:e});if("elu"===n)return VR({inputs:{x:t},backend:e});if("relu6"===n)return YR({inputs:{x:t},backend:e});if("prelu"===n)return HR({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return ZR({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return uR({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function e_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=ue(s.shape),o=xe(a,i),l=ue(o);ie(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const t_={kernelName:br,backendName:"cpu",kernelFunc:e_};function n_(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;h$([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],d=o?a.shape[u-1]:a.shape[u-2],h=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ue(f),y=ue(m),b=Ql(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);ie(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,d]:[y,d,p],v=e_({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),w=e_({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],N=Math.max(g,y),C=n.data.get(v.dataId).values,T=n.data.get(w.dataId).values,$=De(v.shape),E=De(w.shape),[R,_,A]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,O,D]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=S*I,L=$o([N,S,I],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%y;for(let r=0;r<S;r+=P){const s=Math.min(r+P,S);for(let a=0;a<I;a+=P){const i=Math.min(a+P,I);for(let o=0;o<k;o+=P){const l=Math.min(o+P,k);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++){s+=C[t*R+u*_+e*A]*T[e*F+r*O+n*D]}z[e*M+(u*I+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const r_={kernelName:bt,backendName:"cpu",kernelFunc:n_};const s_={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=n_({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=A$({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=QR(n,h,c,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}},a_=B$(tt,(e=>Math.acos(e))),i_={kernelName:tt,backendName:"cpu",kernelFunc:a_},o_=B$(nt,(e=>Math.acosh(e))),l_={kernelName:nt,backendName:"cpu",kernelFunc:o_};const u_={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;h$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=$o(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};const c_={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;h$(s,"all");const o=ve(a,s.shape);let l=o;const u=fu(l,s.shape.length);let c=s;null!=u&&(c=VE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=gu(l.length,s.shape.length)),pu("all",l,c.shape.length);const[d,h]=du(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=e_({inputs:{x:g},backend:n,attrs:{shape:hu(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const d_={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;h$(s,"any");const o=ve(a,s.shape);let l=o;const u=fu(l,s.shape.length);let c=s;null!=u&&(c=VE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=gu(l.length,s.shape.length)),pu("any",l,c.shape.length);const[d,h]=du(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=e_({inputs:{x:g},backend:n,attrs:{shape:hu(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const h_={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;h$(s,"argMax");let i=ve(a,s.shape);const o=fu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=VE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=gu(i.length,l.shape.length)),i=[i[0]],pu("argMax",i,l.shape.length);const[c,d]=du(l.shape,i),h=Be(ue(c),"int32"),p=ue(d),f=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}};const p_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;h$(s,"argMin");let i=ve(a,s.shape);const o=fu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=VE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=gu(i.length,l.shape.length)),i=[i[0]],pu("argMin",i,l.shape.length);const[c,d]=du(l.shape,i),h=Be(ue(c),"int32"),p=ue(d),f=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}},f_=B$(ut,(e=>Math.asin(e))),m_={kernelName:ut,backendName:"cpu",kernelFunc:f_},g_=B$(ct,(e=>Math.asinh(e))),y_={kernelName:ct,backendName:"cpu",kernelFunc:g_},b_=B$(dt,(e=>Math.atan(e))),x_={kernelName:dt,backendName:"cpu",kernelFunc:b_},v_=y$(((e,t)=>Math.atan2(e,t))),w_=$$(pt,v_),k_={kernelName:pt,backendName:"cpu",kernelFunc:w_},S_=B$(ht,(e=>Math.atanh(e))),I_={kernelName:ht,backendName:"cpu",kernelFunc:S_};function N_(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=$o(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*i-h,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),S=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),h=Math.min(s.inWidth,d+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<h;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[S+n*x+t]="avg"===a?b/v:y}}}return m}function C_(e,t,n,r,s=!1,a=!1){const i=$o(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=$o(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){const d=o*l-f;let p=d;for(;p<0;)p+=c;const x=Math.min(r.inWidth,h+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-d,u=m.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+l)}}i.set(w,e,n,o,t)}}return i}function T_(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,d=s.dilationWidth,h=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=$o(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-m;let C=N;for(;C<0;)C+=u;const T=Math.min(s.inDepth,h+N),$=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let h=i;for(;h<0;)h+=c;const m=Math.min(s.inHeight,p+i),w=$+n*S;for(let n=0;n<s.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=d;const p=Math.min(s.inWidth,f+i),g=w+n*I;let k=b,S=0,N=0;for(let n=C;n<T;n+=u){const s=x+n*r[1];for(let n=h;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=d){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(S+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?S/Math.max(N,1):k}}}}return x}const $_={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;h$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Xo(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))c=w$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=De(s.shape),r=N_(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const E_={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;h$(s,"avgPool3d");const c=Yo(s.shape,a,i,1,o,l,u),d=T_(n.data.get(s.dataId).values,s.shape,s.dtype,De(s.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const R_={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;h$([s,a],"avgPool3DGrad");const c=Yo(a.shape,i,o,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=v-1-c.padInfo.front,I=k-1-c.padInfo.left,N=w-1-c.padInfo.top,C=$o(a.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-S,i=r-N,o=s-I;let l=0;for(let n=0;n<v;n+=y){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const s=(i+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;l+=$.get(e,r,s,a,t)}}}C.set(l*T,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const __={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;h$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Xo(i.shape,o,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=$o(i.shape,"float32"),k=1/(p*f),S=n.data.get(s.dataId).values,I=$o(s.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/h;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=I.get(e,r,s,t)}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const A_={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;ie(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),h$([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=h.length,x=d.length;let v=0,w=0,k=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-d[w++])*p[k++]/Math.sqrt(h[S++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};const F_={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;h$([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=um(s.shape,a,o),u=cm(l.length,a.length),c=dm(s.shape,a,o),d=hm(i,a.length),h=pm(c,i,a.length),p=e_({inputs:{x:s},backend:n,attrs:{shape:l}}),f=VE({inputs:{x:p},backend:n,attrs:{perm:u}}),m=e_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=hR({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const O_={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=O$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};const D_={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=Ql(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},M_=B$(Ct,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),L_={kernelName:Ct,backendName:"cpu",kernelFunc:M_},z_={kernelName:$t,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ue(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function P_(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const B_={kernelName:xn,backendName:"cpu",kernelFunc:P_};function W_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ve(s,t[0].shape)[0];Qf(t.map((e=>e.shape)),a);let i=em(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));if(1===o.length)return w$({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>S$({inputs:{input:e},backend:n}))),t=o.map((e=>P_({inputs:{input:e},backend:n}))),r=W_({inputs:e,backend:n,attrs:{axis:a}}),s=W_({inputs:t,backend:n,attrs:{axis:a}}),i=b$({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=ue(e.shape.slice(a));return e_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=em(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],d=G$(u,i,t[0].dtype,c),h=em(o.map((e=>e.shape)),a),p=n.makeTensorInfo(h,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const V_={kernelName:Et,backendName:"cpu",kernelFunc:W_};function U_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;h$([s,a],"conv2d");const d=ll(l),h=Jo(s.shape,a.shape,i,u,o,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,v=new ha(h.outShape,s.dtype),w=De(s.shape),k=De(a.shape),S=w[0],I=x?w[1]:w[2],N=x?w[2]:1,C=x?1:w[1],T=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],_=n.data.get(s.dataId).values,A=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<h.batchSize;++e){const t=e*S,n=e*T;for(let e=0;e<h.outHeight;++e){const r=n+e*$,s=e*h.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=h.inHeight)continue;const a=e*k[0],i=t+n*I;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<h.inChannels;++e){const n=_[s+e*C];for(let e=0;e<h.outChannels;++e)F[t+e*R]+=n*A[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const Z_={kernelName:Rt,backendName:"cpu",kernelFunc:U_};const G_={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;h$([s,a],"conv2dBackpropFilter");const d=ll(l),h=Jo(s.shape,c,i,1,o,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new ha(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=new ha(s.shape,s.dtype,w),I=new ha(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(h.outHeight,(h.inHeight+v-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=y?S.get(u,t,n,i)*I.get(u,c,e,o):S.get(u,i,t,n)*I.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const j_={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;h$([s,a],"conv2dBackpropInput");const d=De(a.shape),h=De(s.shape);let p=ll(u);const f=Jo(i,a.shape,o,1,l,c,!1,p),m=new ha(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=d,{batchSize:k,filterHeight:S,filterWidth:I,inChannels:N,inHeight:C,inWidth:T,outChannels:$,outHeight:E,outWidth:R,strideHeight:_,strideWidth:A}=f;p=f.dataFormat;const F=S-1-f.padInfo.top,O=I-1-f.padInfo.left,D="channelsLast"===p,M=m.strides[0],L=D?m.strides[1]:m.strides[2],z=D?m.strides[2]:1,P=D?1:m.strides[1],B=h[0],W=D?h[1]:h[2],V=D?h[2]:1,U=D?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/_)),a=Math.min(E,(S+r)/_);for(let i=0;i<T;++i){const o=i-O,l=Math.max(0,Math.ceil(o/A)),u=Math.min(R,(I+o)/A);let c=0;for(let n=s;n<a;++n){const s=n*_-r;for(let r=l;r<u;++r){const a=B*e+W*n+V*r,i=x*(S-1-s)+v*(I-1-(r*A-o))+w*t;for(let e=0;e<$;++e){c+=y[a+U*e]*b[i+e]}}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const H_={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;h$([s,a],"conv3d");const u=Qo(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new ha(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=v.values,I=De(s.shape),N=De(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*I[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)S[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const q_={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;h$([s,a],"conv3dBackpropFilterV2");const u=De(s.shape),c=De(a.shape),d=Qo(s.shape,l,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new ha(d.filterShape,"float32"),x=b.values,[v,w,k,S]=b.strides,I=n.data.get(a.dataId).values,[N,C,T,$]=c,E=n.data.get(s.dataId).values,[R,_,A,F]=u,O=d.padInfo.front,D=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((O-e)/h)),n=Math.min(d.outDepth,(d.inDepth+O-e)/h),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/p)),i=Math.min(d.outHeight,(d.inHeight+M-s)/p),o=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((D-r)/f)),u=Math.min(d.outWidth,(d.inWidth+D-r)/f),c=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*S+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*R,y=m*N;for(let m=t;m<n;++m){const t=(e+m*h-O)*_+d,n=m*C+y;for(let e=a;e<i;++e){const a=(s+e*p-M)*A+t,i=e*T+n;for(let e=l;e<u;++e){const t=e*$+i;g+=E[(r+e*f-D)*F+a+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const K_={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;h$([s],"conv3dBackpropInputV2");const u=De(s.shape),c=De(a.shape),d=Qo(l,a.shape,o,1,i),h=new ha(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=u,S=n.data.get(a.dataId).values,[I,N,C,T]=c,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:_,inChannels:A,inDepth:F,inHeight:O,inWidth:D,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=E-1-d.padInfo.front,Z=R-1-d.padInfo.top,G=_-1-d.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<A;++t)for(let n=0;n<F;++n){const r=n-U,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,(E+r)/B);for(let i=0;i<O;++i){const o=i-Z,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(R+o)/W);for(let c=0;c<D;++c){const d=c-G,h=Math.max(0,Math.ceil(d/V)),$=Math.min(P,(_+d)/V);let A=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=l;r<u;++r){const a=r*W-o;for(let i=h;i<$;++i){const o=x*e+v*n+w*r+k*i,l=I*(E-1-s)+N*(R-1-a)+C*(_-1-(i*V-d))+T*t;for(let e=0;e<M;++e){A+=b[o+e]*S[l+e]}}}}p[f*e+m*n+g*i+y*c+t]=A}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},X_=B$(Mt,(e=>Math.cos(e))),Y_={kernelName:Mt,backendName:"cpu",kernelFunc:X_},J_=B$(Lt,(e=>Math.cosh(e))),Q_={kernelName:Lt,backendName:"cpu",kernelFunc:J_};const eA={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,d,h,p]=s.shape,f=a.shape[0],[m,g]=o,y=$o([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=De(s.shape),k=De(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(d-1)/(m-1):0,f=g>1?(a-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(c<0||c>d-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(h-1)+l*f:.5*(r+a)*(h-1);if(c<0||c>h-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let r=0;r<p;r++){let a=r+d*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+d*w[2]+s*w[1]+i*w[0];const h=v[a];a=r+m*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*b,f=h+(v[a]-h)*b;a=r+l*k[2]+t*k[1]+e*k[0],y.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(h-1)+n*f:.5*(r+a)*(h-1);if(s<0||s>h-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const tA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;h$(s,"cumprod");const l=fu([a],s.shape.length);let u=s;null!=l&&(u=VE({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=gu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Na(u.dtype,"int32"),h=Pe(ue(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?1:p[n];else{const r=m(e,t-1);h[n]=i?p[r]*h[r]:p[n]*h[r]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=VE({inputs:{x:g},backend:n,attrs:{perm:mu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const nA={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;h$(s,"cumsum");const l=fu([a],s.shape.length);let u=s;null!=l&&(u=VE({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=gu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=Na(u.dtype,"int32"),h=Be(ue(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=VE({inputs:{x:g},backend:n,attrs:{perm:mu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const rA={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=O$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=D$(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const sA={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ie("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],d=l*a,h=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*d*h*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<h;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,d,h,p],s.dtype,m)}};function aA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;h$([s,a],"depthwiseConv2DNative");const c=De(s.shape),d=De(a.shape);let h=l;null==h&&(h=[1,1]),ie(il(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=Jo(s.shape,a.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new ha(p.outShape,s.dtype),S=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*d[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*d[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)N[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const iA={kernelName:Ut,backendName:"cpu",kernelFunc:aA};const oA={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;h$([s,a],"depthwiseConv2dNativeBackpropFilter");const d=Jo(s.shape,c,i,o,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new ha(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=n.data.get(s.dataId).values,w=new ha(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,S=new ha(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),a=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=s;e<a;++e){const n=r+e*p-y;u+=w.get(l,t,n,o)*S.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const lA={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;h$([s,a],"depthwiseConv2DNativeBackpropInput");const d=De(s.shape),h=De(a.shape),p=Jo(c,a.shape,i,o,l,u,!0),f=new ha(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=d,S=n.data.get(a.dataId).values,[I,N,C]=h,{batchSize:T,filterHeight:$,filterWidth:E,inChannels:R,inHeight:_,inWidth:A,outChannels:F,outHeight:O,outWidth:D,strideHeight:M,strideWidth:L}=p,z=$-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<_;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),a=Math.min(O,($+r)/M);for(let i=0;i<A;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(D,(E+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=I*($-1-s)+N*(E-1-(r*L-o))+C*t;for(let e=0;e<B;++e){c+=x[a+(t*B+e)]*S[i+e]}}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const uA={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ue(r.shape),a=n.data.get(r.dataId).values,i=$o([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},cA={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,d=l.data.get(s.dataId).values,h=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:C}=Ko(r.shape,s.shape,a,i,"NHWC",o),T=ue(C),$=C.length,E=Se(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*I;if(a>=0&&a<f)for(let n=0;n<S;++n){const p=i+n*N;if(p>=0&&p<m){const i=Ue([e,a,p,o],c,De(r.shape)),f=Ue([t,n,o],h,De(s.shape)),m=u[i]+d[f];m>l&&(l=m)}}}E[Ue([e,t,a,o],$,De(C))]=l}}}return{dataId:l.write(qs(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},dA={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Le(r.shape,u.data.get(r.dataId).values),d=Le(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=Ko(r.shape,s.shape,i,o,"NHWC",l);ie(a.rank===N.length,(()=>`Error in ${Kt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Le(N,u.data.get(a.dataId).values),T=We(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+d[t][n][a];s>i&&(i=s,o=t,l=n)}}}T[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qs(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},hA={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Le(r.shape,u.data.get(r.dataId).values),d=Le(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=Ko(r.shape,s.shape,i,o,"NHWC",l);ie(a.rank===N.length,(()=>`Error in ${qt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Le(N,u.data.get(a.dataId).values),T=We(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*I;if(u>=0&&u<f){const s=c[e][r][u][a]+d[t][n][a];s>i&&(i=s,o=r,l=u)}}}T[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qs(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const pA={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let e=0;e<h*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),s}};function fA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;h$(s,"sum"),o="bool"===s.dtype?C$({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):w$({inputs:{x:s},backend:n});const l=o.shape.length,u=ve(a,o.shape),c=fu(u,l);let d=u,h=o;null!=c&&(h=VE({inputs:{x:o},backend:n,attrs:{perm:c}}),d=gu(d.length,l)),pu("sum",d,h.shape.length);const[p,f]=du(h.shape,d);let m=v$(n,p,Na(h.dtype,"int32"));const g=ue(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=e_({inputs:{x:m},backend:n,attrs:{shape:hu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(h),m}const mA={kernelName:Pr,backendName:"cpu",kernelFunc:fA};const gA={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Om(s,a.length);Mm(i.length,l,a);const{path:u,steps:c}=Lm(o,l),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Dm(p,l[t]);let s;zm(e)?s=a[t]:(s=VE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);he(s.shape,i)||(s=e_({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===h?h=s:(h=OE({inputs:{a:s,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=fA({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};const yA={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;h$([r,s],"eluGrad");const a=new Float32Array(ue(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},bA=gm,xA=ym,vA=bm,wA=xm,kA=vm,SA=wm,IA=B$(tn,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+bA*n);return t*(1-((((SA*r+kA)*r+wA)*r+vA)*r+xA)*r*Math.exp(-n*n))})),NA={kernelName:tn,backendName:"cpu",kernelFunc:IA};function CA(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(ie(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),e_({inputs:{x:s},backend:n,attrs:{shape:o}})}const TA={kernelName:sn,backendName:"cpu",kernelFunc:CA},$A=y$(((e,t)=>e/t)),EA=$$(Yt,$A),RA={kernelName:Yt,backendName:"cpu",kernelFunc:EA};function _A(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=ue(u),d=ke("float32",c),h=ke("float32",c);for(let e=0;e<s;e++){const r=hR({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=hR({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=b$({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=AA(i,t,n),p=km(u,c);for(let t=0;t<a;t++){const n=Cm(p,t);d[e*a+t]=n.real,h[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",h),m=b$({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function AA(e,t,n){const r=ue(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=FA(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Hs(r,"float32")),i=w$({inputs:{x:a},backend:n}),l=RA.kernelFunc({inputs:{a:e,b:a},backend:n}),u=RA.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:d}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Em(s*r,t,n),l=Cm(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Tm(r,a,i,s)}return r}(km(a,i),r,t);return Sm(e)}var o}function FA(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=km(e,t),i=n/2,o=Im(a),l=o.real,u=o.imag,c=[l.length],d=s.makeTensorInfo(c,"float32",l),h=s.makeTensorInfo(c,"float32",u),p=b$({inputs:{real:d,imag:h},backend:s}),f=Nm(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=b$({inputs:{real:b,imag:x},backend:s}),w=FA(l,u,i,r,s),k=w.real,S=w.imag,I=[k.length],N=s.makeTensorInfo(I,"float32",k),C=s.makeTensorInfo(I,"float32",S),T=b$({inputs:{real:N,imag:C},backend:s}),$=FA(m,g,i,r,s),E=$.real,R=$.imag,_=[E.length],A=s.makeTensorInfo(_,"float32",E),F=s.makeTensorInfo(_,"float32",R),O=b$({inputs:{real:A,imag:F},backend:s}),D=$m(n,r),M=[D.real.length],L=s.makeTensorInfo(M,"float32",D.real),z=s.makeTensorInfo(M,"float32",D.imag),P=b$({inputs:{real:L,imag:z},backend:s}),B=OE({inputs:{a:P,b:O},backend:s}),W=A$({inputs:{a:T,b:B},backend:s}),V=OR({inputs:{a:T,b:B},backend:s}),U=S$({inputs:{input:W},backend:s}),Z=S$({inputs:{input:V},backend:s}),G=P_({inputs:{input:W},backend:s}),j=P_({inputs:{input:V},backend:s}),H=W_({inputs:[U,Z],backend:s,attrs:{axis:0}}),q=W_({inputs:[G,j],backend:s,attrs:{axis:0}}),K=s.data.get(H.dataId).values,X=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),{real:K,imag:X}}const OA={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],i=e_({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_A(i,!1,n),l=e_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function DA(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||Ae(s),o=Se(i,ue(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const MA={kernelName:ln,backendName:"cpu",kernelFunc:DA};const LA={kernelName:un,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=ke(r.dtype,ue(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let d=c[o];if(i>=0&&i<l){d=c[t+n+i*u+s]}a[o]=d}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const zA={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=U_({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=e_({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=A$({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=A$({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=e_({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=QR(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=QR(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const PA={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=aA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=A$({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=QR(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const BA={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=ue(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,d]=$f(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const h=oE(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,d,r.shape,a);return n.makeTensorInfo(l,r.dtype,h.values)}};const WA={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;h$([s,a],"gatherV2");const l=ve(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];ie(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let d=o;null==o&&(d=0);const h=ue(a.shape),p=tg(s,a,l,d),f=e_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=e_({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=lE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};const VA={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ue(r.shape),a=r.shape[r.shape.length-1],i=e_({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_A(i,!0,n),l=e_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},UA=B$(vn,(e=>Number.isFinite(e)?1:0),"bool"),ZA={kernelName:vn,backendName:"cpu",kernelFunc:UA},GA=B$(wn,(e=>Math.abs(e)===1/0?1:0),"bool"),jA={kernelName:wn,backendName:"cpu",kernelFunc:GA},HA=B$(kn,(e=>Number.isNaN(e)?1:0),"bool"),qA={kernelName:kn,backendName:"cpu",kernelFunc:HA};const KA={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=wE(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},XA=B$($n,(e=>Math.log1p(e))),YA={kernelName:$n,backendName:"cpu",kernelFunc:XA},JA=y$(((e,t)=>e&&t)),QA=$$(En,JA,null,"bool"),eF={kernelName:En,backendName:"cpu",kernelFunc:QA},tF=B$(Rn,(e=>e?0:1),"bool"),nF={kernelName:Rn,backendName:"cpu",kernelFunc:tF},rF=y$(((e,t)=>e||t)),sF=$$(_n,rF,null,"bool"),aF={kernelName:_n,backendName:"cpu",kernelFunc:sF};const iF={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;h$(s,"LRN");const u=s.shape[3],c=u-1,d=n.data.get(s.dataId).values,h=ue(s.shape),p=new Float32Array(h);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}};const oF={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;h$(i,"LRNGrad");const d=ue(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function lF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=ve(a,l);let d=c;const h=fu(d,u);let p=o.data.get(s.dataId).values;if(null!=h){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];p=WE(p,l,s.dtype,h,e),d=gu(d.length,u),l=e}h$(s,"max"),pu("max",d,u);const[f,m]=du(l,d),g=NE(p,ue(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;if(i){b=hu(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const uF={kernelName:zn,backendName:"cpu",kernelFunc:lF};const cF={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;h$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Xo(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))c=w$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=De(s.shape),r=N_(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const dF={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;h$(s,"maxPool3d");const c=Yo(s.shape,a,i,1,o,l,u),d=T_(n.data.get(s.dataId).values,s.shape,s.dtype,De(s.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const hF={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;h$([s,a],"maxPool3DGrad");const c=Yo(a.shape,i,o,1,l,u),d=function(e,t){const n=$o(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let h=u;for(;h<0;)h+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const S=Math.min(t.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=h;r<w;r+=o){const s=r-u;for(let a=k;a<S;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=I&&(I=o,N=n*c*d+s*c+i)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,S=x-1-c.padInfo.top,I=$o(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-S,o=s-k;let l=0;for(let n=0;n<b;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const h=b*x*v-1-d.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;if(0===h)continue;l+=N.get(e,r,a,u,t)*h}}}I.set(l,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const pF={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;h$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=Xo(o.shape,l,u,1,c,d),p=n.data.get(o.dataId).values,f=$o(h.outShape,o.dtype,C_(p,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,k=x-1-h.padInfo.top,S=$o(o.shape,"float32"),I=n.data.get(s.dataId).values,N=$o(s.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(a+s)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;if(0===l)continue;i+=N.get(e,r,o,t)*l}}S.set(i,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const fF={kernelName:Zn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;h$(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Xo(r.shape,s,a,[1,1],i),[d,h]=function(e,t,n,r,s){const a=N_(e,0,n,De(t),s,"max"),i=C_(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(d,c.outShape,r.dtype),f=l.write(h,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const mF={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=ve(a,s.shape),l=ue(du(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const d=C$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(d);const h=EA({inputs:{a:d,b:c},backend:n});u.push(h);const p=fA({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const gF={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;h$(s,"min");const o=ve(a,s.shape);let l=o;const u=fu(l,s.shape.length);let c=s;null!=u&&(c=VE({inputs:{x:s},backend:n,attrs:{perm:u}}),l=gu(l.length,s.shape.length)),pu("min",l,c.shape.length);const[d,h]=du(c.shape,l),p=ue(h),f=Be(ue(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=e_({inputs:{x:g},backend:n,attrs:{shape:hu(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const yF={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;h$(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,d=n.data.get(s.dataId).values,h=s.shape.length,p=De(s.shape),f=ue(o),m=o.length,g=De(o),y=ke(s.dtype,f);for(let e=0;e<f;e++){let t=Ze(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ue(t,h,p);y[e]=d[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},bF=y$(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),xF=$$(Kn,bF),vF={kernelName:Kn,backendName:"cpu",kernelFunc:xF};function wF(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=ve([o],s.shape),u=lF({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=hu(u.shape,l),d=e_({inputs:{x:u},backend:n,attrs:{shape:c}}),h=OR({inputs:{a:s,b:d},backend:n}),p=X$({inputs:{x:h},backend:n}),f=fA({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=e_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=EA({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const kF={kernelName:Vr,backendName:"cpu",kernelFunc:wF};const SF={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;h$(s,"multinomial");const l=o?s:wF({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,h=[u,a],p=Be(ue(h),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=Zc.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",p)}},IF=Gh;const NF={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;h$(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:d}=IF(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},CF=jh;const TF={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;h$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=CF(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$F=Hh;const EF={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;h$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,h=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=$F(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const RF={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;h$(s,"oneHot");const u=ue(s.shape),c=new Float32Array(u*i);c.fill(l);const d=n.data.get(s.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(c[e*i+d[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function _F(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=S$({inputs:{input:r},backend:n}),t=_F({inputs:{x:e},backend:n}),s=P_({inputs:{input:r},backend:n}),a=_F({inputs:{x:s},backend:n}),i=b$({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return DA({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const AF={kernelName:hs,backendName:"cpu",kernelFunc:_F};const FF={kernelName:rr,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=S$({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=P_({inputs:{input:s},backend:r}),i=_F({inputs:{x:a},backend:r}),o=b$({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return DA({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function OF(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return CA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=W_({inputs:t.map((e=>{const t=CA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const DF={kernelName:ar,backendName:"cpu",kernelFunc:OF};const MF={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;h$(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=ue(s.shape),d=s.shape.length,h=De(s.shape),p=ue(o),f=o.length,m=De(o),g=ke(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){g[Ue(Ze(e,d,h).map(((e,t)=>e+l[t])),f,m)]=u[e]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},LF=y$(((e,t)=>Math.pow(e,t))),zF=$$(lr,LF),PF={kernelName:lr,backendName:"cpu",kernelFunc:zF};const BF={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,d=n.data.get(i.dataId).values,[h,p,f]=KE(l,u,c,a.shape,a.dtype,d,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const WF={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=YE(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const VF={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=nR(u,s.shape,c,a.shape,a.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,a.dtype,m)}};const UF={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=rR(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},ZF=B$(gr,(e=>1/e)),GF={kernelName:gr,backendName:"cpu",kernelFunc:ZF};const jF={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;h$(s,"resizeBilinear");const l=De(s.shape),[u,c]=o,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ue([d,u,c,f])),y=[a&&u>1?h-1:h,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(h-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],d=u+n*l[2],h=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],a=t+(m[h+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([d,u,c,f],"float32",g)}};const HF={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;h$([a,s],"resizeBilinearGrad");const o=De(s.shape),[l,u,c,d]=s.shape,[,h,p]=a.shape,f=new Float32Array(l*u*c*d),m=[i&&h>1?u-1:u,i&&p>1?c-1:c],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,h=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=h*u,k=h*s,S=l*u,I=l*s;for(let e=0;e<d;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,d],"float32",f)}};const qF={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;h$(s,"resizeNearestNeighbor");const l=De(s.shape),[u,c]=o,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*u*c*f),y=[a&&u>1?h-1:h,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<d;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(h-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([d,u,c,f],s.dtype,g)}};const KF={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;h$([a,s],"resizeNearestNeighborGrad");const o=De(s.shape),l=De(a.shape),[u,c,d,h]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*d*h),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?d-1:d],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,S=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-S/2);for(let r=0;r<d;r++){const a=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-I/2);for(let n=0;n<h;n++){let o=0;for(let a=0;a<S;a++){const u=a+s;if(u<0||u>=p)continue;const h=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const s=h+t*l[2],a=t*v;r===Math.min(d-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const XF={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;h$(s,"reverse");const i=s.shape.length,o=ve(a,s.shape);if(0===i)return w$({inputs:{x:s},backend:n});const l=new ha(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},YF={kernelName:ms,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=ke(r.dtype,ue(r.shape)),[u,c,d,h]=r.shape,[p,f]=lm(i,c,d),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*d*c*h;for(let e=0;e<c;e++){const n=e*(d*h);for(let r=0;r<d;r++){const s=r*h;for(let i=0;i<h;i++){const o=[u,e,r,i],b=o[2],x=o[1];let v=(b-p)*g-(x-f)*m,w=(b-p)*m+(x-f)*g;v=Math.round(v+p),w=Math.round(w+f);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<d&&w>=0&&w<c){k=y[t+w*(d*h)+v*h+i]}l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},JF=B$(Nr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),QF={kernelName:Nr,backendName:"cpu",kernelFunc:JF};const eO={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=th(0,s,i),h=oR(n.bufferSync(s),n.bufferSync(a),i,d,u,l,o,c,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};function tO(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function nO(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const rO={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=Se("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?tO(n,t[e+l]):nO(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const sO={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;h$([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Na(s.dtype,a.dtype),d=Be(ue(s.shape),c);let h=0;const p=0===i||i>1||1===s.shape.length?1:ue(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[h++]=l[e]:d[h++]=u[e];return n.makeTensorInfo(s.shape,c,d)}},aO=fm,iO=mm,oO=B$(_r,(e=>e>=0?iO*e:aO*(Math.exp(e)-1))),lO={kernelName:_r,backendName:"cpu",kernelFunc:oO},uO=B$(Dr,(e=>e<0?-1:e>0?1:0)),cO={kernelName:Dr,backendName:"cpu",kernelFunc:uO},dO=B$(Fr,(e=>Math.sin(e))),hO={kernelName:Fr,backendName:"cpu",kernelFunc:dO},pO=B$(Or,(e=>Math.sinh(e))),fO={kernelName:Or,backendName:"cpu",kernelFunc:pO},mO=Math.log(1.1920928955078125e-7)+2,gO=B$(Lr,(e=>{const t=e>-mO,n=e<mO,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),yO={kernelName:Lr,backendName:"cpu",kernelFunc:gO};const bO={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;h$([s],"spaceToBatchND");const o=ue(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=MF.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=um(u.shape,a,o,!1),d=cm(c.length,a.length,!1),h=dm(u.shape,a,o,!1),p=e_({inputs:{x:u},backend:n,attrs:{shape:c}}),f=VE({inputs:{x:p},backend:n,attrs:{perm:d}}),m=e_({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};const xO={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=fR(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const vO={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,d]=mR(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const wO={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=gR(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const kO={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=gR(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const SO={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=th(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=oR(f,n.bufferSync(a),o,h,c,u,l,d,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":m=oR(f,n.bufferSync(a),o,h,c,u,l,d,n.data.get(i.dataId).values[0],p);break;case"int32":m=oR(f,n.bufferSync(a),o,h,c,u,l,d,n.data.get(i.dataId).values[0],p);break;case"string":m=oR(f,n.bufferSync(a),o,h,c,u,l,d,Js(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const IO={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ve(i,s.shape)[0],l=Bm(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=hR({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},NO={kernelName:Kr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;h$(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},CO=B$(ps,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),TO={kernelName:ps,backendName:"cpu",kernelFunc:CO};const $O={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r;h$(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=jf(s.shape,a,i,o,l,u,c,d,h);let w;if(m)w=e_({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ff(b,x,v),t=hR({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=e_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=CR(p,n.bufferSync(s),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};const EO={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=$R(h,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const RO={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=RR(o,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const _O={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=_R(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},AO=B$(ns,(e=>Math.tan(e))),FO={kernelName:ns,backendName:"cpu",kernelFunc:AO},OO=B$(rs,(e=>Math.tanh(e)));const DO={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=th(0,s,r.shape),d=n.bufferSync(s),h=n.bufferSync(a),p=n.bufferSync(r),f=oR(d,h,r.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};const MO={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;h$(s,"tile");const i=MR(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};const LO={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;h$(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=PR(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const zO={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,h,p]=s.shape,[f,m]=null!=u?u:[d,h],g=[c,f,m,p],y=De(s.shape),b=y[0],x=y[1],v=y[2],w=De(g),k=w[0],S=w[1],I=w[2],N=ke(s.dtype,ue(g));N.fill(l);const C=r.data.get(s.dataId).values,T=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=PO(c,h,o),m=PO(p,d,o);switch(i){case"nearest":a=WO(C,d,h,b,x,v,e,m,f,s,l);break;case"bilinear":a=VO(C,d,h,b,x,v,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*S+r*I+s]=a}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function PO(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ee(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function BO(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function WO(e,t,n,r,s,a,i,o,l,u,c){return BO(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function VO(e,t,n,r,s,a,i,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,f=h+1;return(p-o)*((f-l)*BO(e,t,n,r,s,a,i,d,h,u,c)+(l-h)*BO(e,t,n,r,s,a,i,d,f,u,c))+(o-d)*((f-l)*BO(e,t,n,r,s,a,i,p,h,u,c)+(l-h)*BO(e,t,n,r,s,a,i,p,f,u,c))}const UO={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;h$(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=BR(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const ZO={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),d=s.shape.slice();d[a]=1;const h=new Array(o);for(let e=0;e<h.length;e++){c[a]=e;const t=hR({inputs:{x:s},backend:n,attrs:{begin:c,size:d}});h[e]=e_({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return h}};const GO={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;h$(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=CA({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Hs(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=H$({inputs:{a:r,b:c},backend:n}),i=C$({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=OE({inputs:{a:i,b:s},backend:n}),d=fA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),l.push(r),l.push(a),l.push(i),l.push(u),l.push(d)}const d=OF({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},jO=[s_,g$,i_,l_,F$,u_,c_,d_,h_,p_,m_,y_,x_,k_,I_,$_,E_,R_,__,r_,A_,F_,O_,z$,D_,T$,Z$,L_,x$,z_,V_,Z_,G_,j_,H_,q_,K_,Y_,Q_,eA,tA,nA,rA,sA,iA,oA,lA,uA,cA,dA,hA,pA,gA,UR,yA,q$,NA,Y$,TA,eE,OA,MA,LA,rE,iE,zA,PA,BA,WA,dE,fE,k$,VA,B_,ZA,jA,qA,GR,yE,vE,KA,IE,YA,eF,nF,aF,iF,oF,uF,$E,cF,dF,hF,pF,fF,mF,gF,_E,yF,vF,SF,DE,LE,NF,TF,EF,BE,RF,FF,DF,MF,PF,qR,GE,BF,WF,VF,UF,I$,RA,GF,XR,JR,t_,jF,HF,qF,KF,XF,YF,QF,iR,eO,rO,sO,lO,cR,cO,hO,fO,pR,kF,yO,bO,xO,vO,wO,kO,SO,IO,xR,NO,kR,NR,TO,$O,EO,RO,_O,DR,mA,FO,{kernelName:rs,backendName:"cpu",kernelFunc:OO},DO,MO,LO,zO,UE,UO,ZO,GO,AF];for(const e of jO)Cs(e);const HO={},qO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function KO(e,t){HO[e]=t}function XO(e,t){if(!(e in HO)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Ke().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete HO[e]}),!1),Ke().getBool("SOFTWARE_WEBGL_ENABLED")&&(qO.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",qO)||n.getContext("experimental-webgl",qO);return n.getContext("webgl2",qO)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;HO[e]=n}const n=HO[e];return null==n||n.isContextLost()?(delete HO[e],XO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),HO[e])}var YO,JO,QO;function eD(e,t){return[t,e]}function tD(e){const t=ue(e);return me(Math.ceil(t/4))}function nD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function rD(e,t){const n=e;let r,s,a,i,o,l,u,c,d,h;return 2===Ke().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function sD(e,t){const n=t();return Ke().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+lD(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(YO||(YO={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(JO||(JO={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(QO||(QO={}));const aD=5.96e-8,iD=65504;function oD(e){return!!(Ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||aD<Math.abs(e)&&Math.abs(e)<iD)}function lD(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function uD(e,t){return OD(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function cD(e,t){const n=OD(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(sD(e,(()=>e.shaderSource(n,t))),sD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function dD(e,t){const n=OD(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(sD(e,(()=>e.shaderSource(n,t))),sD(e,(()=>e.compileShader(n))),Ke().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw pD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const hD=/ERROR: [0-9]+:([0-9]+):/g;function pD(e,t){const n=hD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>ye((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ye(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function fD(e){return OD(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function mD(e,t){if(sD(e,(()=>e.linkProgram(t))),!Ke().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function gD(e,t){if(sD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yD(e,t){const n=OD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),sD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function bD(e,t){const n=OD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),sD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function xD(){return 2===Ke().getNumber("WEBGL_VERSION")?1:4}function vD(e){return OD(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function wD(e,t){const n=Ke().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function kD(e){return OD(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function SD(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(sD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),sD(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),sD(e,(()=>e.enableVertexAttribArray(o))),!0)}function ID(e,t,n){DD(e,n),sD(e,(()=>e.activeTexture(e.TEXTURE0+n))),sD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function ND(e,t){DD(e,t),sD(e,(()=>e.activeTexture(e.TEXTURE0+t))),sD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function CD(e,t,n){return OD(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function TD(e,t,n){return e.getUniformLocation(t,n)}function $D(e,t,n,r){sD(e,(()=>ID(e,t,r))),sD(e,(()=>e.uniform1i(n,r)))}function ED(e){sD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sD(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),sD(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function RD(e,t,n){sD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),sD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function _D(e,t){sD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),sD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function AD(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+FD(e,t))}function FD(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function OD(e,t,n){const r=sD(e,(()=>t()));if(null==r)throw new Error(n);return r}function DD(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function MD(e,t=2){return ue(e.slice(0,e.length-t))}function LD(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function zD(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[MD(e),...LD(e)]),t}function PD(e,t=!1){let n=Ke().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Ke().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Ke().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?te(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=we(e);e=t.newShape}let s=ue(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=MD(e);let n=2,r=2;e.length&&([n,r]=LD(e)),s=t*(n/2)*(r/2),a=me(s).map((e=>2*e))}else a=me(s);return a}function BD(e){return e%2==0}function WD(e,t){if(he(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(BD(n)&&BD(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BD(e[0])&&BD(t[0])}let VD,UD;function ZD(e){if(null==VD){const t=XO(e);VD=t.getParameter(t.MAX_TEXTURE_SIZE)}return VD}function GD(){VD=null}function jD(){UD=null}function HD(e){if(null==UD){const t=XO(e);UD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UD)}function qD(e){if(0===e)return 0;let t;const n=XO(e);return t=KD(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:KD(n,"EXT_disjoint_timer_query")?1:0,t}function KD(e,t){return null!=e.getExtension(t)}function XD(e){try{if(null!=XO(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function YD(e){if(0===e)return!1;const t=XO(e);if(1===e){if(!KD(t,"OES_texture_float"))return!1}else if(!KD(t,"EXT_color_buffer_float"))return!1;return QD(t)}function JD(e){if(0===e)return!1;const t=XO(e);if(1!==e){if(KD(t,"EXT_color_buffer_float"))return QD(t);const e="EXT_color_buffer_half_float";if(KD(t,e)){const n=t.getExtension(e);return function(e,t){const n=rD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!KD(t,"OES_texture_float"))return!1;if(!KD(t,"WEBGL_color_buffer_float"))return!1;return QD(t)}function QD(e){const t=rD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function eM(e){if(2!==e)return!1;return null!=XO(e).fenceSync}function tM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const nM=Ke();function rM(){let e,t,n,r,s,a,i,o,l,u;return 2===Ke().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Ke().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function sM(e,t,n="index"){const r=De(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function aM(e,t,n="index"){const r=De(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function iM(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function oM(e){const t=De(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}nM.registerFlag("HAS_WEBGL",(()=>nM.getNumber("WEBGL_VERSION")>0)),nM.registerFlag("WEBGL_VERSION",(()=>XD(2)?2:XD(1)?1:0)),nM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),nM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===nM.get("WEBGL_VERSION"))),nM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),nM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),nM.registerFlag("WEBGL_PACK",(()=>nM.getBool("HAS_WEBGL"))),nM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_CLIP",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_REDUCE",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_CONV_IM2COL",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>nM.getBool("WEBGL_PACK"))),nM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ZD(nM.getNumber("WEBGL_VERSION")))),nM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>HD(nM.getNumber("WEBGL_VERSION")))),nM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=nM.getNumber("WEBGL_VERSION");return 0===e?0:qD(e)})),nM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>nM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Va())),nM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>YD(nM.getNumber("WEBGL_VERSION")))),nM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!nM.getBool("WEBGL_FORCE_F16_TEXTURES")&&nM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),nM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>JD(nM.getNumber("WEBGL_VERSION")))),nM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>eM(nM.getNumber("WEBGL_VERSION")))),nM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>nM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),nM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),nM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Va()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),nM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),nM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),nM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),nM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),nM.registerFlag("WEBGL_EXP_CONV",(()=>!1)),nM.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>nM.getBool("IS_TEST"))),nM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),nM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),nM.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),nM.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const lM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:uM}=y;function cM(e,t,n){const r=[];if(e.forEach((e=>{const t=ue(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=wM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?hM(e,r):dM(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=uM(e.shapeInfo.logicalShape,t.logicalShape),l=vM(i),u=i-a;let c;const d=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let h="";h=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let p="return outputValue;";const f=1===ue(e.shapeInfo.logicalShape),m=ue(t.logicalShape),g=1===m;if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&he(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=vM(l),c=uM(e.shapeInfo.logicalShape,t.logicalShape),d=l-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=rM(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,d=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${pM}\n    ${fM}\n    ${mM}\n  `;return t}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return yM();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(he(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return yM();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(he(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${aM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=sM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${aM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=sM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=sM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=sM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=gM);return[d,l,c,s,u,a,n.userCode].join("\n")}function dM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=bM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${xM(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=bM(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&he(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=we(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${dM(kM(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${SM(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${xM(e)}\n      }\n    `;const u=a[0],c=a[1],d=bM(r);if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=we(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${dM(kM(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${SM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${xM(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=bM(r);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=we(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${dM(kM(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${SM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${xM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=bM(r);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=we(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${dM(kM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${SM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${xM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=bM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=we(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${dM(kM(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${SM(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${xM(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=bM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function hM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=rM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=rM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=rM();if(null!=a&&he(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${hM(kM(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${SM(a,r)});\n        }\n      `}const o=rM();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=rM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(a[i-1]/2);let h=d*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,h*=a[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const pM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function yM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function bM(e){return`offset${e}`}function xM(e){const t=e.name,n=ue(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function vM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function wM(e,t,n){const{newShape:r,keptDims:s}=we(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!he(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function kM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function SM(e,t){return t.map((t=>e[t])).join(", ")}function IM(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ke().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function NM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!he(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!he(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function CM(e){return Ke().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class TM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=YO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=rM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aM(["r","c","d"],e):sM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class $M{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=YO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=rM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?aM(["r","c","d"],e):sM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class EM{constructor(e){this.variableNames=["A"],this.outTexUsage=JO.DOWNLOAD;const t=rM();this.outputShape=e,this.userCode=`\n      ${lM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class RM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=JO.DOWNLOAD;const t=rM();this.outputShape=e,this.userCode=`\n      ${lM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const _M={R:0,G:1,B:2,A:3};class AM{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=rM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${_M[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class FM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=rM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function OM(e){const t=rM();return cD(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function DM(e){return yD(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function MM(e){return bD(e,new Uint16Array([0,1,2,2,1,3]))}function LM(e,t,n,r,s,a){wD(t,n);const i=vD(e),o=e.TEXTURE_2D;return sD(e,(()=>e.bindTexture(o,i))),sD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),sD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),sD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),sD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ke().getNumber("WEBGL_VERSION")?sD(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):sD(e,(()=>e.texStorage2D(o,1,r,t,n))),sD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function zM(e){return e.internalFormatFloat}function PM(e,t,n,r){const[s,a]=eD(t,n);return LM(e,s,a,zM(r),r.textureFormatFloat,e.FLOAT)}function BM(e){return e.internalFormatHalfFloat}function WM(e,t,n,r){const[s,a]=eD(t,n);return LM(e,s,a,BM(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function VM(e){return e.downloadTextureFormat}function UM(e,t,n,r){const[s,a]=eD(t,n);return LM(e,s,a,VM(r),e.RGBA,e.UNSIGNED_BYTE)}function ZM(e){return e.internalFormatPackedFloat}function GM(e,t,n,r){const[s,a]=nD(t,n);return LM(e,s,a,ZM(r),e.RGBA,e.FLOAT)}function jM(e){return e.internalFormatPackedHalfFloat}function HM(e,t,n,r){const[s,a]=nD(t,n);return LM(e,s,a,jM(r),e.RGBA,r.textureTypeHalfFloat)}function qM(e,t,n){sD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return SD(e,t,"clipSpacePos",n,3,20,0)&&SD(e,t,"uv",n,2,20,12)}function KM(e,t,n,r,s,a){let i,o,l;sD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===Ke().getNumber("WEBGL_VERSION")?sD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):sD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),sD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function XM(e,t,n){sD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ke().getNumber("WEBGL_VERSION")?sD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):sD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ke().getNumber("WEBGL_VERSION")?sD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):sD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),sD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function YM(e,t,n,r){const s=e.createBuffer();sD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return sD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),sD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),sD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function JM(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function QM(e,t,n,r){const[s,a]=eD(t,n),i=new Uint8Array(t*n*4);return sD(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function eL(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=nD(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function tL(e,t,n){const r=new Float32Array(t*n*4);return sD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class nL{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ke().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,KO(t,e)):this.gl=XO(t),e=this.gl,2===Ke().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>sD(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>sD(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>sD(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>sD(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>sD(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>sD(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>sD(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>sD(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ke().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=uD(this.gl,e),KD(this.gl,t))this.textureHalfFloatExtension=uD(this.gl,t);else if(Ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),KD(this.gl,r))this.colorBufferHalfFloatExtension=uD(this.gl,r);else if(Ke().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",KD(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!KD(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=DM(this.gl),this.indexBuffer=MM(this.gl),this.framebuffer=kD(this.gl),this.textureConfig=rD(this.gl,this.textureHalfFloatExtension)}get debug(){return Ke().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;sD(e,(()=>e.finish())),sD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sD(e,(()=>e.deleteFramebuffer(this.framebuffer))),sD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),sD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),sD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),PM(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),WM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),UM(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),XM(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),KM(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),HM(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),GM(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(_D(this.gl,this.framebuffer),this.outputTexture=null),sD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>QM(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return eL(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return JM(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=YM(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ke().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>tL(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=OM(t));const n=fD(t);sD(t,(()=>t.attachShader(n,this.vertexShader))),sD(t,(()=>t.attachShader(n,e))),mD(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gD(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;sD(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),qM(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(sD(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gD(this.gl,this.program),sD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?CD(this.gl,e,t):TD(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),sD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),$D(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=nD(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gD(this.gl,this.program),AD(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}sD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),sD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=uD(this.gl,2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await be((()=>this.disposed||this.isQueryAvailable(e,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ke().platform&&(n=Ke().platform.setTimeoutCustom.bind(Ke().platform)),be((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),RD(this.gl,e,this.framebuffer),this.debug&&AD(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(RD(this.gl,this.outputTexture,this.framebuffer),this.debug&&AD(this.gl)):_D(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;RD(r,e,this.framebuffer),this.debug&&AD(r),this.outputTexture=e,sD(r,(()=>r.viewport(0,0,t,n))),sD(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),sD(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:rL,bincountImpl:sL,bincountReduceImpl:aL,bitwiseAndImpl:iL,castImpl:oL,ceilImpl:lL,concatImpl:uL,equalImpl:cL,expImpl:dL,expm1Impl:hL,floorImpl:pL,gatherNdImpl:fL,gatherV2Impl:mL,greaterImpl:gL,greaterEqualImpl:yL,lessImpl:bL,lessEqualImpl:xL,linSpaceImpl:vL,logImpl:wL,maxImpl:kL,maximumImpl:SL,minimumImpl:IL,multiplyImpl:NL,negImpl:CL,notEqualImpl:TL,prodImpl:$L,raggedGatherImpl:EL,raggedRangeImpl:RL,raggedTensorToTensorImpl:_L,rangeImpl:AL,rsqrtImpl:FL,scatterImpl:OL,sigmoidImpl:DL,simpleAbsImpl:ML,sliceImpl:LL,sparseFillEmptyRowsImpl:zL,sparseReshapeImpl:PL,sparseSegmentReductionImpl:BL,sqrtImpl:WL,staticRegexReplaceImpl:VL,stridedSliceImpl:UL,stringNGramsImpl:ZL,stringSplitImpl:GL,stringToHashBucketFastImpl:jL,subImpl:HL,tileImpl:qL,topKImpl:KL,transposeImpl:XL,uniqueImpl:YL}=j;function JL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function QL(e,t){return 1===t?[e]:JL(e,t)}class ez{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=CM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=QL("rc",this.rank),t=vM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class tz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?iM(["r","c","d"],"inputShape"):sM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":oM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class nz{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=sz(t,n),s=az(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=rz(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===QO.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===QO.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===QO.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===QO.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===QO.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=sz(n,r),a=az(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=rz(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ke().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function rz(e,t,n,r,s){const a=function(e,t){switch(e){case QO.PACKED_2X2_FLOAT32:return ZM(t);case QO.PACKED_2X2_FLOAT16:return jM(t);case QO.UNPACKED_FLOAT32:return zM(t);case QO.UNPACKED_FLOAT16:return BM(t);case QO.PACKED_4X1_UNSIGNED_BYTE:return VM(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=nD(e[0],e[1]);i=t*n}else{const[t,n]=eD(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function sz(e,t){if(e===JO.UPLOAD)return QO.PACKED_2X2_FLOAT32;if(e===JO.RENDER||null==e)return function(e){return Ke().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?QO.PACKED_2X2_FLOAT32:QO.UNPACKED_FLOAT32:e?QO.PACKED_2X2_FLOAT16:QO.UNPACKED_FLOAT16}(t);if(e===JO.DOWNLOAD||e===JO.PIXELS)return QO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function az(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class iz{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const oz="if (isnan(x)) return x;",lz="return x;",uz="return abs(x);";const cz="return (x >= 0.0) ? x : (exp(x) - 1.0);",dz=oz+"\n  return (x < 0.0) ? 0.0 : x;\n",hz=oz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",pz="return x;",fz="return 1.0 / (1.0 + exp(-1.0 * x));",mz="return x;",gz="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",yz="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bz="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",xz="return 1.0 / (1.0 + exp(-1.0 * x));";class vz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class wz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);const t=e.length,n=QL("rc",t),r=vM(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const kz=ch,Sz={};const Iz=Ke().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Nz extends X{nextDataId(){return Nz.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ke().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof nL)t=e;else{const n=XO(Ke().getNumber("WEBGL_VERSION"),e);t=new nL(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=XO(Ke().getNumber("WEBGL_VERSION"));t=new nL(e),this.binaryCache=((n=Ke().getNumber("WEBGL_VERSION"))in Sz||(Sz[n]={}),Sz[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nz(this.gpgpu),this.numMBBeforeWarning=null==Ke().global.screen?1024:Ke().global.screen.height*Ke().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new K(this,li())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=zD(t),u=new AM(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Ke().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ke().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:JO.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(Ke().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:JO.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new vz(i,pz):new iz(i,pz);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=Ks()),"complex64"===r){c=km(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Ks()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new vz(r,pz):new iz(r,pz);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ke().getBool("DEBUG")&&!Ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ke().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Ke().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...tD(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=km(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ue(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;sD(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&li().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new vz(s,pz):new iz(s,pz);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=li().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:c},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Js(e)));return $o(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $o(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!oD(n)){if(Ke().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ue(t);if(Ke().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...tD(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Ke().getBool("WEBGL_PACK")&&!0===r,i=a?zD(t):t,o=a?new RM(i):new EM(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ea(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ea(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=re(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ks(),endMs:null}}endTimer(e){return Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ks(),e)}async getQueryTime(e){if(Ke().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Iz){return Ke().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ue(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){xs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return kz(e.shape,t)}packedUnaryOp(e,t,n){const r=new vz(e.shape,t),s=this.compileAndRun(r,[e],n);return li().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ML(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uz,e.dtype);const t=new iz(e.shape,uz),n=this.compileAndRun(t,[e]);return li().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Ys(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new wz(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ez(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[MD(e.shape),...LD(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[MD(t),...LD(t)],a=new tz(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){ie(ue(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=zD(s);let o;o=r?new $M(i):new TM(i);const l=[null!=t?t:tD(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===YO.DENSE){const t=null!=a?a:tD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ue(i.shape))return o.values=ke(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ue(t.shape)<=Ke().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!WD(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=wM(e.packedInputs,t.shape,a);let u="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=De(o);d=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,p=2===o.length&&he(t.shape,a),f=1===ue(t.shape),m=Yl(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&he(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${h}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${d}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Ke().getNumber("WEBGL_VERSION")}`,a}(e,u,c),h=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=cM(s,i,t),l=dD(e.gl,o),u=e.createProgram(l);return Ke().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},IM(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Ke().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(NM(t.inShapeInfos,n),NM([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ke().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=wM(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(ue(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=De(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,h,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ke().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ks();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ke().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ke().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=di((()=>{if(!Ke().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ke().getBool("DEBUG");Ke().set("DEBUG",!1);const t=this.abs(vu(1e-8)).dataSync()[0];if(Ke().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ks());let c=t.texShape;if(null==c&&(c=PD(n,o),t.texShape=c),null!=s){const e=zD(n);let a,i=c[1],d=c[0];const h=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&h||([i,d]=nD(c[0],c[1])),a=o?new FM(e,h):new AM(e,h);const p=h?[d,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=h?JO.PIXELS:JO.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,d,s);const g=[[d,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ke().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ks()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Te(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Jf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw pD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=IM(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=li().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return li().makeTensorFromDataId(l,t,n,o)}}Nz.nextDataId=0;const Cz="4.16.0";function Tz(){Ke().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ua()&&wi("webgl",(()=>new Nz),2);const $z={forceHalfFloat:Tz},Ez="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Rz{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ql(t,n),this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const _z="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Az{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ql(t,n);const s=this.outputShape.length;this.enableShapeUniforms=CM(s);let a="";if(r)if(0===s||1===ue(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${vM(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=QL("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Fz(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Oz={kernelName:yn,backendName:"webgl",kernelFunc:Fz};function Dz(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=Fz({inputs:{x:r},backend:n}),l=Fz({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const Mz={kernelName:Tt,backendName:"webgl",kernelFunc:Dz},Lz="return (a < 0.) ? b * a : a;",zz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Pz={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Hs(a,"float32")),o=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Az(zz,s.shape,i.shape):new Rz(Lz,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},Bz="return (a < 0.) ? b * a : a;",Wz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Vz={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Az(Wz,r.shape,s.shape):new Rz(Bz,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},Uz="if (isnan(x)) return x;";function Zz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new vz(i.shape,t):new iz(i.shape,e),o.runWebGLProgram(u,[i],l)}}function Gz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new Rz(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],Na(n.dtype,r.dtype))})),a=Dz({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const d=a||Na(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?ng(e):e,r="string"===l.dtype?ng(t):t,[a,i]=s(l.shape,u.shape,n,r,d),o=c.makeTensorInfo(i,d);return c.texData.get(o.dataId).values=a,o}let h;return h=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Az(t,l.shape,u.shape,n):new Rz(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],d)}}function jz(e,t=!1){if("linear"===e)return t?mz:lz;if("relu"===e)return t?yz:dz;if("elu"===e)return t?gz:cz;if("relu6"===e)return t?bz:hz;if("prelu"===e)return t?Wz:Bz;if("leakyrelu"===e)return t?zz:Lz;if("sigmoid"===e)return t?xz:fz;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Hz{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=CM(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const qz={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Kz{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ql(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Xz="return a * b;";function Yz(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Na(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Kz(qz.REAL,r.shape,s.shape),i=new Kz(qz.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=Dz({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=NL(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Az(Xz,r.shape,s.shape):new Rz(Xz,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const Jz={kernelName:Yn,backendName:"webgl",kernelFunc:Yz};function Qz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=ue(s.shape),l=xe(a,o),u=ue(l);ie(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||WD(s.shape,l)||null!==c.texture&&WD(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[MD(e.shape),...LD(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[MD(t),...LD(t)],i=new tz(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const eP={kernelName:br,backendName:"webgl",kernelFunc:Qz};class tP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${pe(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class nP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function rP(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=om(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,d;c="mean"===n?0===i?new tP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new tP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new nP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=a,a=r.runWebGLProgram(c,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}class sP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=vM(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class aP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=vM(this.rank),s=JL("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function iP(e,t,n){const r=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aP(e.shape,t):new sP(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function oP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=ve(s,e.shape);let o=i;const l=fu(o,a),u=null!=l;let c=e;u&&(c=iP(e,l,r),o=gu(o.length,a)),pu("sum",o,a);const[d,h]=du(c.shape,o);let p=d;n&&(p=hu(d,i));const f=ue(h),m=Qz({inputs:{x:c},attrs:{shape:[ue(e.shape)/f,f]},backend:r}),g=rP(m,Ca(e.dtype),"sum",r),y=Qz({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const lP={kernelName:Pr,backendName:"webgl",kernelFunc:oP};function uP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=XL(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype);i.texData.get(u.dataId).values=t}else u=iP(s,a,i);return u}const cP={kernelName:os,backendName:"webgl",kernelFunc:uP},dP=1e3;function hP({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],h=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ue(m),b=ue(g),x=Ql(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);ie(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,d,p]:[y,p,d],w=r?[b,f,h]:[b,h,f],k=Qz({inputs:{x:e},backend:s,attrs:{shape:v}}),S=Qz({inputs:{x:t},backend:s,attrs:{shape:w}}),I=[k,S],N=Math.max(y,b),C=n?k.shape[1]:k.shape[2],T=null!=a,$=null!=i,E="leakyrelu"===l,R=null!=l?jz(l,!0):null;let _;if((1===p||1===f)&&C>dP&&!1===(T||$||E||null!=R)){let e=k,t=S;n&&(e=uP({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=uP({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===f;let i=e;1!==f&&(i=Qz({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),I.push(i));const o=1===f?2:1;let l=t;a&&(l=Qz({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),I.push(l));const u=Yz({inputs:{a:i,b:l},backend:s});_=oP({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=Na(e.dtype,t.dtype),u=new Hz(v,w,[N,p,f],n,r,T,R,$,E),c=[k,S];if(null!=a&&c.push(a),$&&c.push(i),E){const e=s.makeTensorInfo([],"float32",Hs(o,"float32"));c.push(e),I.push(e)}_=s.runWebGLProgram(u,c,l)}const A=Qz({inputs:{x:_},backend:s,attrs:{shape:x}});I.push(_);for(const e of I)s.disposeIntermediateTensorInfo(e);return A}const pP={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return hP({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},fP="return abs(x);";const mP={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ML(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new vz(r.shape,fP):new iz(r.shape,fP),n.runWebGLProgram(s,[r],r.dtype)}},gP=Zz({opSnippet:oz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),yP={kernelName:tt,backendName:"webgl",kernelFunc:gP},bP=Zz({opSnippet:oz+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),xP={kernelName:nt,backendName:"webgl",kernelFunc:bP},vP="return a + b;",wP=Gz({opSnippet:vP,packedOpSnippet:vP,supportsComplex:!0,cpuKernelImpl:rL}),kP={kernelName:rt,backendName:"webgl",kernelFunc:wP};class SP{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class IP{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const NP={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Fz({inputs:{x:s[0]},backend:r});if(s.length>Ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Na(e,t))),i=s.map((e=>e.shape)),o=Ke().getBool("WEBGL_PACK")?new IP(s[0].shape,i):new SP(s[0].shape,i);return r.runWebGLProgram(o,s,a)}};const CP={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ve(a,s.shape);let u=l;const c=fu(u,o);let d=s;null!=c&&(d=uP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=gu(u.length,o)),pu("all",u,o);const[h,p]=du(d.shape,u),f=Qz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=rP(f,f.dtype,"all",n);let g;if(i){g=Qz({inputs:{x:m},backend:n,attrs:{shape:hu(h,l)}})}else g=Qz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};const TP={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ve(a,s.shape);let u=l;const c=fu(u,o);let d=s;null!=c&&(d=uP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=gu(u.length,o)),pu("any",u,o);const[h,p]=du(d.shape,u),f=Qz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=rP(f,f.dtype,"any",n);let g;if(i){g=Qz({inputs:{x:m},backend:n,attrs:{shape:hu(h,l)}})}else g=Qz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};class $P{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class EP{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=vM(o),u=QL("coords",o);let c,d;if(1===a){d=o+1;const e=vM(d);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else d=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=QL("sourceLocR",d-1).concat("inIdx.r"),g=QL("sourceLocG",d-1).concat("inIdx.g"),y=QL("sourceLocB",d-1).concat("inIdx.b"),b=QL("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function RP(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=om(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new $P(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const d=RP(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function _P(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=om(s[s.length-1]),i=new EP(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=_P(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function AP(e,t,n,r){const s=[n];if(pu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ke().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=du(i.shape,s),u=ue(l),c=Qz({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const d=RP(e,c,r);n.push(d);const h=Qz({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return _P(e,t,r)}const FP={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ve(a,s.shape);const o=fu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=uP({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=gu(i.length,l.shape.length)),pu("argMax",[i[0]],l.shape.length);const c=AP(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const OP={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ve(a,s.shape);const o=fu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=uP({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=gu(i.length,l.shape.length)),pu("argMin",[i[0]],l.shape.length);const c=AP(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},DP=Zz({opSnippet:oz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),MP={kernelName:ut,backendName:"webgl",kernelFunc:DP},LP=Zz({opSnippet:oz+"return log(x + sqrt(x * x + 1.0));"}),zP={kernelName:ct,backendName:"webgl",kernelFunc:LP},PP=Zz({opSnippet:oz+"\n  return atan(x);\n"}),BP={kernelName:dt,backendName:"webgl",kernelFunc:PP},WP=Gz({opSnippet:Ez+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+_z+"\n  return result;\n"}),VP={kernelName:pt,backendName:"webgl",kernelFunc:WP},UP=Zz({opSnippet:oz+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),ZP={kernelName:ht,backendName:"webgl",kernelFunc:UP};class GP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class jP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const HP={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;tM(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Xo(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))return Fz({inputs:{x:s},backend:n});const c=new GP(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const qP={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Yo(s.shape,a,i,[1,1,1],o,l,u),d=new jP(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};class KP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,d=Yo(i.shape,o,l,[1,1,1],u,c),h=new XP(d);return n.runWebGLProgram(h,[s],i.dtype)}};const JP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;tM([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Xo(i.shape,o,l,1,u),d=new KP(c);return n.runWebGLProgram(d,[s],i.dtype)}};const QP={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return hP({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class eB{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ql(e,t),Ql(e,n);let i="0.0";null!=r&&(Ql(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ql(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class tB{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ql(e,t),Ql(e,n);let i="vec4(0.0)";null!=r&&(Ql(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ql(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const nB={kernelName:hn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ie(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));const h=Ke().getBool("WEBGL_PACK_NORMALIZATION")?new tB(r.shape,s.shape,a.shape,c,d,l):new eB(r.shape,s.shape,a.shape,c,d,l);return t.runWebGLProgram(h,u,u[0].dtype)}};class rB{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=vM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return sB.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${sB[t]} = start[${t}] + coords.${sB[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const sB=["x","y","z","w","u","v"];class aB{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=vM(this.rank),n=QL("coords",this.rank),r=QL("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function iB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Gf(s,a,i);if(_f(s,o,l),0===ue(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=LL(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Uf(s.shape,o,l);if(u||!c){const e=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aB(l):new rB(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Zf(t,De(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const oB={kernelName:Ar,backendName:"webgl",kernelFunc:iB},lB={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ie(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=um(s.shape,a,o),u=cm(l.length,a.length),c=dm(s.shape,a,o),d=hm(i,a.length),h=pm(c,i,a.length),p=[],f=Qz({inputs:{x:s},backend:n,attrs:{shape:l}}),m=uP({inputs:{x:f},backend:n,attrs:{perm:u}}),g=Qz({inputs:{x:m},backend:n,attrs:{shape:c}}),y=iB({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const uB={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=sL(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}};const cB={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Ke().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=iL(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new Az("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new Rz("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}};const dB={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=Ql(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hB=Gz({opSnippet:"return float(a != b);",cpuKernelImpl:TL,dtype:"bool"}),pB={kernelName:Qn,backendName:"webgl",kernelFunc:hB};function fB(e){const{inputs:t,backend:n}=e,{input:r}=t;return Fz({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const mB={kernelName:mr,backendName:"webgl",kernelFunc:fB},gB="return float(int(x));";const yB={kernelName:It,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return Fz({inputs:{x:a},backend:r});const t=bc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=Dz({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=fB({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Ce(a.dtype,i)){const e=Fz({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=oL(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new iz(e.shape,gB),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ke("bool",1)),t=hB({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},bB="return ceil(x);",xB=Zz({opSnippet:bB,packedOpSnippet:bB,cpuKernelImpl:lL}),vB={kernelName:Nt,backendName:"webgl",kernelFunc:xB};class wB{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class kB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const SB={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Ke().getBool("WEBGL_PACK_CLIP")?new kB(s.shape):new wB(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class IB{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function NB(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const CB={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new IB(r.shape),i=[NB(r,s.complexTensorInfos.real),NB(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class TB{constructor(e){this.outputShape=[],this.outputShape=em(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class $B{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=em(e,t);const n=this.outputShape,r=n.length,s=vM(r),a=QL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let d=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${EB(i,l,t)}),\n            vec2(${EB(u,l,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${EB(i,l,p)}),\n          vec2(${EB(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function EB(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function RB(e){const{inputs:t,backend:n}=e,{input:r}=t;return Fz({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const _B={kernelName:xn,backendName:"webgl",kernelFunc:RB};function AB(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>fB({inputs:{input:e},backend:n}))),s=e.map((e=>RB({inputs:{input:e},backend:n}))),a=AB(r,t,n),i=AB(s,t,n),o=Dz({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=ue(e.shape.slice(t));return Qz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=em(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=uL(a,i,r,o),u=em(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>ue(e.shape)>0)),i=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new iz(e[0].shape,pz):new vz(e[0].shape,pz);return n.runWebGLProgram(t,e,r)}const o=Ke().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(AB(s,t,n))}const r=AB(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new $B(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=em(e.map((e=>e.shape)),t),s=e.map((e=>Qz({inputs:{x:e},attrs:{shape:[-1,ue(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(a,t,n),c=new TB(l.map((e=>e.shape))),d=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=Qz({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),h}function FB(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ve(s,t[0].shape)[0];Qf(t.map((e=>e.shape)),a);const i=em(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));return 1===o.length?Fz({inputs:{x:o[0]},backend:n}):AB(o,a,n)}const OB={kernelName:Et,backendName:"webgl",kernelFunc:FB};class DB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class MB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CM(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?te(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let h="",p="";n&&(h=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class zB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);const{dataFormat:n}=t,r=rM(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function PB(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function BB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=PB(a.shape,p);null!=e&&(a=Qz({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=PB(s.shape,p);null!=e&&(s=Qz({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(!((1===d||1===h)&&c>dP)&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&he(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ie(WD(u.shape,d.shape),(()=>`packed reshape ${u.shape} to ${d.shape} isn't free`));const p=Qz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=hP({a:d,b:p,backend:r,transposeA:false,transposeB:false,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(g.dataId);ie(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=h,y.shape=n.outShape,f=Fz({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=Qz({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=Qz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=hP({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:false,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=Qz({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(d)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function WB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=h*d,y=[n.batchSize,m,g],b=[];if(null!=a){const e=PB(a.shape,f);null!=e&&(a=Qz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=PB(s.shape,f);null!=e&&(s=Qz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=Qz({inputs:{x:t},backend:r,attrs:{shape:[1,m,ue(t.shape)/m]}});b.push(x);const v=new zB(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),S=Qz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(S);const I=null!=s,N=null!=a,C="leakyrelu"===o,T=o?jz(o,!0):null,$=new Hz(f?S.shape:x.shape,f?x.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,I,T,N,C),E=f?[S,x]:[x,S];if(s&&E.push(s),N&&E.push(a),C){const e=r.makeTensorInfo([],"float32",Hs(i,"float32"));E.push(e),b.push(e)}const R=r.runWebGLProgram($,E,"float32"),_=Qz({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});b.push(R);for(const e of b)r.disposeIntermediateTensorInfo(e);return _}const VB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,d=ll(l),h=Jo(s.shape,a.shape,i,u,o,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===d&&Ke().getBool("WEBGL_EXP_CONV")){const e=new LB(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Ke().getBool("WEBGL_CONV_IM2COL"))p=WB({x:s,filter:a,convInfo:h,backend:n});else{const e=new DB(h);p=n.runWebGLProgram(e,[s,a],"float32")}else p=BB({x:s,filter:a,convInfo:h,backend:n});const f=Qz({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class UB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const HB={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,d=ll(l),h=Jo(s.shape,c,i,1,o,u,!1,d),p=new UB(h);return n.runWebGLProgram(p,[s,a],"float32")}};class qB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=CM(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const KB={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=ll(u),h=Jo(i,a.shape,o,1,l,c,!1,d);if(Ke().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[h.strideHeight,h.strideWidth]],t=new qB(h);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new ZB(h);return n.runWebGLProgram(e,[s,a],"float32")}}};const XB={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Qo(s.shape,a.shape,i,l,o),c=new MB(u);return n.runWebGLProgram(c,[s,a],"float32")}};const YB={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Qo(s.shape,l,i,1,o),c=new GB(u);return n.runWebGLProgram(c,[s,a],"float32")}};const JB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Qo(l,a.shape,o,1,i),c=new jB(u);return n.runWebGLProgram(c,[s,a],"float32")}},QB=Zz({opSnippet:Uz+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${_z}\n  return result;\n`}),eW={kernelName:Mt,backendName:"webgl",kernelFunc:QB},tW=Zz({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),nW={kernelName:Lt,backendName:"webgl",kernelFunc:tW};class rW{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const sW={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new rW(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var aW;!function(e){e.Prod="*",e.Sum="+"}(aW||(aW={}));class iW{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===aW.Prod?"1.0":"0.0",i=n?a:`getX(${oW(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${vM(s)} coords = getOutputCoords();\n        int end = ${lW(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${lW(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${oW(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function oW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function lW(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function uW(e,t,n,r,s,a){const i=t.shape.length,o=fu([r],i);let l=t;null!=o&&(l=uP({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=gu(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let d=Fz({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new iW(e,l.shape,!1,a),s=[[t]],i=d;d=n.runWebGLProgram(r,[d],d.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new iW(e,l.shape,s,a),r=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=uP({inputs:{x:d},backend:n,attrs:{perm:mu(o)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}const cW={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return uW(aW.Prod,s,n,a,i,o)}};const dW={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return uW(aW.Sum,s,n,a,i,o)}};const hW={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=sL(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=aL(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class pW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const fW={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),d=new pW("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(d,[s],s.dtype)}};class mW{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CM(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class gW{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CM(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?te(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const yW={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),ie(il(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=Jo(s.shape,a.shape,i,c,o,u,!0);let h;h=Ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new gW(d):new mW(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[s,a],"float32",p)}};class bW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xW{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vW={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,d=Jo(s.shape,c,i,o,l,u,!0),h=new bW(d);return n.runWebGLProgram(h,[s,a],"float32")}};const wW={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,d=Jo(c,a.shape,i,o,l,u,!0),h=new xW(d);return n.runWebGLProgram(h,[s,a],"float32")}};class kW{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const SW={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=ue(r.shape),i=Qz({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new kW(a),l=n.runWebGLProgram(o,[i],i.dtype),u=Qz({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class IW{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const NW={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Ko(s.shape,a.shape,i,o,"NHWC",l);let c;const d=new IW(u);c=n.runWebGLProgram(d,[s,a],"float32");const h=Qz({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),h}};const CW={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Om(s,a.length);Mm(i.length,l,a);const{path:u,steps:c}=Lm(o,l),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Dm(p,l[t]);let s;zm(e)?s=a[t]:(s=uP({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);he(s.shape,i)||(s=Qz({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===h?h=s:(h=Yz({inputs:{a:s,b:h},backend:n}),f.push(h))}e<d-1&&(u[e]>=0&&(h=oP({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},TW=Zz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),$W={kernelName:Qt,backendName:"webgl",kernelFunc:TW},EW={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Ke().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Az("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Rz("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},RW=Gz({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:cL}),_W={kernelName:nn,backendName:"webgl",kernelFunc:RW},AW=Zz({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${gm};\n  float a1 = ${ym};\n  float a2 = ${bm};\n  float a3 = ${xm};\n  float a4 = ${vm};\n  float a5 = ${wm};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),FW={kernelName:tn,backendName:"webgl",kernelFunc:AW},OW=Zz({opSnippet:Uz+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:dL,dtype:"float32"}),DW={kernelName:rn,backendName:"webgl",kernelFunc:OW};function MW(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(ie(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Qz({inputs:{x:a},backend:r,attrs:{shape:o}})}const LW={kernelName:sn,backendName:"webgl",kernelFunc:MW},zW="return exp(x) - 1.0;",PW=Zz({opSnippet:zW,packedOpSnippet:zW,cpuKernelImpl:hL}),BW={kernelName:an,backendName:"webgl",kernelFunc:PW};class WW{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function VW(e,t,n){const r=n.texData.get(e.dataId),s=ue(e.shape),a=e.shape[e.shape.length-1],i=Qz({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new WW("real",o,t),u=new WW("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,c,"float32"),h=n.runWebGLProgram(u,c,"float32"),p=Dz({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=Qz({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const UW={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return VW(r,!1,n)}};class ZW{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function GW(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ae(s),"string"===a){const e=Se(a,ue(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new ZW(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const jW={kernelName:ln,backendName:"webgl",kernelFunc:GW};class HW{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qW={kernelName:un,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new HW(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},KW="return floor(x);",XW=Zz({opSnippet:KW,packedOpSnippet:KW,cpuKernelImpl:pL}),YW={kernelName:cn,backendName:"webgl",kernelFunc:XW},JW=Gz({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),QW={kernelName:dn,backendName:"webgl",kernelFunc:JW};class eV{constructor(e){this.variableNames=["A"];const t=rM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class tV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=rM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const nV={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],d=[u,l,a];if(o||i){const e=Ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=rV&&e===sV||(sV=e,rV=document.createElement("canvas").getContext("2d",{willReadFrequently:sV})),rV.canvas.width=l,rV.canvas.height=u,rV.drawImage(s,0,0,l,u),s=rV.canvas}const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=JO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),s);const p=Ke().getBool("WEBGL_PACK")?new tV(d):new eV(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let rV,sV=Ke().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const aV={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=ll(c),g=Jo(s.shape,a.shape,l,d,u,h,!1,m);let y;const b=[],x=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Qz({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Hs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Ke().getBool("WEBGL_EXP_CONV")){const e=p?jz(p,!0):null,t=new LB(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Ke().getBool("WEBGL_CONV_IM2COL"))y=WB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?jz(p,!1):null,t=new DB(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=BB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const S=Qz({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const iV={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ie(il(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Jo(s.shape,a.shape,l,m,u,d,!0),y=Ke().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=h?jz(h,y):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===h;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Hs(p,"float32"));x.push(e),f.push(e)}let S;S=y?new gW(g,v,b,w,k):new mW(g,v,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(S,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class oV{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=vM(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const lV={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=ue(r.shape),[l,u,c,d]=$f(r,s),h=Qz({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=Qz({inputs:{x:r},backend:n,attrs:{shape:[ue(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=fL(e,t,r.dtype,u,i,c,d,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new oV(i,d,[u,c],r.shape),m=n.runWebGLProgram(f,[p,h],p.dtype),g=Qz({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class uV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=vM(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function cV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=ve(i,s.shape)[0];if(Ke().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];ie(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=tg(s,a,l,o),c=ue(a.shape),d=[],h=Qz({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Qz({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=mL(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new uV(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=Qz({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const dV={kernelName:pn,backendName:"webgl",kernelFunc:cV},hV=Gz({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gL,dtype:"bool"}),pV={kernelName:mn,backendName:"webgl",kernelFunc:hV},fV=Gz({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:yL}),mV={kernelName:gn,backendName:"webgl",kernelFunc:fV};const gV={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return VW(r,!0,n)}},yV=Zz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),bV={kernelName:vn,backendName:"webgl",kernelFunc:yV},xV=Zz({opSnippet:"return float(isinf(x));",dtype:"bool"}),vV={kernelName:wn,backendName:"webgl",kernelFunc:xV},wV=Zz({opSnippet:"return float(isnan(x));",dtype:"bool"}),kV={kernelName:kn,backendName:"webgl",kernelFunc:wV},SV=Gz({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bL,dtype:"bool"}),IV={kernelName:In,backendName:"webgl",kernelFunc:SV},NV=Gz({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:xL,dtype:"bool"}),CV={kernelName:Nn,backendName:"webgl",kernelFunc:NV};const TV={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=vL(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},$V=Zz({opSnippet:Uz+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:wL}),EV={kernelName:Tn,backendName:"webgl",kernelFunc:$V},RV=Zz({opSnippet:Uz+"\n  return log(1.0 + x);\n"}),_V={kernelName:$n,backendName:"webgl",kernelFunc:RV},AV=Gz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),FV={kernelName:En,backendName:"webgl",kernelFunc:AV},OV=Zz({opSnippet:"return float(!(x >= 1.0));"}),DV={kernelName:Rn,backendName:"webgl",kernelFunc:OV},MV=Gz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),LV={kernelName:_n,backendName:"webgl",kernelFunc:MV};class zV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class PV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const BV={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=Ke().getBool("WEBGL_PACK_NORMALIZATION")?new PV(s.shape,a,i,o,l):new zV(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class WV{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const VV={kernelName:Mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,d=new WV(s.shape,o,l,u,c);return n.runWebGLProgram(d,[s,a,i],s.dtype)}};function UV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=ve(a,s.shape);let u=l;const c=fu(u,o),d=null!=c,h=n.shouldExecuteOnCPU([s]);let p=s;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=XL(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype);n.texData.get(p.dataId).values=r}else p=iP(s,c,n);u=gu(u.length,o)}pu("max",u,o);const[f,m]=du(p.shape,u);let g,y=f;if(i&&(y=hu(f,l)),h){const e=n.texData.get(p.dataId).values,t=kL(e,ue(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ue(t),a=Qz({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),i=rP(a,e.dtype,"max",r),o=Qz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const ZV={kernelName:zn,backendName:"webgl",kernelFunc:UV},GV=Gz({opSnippet:Ez+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+_z+"\n  return result;\n",cpuKernelImpl:SL}),jV={kernelName:Pn,backendName:"webgl",kernelFunc:GV};const HV={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;tM(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ie(il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Xo(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&he(u.inShape,u.outShape))return Fz({inputs:{x:s},backend:n});const c=new GP(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const qV={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Yo(s.shape,a,i,[1,1,1],o,u,l),d=new jP(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};class KV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XV{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YV={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,d=Yo(i.shape,o,l,[1,1,1],u,c),h=new jP(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new XV(d),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const JV={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;tM([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,h=Xo(o.shape,l,u,1,c,d),p=new GP(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new KV(h),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const QV={kernelName:Zn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;ie(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];ie(il(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Xo(r.shape,s,a,u,i),[d,h]=function(e,t,n,r){let s=new GP(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new GP(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[d,h]}};const eU={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=ve(a,r.shape);let u=l;const c=fu(u,o),d=null!=c,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=XL(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=iP(r,c,i);p.push(f),u=gu(u.length,o)}pu("sum",u,o);const[m,g]=du(f.shape,u);let y=m;s&&(y=hu(m,l));const b=function(e,t,n,r){const s=ue(t),a=Qz({inputs:{x:e},attrs:{shape:[ue(e.shape)/s,s]},backend:r}),i=rP(a,"float32","mean",r),o=Qz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}};const tU={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ve(a,s.shape);let u=l;const c=fu(u,o);let d=s;null!=c&&(d=uP({inputs:{x:s},backend:n,attrs:{perm:c}}),u=gu(u.length,s.shape.length)),pu("min",u,o);const[h,p]=du(d.shape,u),f=Qz({inputs:{x:d},backend:n,attrs:{shape:[-1,ue(p)]}}),m=rP(f,f.dtype,"min",n);let g;if(i){g=Qz({inputs:{x:m},backend:n,attrs:{shape:hu(h,l)}})}else g=Qz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},nU=Gz({opSnippet:Ez+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+_z+"\n  return result;\n",cpuKernelImpl:IL}),rU={kernelName:Hn,backendName:"webgl",kernelFunc:nU};class sU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=vM(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class aU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=vM(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=QL("rc",r),l=QL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const iU={kernelName:qn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aU(r.shape,s,a):new sU(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},oU=Gz({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+_z+"\n  return result;\n"}),lU={kernelName:Kn,backendName:"webgl",kernelFunc:oU};class uU{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const cU=Gz({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),dU={kernelName:Yt,backendName:"webgl",kernelFunc:cU},hU="return a - b;",pU=Gz({opSnippet:hU,packedOpSnippet:hU,supportsComplex:!0,cpuKernelImpl:HL}),fU={kernelName:ts,backendName:"webgl",kernelFunc:pU};function mU(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=ve([a],s.shape),o=UV({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=hu(o.shape,i),u=Qz({inputs:{x:o},backend:n,attrs:{shape:l}}),c=pU({inputs:{a:s,b:u},backend:n}),d=OW({inputs:{x:c},backend:n}),h=oP({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=Qz({inputs:{x:h},backend:n,attrs:{shape:l}}),f=cU({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const gU={kernelName:Vr,backendName:"webgl",kernelFunc:mU};const yU={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:mU({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new uU(u,c,a),h=[[i]],p=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),p}},bU=oz+"\n  return -x;\n";const xU={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=CL(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Ke().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new vz(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new iz(r.shape,bU),n.runWebGLProgram(s,[r],r.dtype)}},vU=Gh;const wU={kernelName:er,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:d}=vU(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},kU=jh;const SU={kernelName:tr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=kU(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},IU=Hh;const NU={kernelName:nr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),d=n.readSync(a.dataId),h=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=IU(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class CU{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const TU={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=ue(s.shape),c=new CU(u,i,o,l),d=Qz({inputs:{x:s},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(c,[d],a);n.disposeIntermediateTensorInfo(d);const p=Qz({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),p}};function $U(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=fB({inputs:{input:r},backend:n}),t=$U({inputs:{x:e},backend:n}),s=RB({inputs:{input:r},backend:n}),a=$U({inputs:{x:s},backend:n}),i=Dz({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return GW({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const EU={kernelName:hs,backendName:"webgl",kernelFunc:$U};const RU={kernelName:rr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=fB({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=RB({inputs:{input:s},backend:r}),i=$U({inputs:{x:a},backend:r}),o=Dz({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return GW({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const _U={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return MW({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=FB({inputs:t.map((e=>{const t=MW({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class AU{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=vM(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class FU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=vM(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=QL("rc",r),l=QL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const OU=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===ue(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return GW({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FU(s.shape,a,i):new AU(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},DU={kernelName:ir,backendName:"webgl",kernelFunc:OU},MU=Gz({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+_z+"\n  return result;\n"}),LU={kernelName:lr,backendName:"webgl",kernelFunc:MU};const zU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=ve(a,s.shape);let c=u;const d=fu(c,o);let h,p=s;if(null!=d&&(p=uP({inputs:{x:s},backend:n,attrs:{perm:d}}),c=gu(c.length,o),l.push(p)),pu("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=$L(p.shape,p.dtype,e,c);h=n.makeTensorInfo(r,s,t)}else{const[e,t]=du(p.shape,c),r=ue(t),a=Qz({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=rP(a,Ca(s.dtype),"prod",n);h=Qz({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(h);const e=hu(h.shape,u);h=Qz({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const PU={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),d=n.readSync(i.dataId),[h,p,f]=EL(l,u,c,a.shape,a.dtype,d,i.shape,o),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const BU={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=RL(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const WU={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=_L(u,s.shape,c,a.shape,a.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,a.dtype,m)}},VU=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=AL(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},UU={kernelName:fr,backendName:"webgl",kernelFunc:VU},ZU=Zz({opSnippet:"return 1.0 / x;"}),GU={kernelName:gr,backendName:"webgl",kernelFunc:ZU},jU=Zz({opSnippet:oz+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),HU={kernelName:yr,backendName:"webgl",kernelFunc:jU},qU=Zz({opSnippet:oz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),KU={kernelName:Sr,backendName:"webgl",kernelFunc:qU};class XU{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class YU{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const JU={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YU(s.shape,l,u,a,i):new XU(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class QU{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const eZ={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new QU(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class tZ{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class nZ{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const rZ={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Ke().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nZ(s.shape,l,u,a,i):new tZ(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class sZ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const aZ={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new sZ(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class iZ{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=vM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class oZ{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=QL("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=vM(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const lZ={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=ve(a,s.shape);if(0===i)return Fz({inputs:{x:s},backend:n});const l=Ke().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oZ(s.shape,o):new iZ(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class uZ{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const cZ={kernelName:ms,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new uZ(r.shape,a),[u,c]=lm(i,r.shape[1],r.shape[2]),d=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,d)}},dZ=Zz({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),hZ={kernelName:Nr,backendName:"webgl",kernelFunc:dZ},pZ=Zz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:FL}),fZ={kernelName:Cr,backendName:"webgl",kernelFunc:pZ};class mZ{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=vM(s.length),u=vM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class gZ{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=vM(s.length),u=vM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const yZ={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=th(0,s,i),h=[d/u,u];if(0===d)return n.makeTensorInfo(i,s.dtype);const p=Qz({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=Qz({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Ke().getBool("WEBGL_PACK")?new gZ(l,o,p.shape.length,f.shape.length,c,h):new mZ(l,o,p.shape.length,f.shape.length,c,h);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=Qz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class bZ{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Ke().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const xZ={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new bZ(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class vZ{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=vM(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const wZ={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new vZ(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Na(s.dtype,a.dtype))}},kZ=Zz({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${fm};\n  float scale = ${mm};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),SZ={kernelName:_r,backendName:"webgl",kernelFunc:kZ},IZ=Zz({opSnippet:Uz+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:DL}),NZ={kernelName:Mr,backendName:"webgl",kernelFunc:IZ},CZ=Zz({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),TZ={kernelName:Dr,backendName:"webgl",kernelFunc:CZ},$Z=Zz({opSnippet:Uz+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${_z}\n  return result;\n`}),EZ={kernelName:Fr,backendName:"webgl",kernelFunc:$Z},RZ=Zz({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),_Z={kernelName:Or,backendName:"webgl",kernelFunc:RZ},AZ=Zz({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),FZ={kernelName:Lr,backendName:"webgl",kernelFunc:AZ},OZ={kernelName:Br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ie(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=OU({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=um(c.shape,a,o,!1),h=cm(d.length,a.length,!1),p=dm(c.shape,a,o,!1),f=Qz({inputs:{x:c},backend:n,attrs:{shape:d}}),m=uP({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Qz({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const DZ={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=zL(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const MZ={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,d]=PL(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}};const LZ={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=BL(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const zZ={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=BL(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const PZ={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=th(0,s,o);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Js(n.readSync(i.dataId)[0]),p=OL(e,t,o,h,c,u,l,d,r,false);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new mZ(u,l,s.shape.length,a.shape.length,d,[h,1],false),f=n.runWebGLProgram(p,[a,s,i],a.dtype),m=Qz({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const BZ={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ve(i,s.shape)[0],l=Bm(s,a,o),u=s.shape.length,c=new Array(u).fill(0),d=s.shape.slice();return l.map((e=>{const t=[...d];t[o]=e;const r=iB({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},WZ="return sqrt(x);",VZ=Zz({opSnippet:WZ,packedOpSnippet:WZ,cpuKernelImpl:WL}),UZ={kernelName:zr,backendName:"webgl",kernelFunc:VZ},ZZ=Zz({opSnippet:"return x * x;"}),GZ={kernelName:Kr,backendName:"webgl",kernelFunc:ZZ},jZ="return (a - b) * (a - b);",HZ=Gz({opSnippet:jZ,packedOpSnippet:jZ}),qZ={kernelName:qr,backendName:"webgl",kernelFunc:HZ};const KZ={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=ng(n.readSync(s.dataId)),i=VL(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}};const XZ={kernelName:ps,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=oz+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new iz(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class YZ{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=vM(n.length),a=vM(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const JZ={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=jf(s.shape,a,i,o,l,u,c,d,h);let w;if(m)w=Qz({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ff(b,x,v),t=iB({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=Qz({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=$o(s.shape,s.dtype,e),r=UL(p,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new YZ(b,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=Qz({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const QZ={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=ZL(h,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const eG={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=GL(o,l,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const tG={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=jL(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},nG=Zz({opSnippet:"return tan(x);"}),rG={kernelName:ns,backendName:"webgl",kernelFunc:nG},sG=Zz({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),aG={kernelName:rs,backendName:"webgl",kernelFunc:sG};const iG={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=th(0,a,s.shape),h=[d/u,u];if(0===d)return n.makeTensorInfo(s.shape,a.dtype);const p=Qz({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=Qz({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=Qz({inputs:{x:s},backend:n,attrs:{shape:h}}),g=new mZ(l,o,p.shape.length,f.shape.length,c,h,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=Qz({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class oG{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=vM(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function lG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Js(e))):e,r=$o(s.shape,s.dtype,t),i=qL(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new oG(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const uG={kernelName:ss,backendName:"webgl",kernelFunc:lG};class cG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class dG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function hG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function pG(e){let t=1;for(;t<e;)t*=2;return t}const fG={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Ke().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ke().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=KL(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,GW({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(s.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(s):s,f=ue(u)/c,m=Qz({inputs:{x:p},attrs:{shape:[f,c]},backend:n});h&&hG(n,p);const g=pG(a),y=pG(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const s=x(),a=new cG(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),hG(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new dG([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),hG(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=iB({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),hG(n,w);let k=cV({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});hG(n,m);const S=u.slice(0,-1);S.push(a),w=b,b=Qz({inputs:{x:b},attrs:{shape:S},backend:n}),hG(n,w);const I=k;return k=Qz({inputs:{x:k},attrs:{shape:S},backend:n}),hG(n,I),[k,b]}};class mG{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const gG={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,h,p]=s.shape,[f,m]=null!=u?u:[d,h],g=new mG(d,h,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}};const yG={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;tM(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=YL(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const bG={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){h[a]=e;const t=iB({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=Qz({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class xG{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const vG={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=fu([u],o);let d=s;null!=c&&(d=uP({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(d),u=gu(1,o)[0]);const h=eg(d.shape,u,i),p=ue([d.shape[u]]),f=Qz({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ca(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Qm(o,a),c=new xG({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),d=n.compileAndRun(c,[e,r],s);if(l.push(d),d.shape[1]===a)return d;const h=VU({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=lG({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});l.push(h),l.push(p);return g(d,t,p,s,a)},y=Qz({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){l.push(y);const e=mu(c);b=uP({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},wG=[pP,mP,yP,xP,kP,NP,CP,TP,FP,OP,MP,zP,BP,VP,ZP,HP,qP,YP,JP,QP,nB,lB,uB,cB,dB,yB,vB,SB,Mz,CB,OB,VB,HB,KB,XB,YB,JB,eW,nW,sW,cW,dW,hW,fW,yW,vW,wW,SW,NW,CW,$W,EW,_W,FW,DW,LW,BW,UW,jW,qW,YW,QW,nV,aV,iV,lV,dV,pV,mV,Oz,gV,_B,bV,vV,kV,Pz,IV,CV,TV,EV,_V,FV,DV,LV,BV,VV,ZV,jV,HV,qV,YV,JV,QV,eU,tU,rU,iU,lU,yU,Jz,xU,wU,SU,NU,pB,TU,RU,_U,DU,LU,Vz,zU,PU,BU,WU,UU,mB,dU,GU,HU,KU,eP,JU,eZ,rZ,aZ,lZ,cZ,hZ,fZ,yZ,xZ,wZ,SZ,NZ,TZ,EZ,_Z,oB,gU,FZ,OZ,DZ,MZ,LZ,zZ,PZ,BZ,UZ,GZ,qZ,KZ,XZ,JZ,QZ,eG,tG,fU,lP,rG,aG,iG,uG,fG,gG,cP,yG,bG,vG,EU];for(const e of wG)Cs(e);const kG={"tfjs-core":qf,"tfjs-backend-cpu":WR,"tfjs-backend-webgl":Cz,"tfjs-data":d$,"tfjs-layers":Hv,"tfjs-converter":eT,tfjs:"4.16.0"}},11358:(e,t,n)=>{"use strict";function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}n.d(t,{Z:()=>s});const s=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},81690:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%h|0,e/h|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+l),n);if(l<8){var h=o(u(n,l));a=a.mul(h).add(o(d))}else a=(a=a.mul(s)).add(o(d))}return a.unsigned=t,a}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,h+=(p+=s+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*h)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+s*h+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(s);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),a=a.add(h),s=s.sub(p)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},20499:(e,t,n)=>{"use strict";n.d(t,{uT:()=>x,W3:()=>$});var r=n(76805),s=n(8339),a=n(84067);n(3827);function i(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}var o=n(43001),l=n(14347);const u=!1;const c=o.createContext(null);var d=function(e){return e.scrollTop},h="unmounted",p="exited",f="entering",m="entered",g="exiting",y=function(e){function t(t,n){var r;r=e.call(this,t,n)||this;var s,a=n&&!n.isMounting?t.enter:t.appear;return r.appearStatus=null,t.in?a?(s=p,r.appearStatus=f):s=m:s=t.unmountOnExit||t.mountOnEnter?h:p,r.state={status:s},r.nextCallback=null,r}(0,a.Z)(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&t.status===h?{status:p}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==f&&n!==m&&(t=f):n!==f&&n!==m||(t=g)}this.updateStatus(!1,t)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var e,t,n,r=this.props.timeout;return e=t=n=r,null!=r&&"number"!=typeof r&&(e=r.exit,t=r.enter,n=void 0!==r.appear?r.appear:t),{exit:e,enter:t,appear:n}},n.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t)if(this.cancelNextCallback(),t===f){if(this.props.unmountOnExit||this.props.mountOnEnter){var n=this.props.nodeRef?this.props.nodeRef.current:l.findDOMNode(this);n&&d(n)}this.performEnter(e)}else this.performExit();else this.props.unmountOnExit&&this.state.status===p&&this.setState({status:h})},n.performEnter=function(e){var t=this,n=this.props.enter,r=this.context?this.context.isMounting:e,s=this.props.nodeRef?[r]:[l.findDOMNode(this),r],a=s[0],i=s[1],o=this.getTimeouts(),c=r?o.appear:o.enter;!e&&!n||u?this.safeSetState({status:m},(function(){t.props.onEntered(a)})):(this.props.onEnter(a,i),this.safeSetState({status:f},(function(){t.props.onEntering(a,i),t.onTransitionEnd(c,(function(){t.safeSetState({status:m},(function(){t.props.onEntered(a,i)}))}))})))},n.performExit=function(){var e=this,t=this.props.exit,n=this.getTimeouts(),r=this.props.nodeRef?void 0:l.findDOMNode(this);t&&!u?(this.props.onExit(r),this.safeSetState({status:g},(function(){e.props.onExiting(r),e.onTransitionEnd(n.exit,(function(){e.safeSetState({status:p},(function(){e.props.onExited(r)}))}))}))):this.safeSetState({status:p},(function(){e.props.onExited(r)}))},n.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},n.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},n.onTransitionEnd=function(e,t){this.setNextCallback(t);var n=this.props.nodeRef?this.props.nodeRef.current:l.findDOMNode(this),r=null==e&&!this.props.addEndListener;if(n&&!r){if(this.props.addEndListener){var s=this.props.nodeRef?[this.nextCallback]:[n,this.nextCallback],a=s[0],i=s[1];this.props.addEndListener(a,i)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},n.render=function(){var e=this.state.status;if(e===h)return null;var t=this.props,n=t.children,r=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,(0,s.Z)(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return o.createElement(c.Provider,{value:null},"function"==typeof n?n(e,r):o.cloneElement(o.Children.only(n),r))},t}(o.Component);function b(){}y.contextType=c,y.propTypes={},y.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:b,onEntering:b,onEntered:b,onExit:b,onExiting:b,onExited:b},y.UNMOUNTED=h,y.EXITED=p,y.ENTERING=f,y.ENTERED=m,y.EXITING=g;const x=y;var v=function(e,t){return e&&t&&t.split(" ").forEach((function(t){return r=t,void((n=e).classList?n.classList.remove(r):"string"==typeof n.className?n.className=i(n.className,r):n.setAttribute("class",i(n.className&&n.className.baseVal||"",r)));var n,r}))},w=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).appliedClasses={appear:{},enter:{},exit:{}},t.onEnter=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1];t.removeClasses(s,"exit"),t.addClass(s,a?"appear":"enter","base"),t.props.onEnter&&t.props.onEnter(e,n)},t.onEntering=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1]?"appear":"enter";t.addClass(s,a,"active"),t.props.onEntering&&t.props.onEntering(e,n)},t.onEntered=function(e,n){var r=t.resolveArguments(e,n),s=r[0],a=r[1]?"appear":"enter";t.removeClasses(s,a),t.addClass(s,a,"done"),t.props.onEntered&&t.props.onEntered(e,n)},t.onExit=function(e){var n=t.resolveArguments(e)[0];t.removeClasses(n,"appear"),t.removeClasses(n,"enter"),t.addClass(n,"exit","base"),t.props.onExit&&t.props.onExit(e)},t.onExiting=function(e){var n=t.resolveArguments(e)[0];t.addClass(n,"exit","active"),t.props.onExiting&&t.props.onExiting(e)},t.onExited=function(e){var n=t.resolveArguments(e)[0];t.removeClasses(n,"exit"),t.addClass(n,"exit","done"),t.props.onExited&&t.props.onExited(e)},t.resolveArguments=function(e,n){return t.props.nodeRef?[t.props.nodeRef.current,e]:[e,n]},t.getClassNames=function(e){var n=t.props.classNames,r="string"==typeof n,s=r?""+(r&&n?n+"-":"")+e:n[e];return{baseClassName:s,activeClassName:r?s+"-active":n[e+"Active"],doneClassName:r?s+"-done":n[e+"Done"]}},t}(0,a.Z)(t,e);var n=t.prototype;return n.addClass=function(e,t,n){var r=this.getClassNames(t)[n+"ClassName"],s=this.getClassNames("enter").doneClassName;"appear"===t&&"done"===n&&s&&(r+=" "+s),"active"===n&&e&&d(e),r&&(this.appliedClasses[t][n]=r,function(e,t){e&&t&&t.split(" ").forEach((function(t){return r=t,void((n=e).classList?n.classList.add(r):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(n,r)||("string"==typeof n.className?n.className=n.className+" "+r:n.setAttribute("class",(n.className&&n.className.baseVal||"")+" "+r)));var n,r}))}(e,r))},n.removeClasses=function(e,t){var n=this.appliedClasses[t],r=n.base,s=n.active,a=n.done;this.appliedClasses[t]={},r&&v(e,r),s&&v(e,s),a&&v(e,a)},n.render=function(){var e=this.props,t=(e.classNames,(0,s.Z)(e,["classNames"]));return o.createElement(x,(0,r.Z)({},t,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))},t}(o.Component);w.defaultProps={classNames:""},w.propTypes={};var k=n(80107);function S(e,t){var n=Object.create(null);return e&&o.Children.map(e,(function(e){return e})).forEach((function(e){n[e.key]=function(e){return t&&(0,o.isValidElement)(e)?t(e):e}(e)})),n}function I(e,t,n){return null!=n[t]?n[t]:e.props[t]}function N(e,t,n){var r=S(e.children),s=function(e,t){function n(n){return n in t?t[n]:e[n]}e=e||{},t=t||{};var r,s=Object.create(null),a=[];for(var i in e)i in t?a.length&&(s[i]=a,a=[]):a.push(i);var o={};for(var l in t){if(s[l])for(r=0;r<s[l].length;r++){var u=s[l][r];o[s[l][r]]=n(u)}o[l]=n(l)}for(r=0;r<a.length;r++)o[a[r]]=n(a[r]);return o}(t,r);return Object.keys(s).forEach((function(a){var i=s[a];if((0,o.isValidElement)(i)){var l=a in t,u=a in r,c=t[a],d=(0,o.isValidElement)(c)&&!c.props.in;!u||l&&!d?u||!l||d?u&&l&&(0,o.isValidElement)(c)&&(s[a]=(0,o.cloneElement)(i,{onExited:n.bind(null,i),in:c.props.in,exit:I(i,"exit",e),enter:I(i,"enter",e)})):s[a]=(0,o.cloneElement)(i,{in:!1}):s[a]=(0,o.cloneElement)(i,{onExited:n.bind(null,i),in:!0,exit:I(i,"exit",e),enter:I(i,"enter",e)})}})),s}var C=Object.values||function(e){return Object.keys(e).map((function(t){return e[t]}))},T=function(e){function t(t,n){var r,s=(r=e.call(this,t,n)||this).handleExited.bind((0,k.Z)(r));return r.state={contextValue:{isMounting:!0},handleExited:s,firstRender:!0},r}(0,a.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.mounted=!0,this.setState({contextValue:{isMounting:!1}})},n.componentWillUnmount=function(){this.mounted=!1},t.getDerivedStateFromProps=function(e,t){var n,r,s=t.children,a=t.handleExited;return{children:t.firstRender?(n=e,r=a,S(n.children,(function(e){return(0,o.cloneElement)(e,{onExited:r.bind(null,e),in:!0,appear:I(e,"appear",n),enter:I(e,"enter",n),exit:I(e,"exit",n)})}))):N(e,s,a),firstRender:!1}},n.handleExited=function(e,t){var n=S(this.props.children);e.key in n||(e.props.onExited&&e.props.onExited(t),this.mounted&&this.setState((function(t){var n=(0,r.Z)({},t.children);return delete n[e.key],{children:n}})))},n.render=function(){var e=this.props,t=e.component,n=e.childFactory,r=(0,s.Z)(e,["component","childFactory"]),a=this.state.contextValue,i=C(this.state.children).map(n);return delete r.appear,delete r.enter,delete r.exit,null===t?o.createElement(c.Provider,{value:a},i):o.createElement(c.Provider,{value:a},o.createElement(t,r,i))},t}(o.Component);T.propTypes={},T.defaultProps={component:"div",childFactory:function(e){return e}};const $=T;var E=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).handleEnter=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEnter",0,n)},t.handleEntering=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEntering",0,n)},t.handleEntered=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onEntered",0,n)},t.handleExit=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExit",1,n)},t.handleExiting=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExiting",1,n)},t.handleExited=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.handleLifecycle("onExited",1,n)},t}(0,a.Z)(t,e);var n=t.prototype;return n.handleLifecycle=function(e,t,n){var r,s=this.props.children,a=o.Children.toArray(s)[t];if(a.props[e]&&(r=a.props)[e].apply(r,n),this.props[e]){var i=a.props.nodeRef?void 0:l.findDOMNode(this);this.props[e](i)}},n.render=function(){var e=this.props,t=e.children,n=e.in,r=(0,s.Z)(e,["children","in"]),a=o.Children.toArray(t),i=a[0],l=a[1];return delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,o.createElement($,r,n?o.cloneElement(i,{key:"first",onEnter:this.handleEnter,onEntering:this.handleEntering,onEntered:this.handleEntered}):o.cloneElement(l,{key:"second",onEnter:this.handleExit,onEntering:this.handleExiting,onEntered:this.handleExited}))},t}(o.Component);E.propTypes={};var R,_;var A="out-in",F="in-out",O=function(e,t,n){return function(){var r;e.props[t]&&(r=e.props)[t].apply(r,arguments),n()}},D=((R={})[A]=function(e){var t=e.current,n=e.changeState;return o.cloneElement(t,{in:!1,onExited:O(t,"onExited",(function(){n(f,null)}))})},R[F]=function(e){var t=e.current,n=e.changeState,r=e.children;return[t,o.cloneElement(r,{in:!0,onEntered:O(r,"onEntered",(function(){n(f)}))})]},R),M=((_={})[A]=function(e){var t=e.children,n=e.changeState;return o.cloneElement(t,{in:!0,onEntered:O(t,"onEntered",(function(){n(m,o.cloneElement(t,{in:!0}))}))})},_[F]=function(e){var t=e.current,n=e.children,r=e.changeState;return[o.cloneElement(t,{in:!1,onExited:O(t,"onExited",(function(){r(m,o.cloneElement(n,{in:!0}))}))}),o.cloneElement(n,{in:!0})]},_),L=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).state={status:m,current:null},t.appeared=!1,t.changeState=function(e,n){void 0===n&&(n=t.state.current),t.setState({status:e,current:n})},t}(0,a.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.appeared=!0},t.getDerivedStateFromProps=function(e,t){return null==e.children?{current:null}:t.status===f&&e.mode===F?{status:f}:!t.current||(n=t.current,r=e.children,n===r||o.isValidElement(n)&&o.isValidElement(r)&&null!=n.key&&n.key===r.key)?{current:o.cloneElement(e.children,{in:!0})}:{status:g};var n,r},n.render=function(){var e,t=this.props,n=t.children,r=t.mode,s=this.state,a=s.status,i=s.current,l={children:n,current:i,changeState:this.changeState,status:a};switch(a){case f:e=M[r](l);break;case g:e=D[r](l);break;case m:e=i}return o.createElement(c.Provider,{value:{isMounting:!this.appeared}},e)},t}(o.Component);L.propTypes={},L.defaultProps={mode:A}},95013:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>yn});function r(e){let t=e.length;for(;--t>=0;)e[t]=0}const s=256,a=286,i=30,o=15,l=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),u=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),c=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),d=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),h=new Array(576);r(h);const p=new Array(60);r(p);const f=new Array(512);r(f);const m=new Array(256);r(m);const g=new Array(29);r(g);const y=new Array(i);function b(e,t,n,r,s){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=s,this.has_stree=e&&e.length}let x,v,w;function k(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}r(y);const S=e=>e<256?f[e]:f[256+(e>>>7)],I=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},N=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,I(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},C=(e,t,n)=>{N(e,n[2*t],n[2*t+1])},T=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},$=(e,t,n)=>{const r=new Array(16);let s,a,i=0;for(s=1;s<=o;s++)i=i+n[s-1]<<1,r[s]=i;for(a=0;a<=t;a++){let t=e[2*a+1];0!==t&&(e[2*a]=T(r[t]++,t))}},E=e=>{let t;for(t=0;t<a;t++)e.dyn_ltree[2*t]=0;for(t=0;t<i;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},R=e=>{e.bi_valid>8?I(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},_=(e,t,n,r)=>{const s=2*t,a=2*n;return e[s]<e[a]||e[s]===e[a]&&r[t]<=r[n]},A=(e,t,n)=>{const r=e.heap[n];let s=n<<1;for(;s<=e.heap_len&&(s<e.heap_len&&_(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!_(t,r,e.heap[s],e.depth));)e.heap[n]=e.heap[s],n=s,s<<=1;e.heap[n]=r},F=(e,t,n)=>{let r,a,i,o,c=0;if(0!==e.sym_next)do{r=255&e.pending_buf[e.sym_buf+c++],r+=(255&e.pending_buf[e.sym_buf+c++])<<8,a=e.pending_buf[e.sym_buf+c++],0===r?C(e,a,t):(i=m[a],C(e,i+s+1,t),o=l[i],0!==o&&(a-=g[i],N(e,a,o)),r--,i=S(r),C(e,i,n),o=u[i],0!==o&&(r-=y[i],N(e,r,o)))}while(c<e.sym_next);C(e,256,t)},O=(e,t)=>{const n=t.dyn_tree,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,a=t.stat_desc.elems;let i,l,u,c=-1;for(e.heap_len=0,e.heap_max=573,i=0;i<a;i++)0!==n[2*i]?(e.heap[++e.heap_len]=c=i,e.depth[i]=0):n[2*i+1]=0;for(;e.heap_len<2;)u=e.heap[++e.heap_len]=c<2?++c:0,n[2*u]=1,e.depth[u]=0,e.opt_len--,s&&(e.static_len-=r[2*u+1]);for(t.max_code=c,i=e.heap_len>>1;i>=1;i--)A(e,n,i);u=a;do{i=e.heap[1],e.heap[1]=e.heap[e.heap_len--],A(e,n,1),l=e.heap[1],e.heap[--e.heap_max]=i,e.heap[--e.heap_max]=l,n[2*u]=n[2*i]+n[2*l],e.depth[u]=(e.depth[i]>=e.depth[l]?e.depth[i]:e.depth[l])+1,n[2*i+1]=n[2*l+1]=u,e.heap[1]=u++,A(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,r=t.max_code,s=t.stat_desc.static_tree,a=t.stat_desc.has_stree,i=t.stat_desc.extra_bits,l=t.stat_desc.extra_base,u=t.stat_desc.max_length;let c,d,h,p,f,m,g=0;for(p=0;p<=o;p++)e.bl_count[p]=0;for(n[2*e.heap[e.heap_max]+1]=0,c=e.heap_max+1;c<573;c++)d=e.heap[c],p=n[2*n[2*d+1]+1]+1,p>u&&(p=u,g++),n[2*d+1]=p,d>r||(e.bl_count[p]++,f=0,d>=l&&(f=i[d-l]),m=n[2*d],e.opt_len+=m*(p+f),a&&(e.static_len+=m*(s[2*d+1]+f)));if(0!==g){do{for(p=u-1;0===e.bl_count[p];)p--;e.bl_count[p]--,e.bl_count[p+1]+=2,e.bl_count[u]--,g-=2}while(g>0);for(p=u;0!==p;p--)for(d=e.bl_count[p];0!==d;)h=e.heap[--c],h>r||(n[2*h+1]!==p&&(e.opt_len+=(p-n[2*h+1])*n[2*h],n[2*h+1]=p),d--)}})(e,t),$(n,c,e.bl_count)},D=(e,t,n)=>{let r,s,a=-1,i=t[1],o=0,l=7,u=4;for(0===i&&(l=138,u=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)s=i,i=t[2*(r+1)+1],++o<l&&s===i||(o<u?e.bl_tree[2*s]+=o:0!==s?(s!==a&&e.bl_tree[2*s]++,e.bl_tree[32]++):o<=10?e.bl_tree[34]++:e.bl_tree[36]++,o=0,a=s,0===i?(l=138,u=3):s===i?(l=6,u=3):(l=7,u=4))},M=(e,t,n)=>{let r,s,a=-1,i=t[1],o=0,l=7,u=4;for(0===i&&(l=138,u=3),r=0;r<=n;r++)if(s=i,i=t[2*(r+1)+1],!(++o<l&&s===i)){if(o<u)do{C(e,s,e.bl_tree)}while(0!=--o);else 0!==s?(s!==a&&(C(e,s,e.bl_tree),o--),C(e,16,e.bl_tree),N(e,o-3,2)):o<=10?(C(e,17,e.bl_tree),N(e,o-3,3)):(C(e,18,e.bl_tree),N(e,o-11,7));o=0,a=s,0===i?(l=138,u=3):s===i?(l=6,u=3):(l=7,u=4)}};let L=!1;const z=(e,t,n,r)=>{N(e,0+(r?1:0),3),R(e),I(e,n),I(e,~n),n&&e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n};var P=(e,t,n,r)=>{let a,i,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<s;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),O(e,e.l_desc),O(e,e.d_desc),o=(e=>{let t;for(D(e,e.dyn_ltree,e.l_desc.max_code),D(e,e.dyn_dtree,e.d_desc.max_code),O(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*d[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),a=e.opt_len+3+7>>>3,i=e.static_len+3+7>>>3,i<=a&&(a=i)):a=i=n+5,n+4<=a&&-1!==t?z(e,t,n,r):4===e.strategy||i===a?(N(e,2+(r?1:0),3),F(e,h,p)):(N(e,4+(r?1:0),3),((e,t,n,r)=>{let s;for(N(e,t-257,5),N(e,n-1,5),N(e,r-4,4),s=0;s<r;s++)N(e,e.bl_tree[2*d[s]+1],3);M(e,e.dyn_ltree,t-1),M(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),F(e,e.dyn_ltree,e.dyn_dtree)),E(e),r&&R(e)},B={_tr_init:e=>{L||((()=>{let e,t,n,r,s;const d=new Array(16);for(n=0,r=0;r<28;r++)for(g[r]=n,e=0;e<1<<l[r];e++)m[n++]=r;for(m[n-1]=r,s=0,r=0;r<16;r++)for(y[r]=s,e=0;e<1<<u[r];e++)f[s++]=r;for(s>>=7;r<i;r++)for(y[r]=s<<7,e=0;e<1<<u[r]-7;e++)f[256+s++]=r;for(t=0;t<=o;t++)d[t]=0;for(e=0;e<=143;)h[2*e+1]=8,e++,d[8]++;for(;e<=255;)h[2*e+1]=9,e++,d[9]++;for(;e<=279;)h[2*e+1]=7,e++,d[7]++;for(;e<=287;)h[2*e+1]=8,e++,d[8]++;for($(h,287,d),e=0;e<i;e++)p[2*e+1]=5,p[2*e]=T(e,5);x=new b(h,l,257,a,o),v=new b(p,u,0,i,o),w=new b(new Array(0),c,0,19,7)})(),L=!0),e.l_desc=new k(e.dyn_ltree,x),e.d_desc=new k(e.dyn_dtree,v),e.bl_desc=new k(e.bl_tree,w),e.bi_buf=0,e.bi_valid=0,E(e)},_tr_stored_block:z,_tr_flush_block:P,_tr_tally:(e,t,n)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=n,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(m[n]+s+1)]++,e.dyn_dtree[2*S(t)]++),e.sym_next===e.sym_end),_tr_align:e=>{N(e,2,3),C(e,256,h),(e=>{16===e.bi_valid?(I(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var W=(e,t,n,r)=>{let s=65535&e|0,a=e>>>16&65535|0,i=0;for(;0!==n;){i=n>2e3?2e3:n,n-=i;do{s=s+t[r++]|0,a=a+s|0}while(--i);s%=65521,a%=65521}return s|a<<16|0};const V=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var U=(e,t,n,r)=>{const s=V,a=r+n;e^=-1;for(let n=r;n<a;n++)e=e>>>8^s[255&(e^t[n])];return-1^e},Z={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},G={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:j,_tr_stored_block:H,_tr_flush_block:q,_tr_tally:K,_tr_align:X}=B,{Z_NO_FLUSH:Y,Z_PARTIAL_FLUSH:J,Z_FULL_FLUSH:Q,Z_FINISH:ee,Z_BLOCK:te,Z_OK:ne,Z_STREAM_END:re,Z_STREAM_ERROR:se,Z_DATA_ERROR:ae,Z_BUF_ERROR:ie,Z_DEFAULT_COMPRESSION:oe,Z_FILTERED:le,Z_HUFFMAN_ONLY:ue,Z_RLE:ce,Z_FIXED:de,Z_DEFAULT_STRATEGY:he,Z_UNKNOWN:pe,Z_DEFLATED:fe}=G,me=258,ge=262,ye=42,be=113,xe=666,ve=(e,t)=>(e.msg=Z[t],t),we=e=>2*e-(e>4?9:0),ke=e=>{let t=e.length;for(;--t>=0;)e[t]=0},Se=e=>{let t,n,r,s=e.w_size;t=e.hash_size,r=t;do{n=e.head[--r],e.head[r]=n>=s?n-s:0}while(--t);t=s,r=t;do{n=e.prev[--r],e.prev[r]=n>=s?n-s:0}while(--t)};let Ie=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const Ne=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},Ce=(e,t)=>{q(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Ne(e.strm)},Te=(e,t)=>{e.pending_buf[e.pending++]=t},$e=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Ee=(e,t,n,r)=>{let s=e.avail_in;return s>r&&(s=r),0===s?0:(e.avail_in-=s,t.set(e.input.subarray(e.next_in,e.next_in+s),n),1===e.state.wrap?e.adler=W(e.adler,t,s,n):2===e.state.wrap&&(e.adler=U(e.adler,t,s,n)),e.next_in+=s,e.total_in+=s,s)},Re=(e,t)=>{let n,r,s=e.max_chain_length,a=e.strstart,i=e.prev_length,o=e.nice_match;const l=e.strstart>e.w_size-ge?e.strstart-(e.w_size-ge):0,u=e.window,c=e.w_mask,d=e.prev,h=e.strstart+me;let p=u[a+i-1],f=u[a+i];e.prev_length>=e.good_match&&(s>>=2),o>e.lookahead&&(o=e.lookahead);do{if(n=t,u[n+i]===f&&u[n+i-1]===p&&u[n]===u[a]&&u[++n]===u[a+1]){a+=2,n++;do{}while(u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&a<h);if(r=me-(h-a),a=h-me,r>i){if(e.match_start=t,i=r,r>=o)break;p=u[a+i-1],f=u[a+i]}}}while((t=d[t&c])>l&&0!=--s);return i<=e.lookahead?i:e.lookahead},_e=e=>{const t=e.w_size;let n,r,s;do{if(r=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-ge)&&(e.window.set(e.window.subarray(t,t+t-r),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),Se(e),r+=t),0===e.strm.avail_in)break;if(n=Ee(e.strm,e.window,e.strstart+e.lookahead,r),e.lookahead+=n,e.lookahead+e.insert>=3)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=Ie(e,e.ins_h,e.window[s+1]);e.insert&&(e.ins_h=Ie(e,e.ins_h,e.window[s+3-1]),e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<ge&&0!==e.strm.avail_in)},Ae=(e,t)=>{let n,r,s,a=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,i=0,o=e.strm.avail_in;do{if(n=65535,s=e.bi_valid+42>>3,e.strm.avail_out<s)break;if(s=e.strm.avail_out-s,r=e.strstart-e.block_start,n>r+e.strm.avail_in&&(n=r+e.strm.avail_in),n>s&&(n=s),n<a&&(0===n&&t!==ee||t===Y||n!==r+e.strm.avail_in))break;i=t===ee&&n===r+e.strm.avail_in?1:0,H(e,0,0,i),e.pending_buf[e.pending-4]=n,e.pending_buf[e.pending-3]=n>>8,e.pending_buf[e.pending-2]=~n,e.pending_buf[e.pending-1]=~n>>8,Ne(e.strm),r&&(r>n&&(r=n),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+r),e.strm.next_out),e.strm.next_out+=r,e.strm.avail_out-=r,e.strm.total_out+=r,e.block_start+=r,n-=r),n&&(Ee(e.strm,e.strm.output,e.strm.next_out,n),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n)}while(0===i);return o-=e.strm.avail_in,o&&(o>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=o&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-o,e.strm.next_in),e.strstart),e.strstart+=o,e.insert+=o>e.w_size-e.insert?e.w_size-e.insert:o),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),i?4:t!==Y&&t!==ee&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(s=e.window_size-e.strstart,e.strm.avail_in>s&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,s+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),s>e.strm.avail_in&&(s=e.strm.avail_in),s&&(Ee(e.strm,e.window,e.strstart,s),e.strstart+=s,e.insert+=s>e.w_size-e.insert?e.w_size-e.insert:s),e.high_water<e.strstart&&(e.high_water=e.strstart),s=e.bi_valid+42>>3,s=e.pending_buf_size-s>65535?65535:e.pending_buf_size-s,a=s>e.w_size?e.w_size:s,r=e.strstart-e.block_start,(r>=a||(r||t===ee)&&t!==Y&&0===e.strm.avail_in&&r<=s)&&(n=r>s?s:r,i=t===ee&&0===e.strm.avail_in&&n===r?1:0,H(e,e.block_start,n,i),e.block_start+=n,Ne(e.strm)),i?3:1)},Fe=(e,t)=>{let n,r;for(;;){if(e.lookahead<ge){if(_e(e),e.lookahead<ge&&t===Y)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-ge&&(e.match_length=Re(e,n)),e.match_length>=3)if(r=K(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+1]);else r=K(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Ce(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===ee?(Ce(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Ce(e,!1),0===e.strm.avail_out)?1:2},Oe=(e,t)=>{let n,r,s;for(;;){if(e.lookahead<ge){if(_e(e),e.lookahead<ge&&t===Y)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-ge&&(e.match_length=Re(e,n),e.match_length<=5&&(e.strategy===le||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-3,r=K(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=s&&(e.ins_h=Ie(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(Ce(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(r=K(e,0,e.window[e.strstart-1]),r&&Ce(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=K(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===ee?(Ce(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Ce(e,!1),0===e.strm.avail_out)?1:2};function De(e,t,n,r,s){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=s}const Me=[new De(0,0,0,0,Ae),new De(4,4,8,4,Fe),new De(4,5,16,8,Fe),new De(4,6,32,32,Fe),new De(4,4,16,16,Oe),new De(8,16,32,32,Oe),new De(8,16,128,128,Oe),new De(8,32,128,256,Oe),new De(32,128,258,1024,Oe),new De(32,258,258,4096,Oe)];function Le(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=fe,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),ke(this.dyn_ltree),ke(this.dyn_dtree),ke(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),ke(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),ke(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const ze=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==ye&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==be&&t.status!==xe?1:0},Pe=e=>{if(ze(e))return ve(e,se);e.total_in=e.total_out=0,e.data_type=pe;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?ye:be,e.adler=2===t.wrap?0:1,t.last_flush=-2,j(t),ne},Be=e=>{const t=Pe(e);var n;return t===ne&&((n=e.state).window_size=2*n.w_size,ke(n.head),n.max_lazy_match=Me[n.level].max_lazy,n.good_match=Me[n.level].good_length,n.nice_match=Me[n.level].nice_length,n.max_chain_length=Me[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},We=(e,t,n,r,s,a)=>{if(!e)return se;let i=1;if(t===oe&&(t=6),r<0?(i=0,r=-r):r>15&&(i=2,r-=16),s<1||s>9||n!==fe||r<8||r>15||t<0||t>9||a<0||a>de||8===r&&1!==i)return ve(e,se);8===r&&(r=9);const o=new Le;return e.state=o,o.strm=e,o.status=ye,o.wrap=i,o.gzhead=null,o.w_bits=r,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=s+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<s+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=t,o.strategy=a,o.method=n,Be(e)};var Ve={deflateInit:(e,t)=>We(e,t,fe,15,8,he),deflateInit2:We,deflateReset:Be,deflateResetKeep:Pe,deflateSetHeader:(e,t)=>ze(e)||2!==e.state.wrap?se:(e.state.gzhead=t,ne),deflate:(e,t)=>{if(ze(e)||t>te||t<0)return e?ve(e,se):se;const n=e.state;if(!e.output||0!==e.avail_in&&!e.input||n.status===xe&&t!==ee)return ve(e,0===e.avail_out?ie:se);const r=n.last_flush;if(n.last_flush=t,0!==n.pending){if(Ne(e),0===e.avail_out)return n.last_flush=-1,ne}else if(0===e.avail_in&&we(t)<=we(r)&&t!==ee)return ve(e,ie);if(n.status===xe&&0!==e.avail_in)return ve(e,ie);if(n.status===ye&&0===n.wrap&&(n.status=be),n.status===ye){let t=fe+(n.w_bits-8<<4)<<8,r=-1;if(r=n.strategy>=ue||n.level<2?0:n.level<6?1:6===n.level?2:3,t|=r<<6,0!==n.strstart&&(t|=32),t+=31-t%31,$e(n,t),0!==n.strstart&&($e(n,e.adler>>>16),$e(n,65535&e.adler)),e.adler=1,n.status=be,Ne(e),0!==n.pending)return n.last_flush=-1,ne}if(57===n.status)if(e.adler=0,Te(n,31),Te(n,139),Te(n,8),n.gzhead)Te(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),Te(n,255&n.gzhead.time),Te(n,n.gzhead.time>>8&255),Te(n,n.gzhead.time>>16&255),Te(n,n.gzhead.time>>24&255),Te(n,9===n.level?2:n.strategy>=ue||n.level<2?4:0),Te(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(Te(n,255&n.gzhead.extra.length),Te(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=U(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69;else if(Te(n,0),Te(n,0),Te(n,0),Te(n,0),Te(n,0),Te(n,9===n.level?2:n.strategy>=ue||n.level<2?4:0),Te(n,3),n.status=be,Ne(e),0!==n.pending)return n.last_flush=-1,ne;if(69===n.status){if(n.gzhead.extra){let t=n.pending,r=(65535&n.gzhead.extra.length)-n.gzindex;for(;n.pending+r>n.pending_buf_size;){let s=n.pending_buf_size-n.pending;if(n.pending_buf.set(n.gzhead.extra.subarray(n.gzindex,n.gzindex+s),n.pending),n.pending=n.pending_buf_size,n.gzhead.hcrc&&n.pending>t&&(e.adler=U(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex+=s,Ne(e),0!==n.pending)return n.last_flush=-1,ne;t=0,r-=s}let s=new Uint8Array(n.gzhead.extra);n.pending_buf.set(s.subarray(n.gzindex,n.gzindex+r),n.pending),n.pending+=r,n.gzhead.hcrc&&n.pending>t&&(e.adler=U(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex=0}n.status=73}if(73===n.status){if(n.gzhead.name){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=U(e.adler,n.pending_buf,n.pending-r,r)),Ne(e),0!==n.pending)return n.last_flush=-1,ne;r=0}t=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,Te(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=U(e.adler,n.pending_buf,n.pending-r,r)),n.gzindex=0}n.status=91}if(91===n.status){if(n.gzhead.comment){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=U(e.adler,n.pending_buf,n.pending-r,r)),Ne(e),0!==n.pending)return n.last_flush=-1,ne;r=0}t=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,Te(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=U(e.adler,n.pending_buf,n.pending-r,r))}n.status=103}if(103===n.status){if(n.gzhead.hcrc){if(n.pending+2>n.pending_buf_size&&(Ne(e),0!==n.pending))return n.last_flush=-1,ne;Te(n,255&e.adler),Te(n,e.adler>>8&255),e.adler=0}if(n.status=be,Ne(e),0!==n.pending)return n.last_flush=-1,ne}if(0!==e.avail_in||0!==n.lookahead||t!==Y&&n.status!==xe){let r=0===n.level?Ae(n,t):n.strategy===ue?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(_e(e),0===e.lookahead)){if(t===Y)return 1;break}if(e.match_length=0,n=K(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Ce(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===ee?(Ce(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Ce(e,!1),0===e.strm.avail_out)?1:2})(n,t):n.strategy===ce?((e,t)=>{let n,r,s,a;const i=e.window;for(;;){if(e.lookahead<=me){if(_e(e),e.lookahead<=me&&t===Y)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(s=e.strstart-1,r=i[s],r===i[++s]&&r===i[++s]&&r===i[++s])){a=e.strstart+me;do{}while(r===i[++s]&&r===i[++s]&&r===i[++s]&&r===i[++s]&&r===i[++s]&&r===i[++s]&&r===i[++s]&&r===i[++s]&&s<a);e.match_length=me-(a-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=K(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=K(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Ce(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===ee?(Ce(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Ce(e,!1),0===e.strm.avail_out)?1:2})(n,t):Me[n.level].func(n,t);if(3!==r&&4!==r||(n.status=xe),1===r||3===r)return 0===e.avail_out&&(n.last_flush=-1),ne;if(2===r&&(t===J?X(n):t!==te&&(H(n,0,0,!1),t===Q&&(ke(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),Ne(e),0===e.avail_out))return n.last_flush=-1,ne}return t!==ee?ne:n.wrap<=0?re:(2===n.wrap?(Te(n,255&e.adler),Te(n,e.adler>>8&255),Te(n,e.adler>>16&255),Te(n,e.adler>>24&255),Te(n,255&e.total_in),Te(n,e.total_in>>8&255),Te(n,e.total_in>>16&255),Te(n,e.total_in>>24&255)):($e(n,e.adler>>>16),$e(n,65535&e.adler)),Ne(e),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?ne:re)},deflateEnd:e=>{if(ze(e))return se;const t=e.state.status;return e.state=null,t===be?ve(e,ae):ne},deflateSetDictionary:(e,t)=>{let n=t.length;if(ze(e))return se;const r=e.state,s=r.wrap;if(2===s||1===s&&r.status!==ye||r.lookahead)return se;if(1===s&&(e.adler=W(e.adler,t,n,0)),r.wrap=0,n>=r.w_size){0===s&&(ke(r.head),r.strstart=0,r.block_start=0,r.insert=0);let e=new Uint8Array(r.w_size);e.set(t.subarray(n-r.w_size,n),0),t=e,n=r.w_size}const a=e.avail_in,i=e.next_in,o=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,_e(r);r.lookahead>=3;){let e=r.strstart,t=r.lookahead-2;do{r.ins_h=Ie(r,r.ins_h,r.window[e+3-1]),r.prev[e&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=e,e++}while(--t);r.strstart=e,r.lookahead=2,_e(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=2,r.match_available=0,e.next_in=i,e.input=o,e.avail_in=a,r.wrap=s,ne},deflateInfo:"pako deflate (from Nodeca project)"};const Ue=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var Ze={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)Ue(n,t)&&(e[t]=n[t])}}return e},flattenChunks:e=>{let t=0;for(let n=0,r=e.length;n<r;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,r=0,s=e.length;t<s;t++){let s=e[t];n.set(s,r),r+=s.length}return n}};let Ge=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Ge=!1}const je=new Uint8Array(256);for(let e=0;e<256;e++)je[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;je[254]=je[254]=1;var He={string2buf:e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,r,s,a,i=e.length,o=0;for(s=0;s<i;s++)n=e.charCodeAt(s),55296==(64512&n)&&s+1<i&&(r=e.charCodeAt(s+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),s++)),o+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(o),a=0,s=0;a<o;s++)n=e.charCodeAt(s),55296==(64512&n)&&s+1<i&&(r=e.charCodeAt(s+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),s++)),n<128?t[a++]=n:n<2048?(t[a++]=192|n>>>6,t[a++]=128|63&n):n<65536?(t[a++]=224|n>>>12,t[a++]=128|n>>>6&63,t[a++]=128|63&n):(t[a++]=240|n>>>18,t[a++]=128|n>>>12&63,t[a++]=128|n>>>6&63,t[a++]=128|63&n);return t},buf2string:(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let r,s;const a=new Array(2*n);for(s=0,r=0;r<n;){let t=e[r++];if(t<128){a[s++]=t;continue}let i=je[t];if(i>4)a[s++]=65533,r+=i-1;else{for(t&=2===i?31:3===i?15:7;i>1&&r<n;)t=t<<6|63&e[r++],i--;i>1?a[s++]=65533:t<65536?a[s++]=t:(t-=65536,a[s++]=55296|t>>10&1023,a[s++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Ge)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n})(a,s)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+je[e[n]]>t?n:t}};var qe=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Ke=Object.prototype.toString,{Z_NO_FLUSH:Xe,Z_SYNC_FLUSH:Ye,Z_FULL_FLUSH:Je,Z_FINISH:Qe,Z_OK:et,Z_STREAM_END:tt,Z_DEFAULT_COMPRESSION:nt,Z_DEFAULT_STRATEGY:rt,Z_DEFLATED:st}=G;function at(e){this.options=Ze.assign({level:nt,method:st,chunkSize:16384,windowBits:15,memLevel:8,strategy:rt},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new qe,this.strm.avail_out=0;let n=Ve.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==et)throw new Error(Z[n]);if(t.header&&Ve.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?He.string2buf(t.dictionary):"[object ArrayBuffer]"===Ke.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=Ve.deflateSetDictionary(this.strm,e),n!==et)throw new Error(Z[n]);this._dict_set=!0}}function it(e,t){const n=new at(t);if(n.push(e,!0),n.err)throw n.msg||Z[n.err];return n.result}at.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize;let s,a;if(this.ended)return!1;for(a=t===~~t?t:!0===t?Qe:Xe,"string"==typeof e?n.input=He.string2buf(e):"[object ArrayBuffer]"===Ke.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(a===Ye||a===Je)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(s=Ve.deflate(n,a),s===tt)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),s=Ve.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===et;if(0!==n.avail_out){if(a>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},at.prototype.onData=function(e){this.chunks.push(e)},at.prototype.onEnd=function(e){e===et&&(this.result=Ze.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var ot={Deflate:at,deflate:it,deflateRaw:function(e,t){return(t=t||{}).raw=!0,it(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,it(e,t)},constants:G};const lt=16209;var ut=function(e,t){let n,r,s,a,i,o,l,u,c,d,h,p,f,m,g,y,b,x,v,w,k,S,I,N;const C=e.state;n=e.next_in,I=e.input,r=n+(e.avail_in-5),s=e.next_out,N=e.output,a=s-(t-e.avail_out),i=s+(e.avail_out-257),o=C.dmax,l=C.wsize,u=C.whave,c=C.wnext,d=C.window,h=C.hold,p=C.bits,f=C.lencode,m=C.distcode,g=(1<<C.lenbits)-1,y=(1<<C.distbits)-1;e:do{p<15&&(h+=I[n++]<<p,p+=8,h+=I[n++]<<p,p+=8),b=f[h&g];t:for(;;){if(x=b>>>24,h>>>=x,p-=x,x=b>>>16&255,0===x)N[s++]=65535&b;else{if(!(16&x)){if(0==(64&x)){b=f[(65535&b)+(h&(1<<x)-1)];continue t}if(32&x){C.mode=16191;break e}e.msg="invalid literal/length code",C.mode=lt;break e}v=65535&b,x&=15,x&&(p<x&&(h+=I[n++]<<p,p+=8),v+=h&(1<<x)-1,h>>>=x,p-=x),p<15&&(h+=I[n++]<<p,p+=8,h+=I[n++]<<p,p+=8),b=m[h&y];n:for(;;){if(x=b>>>24,h>>>=x,p-=x,x=b>>>16&255,!(16&x)){if(0==(64&x)){b=m[(65535&b)+(h&(1<<x)-1)];continue n}e.msg="invalid distance code",C.mode=lt;break e}if(w=65535&b,x&=15,p<x&&(h+=I[n++]<<p,p+=8,p<x&&(h+=I[n++]<<p,p+=8)),w+=h&(1<<x)-1,w>o){e.msg="invalid distance too far back",C.mode=lt;break e}if(h>>>=x,p-=x,x=s-a,w>x){if(x=w-x,x>u&&C.sane){e.msg="invalid distance too far back",C.mode=lt;break e}if(k=0,S=d,0===c){if(k+=l-x,x<v){v-=x;do{N[s++]=d[k++]}while(--x);k=s-w,S=N}}else if(c<x){if(k+=l+c-x,x-=c,x<v){v-=x;do{N[s++]=d[k++]}while(--x);if(k=0,c<v){x=c,v-=x;do{N[s++]=d[k++]}while(--x);k=s-w,S=N}}}else if(k+=c-x,x<v){v-=x;do{N[s++]=d[k++]}while(--x);k=s-w,S=N}for(;v>2;)N[s++]=S[k++],N[s++]=S[k++],N[s++]=S[k++],v-=3;v&&(N[s++]=S[k++],v>1&&(N[s++]=S[k++]))}else{k=s-w;do{N[s++]=N[k++],N[s++]=N[k++],N[s++]=N[k++],v-=3}while(v>2);v&&(N[s++]=N[k++],v>1&&(N[s++]=N[k++]))}break}}break}}while(n<r&&s<i);v=p>>3,n-=v,p-=v<<3,h&=(1<<p)-1,e.next_in=n,e.next_out=s,e.avail_in=n<r?r-n+5:5-(n-r),e.avail_out=s<i?i-s+257:257-(s-i),C.hold=h,C.bits=p};const ct=15,dt=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ht=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),pt=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ft=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var mt=(e,t,n,r,s,a,i,o)=>{const l=o.bits;let u,c,d,h,p,f,m=0,g=0,y=0,b=0,x=0,v=0,w=0,k=0,S=0,I=0,N=null;const C=new Uint16Array(16),T=new Uint16Array(16);let $,E,R,_=null;for(m=0;m<=ct;m++)C[m]=0;for(g=0;g<r;g++)C[t[n+g]]++;for(x=l,b=ct;b>=1&&0===C[b];b--);if(x>b&&(x=b),0===b)return s[a++]=20971520,s[a++]=20971520,o.bits=1,0;for(y=1;y<b&&0===C[y];y++);for(x<y&&(x=y),k=1,m=1;m<=ct;m++)if(k<<=1,k-=C[m],k<0)return-1;if(k>0&&(0===e||1!==b))return-1;for(T[1]=0,m=1;m<ct;m++)T[m+1]=T[m]+C[m];for(g=0;g<r;g++)0!==t[n+g]&&(i[T[t[n+g]]++]=g);if(0===e?(N=_=i,f=20):1===e?(N=dt,_=ht,f=257):(N=pt,_=ft,f=0),I=0,g=0,m=y,p=a,v=x,w=0,d=-1,S=1<<x,h=S-1,1===e&&S>852||2===e&&S>592)return 1;for(;;){$=m-w,i[g]+1<f?(E=0,R=i[g]):i[g]>=f?(E=_[i[g]-f],R=N[i[g]-f]):(E=96,R=0),u=1<<m-w,c=1<<v,y=c;do{c-=u,s[p+(I>>w)+c]=$<<24|E<<16|R|0}while(0!==c);for(u=1<<m-1;I&u;)u>>=1;if(0!==u?(I&=u-1,I+=u):I=0,g++,0==--C[m]){if(m===b)break;m=t[n+i[g]]}if(m>x&&(I&h)!==d){for(0===w&&(w=x),p+=y,v=m-w,k=1<<v;v+w<b&&(k-=C[v+w],!(k<=0));)v++,k<<=1;if(S+=1<<v,1===e&&S>852||2===e&&S>592)return 1;d=I&h,s[d]=x<<24|v<<16|p-a|0}}return 0!==I&&(s[p+I]=m-w<<24|64<<16|0),o.bits=x,0};const{Z_FINISH:gt,Z_BLOCK:yt,Z_TREES:bt,Z_OK:xt,Z_STREAM_END:vt,Z_NEED_DICT:wt,Z_STREAM_ERROR:kt,Z_DATA_ERROR:St,Z_MEM_ERROR:It,Z_BUF_ERROR:Nt,Z_DEFLATED:Ct}=G,Tt=16180,$t=16190,Et=16191,Rt=16192,_t=16194,At=16199,Ft=16200,Ot=16206,Dt=16209,Mt=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Lt(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const zt=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<Tt||t.mode>16211?1:0},Pt=e=>{if(zt(e))return kt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=Tt,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,xt},Bt=e=>{if(zt(e))return kt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,Pt(e)},Wt=(e,t)=>{let n;if(zt(e))return kt;const r=e.state;return t<0?(n=0,t=-t):(n=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?kt:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Bt(e))},Vt=(e,t)=>{if(!e)return kt;const n=new Lt;e.state=n,n.strm=e,n.window=null,n.mode=Tt;const r=Wt(e,t);return r!==xt&&(e.state=null),r};let Ut,Zt,Gt=!0;const jt=e=>{if(Gt){Ut=new Int32Array(512),Zt=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(mt(1,e.lens,0,288,Ut,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;mt(2,e.lens,0,32,Zt,0,e.work,{bits:5}),Gt=!1}e.lencode=Ut,e.lenbits=9,e.distcode=Zt,e.distbits=5},Ht=(e,t,n,r)=>{let s;const a=e.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),r>=a.wsize?(a.window.set(t.subarray(n-a.wsize,n),0),a.wnext=0,a.whave=a.wsize):(s=a.wsize-a.wnext,s>r&&(s=r),a.window.set(t.subarray(n-r,n-r+s),a.wnext),(r-=s)?(a.window.set(t.subarray(n-r,n),0),a.wnext=r,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0};var qt={inflateReset:Bt,inflateReset2:Wt,inflateResetKeep:Pt,inflateInit:e=>Vt(e,15),inflateInit2:Vt,inflate:(e,t)=>{let n,r,s,a,i,o,l,u,c,d,h,p,f,m,g,y,b,x,v,w,k,S,I=0;const N=new Uint8Array(4);let C,T;const $=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(zt(e)||!e.output||!e.input&&0!==e.avail_in)return kt;n=e.state,n.mode===Et&&(n.mode=Rt),i=e.next_out,s=e.output,l=e.avail_out,a=e.next_in,r=e.input,o=e.avail_in,u=n.hold,c=n.bits,d=o,h=l,S=xt;e:for(;;)switch(n.mode){case Tt:if(0===n.wrap){n.mode=Rt;break}for(;c<16;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(2&n.wrap&&35615===u){0===n.wbits&&(n.wbits=15),n.check=0,N[0]=255&u,N[1]=u>>>8&255,n.check=U(n.check,N,2,0),u=0,c=0,n.mode=16181;break}if(n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg="incorrect header check",n.mode=Dt;break}if((15&u)!==Ct){e.msg="unknown compression method",n.mode=Dt;break}if(u>>>=4,c-=4,k=8+(15&u),0===n.wbits&&(n.wbits=k),k>15||k>n.wbits){e.msg="invalid window size",n.mode=Dt;break}n.dmax=1<<n.wbits,n.flags=0,e.adler=n.check=1,n.mode=512&u?16189:Et,u=0,c=0;break;case 16181:for(;c<16;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(n.flags=u,(255&n.flags)!==Ct){e.msg="unknown compression method",n.mode=Dt;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=Dt;break}n.head&&(n.head.text=u>>8&1),512&n.flags&&4&n.wrap&&(N[0]=255&u,N[1]=u>>>8&255,n.check=U(n.check,N,2,0)),u=0,c=0,n.mode=16182;case 16182:for(;c<32;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.head&&(n.head.time=u),512&n.flags&&4&n.wrap&&(N[0]=255&u,N[1]=u>>>8&255,N[2]=u>>>16&255,N[3]=u>>>24&255,n.check=U(n.check,N,4,0)),u=0,c=0,n.mode=16183;case 16183:for(;c<16;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.head&&(n.head.xflags=255&u,n.head.os=u>>8),512&n.flags&&4&n.wrap&&(N[0]=255&u,N[1]=u>>>8&255,n.check=U(n.check,N,2,0)),u=0,c=0,n.mode=16184;case 16184:if(1024&n.flags){for(;c<16;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.length=u,n.head&&(n.head.extra_len=u),512&n.flags&&4&n.wrap&&(N[0]=255&u,N[1]=u>>>8&255,n.check=U(n.check,N,2,0)),u=0,c=0}else n.head&&(n.head.extra=null);n.mode=16185;case 16185:if(1024&n.flags&&(p=n.length,p>o&&(p=o),p&&(n.head&&(k=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(a,a+p),k)),512&n.flags&&4&n.wrap&&(n.check=U(n.check,r,p,a)),o-=p,a+=p,n.length-=p),n.length))break e;n.length=0,n.mode=16186;case 16186:if(2048&n.flags){if(0===o)break e;p=0;do{k=r[a+p++],n.head&&k&&n.length<65536&&(n.head.name+=String.fromCharCode(k))}while(k&&p<o);if(512&n.flags&&4&n.wrap&&(n.check=U(n.check,r,p,a)),o-=p,a+=p,k)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=16187;case 16187:if(4096&n.flags){if(0===o)break e;p=0;do{k=r[a+p++],n.head&&k&&n.length<65536&&(n.head.comment+=String.fromCharCode(k))}while(k&&p<o);if(512&n.flags&&4&n.wrap&&(n.check=U(n.check,r,p,a)),o-=p,a+=p,k)break e}else n.head&&(n.head.comment=null);n.mode=16188;case 16188:if(512&n.flags){for(;c<16;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(4&n.wrap&&u!==(65535&n.check)){e.msg="header crc mismatch",n.mode=Dt;break}u=0,c=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Et;break;case 16189:for(;c<32;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}e.adler=n.check=Mt(u),u=0,c=0,n.mode=$t;case $t:if(0===n.havedict)return e.next_out=i,e.avail_out=l,e.next_in=a,e.avail_in=o,n.hold=u,n.bits=c,wt;e.adler=n.check=1,n.mode=Et;case Et:if(t===yt||t===bt)break e;case Rt:if(n.last){u>>>=7&c,c-=7&c,n.mode=Ot;break}for(;c<3;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}switch(n.last=1&u,u>>>=1,c-=1,3&u){case 0:n.mode=16193;break;case 1:if(jt(n),n.mode=At,t===bt){u>>>=2,c-=2;break e}break;case 2:n.mode=16196;break;case 3:e.msg="invalid block type",n.mode=Dt}u>>>=2,c-=2;break;case 16193:for(u>>>=7&c,c-=7&c;c<32;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if((65535&u)!=(u>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Dt;break}if(n.length=65535&u,u=0,c=0,n.mode=_t,t===bt)break e;case _t:n.mode=16195;case 16195:if(p=n.length,p){if(p>o&&(p=o),p>l&&(p=l),0===p)break e;s.set(r.subarray(a,a+p),i),o-=p,a+=p,l-=p,i+=p,n.length-=p;break}n.mode=Et;break;case 16196:for(;c<14;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(n.nlen=257+(31&u),u>>>=5,c-=5,n.ndist=1+(31&u),u>>>=5,c-=5,n.ncode=4+(15&u),u>>>=4,c-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Dt;break}n.have=0,n.mode=16197;case 16197:for(;n.have<n.ncode;){for(;c<3;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.lens[$[n.have++]]=7&u,u>>>=3,c-=3}for(;n.have<19;)n.lens[$[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,C={bits:n.lenbits},S=mt(0,n.lens,0,19,n.lencode,0,n.work,C),n.lenbits=C.bits,S){e.msg="invalid code lengths set",n.mode=Dt;break}n.have=0,n.mode=16198;case 16198:for(;n.have<n.nlen+n.ndist;){for(;I=n.lencode[u&(1<<n.lenbits)-1],g=I>>>24,y=I>>>16&255,b=65535&I,!(g<=c);){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(b<16)u>>>=g,c-=g,n.lens[n.have++]=b;else{if(16===b){for(T=g+2;c<T;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(u>>>=g,c-=g,0===n.have){e.msg="invalid bit length repeat",n.mode=Dt;break}k=n.lens[n.have-1],p=3+(3&u),u>>>=2,c-=2}else if(17===b){for(T=g+3;c<T;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}u>>>=g,c-=g,k=0,p=3+(7&u),u>>>=3,c-=3}else{for(T=g+7;c<T;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}u>>>=g,c-=g,k=0,p=11+(127&u),u>>>=7,c-=7}if(n.have+p>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Dt;break}for(;p--;)n.lens[n.have++]=k}}if(n.mode===Dt)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=Dt;break}if(n.lenbits=9,C={bits:n.lenbits},S=mt(1,n.lens,0,n.nlen,n.lencode,0,n.work,C),n.lenbits=C.bits,S){e.msg="invalid literal/lengths set",n.mode=Dt;break}if(n.distbits=6,n.distcode=n.distdyn,C={bits:n.distbits},S=mt(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,C),n.distbits=C.bits,S){e.msg="invalid distances set",n.mode=Dt;break}if(n.mode=At,t===bt)break e;case At:n.mode=Ft;case Ft:if(o>=6&&l>=258){e.next_out=i,e.avail_out=l,e.next_in=a,e.avail_in=o,n.hold=u,n.bits=c,ut(e,h),i=e.next_out,s=e.output,l=e.avail_out,a=e.next_in,r=e.input,o=e.avail_in,u=n.hold,c=n.bits,n.mode===Et&&(n.back=-1);break}for(n.back=0;I=n.lencode[u&(1<<n.lenbits)-1],g=I>>>24,y=I>>>16&255,b=65535&I,!(g<=c);){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(y&&0==(240&y)){for(x=g,v=y,w=b;I=n.lencode[w+((u&(1<<x+v)-1)>>x)],g=I>>>24,y=I>>>16&255,b=65535&I,!(x+g<=c);){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}u>>>=x,c-=x,n.back+=x}if(u>>>=g,c-=g,n.back+=g,n.length=b,0===y){n.mode=16205;break}if(32&y){n.back=-1,n.mode=Et;break}if(64&y){e.msg="invalid literal/length code",n.mode=Dt;break}n.extra=15&y,n.mode=16201;case 16201:if(n.extra){for(T=n.extra;c<T;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.length+=u&(1<<n.extra)-1,u>>>=n.extra,c-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=16202;case 16202:for(;I=n.distcode[u&(1<<n.distbits)-1],g=I>>>24,y=I>>>16&255,b=65535&I,!(g<=c);){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(0==(240&y)){for(x=g,v=y,w=b;I=n.distcode[w+((u&(1<<x+v)-1)>>x)],g=I>>>24,y=I>>>16&255,b=65535&I,!(x+g<=c);){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}u>>>=x,c-=x,n.back+=x}if(u>>>=g,c-=g,n.back+=g,64&y){e.msg="invalid distance code",n.mode=Dt;break}n.offset=b,n.extra=15&y,n.mode=16203;case 16203:if(n.extra){for(T=n.extra;c<T;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}n.offset+=u&(1<<n.extra)-1,u>>>=n.extra,c-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Dt;break}n.mode=16204;case 16204:if(0===l)break e;if(p=h-l,n.offset>p){if(p=n.offset-p,p>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Dt;break}p>n.wnext?(p-=n.wnext,f=n.wsize-p):f=n.wnext-p,p>n.length&&(p=n.length),m=n.window}else m=s,f=i-n.offset,p=n.length;p>l&&(p=l),l-=p,n.length-=p;do{s[i++]=m[f++]}while(--p);0===n.length&&(n.mode=Ft);break;case 16205:if(0===l)break e;s[i++]=n.length,l--,n.mode=Ft;break;case Ot:if(n.wrap){for(;c<32;){if(0===o)break e;o--,u|=r[a++]<<c,c+=8}if(h-=l,e.total_out+=h,n.total+=h,4&n.wrap&&h&&(e.adler=n.check=n.flags?U(n.check,s,h,i-h):W(n.check,s,h,i-h)),h=l,4&n.wrap&&(n.flags?u:Mt(u))!==n.check){e.msg="incorrect data check",n.mode=Dt;break}u=0,c=0}n.mode=16207;case 16207:if(n.wrap&&n.flags){for(;c<32;){if(0===o)break e;o--,u+=r[a++]<<c,c+=8}if(4&n.wrap&&u!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=Dt;break}u=0,c=0}n.mode=16208;case 16208:S=vt;break e;case Dt:S=St;break e;case 16210:return It;default:return kt}return e.next_out=i,e.avail_out=l,e.next_in=a,e.avail_in=o,n.hold=u,n.bits=c,(n.wsize||h!==e.avail_out&&n.mode<Dt&&(n.mode<Ot||t!==gt))&&Ht(e,e.output,e.next_out,h-e.avail_out),d-=e.avail_in,h-=e.avail_out,e.total_in+=d,e.total_out+=h,n.total+=h,4&n.wrap&&h&&(e.adler=n.check=n.flags?U(n.check,s,h,e.next_out-h):W(n.check,s,h,e.next_out-h)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Et?128:0)+(n.mode===At||n.mode===_t?256:0),(0===d&&0===h||t===gt)&&S===xt&&(S=Nt),S},inflateEnd:e=>{if(zt(e))return kt;let t=e.state;return t.window&&(t.window=null),e.state=null,xt},inflateGetHeader:(e,t)=>{if(zt(e))return kt;const n=e.state;return 0==(2&n.wrap)?kt:(n.head=t,t.done=!1,xt)},inflateSetDictionary:(e,t)=>{const n=t.length;let r,s,a;return zt(e)?kt:(r=e.state,0!==r.wrap&&r.mode!==$t?kt:r.mode===$t&&(s=1,s=W(s,t,n,0),s!==r.check)?St:(a=Ht(e,t,n,n),a?(r.mode=16210,It):(r.havedict=1,xt)))},inflateInfo:"pako inflate (from Nodeca project)"};var Kt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Xt=Object.prototype.toString,{Z_NO_FLUSH:Yt,Z_FINISH:Jt,Z_OK:Qt,Z_STREAM_END:en,Z_NEED_DICT:tn,Z_STREAM_ERROR:nn,Z_DATA_ERROR:rn,Z_MEM_ERROR:sn}=G;function an(e){this.options=Ze.assign({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new qe,this.strm.avail_out=0;let n=qt.inflateInit2(this.strm,t.windowBits);if(n!==Qt)throw new Error(Z[n]);if(this.header=new Kt,qt.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=He.string2buf(t.dictionary):"[object ArrayBuffer]"===Xt.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=qt.inflateSetDictionary(this.strm,t.dictionary),n!==Qt)))throw new Error(Z[n])}function on(e,t){const n=new an(t);if(n.push(e),n.err)throw n.msg||Z[n.err];return n.result}an.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize,s=this.options.dictionary;let a,i,o;if(this.ended)return!1;for(i=t===~~t?t:!0===t?Jt:Yt,"[object ArrayBuffer]"===Xt.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),a=qt.inflate(n,i),a===tn&&s&&(a=qt.inflateSetDictionary(n,s),a===Qt?a=qt.inflate(n,i):a===rn&&(a=tn));n.avail_in>0&&a===en&&n.state.wrap>0&&0!==e[n.next_in];)qt.inflateReset(n),a=qt.inflate(n,i);switch(a){case nn:case rn:case tn:case sn:return this.onEnd(a),this.ended=!0,!1}if(o=n.avail_out,n.next_out&&(0===n.avail_out||a===en))if("string"===this.options.to){let e=He.utf8border(n.output,n.next_out),t=n.next_out-e,s=He.buf2string(n.output,e);n.next_out=t,n.avail_out=r-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(s)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(a!==Qt||0!==o){if(a===en)return a=qt.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},an.prototype.onData=function(e){this.chunks.push(e)},an.prototype.onEnd=function(e){e===Qt&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Ze.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var ln={Inflate:an,inflate:on,inflateRaw:function(e,t){return(t=t||{}).raw=!0,on(e,t)},ungzip:on,constants:G};const{Deflate:un,deflate:cn,deflateRaw:dn,gzip:hn}=ot,{Inflate:pn,inflate:fn,inflateRaw:mn,ungzip:gn}=ln;var yn={Deflate:un,deflate:cn,deflateRaw:dn,gzip:hn,Inflate:pn,inflate:fn,inflateRaw:mn,ungzip:gn,constants:G}}}]);
//# sourceMappingURL=978.bundle.659addf6a87fa10e5e3b.js.map