{"version":3,"file":"940.bundle.aad8265994a542d50d8b.js","mappings":"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","sources":["webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelStudyBrowserTracking/PanelStudyBrowserTracking.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelStudyBrowserTracking/getImageSrcFromImageId.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelStudyBrowserTracking/requestDisplaySetCreationForStudy.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelStudyBrowserTracking/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelMeasurementTableTracking/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/RatingSelector.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/GridSelector.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/Checkbox.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/Textarea.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/DisplayValue.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/fields/UserProfile.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/_shared/FormGeneratorComponent/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelForm/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/panels/PanelFormAndMeasurementTable/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/getPanelModule.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/getViewportModule.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/getHangingProtocolModule.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/DicomWebDataSource/utils/getImageId.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/DicomWebDataSource/utils/getWADORSImageId.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/DicomJSONDataSource/index.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/getDataSourcesModule.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/id.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/GoogleSheetsService/utils.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/GoogleSheetsService/GoogleSheetsService.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/CropDisplayAreaService/CropDisplayAreaService.ts","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/CacheAPIService/CacheAPIService.ts","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/index.tsx","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/CropDisplayAreaService/index.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/GoogleSheetsService/index.js","webpack:///../../../../GradientExtensionsAndModes/extensions/ohif-gradienthealth-extension/src/services/CacheAPIService/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { utils } from '@ohif/core';\nimport {\n  StudyBrowser,\n  useImageViewer,\n  useViewportGrid,\n  Dialog,\n} from '@ohif/ui';\n\nconst { formatDate } = utils;\n\n/**\n *\n * @param {*} param0\n */\nfunction PanelStudyBrowserTracking({\n  MeasurementService,\n  DisplaySetService,\n  UIDialogService,\n  UINotificationService,\n  getImageSrc,\n  getStudiesForPatientByStudyInstanceUID,\n  requestDisplaySetCreationForStudy,\n  dataSource,\n}) {\n  // Normally you nest the components so the tree isn't so deep, and the data\n  // doesn't have to have such an intense shape. This works well enough for now.\n  // Tabs --> Studies --> DisplaySets --> Thumbnails\n  const { StudyInstanceUIDs } = useImageViewer();\n  const [\n    { activeViewportId, viewports, numCols, numRows },\n    viewportGridService,\n  ] = useViewportGrid();\n\n  const [activeTabName, setActiveTabName] = useState('primary');\n  const [expandedStudyInstanceUIDs, setExpandedStudyInstanceUIDs] = useState([\n    ...StudyInstanceUIDs,\n  ]);\n  const [studyDisplayList, setStudyDisplayList] = useState([]);\n  const [displaySets, setDisplaySets] = useState([]);\n  const [thumbnailImageSrcMap, setThumbnailImageSrcMap] = useState({});\n  const [jumpToDisplaySet, setJumpToDisplaySet] = useState(null);\n\n  const onDoubleClickThumbnailHandler = (displaySetInstanceUID) => {\n    viewportGridService.setDisplaySetsForViewport({\n      viewportId: activeViewportId,\n      displaySetInstanceUIDs: [displaySetInstanceUID],\n    });\n  };\n\n  const activeViewportDisplaySetInstanceUIDs =\n    viewports[activeViewportId]?.displaySetInstanceUIDs;\n\n  const isSingleViewport = numCols === 1 && numRows === 1;\n\n  useEffect(() => {\n    const added = MeasurementService.EVENTS.MEASUREMENT_ADDED;\n    const addedRaw = MeasurementService.EVENTS.RAW_MEASUREMENT_ADDED;\n    const subscriptions = [];\n\n    [added, addedRaw].forEach((evt) => {\n      subscriptions.push(\n        MeasurementService.subscribe(evt, ({ source, measurement }) => {\n          const {\n            referenceSeriesUID: SeriesInstanceUID,\n            referenceStudyUID: StudyInstanceUID,\n          } = measurement;\n        }).unsubscribe\n      );\n    });\n\n    return () => {\n      subscriptions.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [MeasurementService, activeViewportId]);\n\n  // ~~ studyDisplayList\n  useEffect(() => {\n    // Fetch all studies for the patient in each primary study\n    async function fetchStudiesForPatient(StudyInstanceUID) {\n      const qidoStudiesForPatient =\n        (await getStudiesForPatientByStudyInstanceUID(StudyInstanceUID)) || [];\n      // TODO: This should be \"naturalized DICOM JSON\" studies\n      const mappedStudies = _mapDataSourceStudies(qidoStudiesForPatient);\n      const actuallyMappedStudies = mappedStudies.map(qidoStudy => {\n        return {\n          studyInstanceUid: qidoStudy.StudyInstanceUID,\n          date: formatDate(qidoStudy.StudyDate),\n          description: qidoStudy.StudyDescription,\n          modalities: qidoStudy.ModalitiesInStudy,\n          numInstances: qidoStudy.NumInstances,\n          // displaySets: []\n        };\n      });\n\n      setStudyDisplayList(actuallyMappedStudies);\n    }\n\n    StudyInstanceUIDs.forEach(sid => fetchStudiesForPatient(sid));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [StudyInstanceUIDs, getStudiesForPatientByStudyInstanceUID]);\n\n  // ~~ Initial Thumbnails\n  useEffect(() => {\n    const currentDisplaySets = DisplaySetService.activeDisplaySets;\n    currentDisplaySets.forEach(async dSet => {\n      const newImageSrcEntry = {};\n      const displaySet = DisplaySetService.getDisplaySetByUID(\n        dSet.displaySetInstanceUID\n      );\n      const imageIds = dataSource.getImageIdsForDisplaySet(displaySet);\n      const imageId = imageIds[Math.floor(imageIds.length / 2)];\n\n      // TODO: Is it okay that imageIds are not returned here for SR displaysets?\n      if (imageId) {\n        // When the image arrives, render it and store the result in the thumbnailImgSrcMap\n        newImageSrcEntry[dSet.displaySetInstanceUID] = await getImageSrc(\n          imageId\n        );\n        setThumbnailImageSrcMap(prevState => {\n          return { ...prevState, ...newImageSrcEntry };\n        });\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [DisplaySetService, dataSource, getImageSrc]);\n\n  // ~~ displaySets\n  useEffect(() => {\n    // TODO: Are we sure `activeDisplaySets` will always be accurate?\n    const currentDisplaySets = DisplaySetService.activeDisplaySets;\n    const mappedDisplaySets = _mapDisplaySets(\n      currentDisplaySets,\n      thumbnailImageSrcMap,\n      viewports,\n      isSingleViewport,\n      dataSource,\n      DisplaySetService,\n      UIDialogService,\n      UINotificationService\n    );\n\n    setDisplaySets(mappedDisplaySets);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    DisplaySetService.activeDisplaySets,\n    thumbnailImageSrcMap,\n    viewports,\n    dataSource,\n  ]);\n\n  // ~~ subscriptions --> displaySets\n  useEffect(() => {\n    // DISPLAY_SETS_ADDED returns an array of DisplaySets that were added\n    const SubscriptionDisplaySetsAdded = DisplaySetService.subscribe(\n      DisplaySetService.EVENTS.DISPLAY_SETS_ADDED,\n      data => {\n        const { displaySetsAdded, options } = data;\n        displaySetsAdded.forEach(async dSet => {\n          const displaySetInstanceUID = dSet.displaySetInstanceUID;\n\n          const newImageSrcEntry = {};\n          const displaySet = DisplaySetService.getDisplaySetByUID(\n            displaySetInstanceUID\n          );\n\n          if (options.madeInClient) {\n            setJumpToDisplaySet(displaySetInstanceUID);\n          }\n\n          const imageIds = dataSource.getImageIdsForDisplaySet(displaySet);\n          const imageId = imageIds[Math.floor(imageIds.length / 2)];\n\n          // TODO: Is it okay that imageIds are not returned here for SR displaysets?\n          if (imageId) {\n            // When the image arrives, render it and store the result in the thumbnailImgSrcMap\n            newImageSrcEntry[displaySetInstanceUID] = await getImageSrc(\n              imageId\n            );\n            setThumbnailImageSrcMap(prevState => {\n              return { ...prevState, ...newImageSrcEntry };\n            });\n          }\n        });\n      }\n    );\n\n    // TODO: Will this always hold _all_ the displaySets we care about?\n    // DISPLAY_SETS_CHANGED returns `DisplaySerService.activeDisplaySets`\n    const SubscriptionDisplaySetsChanged = DisplaySetService.subscribe(\n      DisplaySetService.EVENTS.DISPLAY_SETS_CHANGED,\n      changedDisplaySets => {\n        const mappedDisplaySets = _mapDisplaySets(\n          changedDisplaySets,\n          thumbnailImageSrcMap,\n          viewports,\n          isSingleViewport,\n          dataSource,\n          DisplaySetService,\n          UIDialogService,\n          UINotificationService\n        );\n\n        setDisplaySets(mappedDisplaySets);\n      }\n    );\n\n    return () => {\n      SubscriptionDisplaySetsAdded.unsubscribe();\n      SubscriptionDisplaySetsChanged.unsubscribe();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    DisplaySetService,\n    dataSource,\n    getImageSrc,\n    thumbnailImageSrcMap,\n    viewports,\n  ]);\n\n  const tabs = _createStudyBrowserTabs(\n    StudyInstanceUIDs,\n    studyDisplayList,\n    displaySets\n  );\n\n  // TODO: Should not fire this on \"close\"\n  function _handleStudyClick(StudyInstanceUID) {\n    const shouldCollapseStudy = expandedStudyInstanceUIDs.includes(\n      StudyInstanceUID\n    );\n    const updatedExpandedStudyInstanceUIDs = shouldCollapseStudy\n      ? [\n          ...expandedStudyInstanceUIDs.filter(\n            stdyUid => stdyUid !== StudyInstanceUID\n          ),\n        ]\n      : [...expandedStudyInstanceUIDs, StudyInstanceUID];\n\n    setExpandedStudyInstanceUIDs(updatedExpandedStudyInstanceUIDs);\n\n    if (!shouldCollapseStudy) {\n      const madeInClient = true;\n      requestDisplaySetCreationForStudy(\n        DisplaySetService,\n        StudyInstanceUID,\n        madeInClient\n      );\n    }\n  }\n\n  useEffect(() => {\n    if (jumpToDisplaySet) {\n      // Get element by displaySetInstanceUID\n      const displaySetInstanceUID = jumpToDisplaySet;\n      const element = document.getElementById(\n        `thumbnail-${displaySetInstanceUID}`\n      );\n\n      if (element && typeof element.scrollIntoView === 'function') {\n        // TODO: Any way to support IE here?\n        element.scrollIntoView({ behavior: 'smooth' });\n\n        setJumpToDisplaySet(null);\n      }\n    }\n  }, [jumpToDisplaySet, expandedStudyInstanceUIDs, activeTabName]);\n\n  useEffect(() => {\n    if (!jumpToDisplaySet) {\n      return;\n    }\n\n    const displaySetInstanceUID = jumpToDisplaySet;\n    // Set the activeTabName and expand the study\n    const thumbnailLocation = _findTabAndStudyOfDisplaySet(\n      displaySetInstanceUID,\n      tabs\n    );\n    if (!thumbnailLocation) {\n      console.warn('jumpToThumbnail: displaySet thumbnail not found.');\n\n      return;\n    }\n    const { tabName, StudyInstanceUID } = thumbnailLocation;\n    setActiveTabName(tabName);\n    const studyExpanded = expandedStudyInstanceUIDs.includes(StudyInstanceUID);\n    if (!studyExpanded) {\n      const updatedExpandedStudyInstanceUIDs = [\n        ...expandedStudyInstanceUIDs,\n        StudyInstanceUID,\n      ];\n      setExpandedStudyInstanceUIDs(updatedExpandedStudyInstanceUIDs);\n    }\n  }, [expandedStudyInstanceUIDs, jumpToDisplaySet, tabs]);\n\n  return (\n    <StudyBrowser\n      tabs={tabs}\n      activeTabName={activeTabName}\n      expandedStudyInstanceUIDs={expandedStudyInstanceUIDs}\n      onClickStudy={_handleStudyClick}\n      onClickTab={clickedTabName => {\n        setActiveTabName(clickedTabName);\n      }}\n      onClickThumbnail={() => {}}\n      onDoubleClickThumbnail={onDoubleClickThumbnailHandler}\n      activeDisplaySetInstanceUIDs={activeViewportDisplaySetInstanceUIDs}\n    />\n  );\n}\n\nPanelStudyBrowserTracking.propTypes = {\n  MeasurementService: PropTypes.shape({\n    subscribe: PropTypes.func.isRequired,\n    EVENTS: PropTypes.object.isRequired,\n  }).isRequired,\n  DisplaySetService: PropTypes.shape({\n    EVENTS: PropTypes.object.isRequired,\n    activeDisplaySets: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getDisplaySetByUID: PropTypes.func.isRequired,\n    subscribe: PropTypes.func.isRequired,\n  }).isRequired,\n  dataSource: PropTypes.shape({\n    getImageIdsForDisplaySet: PropTypes.func.isRequired,\n  }).isRequired,\n  getImageSrc: PropTypes.func.isRequired,\n  getStudiesForPatientByStudyInstanceUID: PropTypes.func.isRequired,\n  requestDisplaySetCreationForStudy: PropTypes.func.isRequired,\n};\n\nexport default PanelStudyBrowserTracking;\n\n/**\n * Maps from the DataSource's format to a naturalized object\n *\n * @param {*} studies\n */\nfunction _mapDataSourceStudies(studies) {\n  return studies.map(study => {\n    // TODO: Why does the data source return in this format?\n    return {\n      AccessionNumber: study.accession,\n      StudyDate: study.date,\n      StudyDescription: study.description,\n      NumInstances: study.instances,\n      ModalitiesInStudy: study.modalities,\n      PatientID: study.mrn,\n      PatientName: study.patientName,\n      StudyInstanceUID: study.studyInstanceUid,\n      StudyTime: study.time,\n    };\n  });\n}\n\nfunction _mapDisplaySets(\n  displaySets,\n  thumbnailImageSrcMap,\n  viewports, // TODO: make array of `displaySetInstanceUIDs`?\n  isSingleViewport,\n  dataSource,\n  DisplaySetService,\n  UIDialogService,\n  UINotificationService\n) {\n  const thumbnailDisplaySets = [];\n  const thumbnailNoImageDisplaySets = [];\n  displaySets.forEach(ds => {\n    const imageSrc = thumbnailImageSrcMap[ds.displaySetInstanceUID];\n    const componentType = _getComponentType(ds.Modality);\n    const viewportIdentificator = isSingleViewport\n      ? []\n      : viewports.reduce((acc, viewportData, index) => {\n          if (\n            viewportData?.displaySetInstanceUIDs?.includes(\n              ds.displaySetInstanceUID\n            )\n          ) {\n            acc.push(viewportData.viewportLabel);\n          }\n          return acc;\n        }, []);\n\n    const array =\n      componentType === 'thumbnailTracked'\n        ? thumbnailDisplaySets\n        : thumbnailNoImageDisplaySets;\n\n    const { displaySetInstanceUID } = ds;\n\n    const thumbnailProps = {\n      displaySetInstanceUID,\n      description: ds.SeriesDescription,\n      seriesNumber: String(ds.SeriesNumber),\n      modality: ds.Modality,\n      seriesDate: formatDate(ds.SeriesDate),\n      numInstances: ds.numImageFrames,\n      StudyInstanceUID: ds.StudyInstanceUID,\n      componentType,\n      imageSrc,\n      dragData: {\n        type: 'displayset',\n        displaySetInstanceUID,\n        // .. Any other data to pass\n      },\n      viewportIdentificator,\n    };\n\n    if (componentType === 'thumbnailNoImage') {\n      if (dataSource.reject && dataSource.reject.series) {\n        thumbnailProps.canReject = true;\n        thumbnailProps.onReject = () => {\n          UIDialogService.create({\n            id: 'ds-reject-sr',\n            centralize: true,\n            isDraggable: false,\n            showOverlay: true,\n            content: Dialog,\n            contentProps: {\n              title: 'Delete Report',\n              body: () => (\n                <div className=\"p-4 text-white bg-primary-dark\">\n                  <p>Are you sure you want to delete this report?</p>\n                  <p>This action cannot be undone.</p>\n                </div>\n              ),\n              actions: [\n                { id: 'cancel', text: 'Cancel', type: 'secondary' },\n                {\n                  id: 'yes',\n                  text: 'Yes',\n                  type: 'primary',\n                  classes: ['reject-yes-button'],\n                },\n              ],\n              onClose: () => UIDialogService.dismiss({ id: 'ds-reject-sr' }),\n              onShow: () => {\n                const yesButton = document.querySelector('.reject-yes-button');\n\n                yesButton.focus();\n              },\n              onSubmit: async ({ action }) => {\n                switch (action.id) {\n                  case 'yes':\n                    try {\n                      await dataSource.reject.series(\n                        ds.StudyInstanceUID,\n                        ds.SeriesInstanceUID\n                      );\n                      DisplaySetService.deleteDisplaySet(displaySetInstanceUID);\n                      UIDialogService.dismiss({ id: 'ds-reject-sr' });\n                      UINotificationService.show({\n                        title: 'Delete Report',\n                        message: 'Report deleted successfully',\n                        type: 'success',\n                      });\n                    } catch (error) {\n                      UIDialogService.dismiss({ id: 'ds-reject-sr' });\n                      UINotificationService.show({\n                        title: 'Delete Report',\n                        message: 'Failed to delete report',\n                        type: 'error',\n                      });\n                    }\n                    break;\n                  case 'cancel':\n                    UIDialogService.dismiss({ id: 'ds-reject-sr' });\n                    break;\n                }\n              },\n            },\n          });\n        };\n      } else {\n        thumbnailProps.canReject = false;\n      }\n    }\n\n    array.push(thumbnailProps);\n  });\n\n  return [...thumbnailDisplaySets, ...thumbnailNoImageDisplaySets];\n}\n\nconst thumbnailNoImageModalities = [\n  'SR',\n  'SEG',\n  'RTSTRUCT',\n  'RTPLAN',\n  'RTDOSE',\n];\n\nfunction _getComponentType(Modality) {\n  if (thumbnailNoImageModalities.includes(Modality)) {\n    return 'thumbnailNoImage';\n  }\n\n  return 'thumbnailTracked';\n}\n\nconst _viewportLabels = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\n\n/**\n *\n * @param {string[]} primaryStudyInstanceUIDs\n * @param {object[]} studyDisplayList\n * @param {string} studyDisplayList.studyInstanceUid\n * @param {string} studyDisplayList.date\n * @param {string} studyDisplayList.description\n * @param {string} studyDisplayList.modalities\n * @param {number} studyDisplayList.numInstances\n * @param {object[]} displaySets\n * @returns tabs - The prop object expected by the StudyBrowser component\n */\nfunction _createStudyBrowserTabs(\n  primaryStudyInstanceUIDs,\n  studyDisplayList,\n  displaySets\n) {\n  const primaryStudies = [];\n  const recentStudies = [];\n  const allStudies = [];\n\n  // Iterate over each study...\n  studyDisplayList.forEach(study => {\n    // Find it's display sets\n    const displaySetsForStudy = displaySets.filter(\n      ds => ds.StudyInstanceUID === study.studyInstanceUid\n    );\n\n    // Sort them\n    const sortedDisplaySetsForStudy = utils.sortBySeriesDate(\n      displaySetsForStudy\n    );\n\n    /* Sort by series number, then by series date\n      displaySetsForStudy.sort((a, b) => {\n        if (a.seriesNumber !== b.seriesNumber) {\n          return a.seriesNumber - b.seriesNumber;\n        }\n\n        const seriesDateA = Date.parse(a.seriesDate);\n        const seriesDateB = Date.parse(b.seriesDate);\n\n        return seriesDateA - seriesDateB;\n      });\n    */\n\n    // Map the study to it's tab/view representation\n    const tabStudy = Object.assign({}, study, {\n      displaySets: displaySetsForStudy,\n    });\n\n    // Add the \"tab study\" to the 'primary', 'recent', and/or 'all' tab group(s)\n    if (primaryStudyInstanceUIDs.includes(study.studyInstanceUid)) {\n      primaryStudies.push(tabStudy);\n      allStudies.push(tabStudy);\n    } else {\n      // TODO: Filter allStudies to dates within one year of current date\n      recentStudies.push(tabStudy);\n      allStudies.push(tabStudy);\n    }\n  });\n\n  // Newest first\n  const _byDate = (a, b) => {\n    const dateA = Date.parse(a);\n    const dateB = Date.parse(b);\n\n    return dateB - dateA;\n  };\n\n  const tabs = [\n    {\n      name: 'primary',\n      label: 'Primary',\n      studies: primaryStudies.sort((studyA, studyB) =>\n        _byDate(studyA.date, studyB.date)\n      ),\n    },\n    {\n      name: 'recent',\n      label: 'Recent',\n      studies: recentStudies.sort((studyA, studyB) =>\n        _byDate(studyA.date, studyB.date)\n      ),\n    },\n    {\n      name: 'all',\n      label: 'All',\n      studies: allStudies.sort((studyA, studyB) =>\n        _byDate(studyA.date, studyB.date)\n      ),\n    },\n  ];\n\n  return tabs;\n}\n\nfunction _findTabAndStudyOfDisplaySet(displaySetInstanceUID, tabs) {\n  for (let t = 0; t < tabs.length; t++) {\n    const { studies } = tabs[t];\n\n    for (let s = 0; s < studies.length; s++) {\n      const { displaySets } = studies[s];\n\n      for (let d = 0; d < displaySets.length; d++) {\n        const displaySet = displaySets[d];\n\n        if (displaySet.displaySetInstanceUID === displaySetInstanceUID) {\n          return {\n            tabName: tabs[t].name,\n            StudyInstanceUID: studies[s].studyInstanceUid,\n          };\n        }\n      }\n    }\n  }\n}\n","/**\n * @param {*} cornerstone\n * @param {*} imageId\n */\nfunction getImageSrcFromImageId(cornerstone, imageId) {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    cornerstone.utilities\n      .loadImageToCanvas(canvas, imageId)\n      .then(imageId => {\n        resolve(canvas.toDataURL());\n      })\n      .catch(reject);\n  });\n}\n\nexport default getImageSrcFromImageId;\n","function requestDisplaySetCreationForStudy(\n  dataSource,\n  DisplaySetService,\n  StudyInstanceUID,\n  madeInClient\n) {\n  if (\n    DisplaySetService.activeDisplaySets.some(\n      displaySet => displaySet.StudyInstanceUID === StudyInstanceUID\n    )\n  ) {\n    return;\n  }\n\n  dataSource.retrieve.series.metadata({ StudyInstanceUID, madeInClient });\n}\n\nexport default requestDisplaySetCreationForStudy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport PanelStudyBrowserTracking from './PanelStudyBrowserTracking';\nimport getImageSrcFromImageId from './getImageSrcFromImageId';\nimport requestDisplaySetCreationForStudy from './requestDisplaySetCreationForStudy';\n\nfunction _getStudyForPatientUtility(extensionManager) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-default.utilityModule.common'\n  );\n\n  const { getStudiesForPatientByStudyInstanceUID } = utilityModule.exports;\n  return getStudiesForPatientByStudyInstanceUID;\n}\n\n/**\n * Wraps the PanelStudyBrowser and provides features afforded by managers/services\n *\n * @param {object} params\n * @param {object} commandsManager\n * @param {object} extensionManager\n */\nfunction WrappedPanelStudyBrowserTracking({\n  commandsManager,\n  extensionManager,\n  servicesManager,\n}) {\n  const dataSource = extensionManager.getActiveDataSource()[0];\n\n  const getStudiesForPatientByStudyInstanceUID = _getStudyForPatientUtility(\n    extensionManager\n  );\n  const _getStudiesForPatientByStudyInstanceUID = getStudiesForPatientByStudyInstanceUID.bind(\n    null,\n    dataSource\n  );\n  const _getImageSrcFromImageId = _createGetImageSrcFromImageIdFn(\n    extensionManager\n  );\n  const _requestDisplaySetCreationForStudy = requestDisplaySetCreationForStudy.bind(\n    null,\n    dataSource\n  );\n\n  return (\n    <PanelStudyBrowserTracking\n      MeasurementService={servicesManager.services.MeasurementService}\n      DisplaySetService={servicesManager.services.DisplaySetService}\n      UIDialogService={servicesManager.services.UIDialogService}\n      UINotificationService={servicesManager.services.UINotificationService}\n      dataSource={dataSource}\n      getImageSrc={_getImageSrcFromImageId}\n      getStudiesForPatientByStudyInstanceUID={\n        _getStudiesForPatientByStudyInstanceUID\n      }\n      requestDisplaySetCreationForStudy={_requestDisplaySetCreationForStudy}\n    />\n  );\n}\n\n/**\n * Grabs cornerstone library reference using a dependent command from\n * the @ohif/extension-cornerstone extension. Then creates a helper function\n * that can take an imageId and return an image src.\n *\n * @param {func} getCommand - CommandManager's getCommand method\n * @returns {func} getImageSrcFromImageId - A utility function powered by\n * cornerstone\n */\nfunction _createGetImageSrcFromImageIdFn(extensionManager) {\n  const utilities = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.common'\n  );\n\n  try {\n    const { cornerstone } = utilities.exports.getCornerstoneLibraries();\n    return getImageSrcFromImageId.bind(null, cornerstone);\n  } catch (ex) {\n    throw new Error('Required command not found');\n  }\n}\n\nWrappedPanelStudyBrowserTracking.propTypes = {\n  commandsManager: PropTypes.object.isRequired,\n  extensionManager: PropTypes.object.isRequired,\n  servicesManager: PropTypes.object.isRequired,\n};\n\nexport default WrappedPanelStudyBrowserTracking;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StudySummary,\n  MeasurementTable,\n  Dialog,\n  Input,\n  useViewportGrid,\n} from '@ohif/ui';\nimport { DicomMetadataStore, utils } from '@ohif/core';\n\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n\nconst { downloadCSVReport } = utils;\nconst { formatDate } = utils;\n\nconst DISPLAY_STUDY_SUMMARY_INITIAL_VALUE = {\n  key: undefined, //\n  date: undefined, // '07-Sep-2010',\n  modality: undefined, // 'CT',\n  description: undefined, // 'CHEST/ABD/PELVIS W CONTRAST',\n};\n\nfunction PanelMeasurementTableTracking({ servicesManager, extensionManager }) {\n  const [viewportGrid, viewportGridService] = useViewportGrid();\n  const [measurementChangeTimestamp, setMeasurementsUpdated] = useState(\n    Date.now().toString()\n  );\n  const debouncedMeasurementChangeTimestamp = useDebounce(\n    measurementChangeTimestamp,\n    200\n  );\n  const {\n    MeasurementService,\n    UIDialogService,\n    DisplaySetService,\n  } = servicesManager.services;\n\n  const [displayStudySummary, setDisplayStudySummary] = useState(\n    DISPLAY_STUDY_SUMMARY_INITIAL_VALUE\n  );\n  const [displayMeasurements, setDisplayMeasurements] = useState([]);\n\n  useEffect(() => {\n    const measurements = MeasurementService.getMeasurements();\n\n    const mappedMeasurements = measurements.map(m =>\n      _mapMeasurementToDisplay(\n        m,\n        MeasurementService.VALUE_TYPES,\n        DisplaySetService\n      )\n    );\n    setDisplayMeasurements(mappedMeasurements);\n    // eslint-ignore-next-line\n  }, [\n    MeasurementService,\n    debouncedMeasurementChangeTimestamp,\n  ]);\n\n\n  // ~~ DisplayStudySummary\n  useEffect(() => {\n    setDisplayStudySummary(DISPLAY_STUDY_SUMMARY_INITIAL_VALUE);\n  }, [\n    displayStudySummary.key,\n  ]);\n\n  // TODO: Better way to consolidated, debounce, check on change?\n  // Are we exposing the right API for measurementService?\n  // This watches for ALL MeasurementService changes. It updates a timestamp,\n  // which is debounced. After a brief period of inactivity, this triggers\n  // a re-render where we grab up-to-date measurements\n  useEffect(() => {\n    const added = MeasurementService.EVENTS.MEASUREMENT_ADDED;\n    const addedRaw = MeasurementService.EVENTS.RAW_MEASUREMENT_ADDED;\n    const updated = MeasurementService.EVENTS.MEASUREMENT_UPDATED;\n    const removed = MeasurementService.EVENTS.MEASUREMENT_REMOVED;\n    const cleared = MeasurementService.EVENTS.MEASUREMENTS_CLEARED;\n    const subscriptions = [];\n\n    [added, addedRaw, updated, removed, cleared].forEach(evt => {\n      subscriptions.push(\n        MeasurementService.subscribe(evt, () => {\n          setMeasurementsUpdated(Date.now().toString());\n        }).unsubscribe\n      );\n    });\n\n    return () => {\n      subscriptions.forEach(unsub => {\n        unsub();\n      });\n    };\n  }, [MeasurementService]);\n\n  async function exportReport() {\n    const measurements = MeasurementService.getMeasurements();\n    downloadCSVReport(measurements, MeasurementService);\n  }\n\n  const jumpToImage = ({ uid, isActive }) => {\n    MeasurementService.jumpToMeasurement(viewportGrid.activeViewportId, uid);\n\n    onMeasurementItemClickHandler({ uid, isActive });\n  };\n\n  const onMeasurementItemEditHandler = ({ uid, isActive }) => {\n    const measurement = MeasurementService.getMeasurement(uid);\n    jumpToImage({ uid, isActive });\n\n    const onSubmitHandler = ({ action, value }) => {\n      switch (action.id) {\n        case 'save': {\n          MeasurementService.update(\n            uid,\n            {\n              ...measurement,\n              ...value,\n            },\n            true\n          );\n        }\n      }\n      UIDialogService.dismiss({ id: 'enter-annotation' });\n    };\n\n    UIDialogService.create({\n      id: 'enter-annotation',\n      centralize: true,\n      isDraggable: false,\n      showOverlay: true,\n      content: Dialog,\n      contentProps: {\n        title: 'Enter your annotation',\n        noCloseButton: true,\n        value: { label: measurement.label || '' },\n        body: ({ value, setValue }) => {\n          const onChangeHandler = event => {\n            event.persist();\n            setValue(value => ({ ...value, label: event.target.value }));\n          };\n\n          const onKeyPressHandler = event => {\n            if (event.key === 'Enter') {\n              onSubmitHandler({ value, action: { id: 'save' } });\n            }\n          };\n          return (\n            <div className=\"p-4 bg-primary-dark\">\n              <Input\n                autoFocus\n                className=\"mt-2 bg-black border-primary-main\"\n                type=\"text\"\n                containerClassName=\"mr-2\"\n                value={value.label}\n                onChange={onChangeHandler}\n                onKeyPress={onKeyPressHandler}\n              />\n            </div>\n          );\n        },\n        actions: [\n          // temp: swap button types until colors are updated\n          { id: 'cancel', text: 'Cancel', type: 'primary' },\n          { id: 'save', text: 'Save', type: 'secondary' },\n        ],\n        onSubmit: onSubmitHandler,\n      },\n    });\n  };\n\n  const onMeasurementItemClickHandler = ({ uid, isActive }) => {\n    if (!isActive) {\n      const measurements = [...displayMeasurements];\n      const measurement = measurements.find(m => m.uid === uid);\n\n      measurements.forEach(m => (m.isActive = m.uid !== uid ? false : true));\n      measurement.isActive = true;\n      setDisplayMeasurements(measurements);\n    }\n  };\n\n  const onMeasurementDeleteHandler = ({ uid }) => {\n    MeasurementService.remove(uid)\n  }\n\n  const displayMeasurementsWithoutFindings = displayMeasurements.filter(\n    dm => dm.measurementType !== MeasurementService.VALUE_TYPES.POINT\n  );\n  const additionalFindings = displayMeasurements.filter(\n    dm => dm.measurementType === MeasurementService.VALUE_TYPES.POINT\n  );\n\n  return (\n    <>\n      <div\n        className=\"overflow-x-hidden overflow-y-auto invisible-scrollbar\"\n        data-cy={'trackedMeasurements-panel'}\n      >\n        {displayStudySummary.key && (\n          <StudySummary\n            date={formatDate(displayStudySummary.date)}\n            modality={displayStudySummary.modality}\n            description={displayStudySummary.description}\n          />\n        )}\n        <MeasurementTable\n          title=\"Measurements\"\n          amount={displayMeasurementsWithoutFindings.length}\n          data={displayMeasurementsWithoutFindings}\n          onClick={jumpToImage}\n          onEdit={onMeasurementItemEditHandler}\n          onDelete={onMeasurementDeleteHandler}\n        />\n        {additionalFindings.length !== 0 && (\n          <MeasurementTable\n            title=\"Additional Findings\"\n            amount={additionalFindings.length}\n            data={additionalFindings}\n            onClick={jumpToImage}\n            onDelete={onMeasurementDeleteHandler}\n            />\n        )}\n      </div>\n    </>\n  );\n}\n\nPanelMeasurementTableTracking.propTypes = {\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n      MeasurementService: PropTypes.shape({\n        getMeasurements: PropTypes.func.isRequired,\n        VALUE_TYPES: PropTypes.object.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\n// TODO: This could be a MeasurementService mapper\nfunction _mapMeasurementToDisplay(measurement, types, DisplaySetService) {\n  const { referenceStudyUID, referenceSeriesUID, SOPInstanceUID } = measurement;\n\n  // TODO: We don't deal with multiframe well yet, would need to update\n  // This in OHIF-312 when we add FrameIndex to measurements.\n\n  const instance = DicomMetadataStore.getInstance(\n    referenceStudyUID,\n    referenceSeriesUID,\n    SOPInstanceUID\n  );\n\n  const displaySets = DisplaySetService.getDisplaySetsForSeries(\n    referenceSeriesUID\n  );\n\n  if (!displaySets[0] || !displaySets[0].images) {\n    throw new Error(\n      'The tracked measurements panel should only be tracking \"stack\" displaySets.'\n    );\n  }\n\n  const { displayText } = measurement;\n  return {\n    uid: measurement.uid,\n    label: measurement.label || '(empty)',\n    measurementType: measurement.type,\n    displayText: displayText || [],\n    isActive: false, // activeMeasurementItem === i + 1,\n  };\n}\n\nexport default PanelMeasurementTableTracking;\n","import * as React from 'react';\nimport Rating from '@mui/material/Rating';\nimport Paper from '@mui/material/Paper';\nimport StarIcon from '@mui/icons-material/Star';\nimport Typography from '@mui/material/Typography';\n\nexport default function RatingSelector({ formIndex, name, value, defaultValue, options, onChange }) {\n  const { labels, precision, max } = options\n\n  const getKeyFromValue = (v)=>{\n    if(v == null) return null\n\n    const obj = Object.keys(labels).map((key, idx)=>{\n      return {key: key, value: labels[key].value}\n    }).find((ele)=>{\n      return ele.value == v\n    })\n\n    if(obj) return Number(obj.key)\n    return null\n  }\n\n  const [val, setVal] = React.useState(value !== null ? getKeyFromValue(value): getKeyFromValue(defaultValue));  \n  const [hover, setHover] = React.useState(-1);\n\n  return (\n    <Paper className='p-2'>\n      <div>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          { name }\n        </Typography>\n        <Typography variant=\"h6\" component=\"div\">\n          { (val !== null || hover !== -1) ? labels[hover !== -1 ? hover : val].value : '?' }\n        </Typography>\n        <Typography variant=\"body2\">\n          { (val !== null || hover !== -1) ? labels[hover !== -1 ? hover : val].description : 'Please Select'}\n        </Typography>\n      </div>\n      <Rating\n        name=\"hover-feedback\"\n        value={val}\n        precision={precision}\n        max={max}\n        onChange={(event, newValue) => {\n          onChange({ formIndex: formIndex, value: newValue ? labels[newValue].value : newValue })\n          setVal(newValue);\n        }}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n        emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\n      />\n    </Paper>\n  );\n}\n","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\n\nexport default function GridSelector({ formIndex, name, value, defaultValue, options, onChange }) {\n  const { labels, cols } = options\n  const [val, setVal] = React.useState(value !== null ? value : defaultValue);  \n  React.useEffect(()=>{\n    setVal(value !== null ? value : defaultValue)\n  }, [value])\n\n  return (\n    <Paper className='p-2'>\n      <div>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          { name }\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\">\n          { Boolean(labels.find(ele=>(ele.value==val)))  ? labels.find(ele=>(ele.value==val)).description : '?' }\n        </Typography>\n      </div>\n      { \n        labels.reduce((all,one,i) => {\n           const ch = Math.floor(i/(cols || 3)); \n           all[ch] = [].concat((all[ch]||[]),one); \n           return all\n        }, []).map((chunk, idx) => {\n          return <RadioGroup\n            row\n            key={idx}\n            name=\"grid-select-row\"\n            value={val}\n            onChange={(event, newValue) => {\n              onChange({ formIndex: formIndex, value: newValue})\n              setVal(newValue);\n            }}\n          >\n            {\n              chunk.map((label, idx) => {\n                return <FormControlLabel key={idx} value={label.value} control={<Radio />} label={label.value} />\n              })\n            }\n          </RadioGroup>\n        })\n      }\n    </Paper>\n  );\n}","import * as React from 'react';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\n\nexport default function CheckboxLabels({formIndex, name, value, defaultValue, options, onChange}) {\n  \n  let checked\n  if(value !== null){\n    checked = Boolean(value)\n  } else {\n    checked = Boolean(defaultValue)\n    onChange({ formIndex: formIndex, value: checked })\n  }\n\n  return (\n    <Paper className='p-2'>\n        <FormGroup>\n            <FormControlLabel \n              control={\n                <Checkbox \n                    checked = { checked }\n                    onChange={ (evt)=> onChange({ formIndex: formIndex, value: evt.target.checked }) }\n                />\n              } \n              label={\n                <Typography variant=\"body2\" color=\"textSecondary\">{name}</Typography>\n              }/>\n        </FormGroup>\n    </Paper>\n  );\n}","import * as React from 'react';\nimport { useMemo } from 'react';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport debounce from 'lodash.debounce';\n\nexport default function Textarea({formIndex, name, value, defaultValue, options, onChange}) {\n  const [val, setVal] = React.useState(value !== null ? value : (defaultValue !== null ? defaultValue : ''));  \n  const { rows } = options\n  const debouncedOnChange = useMemo(\n    () => debounce((formIndex, value) => {\n      onChange({formIndex, value})\n    }, 600), [onChange]\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setVal(event.target.value);\n    debouncedOnChange(formIndex, event.target.value)\n  };\n\n  return (\n    <Paper className='p-2'>\n      <TextField\n        id=\"outlined-multiline-flexible\"\n        inputProps={{style: {fontSize: '0.75em'}}}\n        label={name}\n        multiline\n        rows={ rows }\n        value={val}\n        fullWidth={true}\n        margin={'dense'}\n        size={'small'}\n        onChange={handleChange}\n      />\n    </Paper>\n  );\n}","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\n\nexport default function DisplayValue({formIndex, name, value, defaultValue, options}) {\n  return (\n    <Paper sx={{ display: 'flex' }} className='p-2'>\n        <Typography sx={{ fontSize: 14, marginRight: 1 }} color=\"text.secondary\" gutterBottom>\n          { name }:\n        </Typography>\n        <Typography variant=\"body2\">\n          { value !== null ? value.toString() : defaultValue !== null ? defaultValue.toString() : '' } \n        </Typography>\n    </Paper>\n  );\n}","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport CardHeader from '@mui/material/CardHeader';\nimport Avatar from '@mui/material/Avatar';\n\nfunction dhm(t) {\n    var cd = 24 * 60 * 60 * 1000,\n        ch = 60 * 60 * 1000,\n        d = Math.floor(t / cd),\n        h = Math.floor( (t - d * cd) / ch),\n        m = Math.round( (t - d * cd - h * ch) / 60000)\n  if( m === 60 ){\n    h++;\n    m = 0;\n  }\n  if( h === 24 ){\n    d++;\n    h = 0;\n  }\n  return [d, h, m]\n}\n\nexport default function UserProfile({value}) {\n    const getDateText = (lastUpdated) => {\n        const [days, hours, minutes] = dhm(Date.now() - lastUpdated)\n\n        if(days > 7){\n            return (new Date(lastUpdated)).toLocaleDateString('en-us', { year:\"numeric\", month:\"short\", day:\"numeric\"})\n        }\n        if(days > 2){\n            return `${days} days ago`\n        }\n        if(hours > 2){\n            return `${hours} hours ago`\n        }\n        if(minutes > 2){\n            return `${minutes} mins ago`\n        }\n        return `just now`\n    }\n\n    try{\n        value = JSON.parse(value)\n    } catch (e){\n        console.error(e, value)\n        value = null\n    }\n    \n    if(value){\n        return (\n            <Paper>\n                <CardHeader\n                    sx={{\n                        \"& .MuiCardHeader-content\": {\n                            overflow: \"hidden\"\n                        }\n                    }}\n                    avatar={\n                        <Avatar \n                            imgProps={{\n                                crossOrigin: \"anonymous\",\n                                referrerPolicy: \"no-referrer\"\n                            }}\n                            src={ value.picture }/>\n                    }\n                    title={ value.email }\n                    subheader={ `Updated ${getDateText(value.lastUpdated)}` }\n                />\n            </Paper>\n        );\n    }\n    return (\n        <Paper>\n            <CardHeader\n                sx={{\n                    \"& .MuiCardHeader-content\": {\n                        overflow: \"hidden\"\n                    }\n                }}\n                avatar={\n                    <Avatar/>\n                }\n                title={ '----' }\n                subheader={ `No last update` }\n            />\n        </Paper>\n    )\n}","import React from 'react';\nimport RatingSelector from './fields/RatingSelector'\nimport GridSelector from './fields/GridSelector'\nimport Checkbox from './fields/Checkbox'\nimport Textarea from './fields/Textarea'\nimport DisplayValue from './fields/DisplayValue'\nimport UserProfile from './fields/UserProfile'\n\nfunction FormGeneratorComponent({ formTemplate, formValue, setFormValue }) {\n  const onChangeHandler = ({formIndex, value}) => {\n    const newFormValue = [...formValue]\n    newFormValue[formIndex] = value\n    setFormValue([...newFormValue]);\n  }\n  \n  if(formTemplate){\n    // We assume a valid formTemplate\n    const inputs = formTemplate.map((ele, idx) => {\n      switch(ele.type) {\n        case 'checkbox':\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <Checkbox formIndex={idx} name={ele.name} options={ele.template} defaultValue={ele.defaultValue} value={formValue[idx]} onChange={onChangeHandler}/>\n            </div>\n          )\n        case 'rating':\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <RatingSelector formIndex={idx} name={ele.name} options={ele.template} defaultValue={ele.defaultValue} value={formValue[idx]} onChange={onChangeHandler}/>\n            </div>\n          )\n        case 'grid':\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <GridSelector formIndex={idx} name={ele.name} options={ele.template} defaultValue={ele.defaultValue} value={formValue[idx]} onChange={onChangeHandler}/>\n            </div>\n          )\n        case 'textarea':\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <Textarea formIndex={idx} name={ele.name} options={ele.template} defaultValue={ele.defaultValue} value={formValue[idx]} onChange={onChangeHandler}/>\n            </div>\n          )\n        case 'user_profile':\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <UserProfile value={formValue[idx]}/>\n            </div>\n          )\n        default:\n          return (\n            <div key={idx} className=\"p-2 bg-primary-dark\">\n              <DisplayValue formIndex={idx} name={ele.name} options={ele.template} defaultValue={ele.defaultValue} value={formValue[idx]}/>\n            </div>\n          )      \n      }\n    })\n\n    return (<div>\n      {inputs}\n    </div>)\n  }\n\n  return null\n}\n\nexport default FormGeneratorComponent;\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport FormGeneratorComponent from '../../_shared/FormGeneratorComponent';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport ArrowForward from '@mui/icons-material/ArrowForward';\nimport ArrowBack from '@mui/icons-material/ArrowBack';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport debounce from 'lodash.debounce';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction PanelForm({ servicesManager, extensionManager }) {\n  const { GoogleSheetsService } = servicesManager.services\n  const [formTemplate, setFormTemplate] = useState(GoogleSheetsService.getFormTemplate());\n  const [formValue, setFormValue] = useState(GoogleSheetsService.getFormValue());\n  const [error, setError] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [initLoading, setInitLoading] = useState(!Boolean(formValue && formTemplate));\n  const [loading, setLoading] = useState(false);\n  const onNext = ()=> GoogleSheetsService.getRow(1)\n  const onPrevious = ()=> GoogleSheetsService.getRow(-1)\n  const debouncedOnNext = useMemo(() => debounce(onNext, 300), []);\n  const debouncedOnPrevious = useMemo(() => debounce(onPrevious, 300), []);\n\n  useEffect(() => {\n    const subscriptions = [];\n    subscriptions.push(\n      GoogleSheetsService.subscribe(GoogleSheetsService.EVENTS.GOOGLE_SHEETS_CHANGE, () => {\n        setFirstLoad(true)\n        setFormValue(GoogleSheetsService.getFormValue())\n        setFormTemplate(GoogleSheetsService.getFormTemplate())\n        setInitLoading(false)\n      }).unsubscribe\n    );\n\n    subscriptions.push(\n      GoogleSheetsService.subscribe(GoogleSheetsService.EVENTS.GOOGLE_SHEETS_ERROR, () => {\n        setError(true)\n      }).unsubscribe\n    );\n    return () => { subscriptions.forEach(unsub=>unsub()) };\n  }, [GoogleSheetsService]);\n\n  useEffect(() => {\n    if(!firstLoad){\n      setLoading(true)\n      GoogleSheetsService.writeFormToRow(formValue).then((values)=>{\n        setLoading(false)\n      })\n    }\n    setFirstLoad(false)\n  }, [formValue]);\n\n  if(error){\n    return (\n      <Paper sx={{ display: 'flex' }} className='p-2'>\n          <Typography sx={{ fontSize: 14, marginRight: 1 }} color=\"text.secondary\" gutterBottom>\n            { \"There was an error connecting to Google Sheets.\" }\n          </Typography>\n      </Paper>\n    )\n  }\n\n  if(!initLoading){\n    return (\n      <> \n        <div style={{color:\"white\", overflow: \"auto\"}}>\n            { loading ? <LinearProgress/> : <div style={{height: '4px'}}></div> }\n            <FormGeneratorComponent\n                formTemplate={formTemplate} \n                formValue={formValue}\n                setFormValue={setFormValue}/>\n        </div>\n        <div className=\"flex justify-center p-4\">\n          <Paper>\n            <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n              <LoadingButton\n                loading={loading}\n                loadingPosition=\"start\"\n                startIcon={<ArrowBack />}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={debouncedOnPrevious}\n              >\n                Prev\n              </LoadingButton>\n              <LoadingButton\n                loading={loading}\n                loadingPosition=\"end\"\n                endIcon={<ArrowForward />}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={debouncedOnNext}\n              >\n                Next\n              </LoadingButton>\n            </ButtonGroup>\n          </Paper>\n        </div>\n      </>\n    )\n  }\n  \n  return <LinearProgress/>\n}\n\nPanelForm.propTypes = {\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PanelForm;\n","import React from 'react';\nimport PanelForm from '../PanelForm'\nimport PanelMeasurementTableTracking from '../PanelMeasurementTableTracking';\nimport PropTypes from 'prop-types';\nimport Divider from '@mui/material/Divider';\n\nfunction PanelFormAndMeasurementTable({ servicesManager, extensionManager }) {\n    return (\n      <React.Fragment>\n          <div style={{height: \"150px\", overflowY: \"auto\"}}>\n            <PanelMeasurementTableTracking servicesManager={servicesManager} extensionManager={extensionManager}/>\n          </div>\n          <div className=\"m-2\">\n            <Divider style={{background: \"white\"}}/>\n          </div>\n          <PanelForm servicesManager={servicesManager} extensionManager={extensionManager}/>\n      </React.Fragment>\n    )\n}\n\nPanelFormAndMeasurementTable.propTypes = {\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PanelFormAndMeasurementTable;\n","import {\n  PanelMeasurementTableTracking,\n  PanelStudyBrowserTracking,\n  PanelForm,\n  PanelFormAndMeasurementTable\n} from './panels';\n\n// TODO:\n// - No loading UI exists yet\n// - cancel promises when component is destroyed\n// - show errors in UI for thumbnails if promise fails\nfunction getPanelModule({\n  commandsManager,\n  extensionManager,\n  servicesManager,\n}) {\n  return [\n    {\n      name: 'seriesList',\n      iconName: 'group-layers',\n      iconLabel: 'Studies',\n      label: 'Studies',\n      component: PanelStudyBrowserTracking.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager,\n      }),\n    },\n    {\n      name: 'measurements',\n      iconName: 'list-bullets',\n      iconLabel: 'Measure',\n      label: 'Measurements',\n      component: PanelMeasurementTableTracking.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager,\n      }),\n    },\n    {\n      name: 'form',\n      iconName: 'list-bullets',\n      iconLabel: 'Form',\n      label: 'Form',\n      component: PanelForm.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager,\n      }),\n    },\n    {\n      name: 'form-and-measurements',\n      iconName: 'list-bullets',\n      iconLabel: 'Form',\n      label: 'Form',\n      component: PanelFormAndMeasurementTable.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager,\n      }),\n    },\n  ];\n}\n\nexport default getPanelModule;\n","import React from 'react';\n\nconst Component = React.lazy(() => {\n  return import(\n    /* webpackPrefetch: true */ './viewports/GradientCornerstoneViewport'\n  );\n});\n\nconst OHIFCornerstoneViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\nfunction getViewportModule({\n  servicesManager,\n  commandsManager,\n  extensionManager,\n}) {\n  const ExtendedOHIFCornerstoneTrackingViewport = props => {\n    return (\n      <OHIFCornerstoneViewport\n        servicesManager={servicesManager}\n        commandsManager={commandsManager}\n        extensionManager={extensionManager}\n        disableViewportOrientationMarkers={true}\n        {...props}\n      />\n    );\n  };\n\n  return [\n    {\n      name: 'cornerstone-gradient',\n      component: ExtendedOHIFCornerstoneTrackingViewport,\n    },\n  ];\n}\n\nexport default getViewportModule;\n","const breastProtocol = {\n    id: 'breast',\n    locked: true,\n    hasUpdatedPriorsInformation: false,\n    name: 'Breast',\n    createdDate: '2021-02-23T19:22:08.894Z',\n    modifiedDate: '2021-02-23T19:22:08.894Z',\n    availableTo: {},\n    editableBy: {},\n    protocolMatchingRules: [],\n    displaySetSelectors: {\n      LMLO: {\n        seriesMatchingRules: [{\n          \"weight\": 5,\n          \"attribute\": \"ImageLaterality\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"L\"\n            }\n          },\n          \"required\": false\n        }, {\n          \"weight\": 5,\n          \"attribute\": \"ViewCodeSequence\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R-10226\"\n            }\n          },\n          \"required\": false\n        }],\n      },\n      LCC: {\n        seriesMatchingRules: [{\n          \"weight\": 5,\n          \"attribute\": \"ImageLaterality\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"L\"\n            }\n          },\n          \"required\": false\n        }, {\n          \"weight\": 5,\n          \"attribute\": \"ViewCodeSequence\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R-10242\"\n            }\n          },\n          \"required\": false\n        }],\n      },\n      RMLO: {\n        seriesMatchingRules: [{\n          \"weight\": 5,\n          \"attribute\": \"ImageLaterality\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R\"\n            }\n          },\n          \"required\": false\n        }, {\n          \"weight\": 5,\n          \"attribute\": \"ViewCodeSequence\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R-10226\"\n            }\n          },\n          \"required\": false\n        }],\n      },\n      RCC: {\n        seriesMatchingRules: [{\n          \"weight\": 5,\n          \"attribute\": \"ImageLaterality\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R\"\n            }\n          },\n          \"required\": false\n        }, {\n          \"weight\": 5,\n          \"attribute\": \"ViewCodeSequence\",\n          \"constraint\": {\n            \"contains\": {\n              \"value\": \"R-10242\"\n            }\n          },\n          \"required\": false\n        }],\n      }\n    },\n    toolGroupIds: ['default'],\n    stages: [\n      {\n        id: 'breast-staging',\n        name: 'Breast Staging',\n        viewportStructure: {\n          type: 'grid',\n          properties: {\n            rows: 1,\n            columns: 4,\n          },\n        },\n        viewports: [\n          {\n            viewportOptions: {\n              toolGroupId: 'default',\n            },\n            displaySets: [{ id: 'RMLO' }],\n          },\n          {\n            viewportOptions: {\n              toolGroupId: 'default',\n            },\n            displaySets: [{ id: 'LMLO' }],\n          },\n          {\n            viewportOptions: {\n              toolGroupId: 'default',\n            },\n            displaySets: [{ id: 'RCC' }],\n          },\n          {\n            viewportOptions: {\n              toolGroupId: 'default',\n            },\n            displaySets: [{ id: 'LCC' }],\n          },\n        ],\n        createdDate: '2021-02-23T18:32:42.850Z',\n      },\n    ],\n    numberOfPriorsReferenced: -1,\n};\n\nfunction getHangingProtocolModule() {\n  return [\n    {\n      name: breastProtocol.id,\n      protocol: breastProtocol,\n    },\n  ];\n}\n\nexport default getHangingProtocolModule;\n","import getWADORSImageId from './getWADORSImageId';\n\nfunction buildInstanceWadoUrl(config, instance) {\n  const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n  const params = [];\n\n  params.push('requestType=WADO');\n  params.push(`studyUID=${StudyInstanceUID}`);\n  params.push(`seriesUID=${SeriesInstanceUID}`);\n  params.push(`objectUID=${SOPInstanceUID}`);\n  params.push('contentType=application/dicom');\n  params.push('transferSyntax=*');\n\n  const paramString = params.join('&');\n\n  return `${config.wadoUriRoot}?${paramString}`;\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getImageId({\n  instance,\n  frame,\n  config,\n  thumbnail = false,\n}) {\n  if (!instance) {\n    return;\n  }\n\n  if (instance.url) {\n    return instance.url;\n  }\n\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n  if (!config[renderingAttr] || config[renderingAttr] === 'wadouri') {\n    const wadouri = buildInstanceWadoUrl(config, instance);\n\n    let imageId = 'dicomweb:' + wadouri;\n    if (frame !== undefined) {\n      imageId += '&frame=' + frame;\n    }\n\n    return imageId;\n  } else {\n    return getWADORSImageId(instance, config, frame); // WADO-RS Retrieve Frame\n  }\n}\n","function buildInstanceWadoRsUri(instance, config) {\n  const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n  return `${config.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\n}\n\nfunction buildInstanceFrameWadoRsUri(instance, config, frame) {\n  const baseWadoRsUri = buildInstanceWadoRsUri(instance, config);\n\n  frame = frame || 1;\n\n  return `${baseWadoRsUri}/frames/${frame}`;\n}\n\n// function getWADORSImageUrl(instance, frame) {\n//   const wadorsuri = buildInstanceFrameWadoRsUri(instance, config, frame);\n\n//   if (!wadorsuri) {\n//     return;\n//   }\n\n//   // Use null to obtain an imageId which represents the instance\n//   if (frame === null) {\n//     wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\n//   } else {\n//     // We need to sum 1 because WADO-RS frame number is 1-based\n//     frame = frame ? parseInt(frame) + 1 : 1;\n\n//     // Replaces /frame/1 by /frame/{frame}\n//     wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\n//   }\n\n//   return wadorsuri;\n// }\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @param {(string\\|number)} [frame] the frame number\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getWADORSImageId(instance, config, frame) {\n  //const uri = getWADORSImageUrl(instance, frame);\n  const uri = buildInstanceFrameWadoRsUri(instance, config, frame);\n\n  if (!uri) {\n    return;\n  }\n\n  return `wadors:${uri}`;\n}\n","import {\n  DicomMetadataStore,\n  IWebApiDataSource,\n  utils,\n  errorHandler,\n  classes,\n} from '@ohif/core';\n\nimport getImageId from '../DicomWebDataSource/utils/getImageId';\nimport _ from 'lodash';\n\nconst metadataProvider = classes.MetadataProvider;\n\nconst mappings = {\n  studyInstanceUid: 'StudyInstanceUID',\n  patientId: 'PatientID',\n};\n\nlet _store = {\n  urls: [],\n  studyInstanceUIDMap: new Map(), // map of urls to array of study instance UIDs\n  // {\n  //   url: url1\n  //   studies: [Study1, Study2], // if multiple studies\n  // }\n  // {\n  //   url: url2\n  //   studies: [Study1],\n  // }\n  // }\n};\n\nconst getMetaDataByURL = url => {\n  return _store.urls.find(metaData => metaData.url === url);\n};\n\nconst getInstanceUrl = (url, prefix) => {\n  let modifiedUrl = prefix\n    ? url.replace(\n      'https://storage.googleapis.com',\n      `https://storage.googleapis.com/${prefix}`\n    )\n    : url;\n\n  const dicomwebRegex = /^dicomweb:/\n  modifiedUrl = modifiedUrl.includes(\":zip//\")\n    ? modifiedUrl.replace(dicomwebRegex, 'dicomzip:')\n    : modifiedUrl;\n\n  return modifiedUrl;\n}\n\nconst getMetadataFromRows = (rows, prefix, seriesuidArray) => {\n  // TODO: bq should not have dups\n  let filteredRows = rows.map(row => {\n    row.instances = _.uniqBy(row.instances, (x)=>x.url)\n    return row\n  });\n\n  if(!_.isEmpty(seriesuidArray)){\n    filteredRows = filteredRows.filter(row=>{\n      return seriesuidArray.includes(row.SeriesInstanceUID);\n    })\n  }\n\n  const rowsByStudy = Object.values(\n    filteredRows.reduce((rowsByStudy, row) => {\n      const studyuid = row['StudyInstanceUID'];\n      if (!rowsByStudy[studyuid]) rowsByStudy[studyuid] = [];\n      rowsByStudy[studyuid].push(row);\n      return rowsByStudy;\n    }, {})\n  );\n\n  const studies = rowsByStudy.map(rows => {\n    const studyNumInstances = rows.reduce((acc, row) => {\n      return acc + (parseInt(row['NumInstances']) || 0);\n    }, 0);\n\n    const series = rows.map(row => {\n      return {\n        SeriesInstanceUID: row['SeriesInstanceUID'],\n        Modality: row['Modality'],\n        SeriesDescription: row['SeriesDescription'] || 'No description',\n        StudyInstanceUID: row['StudyInstanceUID'],\n        SeriesNumber: row['SeriesNumber'],\n        SeriesTime: row['SeriesTime'],\n        NumInstances: isNaN(parseInt(row['NumInstances']))\n          ? 0\n          : parseInt(row['NumInstances']),\n        instances: row['instances'].map(instance => {\n          return {\n            metadata: instance.metadata,\n            url: getInstanceUrl(instance.url, prefix),\n          };\n        }),\n      };\n    });\n\n    return {\n      StudyInstanceUID: rows[0]['StudyInstanceUID'],\n      PatientName: rows[0]['PatientName'],\n      PatientSex: rows[0]['PatientSex'],\n      AccessionNumber: rows[0]['AccessionNumber'],\n      StudyDate: rows[0]['StudyDate'],\n      PatientID: rows[0]['PatientID'],\n      PatientWeight: rows[0]['PatientWeight'],\n      PatientAge: rows[0]['PatientAge'],\n      StudyDescription: rows[0]['StudyDescription'] || 'No description',\n      StudyTime: rows[0]['StudyTime'],\n      NumInstances: studyNumInstances,\n      Modalities: `[\"${rows[0]['Modality']}\"]`,\n      series: series,\n    };\n  });\n  return {\n    studies: studies,\n  };\n};\n\nconst getBigQueryRows = async (studyuids, seriesuid, access_token) => {\n  const projectId = 'gradient-health-search';\n  const query = `\n    SELECT TO_JSON_STRING(t) FROM (\n      SELECT\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        PatientID,\n        StudyID,\n        Modality,\n        PatientName,\n        PatientSex,\n        AccessionNumber,\n        StudyDate,\n        PatientWeight,\n        PatientAge,\n        ParsedPatientAge,\n        StudyDescription,\n        StudyTime,\n        NumInstances,\n        SeriesDescription,\n        SeriesNumber\n        SeriesTime,\n        instances\n      FROM \\`gradient-health-search.radiology.all-viewer-links\\`\n      WHERE StudyInstanceUID IN (${studyuids.map(s => `'${s}'`).join(', ')})\n      ${seriesuid ? `AND SeriesInstanceUID = '${seriesuid}'` : ''}\n    ) as t\n  `;\n  const response = await fetch(\n    `https://bigquery.googleapis.com/bigquery/v2/projects/${projectId}/queries`,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        query: query,\n        useLegacySql: false,\n        location: 'us-central1',\n        defaultDataset: {\n          datasetId: 'radiology',\n          projectId: 'gradient-health-search',\n        },\n      }),\n      headers: {\n        Authorization: 'Bearer ' + access_token,\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const data = await response.json();\n  if (data) {\n    return data?.rows.map(row => JSON.parse(row?.f?.[0]?.v));\n  } else {\n    return undefined;\n  }\n};\n\nconst filesFromStudyInstanceUID = async ({bucketName, prefix, studyuids, headers})=>{\n  const studyMetadata = studyuids.map(async (studyuid) => {\n    const folderPath = `${prefix}/${studyuid}/`;\n    const delimiter = '/'\n    const apiUrl = `https://storage.googleapis.com/storage/v1/b/${bucketName}/o?prefix=${folderPath}&delimiter=${delimiter}`;\n    const response = await fetch(apiUrl, { headers });\n    const res = await response.json()\n    const files = res.items || [];\n    const folders = res.prefixes || [];\n    const series = folders.map(async (folderPath)=>{\n      const objectName = `${folderPath}metadata.json.gz`;\n      const apiUrl = `https://storage.googleapis.com/storage/v1/b/${bucketName}/o/${encodeURIComponent(objectName)}?alt=media`;\n      const response = await fetch(apiUrl, { headers });\n      return response.json()\n    })\n    return Promise.all(series)\n  });\n  return await Promise.all(studyMetadata)\n}\n\nconst findStudies = (key, value) => {\n  let studies = [];\n  _store.urls.map(metaData => {\n    metaData.studies.map(aStudy => {\n      if (aStudy[key] === value) {\n        studies.push(aStudy);\n      }\n    });\n  });\n  return studies;\n};\n\nlet _dicomJsonConfig = null;\n\nfunction createDicomJSONApi(dicomJsonConfig, servicesManager) {\n  var { name, wadoRoot } = dicomJsonConfig;\n  const init = config => {\n    _dicomJsonConfig = config;\n    name = _dicomJsonConfig.name;\n    wadoRoot = _dicomJsonConfig.wadoRoot;\n  };\n\n  init(dicomJsonConfig);\n\n  const implementation = {\n    updateConfig: (dicomWebConfig) => {\n      init(dicomWebConfig);\n    },\n    initialize: async ({ params, query, url }) => {\n      if (!url) url = query.get('url');\n      let metaData = getMetaDataByURL(url);\n\n      // if we have already cached the data from this specific url\n      // We are only handling one StudyInstanceUID to run; however,\n      // all studies for patientID will be put in the correct tab\n      if (metaData) {\n        return metaData.studies.map(aStudy => {\n          return aStudy.StudyInstanceUID;\n        });\n      }\n\n      const { UserAuthenticationService } = servicesManager.services;\n      const studyMetadata = await filesFromStudyInstanceUID({\n        bucketName: query.get('bucket') || 'gradient-health-search-viewer-links',\n        prefix: query.get('bucket-prefix') || 'dicomweb',\n        studyuids: query.getAll('StudyInstanceUID'),\n        headers: UserAuthenticationService.getAuthorizationHeader()\n      });\n\n      const data = getMetadataFromRows(\n        _.flatten(studyMetadata), \n        query.get('prefix'), \n        query.getAll('SeriesInstanceUID')\n      );      \n\n      let StudyInstanceUID;\n      let SeriesInstanceUID;\n      data.studies.forEach(study => {\n        StudyInstanceUID = study.StudyInstanceUID;\n\n        study.series.forEach(series => {\n          SeriesInstanceUID = series.SeriesInstanceUID;\n\n          series.instances.forEach(instance => {\n            const { url: imageId, metadata: naturalizedDicom } = instance;\n\n            // Add imageId specific mapping to this data as the URL isn't necessarliy WADO-URI.\n            metadataProvider.addImageIdToUIDs(imageId, {\n              StudyInstanceUID,\n              SeriesInstanceUID,\n              SOPInstanceUID: naturalizedDicom.SOPInstanceUID,\n            });\n          });\n        });\n      });\n\n      _store.urls.push({\n        url,\n        studies: [...data.studies],\n      });\n\n      _store.studyInstanceUIDMap.set(\n        url,\n        data.studies.map(study => study.StudyInstanceUID)\n      );\n    },\n    query: {\n      studies: {\n        mapParams: () => { },\n        search: async param => {\n          const [key, value] = Object.entries(param)[0];\n          const mappedParam = mappings[key];\n\n          // todo: should fetch from dicomMetadataStore\n          const studies = findStudies(mappedParam, value);\n\n          return studies.map(aStudy => {\n            return {\n              accession: aStudy.AccessionNumber,\n              date: aStudy.StudyDate,\n              description: aStudy.StudyDescription,\n              instances: aStudy.NumInstances,\n              modalities: aStudy.Modalities,\n              mrn: aStudy.PatientID,\n              patientName: aStudy.PatientName,\n              studyInstanceUid: aStudy.StudyInstanceUID,\n              NumInstances: aStudy.NumInstances,\n              time: aStudy.StudyTime,\n            };\n          });\n        },\n        processResults: () => {\n          console.debug(' DICOMJson QUERY processResults');\n        },\n      },\n      series: {\n        // mapParams: mapParams.bind(),\n        search: () => {\n          console.debug(' DICOMJson QUERY SERIES SEARCH');\n        },\n      },\n      instances: {\n        search: () => {\n          console.debug(' DICOMJson QUERY instances SEARCH');\n        },\n      },\n    },\n    retrieve: {\n      directURL: params => {\n        console.debug('Not implemented', params)\n      },\n      series: {\n        metadata: ({\n          StudyInstanceUID,\n          madeInClient = false,\n          customSort,\n        } = {}) => {\n          if (!StudyInstanceUID) {\n            throw new Error(\n              'Unable to query for SeriesMetadata without StudyInstanceUID'\n            );\n          }\n\n          const study = findStudies('StudyInstanceUID', StudyInstanceUID)[0];\n          let series;\n\n          if (customSort) {\n            series = customSort(study.series);\n          } else {\n            series = study.series;\n          }\n\n          const seriesSummaryMetadata = series.map(series => {\n            const seriesSummary = {\n              StudyInstanceUID: study.StudyInstanceUID,\n              ...series,\n            };\n            delete seriesSummary.instances;\n            return seriesSummary;\n          });\n\n          // Async load series, store as retrieved\n          function storeInstances(naturalizedInstances) {\n            DicomMetadataStore.addInstances(naturalizedInstances, madeInClient);\n          }\n\n          DicomMetadataStore.addSeriesMetadata(\n            seriesSummaryMetadata,\n            madeInClient\n          );\n\n          function setSuccessFlag() {\n            const study = DicomMetadataStore.getStudy(\n              StudyInstanceUID,\n              madeInClient\n            );\n            study.isLoaded = true;\n          }\n\n          const numberOfSeries = series.length;\n          series.forEach((series, index) => {\n            const instances = series.instances.map(instance => {\n              const obj = {\n                ...instance.metadata,\n                url: instance.url,\n                imageId: instance.url,\n                ...series,\n                ...study,\n              };\n              delete obj.instances;\n              delete obj.series;\n              return obj;\n            });\n            storeInstances(instances);\n            if (index === numberOfSeries - 1) setSuccessFlag();\n          });\n        },\n      },\n    },\n    store: {\n      dicom: () => {\n        console.debug(' DICOMJson store dicom');\n      },\n    },\n    getImageIdsForDisplaySet(displaySet) {\n      const images = displaySet.images;\n      const imageIds = [];\n\n      if (!images) {\n        return imageIds;\n      }\n\n      displaySet.images.forEach(instance => {\n        const NumberOfFrames = instance.NumberOfFrames;\n\n        if (NumberOfFrames > 1) {\n          for (let i = 0; i < NumberOfFrames; i++) {\n            const imageId = getImageId({\n              instance,\n              frame: i,\n              config: _dicomJsonConfig,\n            });\n            imageIds.push(imageId);\n          }\n        } else {\n          const imageId = getImageId({ instance, config: _dicomJsonConfig });\n          imageIds.push(imageId);\n        }\n      });\n\n      return imageIds;\n    },\n    getImageIdsForInstance({ instance, frame }) {\n      const imageIds = getImageId({\n        instance,\n        frame,\n      });\n      return imageIds;\n    },\n\n    getStudyInstanceUIDs: ({ params, query }) => {\n      const url = query.get('url');\n      return _store.studyInstanceUIDMap.get(url);\n    },\n  };\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createDicomJSONApi };\n","// TODO: Pull in IWebClientApi from @ohif/core\n// TODO: Use constructor to create an instance of IWebClientApi\n// TODO: Use existing DICOMWeb configuration (previously, appConfig, to configure instance)\n\nimport { createDicomJSONApi } from './DicomJSONDataSource/index.js';\n\n/**\n *\n */\nfunction getDataSourcesModule({servicesManager}) {\n  return [\n    {\n      name: 'bq',\n      type: 'jsonApi',\n      createDataSource: dicomJsonConfig => {\n        return createDicomJSONApi(dicomJsonConfig, servicesManager);\n      },\n    },\n  ];\n}\n\nexport default getDataSourcesModule;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","const letters = [\n\t\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\",\n\t\"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\",\n\t\"W\", \"X\", \"Y\", \"Z\"\n]\nlet a = [...letters]\nletters.forEach((letter_1)=>{\n    letters.forEach((letter_2)=>{\n\t\ta.push(letter_1 + letter_2)\n\t})\n})\n\nexport const alphabet = [...a]\n\n// Return array of string values, or NULL if CSV string not well formed.\nexport function CSVtoArray(text) {\n    let p = '', row = [''], ret = [row], i = 0, r = 0, s = !0, l;\n    for (l of text) {\n        if ('\"' === l) {\n            if (s && l === p) row[i] += l;\n            s = !s;\n        } else if (',' === l && s) l = row[++i] = '';\n        else if ('\\n' === l && s) {\n            if ('\\r' === p) row[i] = row[i].slice(0, -1);\n            row = ret[++r] = [l = '']; i = 0;\n        } else row[i] += l;\n        p = l;\n    }\n    return ret;\n};\n\n","import { DicomMetadataStore, pubSubServiceInterface } from '@ohif/core';\nimport { alphabet } from './utils';\n\nconst MAX_ROWS = 100000;\n\nconst EVENTS = {\n  GOOGLE_SHEETS_CHANGE: 'event::gradienthealth::GoogleSheets:FormChange',\n  GOOGLE_SHEETS_ERROR: 'event::gradienthealth::GoogleSheets:Error',\n  GOOGLE_SHEETS_DESTROY: 'event::gradienthealth::GoogleSheets:Destroy',\n};\n\nconst convertFormValues = (v) => {\n  switch (v) {\n    case 'TRUE':\n      return true;\n    case 'FALSE':\n      return false;\n    case 'YES':\n      return true;\n    case 'NO':\n      return false;\n    case '':\n      return null;\n    case undefined:\n      return null;\n  }\n  return v;\n};\n\nexport default class GoogleSheetsService {\n  constructor(serviceManager, commandsManager, extensionManager) {\n    this.serviceManager = serviceManager;\n    this.listeners = {};\n    this.api_key = 'AIzaSyDu5Rt54oHX1w3O5kZTARz7DClaxNjTpEs'; // This is our API key\n    this.EVENTS = EVENTS;\n    this.sheetId = null;\n    this.index = null;\n    this.sheetName = null;\n    this.formTemplate = null;\n    this.formValue = null;\n    this.settings = null;\n    this.formHeader = null;\n    this.rows = null;\n    this.studyUIDToIndex = {};\n    this.extensionManager = extensionManager;\n    this.DicomMetadataStore = DicomMetadataStore;\n    Object.assign(this, pubSubServiceInterface);\n  }\n\n  cacheNearbyStudyInstanceUIDs(id, bufferBack, bufferFront) {\n    const { CacheAPIService } = this.serviceManager.services;\n    const index = this.studyUIDToIndex[id];\n    const min = index - bufferBack < 2 ? 2 : index - bufferBack;\n    const max = index + bufferFront;\n    const urlIndex = this.formHeader.findIndex((name) => name == 'URL');\n    this.rows.slice(min, max).forEach((row) => {\n      const url = row[urlIndex];\n      const params = new URLSearchParams('?' + url.split('?')[1]);\n      const StudyInstanceUID = params.get('StudyInstanceUIDs');\n      CacheAPIService.cacheStudy(StudyInstanceUID);\n    });\n  }\n\n  setFormByStudyInstanceUID(id) {\n    const index = this.studyUIDToIndex[id];\n    this.setFormByIndex(index);\n    this.cacheNearbyStudyInstanceUIDs(id, 2, 32);\n  }\n\n  setFormByIndex(index) {\n    this.index = index;\n    const rowValues = this.rows[index - 1]; // google sheets is 1-indexed\n    this.formValue = this.readFormValue(rowValues);\n    this._broadcastEvent(EVENTS.GOOGLE_SHEETS_CHANGE);\n  }\n\n  async init() {\n    try {\n      const { UserAuthenticationService } = this.serviceManager.services;\n      this.user = UserAuthenticationService.getUser();\n      const params = new URLSearchParams(window.location.search);\n\n      if (!params.get('sheetId'))\n        return this._broadcastEvent(EVENTS.GOOGLE_SHEETS_ERROR);\n      if (!params.get('sheetName'))\n        return this._broadcastEvent(EVENTS.GOOGLE_SHEETS_ERROR);\n      this.sheetId = params.get('sheetId');\n      this.sheetName = params.get('sheetName');\n\n      // Get settings config from sheets\n      this.settings = await this.readRange(1, 6, this.sheetId, 'Settings');\n\n      // Get values for current row from sheets\n      this.formHeader = (await this.readRange(1, 1)).values[0];\n\n      // TODO: Handle more than MAX_ROWS\n      this.rows = (await this.readRange(1, MAX_ROWS)).values;\n      this.formHeader = this.rows[0];\n\n      const urlIndex = this.formHeader.findIndex((name) => name == 'URL');\n      this.studyUIDToIndex = this.rows.slice(1).reduce((prev, curr, idx) => {\n        const url = curr[urlIndex];\n        const params = new URLSearchParams('?' + url.split('?')[1]);\n        const StudyInstanceUID = params.get('StudyInstanceUIDs');\n\n        // Google Sheets is 1-indexed and we ignore first row as header row thus + 2\n        prev[StudyInstanceUID] = idx + 2;\n        return prev;\n      }, {});\n\n      this.index = this.studyUIDToIndex[params.get('StudyInstanceUIDs')];\n\n      // Map formTemplate and formValue\n      const values = this.settings.values[0].map((_, colIndex) =>\n        this.settings.values.map((row) => row[colIndex])\n      );\n      const header = values[0];\n      this.formTemplate = values\n        .slice(1, -1)\n        .map((col) => {\n          return col.reduce((obj, curr, idx) => {\n            curr = convertFormValues(curr);\n\n            switch (header[idx]) {\n              case 'template':\n                try {\n                  if (curr) obj[header[idx]] = JSON.parse(curr);\n                } catch (e) {\n                  console.warn(curr, e);\n                }\n                break;\n              case 'order':\n                obj[header[idx]] = Number(curr);\n                break;\n              default:\n                obj[header[idx]] = curr;\n            }\n            return obj;\n          }, {});\n        })\n        .filter((ele) => {\n          return ele.show;\n        })\n        .sort((a, b) => a.order - b.order);\n\n      this.setFormByStudyInstanceUID(params.get('StudyInstanceUIDs'));\n    } catch (e) {\n      console.error(e);\n      this._broadcastEvent(EVENTS.GOOGLE_SHEETS_ERROR);\n    }\n  }\n\n  readFormValue(x) {\n    return this.formTemplate.map((ele) => {\n      const index = this.formHeader.findIndex((name) => name == ele.name);\n      if (index !== -1) {\n        return convertFormValues(x[index]);\n      }\n    });\n  }\n\n  async readRange(\n    min,\n    max,\n    sheetId = this.sheetId,\n    sheetName = this.sheetName\n  ) {\n    const range = `A${min}:ZZ${max}`;\n    const baseUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${sheetName}!${range}`;\n    const response = await fetch(baseUrl, {\n      headers: {\n        Authorization: 'Bearer ' + this.user['access_token'],\n      },\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  // Must be XHR to avoid sheets CORS issue\n  writeRange(sheetId, sheetName, range, values) {\n    return new Promise((resolve, reject) => {\n      let baseUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${sheetName}!${range}?valueInputOption=USER_ENTERED`;\n      var xhr = new XMLHttpRequest();\n      xhr.open('PUT', baseUrl);\n      xhr.setRequestHeader('Content-type', 'application/json');\n      xhr.setRequestHeader(\n        'Authorization',\n        'Bearer ' + this.user['access_token']\n      );\n      xhr.onload = () => {\n        if (xhr.status == 200) {\n          resolve();\n        } else {\n          reject();\n        }\n      };\n      xhr.send(\n        JSON.stringify({\n          range: `${sheetName}!${range}`,\n          majorDimension: 'ROWS',\n          values: [values],\n        })\n      );\n    });\n  }\n\n  async writeFormToRow(formValue) {\n    const values = this.formHeader.map((colName) => {\n      const index = this.formTemplate.findIndex((ele) => {\n        return colName == ele.name;\n      });\n      if (index > 0) {\n        return formValue[index];\n      }\n\n      if (colName === 'Updated By') {\n        const user =\n          this.serviceManager.services.UserAuthenticationService.getUser();\n        return JSON.stringify({\n          email: user.profile.email,\n          picture: user.profile.picture,\n          lastUpdated: Date.now(),\n        });\n      }\n      return null;\n    });\n\n    await this.writeRange(\n      this.sheetId,\n      this.sheetName,\n      `A${this.index}:${alphabet[this.formHeader.length - 1]}${this.index}`,\n      values\n    );\n    return values;\n  }\n\n  getFormTemplate() {\n    return this.formTemplate ? this.formTemplate : null;\n  }\n\n  getFormValue() {\n    return this.formValue ? this.formValue : null;\n  }\n\n  async getRow(delta) {\n    try {\n      const { DisplaySetService, HangingProtocolService, CacheAPIService } =\n        this.serviceManager.services;\n      const rowValues = this.rows[this.index + delta - 1];\n      if (!rowValues) {\n        window.location.href = `https://docs.google.com/spreadsheets/d/${this.sheetId}`;\n      }\n      const index = this.formHeader.findIndex((name) => name == 'URL');\n      const url = rowValues[index];\n      const params = new URLSearchParams('?' + url.split('?')[1]);\n      const StudyInstanceUID = params.get('StudyInstanceUIDs');\n      if (!StudyInstanceUID) {\n        window.location.href = `https://docs.google.com/spreadsheets/d/${this.sheetId}`;\n      }\n      const dataSource = this.extensionManager.getActiveDataSource()[0];\n      await dataSource.retrieve.series.metadata({ StudyInstanceUID });\n      const studies = [DicomMetadataStore.getStudy(StudyInstanceUID)];\n      HangingProtocolService.run(\n        {\n          studies,\n          activeStudy: studies[0],\n          displaySets: DisplaySetService.getActiveDisplaySets().filter(\n            (ele) => {\n              return ele.StudyInstanceUID === StudyInstanceUID;\n            }\n          ),\n        },\n        'breast'\n      );\n\n      const nextParams = new URLSearchParams(window.location.search);\n      nextParams.set('StudyInstanceUIDs', StudyInstanceUID);\n      const nextURL =\n        window.location.href.split('?')[0] + '?' + nextParams.toString();\n      window.history.replaceState({}, null, nextURL);\n      this.setFormByStudyInstanceUID(StudyInstanceUID);\n      CacheAPIService.setViewedStudy(StudyInstanceUID);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  destroy() {\n    this.sheetId = null;\n    this.index = null;\n    this.sheetName = null;\n    this.formTemplate = null;\n    this.formValue = null;\n    this._broadcastEvent(EVENTS.GOOGLE_SHEETS_ERROR);\n  }\n}\n","import { pubSubServiceInterface } from '@ohif/core';\nimport { \n    EVENTS as CS_EVENTS,\n    eventTarget as CornerstoneEventTarget,\n    getEnabledElement\n} from '@cornerstonejs/core';\n\nimport * as tf from '@tensorflow/tfjs';\nimport { IStackViewport } from '@cornerstonejs/core/dist/esm/types';\n\nconst EVENTS = {\n    CROP_DISPLAY_AREA_INIT: 'event::gradienthealth::CropDisplayAreaService:init',\n};\n\nexport default class CropDisplayAreaService {\n    private serviceManager;\n    private listeners;\n    public EVENTS;\n\n    constructor(serviceManager) {\n        this.serviceManager = serviceManager;\n        this.listeners = {};\n        this.EVENTS = EVENTS;\n        window.tf = tf;\n        Object.assign(this, pubSubServiceInterface);\n    }\n\n    init(){\n      CornerstoneEventTarget.addEventListener(CS_EVENTS.STACK_VIEWPORT_NEW_STACK, (evt)=>{\n        const { HangingProtocolService } = this.serviceManager.services\n        if(HangingProtocolService.protocol.id === 'breast') this.handleBreastDensityHP(evt)\n      })\n    }\n\n    private handleBreastDensityHP(evt){\n      const { HangingProtocolService, cornerstoneViewportService } =\n        this.serviceManager.services;\n      const { element, viewportId } = evt.detail;\n      const enabledElement = getEnabledElement(element);\n      const viewport = enabledElement?.viewport;\n      if (!viewport) return;\n\n      const { voiRange, invert } = (viewport as IStackViewport).getProperties();\n      let cutoff;\n      if (voiRange?.lower && !invert) {\n        cutoff = voiRange?.lower;\n      }\n      if (voiRange?.upper && invert) {\n        cutoff = voiRange?.upper;\n      }\n      if (!cutoff) {\n        return;\n      }\n\n      const viewportInfo =\n        cornerstoneViewportService.getViewportInfo(viewportId);\n      const matchedDisplaySets = Array.from(\n        HangingProtocolService.displaySetMatchDetails.values()\n      );\n      const matchedDisplaySetIndex = matchedDisplaySets.findIndex(\n        (displayset) =>\n          displayset.displaySetInstanceUID ===\n          viewportInfo.viewportData.data.displaySetInstanceUID\n      );\n\n      const matchedDisplaySetKeys = Array.from(\n        HangingProtocolService.displaySetMatchDetails.keys()\n      );\n      const matchedDisplaySet = matchedDisplaySetKeys[matchedDisplaySetIndex];\n      if (!matchedDisplaySet) return;\n\n      const imageData = viewport.getImageData();\n      const scalarData = imageData?.scalarData;\n      const dimensions = imageData?.dimensions;\n      if (!scalarData || !dimensions) return;\n\n      // probably will need to account for\n      // imageData.direction\n      // interesting that dim[1], dim[0] are reversed for vtk.js => tf.js\n      // assume this direction does not change\n      const { bboxWidth, bboxHeight, width, height } = tf.tidy(() => {\n        const tensor = tf.tensor2d(new Float32Array(scalarData), [\n          dimensions[1],\n          dimensions[0],\n        ]);\n        const mask = tensor.greater(cutoff); // get boolean\n        const widthBool = mask.any(0); // height?\n        const heightBool = mask.any(1); // width?\n\n        // get bbox\n        const left = widthBool.argMax();\n        const right = widthBool.reverse().argMax().mul(-1).add(widthBool.size);\n        const top = heightBool.argMax();\n        const bottom = heightBool\n          .reverse()\n          .argMax()\n          .mul(-1)\n          .add(heightBool.size);\n\n        // get percentage difference in width and height\n        const bboxWidth = right.sub(left).dataSync()[0];\n        const bboxHeight = bottom.sub(top).dataSync()[0];\n        const width = widthBool.size;\n        const height = heightBool.size;\n\n        return {\n          bboxWidth,\n          bboxHeight,\n          width,\n          height,\n        };\n      });\n\n      const bboxAspectRatio = bboxWidth / bboxHeight;\n      const canvasAspectRatio = viewport.sWidth / viewport.sHeight;\n      // console.log({bboxAspectRatio, canvasAspectRatio})\n      // if(bboxAspectRatio > canvasAspectRatio){\n      //   bboxWidth = canvasAspectRatio*bboxHeight\n      //   bboxAspectRatio = bboxWidth/bboxHeight\n      //   console.log('changed', {bboxAspectRatio, canvasAspectRatio})\n      // }\n\n      const bboxWidthPercentage = bboxWidth / width; // add buffer\n      const bboxHeightPercentage = bboxHeight / height;\n\n      // TODO do not hard code, pick the max between bboxwidth and aspect ratio height\n      const areaZoom = bboxWidthPercentage;\n      //const panAmount = (1 - areaZoom) / 2;\n\n      if (matchedDisplaySet === 'LMLO') {\n        viewport.setDisplayArea(\n          {\n            imageArea: [areaZoom, areaZoom],\n            imageCanvasPoint: {\n              canvasPoint: [0, 0.5],\n              imagePoint: [0, 0.5],\n            },\n            storeAsInitialCamera: true,\n          },\n          true\n        );\n      }\n      if (matchedDisplaySet === 'RMLO') {\n        viewport.setDisplayArea(\n          {\n            imageArea: [areaZoom, areaZoom],\n            imageCanvasPoint: {\n              canvasPoint: [1, 0.5],\n              imagePoint: [1, 0.5],\n            },\n            storeAsInitialCamera: true,\n          },\n\n          true\n        );\n      }\n      if (matchedDisplaySet === 'LCC') {\n        viewport.setDisplayArea(\n          {\n            imageArea: [areaZoom, areaZoom],\n            imageCanvasPoint: {\n              canvasPoint: [0, 0.5],\n              imagePoint: [0, 0.5],\n            },\n            storeAsInitialCamera: true,\n          },\n          true\n        );\n      }\n      if (matchedDisplaySet === 'RCC') {\n        viewport.setDisplayArea(\n          {\n            imageArea: [areaZoom, areaZoom],\n            imageCanvasPoint: {\n              canvasPoint: [1, 0.5],\n              imagePoint: [1, 0.5],\n            },\n            storeAsInitialCamera: true,\n          },\n          true\n        );\n      }\n    }\n\n    destroy() {\n    }\n  }\n  ","import { DicomMetadataStore, pubSubServiceInterface } from '@ohif/core';\nimport { internal } from '@cornerstonejs/dicom-image-loader';\nconst { getOptions } = internal;\nimport _ from 'lodash';\nimport {\n  eventTarget,\n  EVENTS,\n  Enums,\n  imageLoader,\n  imageLoadPoolManager,\n} from '@cornerstonejs/core';\n\nconst LOCAL_EVENTS = {};\n\nexport default class CacheAPIService {\n  listeners: { [key: string]: Function[] };\n  EVENTS: { [key: string]: string };\n  element: HTMLElement;\n  private commandsManager;\n  private extensionManager;\n  private dataSource;\n  private options;\n  public storageUsage;\n  public storageQuota;\n\n  constructor(servicesManager, commandsManager, extensionManager) {\n    this.listeners = {};\n    this.EVENTS = LOCAL_EVENTS;\n    this.commandsManager = commandsManager;\n    this.extensionManager = extensionManager;\n    this.storageUsage = null;\n    this.storageQuota = null;\n    Object.assign(this, pubSubServiceInterface);\n  }\n\n  public init() {\n    // Need to add event listener if datasource changes\n    const dataSources = this.extensionManager.getActiveDataSource();\n    this.dataSource = dataSources[0];\n\n    eventTarget.addEventListener(\n      'CORNERSTONE_CACHE_QUOTA_EXCEEDED_ERROR',\n      this.handleQuotaExceededWriteError.bind(this)\n    );\n\n    if (window?.navigator?.storage?.estimate) {\n      window?.navigator?.storage?.estimate().then((estimate) => {\n        console.log(\n          'Storage use: ',\n          estimate.usage * 1e-9,\n          ' of ',\n          estimate.quota * 1e-9,\n          ' GB'\n        );\n        this.storageUsage = estimate.usage;\n        this.storageQuota = estimate.quota;\n      });\n    }\n\n    if (\n      window?.navigator?.storage?.persisted &&\n      window?.navigator?.storage?.persist\n    ) {\n      window?.navigator?.storage?.persisted().then((persistent) => {\n        if (!persistent) {\n          window?.navigator?.storage?.persist().then((persistent) => {\n            if (persistent) {\n              console.log(\n                'Storage will not be cleared except by explicit user action'\n              );\n            } else {\n              console.log(\n                'Storage may be cleared by the UA under storage pressure.'\n              );\n            }\n          });\n        } else {\n          console.log(\n            'Storage will not be cleared except by explicit user action'\n          );\n        }\n      });\n    }\n  }\n\n  public async setViewedStudy(StudyInstanceUID) {\n    await this.dataSource.retrieve.series.metadata({ StudyInstanceUID });\n    const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n    const imageIds = study.series.flatMap((serie) =>\n      serie.instances.flatMap((instance) => instance.imageId)\n    );\n    const urls = imageIds.map((imageId) =>\n      imageId.split(':').slice(1).join(':')\n    );\n    const options = getOptions();\n    const getScope = options.cache.getScope;\n    const scopes = _.uniq(urls.map((url) => getScope({ url })));\n    scopes.forEach(async (scope) => {\n      const cache = await caches.open(scope);\n      const keys = await cache.keys();\n      keys.forEach(async (key) => {\n        const res = await cache.match(key.url, {\n          ignoreVary: true,\n          ignoreMethod: true,\n          ignoreSearch: true,\n        });\n        if(!res) return\n        const req = new Request(key.url, {\n          headers: {\n            'dicom-last-put-date': new Date().toUTCString(),\n            'dicom-last-viewed-date': new Date().toUTCString(),\n            'dicom-content-length': key.headers.get('dicom-content-length')\n          },\n        });\n        if (res) {\n          cache.put(req, res);\n        }\n      });\n    });\n  }\n\n  public async cacheStudy(StudyInstanceUID) {\n    await this.dataSource.retrieve.series.metadata({ StudyInstanceUID });\n    const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n    const imageIds = study.series.flatMap((serie) =>\n      serie.instances.flatMap((instance) => instance.imageId)\n    );\n    this.cacheImageIds(imageIds);\n  }\n\n  public async cacheSeries(StudyInstanceUID, SeriesInstanceUID) {\n    await this.dataSource.retrieve.series.metadata({ StudyInstanceUID });\n    const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n    const imageIds = study.series\n      .filter((serie) => serie.SeriesInstanceUID === SeriesInstanceUID)\n      .flatMap((serie) =>\n        serie.instances.flatMap((instance) => instance.imageId)\n      );\n    this.cacheImageIds(imageIds);\n  }\n\n  public cacheImageIds(imageIds) {\n    function sendRequest(imageId, options) {\n      return imageLoader.loadAndCacheImage(imageId, options).then(\n        () => {},\n        (error) => {\n          console.error(error);\n        }\n      );\n    }\n\n    const priority = 0;\n    const requestType = Enums.RequestType.Prefetch;\n    const options = {\n      preScale: {\n        enabled: true,\n      },\n      useRGBA: true,\n    };\n\n    imageIds.forEach((imageId) => {\n      const additionalDetails = { imageId };\n      imageLoadPoolManager.addRequest(\n        sendRequest.bind(this, imageId, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  public async cacheMissingStudyImageIds(StudyInstanceUIDs) {\n    const existingKeys = await window.caches.keys();\n    const existingStudyInstanceUIDs = existingKeys.map(\n      (key) => key.split('studies/')[1].split('/')[0]\n    );\n    const newStudies = StudyInstanceUIDs.filter(\n      (studyuid) => existingStudyInstanceUIDs.indexOf(studyuid) === -1\n    );\n    newStudies.forEach((studyuid) => {\n      this.cacheStudy(studyuid);\n    });\n  }\n\n  /**\n   * Removes all cached images which have been seen.\n   * @param evt\n   * @returns\n   */\n  private async handleQuotaExceededWriteError(evt) {\n    const scopes = await window.caches.keys();\n    scopes.forEach(async (scope) => {\n      try {\n        const cache = await caches.open(scope);\n        const k = await cache.keys();\n        const lastViewed = k[0].headers.get('dicom-last-viewed-date');\n        const utctime = k[0].headers.get('dicom-last-put-date');\n        const date = utctime ? new Date(utctime) : new Date();\n        const timeNow = new Date();\n        const timeSincePut = timeNow - date;\n        const millisecondsInDay = 8.64e7;\n        if (lastViewed !== 'undefined' || timeSincePut > 7 * millisecondsInDay) {\n          window.caches.delete(scope);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n  }\n\n  public destroy() {\n    eventTarget.removeEventListener(\n      'CORNERSTONE_CACHE_QUOTA_EXCEEDED_ERROR',\n      this.handleQuotaExceededWriteError\n    );\n  }\n}\n","import getPanelModule from './getPanelModule';\nimport getViewportModule from './getViewportModule';\nimport getHangingProtocolModule from './getHangingProtocolModule';\nimport getDataSourcesModule from './getDataSourcesModule';\n\nimport { id } from './id.js';\nimport GoogleSheetsService from './services/GoogleSheetsService';\nimport CropDisplayAreaService from './services/CropDisplayAreaService';\nimport CacheAPIService from './services/CacheAPIService';\n\n// import { CornerstoneEventTarget } from '@cornerstonejs/core/CornerstoneEventTarget';\n// import { Events } from '@cornerstonejs/core/Events';\n\nconst gradientHealthExtension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n  getDataSourcesModule: ({ servicesManager }) => {\n    return getDataSourcesModule({ servicesManager });\n  },\n  getHangingProtocolModule,\n  getPanelModule,\n  getViewportModule,\n  preRegistration({ servicesManager, commandsManager, extensionManager}) {\n    servicesManager.registerService(GoogleSheetsService(servicesManager, commandsManager, extensionManager));\n    servicesManager.registerService(CropDisplayAreaService(servicesManager));\n    servicesManager.registerService(CacheAPIService(servicesManager, commandsManager, extensionManager));\n\n    const { HangingProtocolService } = servicesManager.services;\n    HangingProtocolService.addCustomAttribute('ViewCodeSequence', 'ViewCodeSequence', metaData => {\n        const viewCodeSeq = metaData[\"ViewCodeSequence\"] ??\n        ((metaData.images || metaData.others || [])[0] || {})[\n          \"ViewCodeSequence\"\n        ];\n        return viewCodeSeq[0].CodeValue\n      }\n    );\n  },\n};\n\nexport default gradientHealthExtension;\n","import CropDisplayAreaService from './CropDisplayAreaService';\n\nexport default function CropDisplayAreaServiceWithServices(serviceManager) {\n  return {\n    name: 'CropDisplayAreaService',\n    create: ({ configuration = {} }) => {\n      return new CropDisplayAreaService(serviceManager);\n    },\n  }\n};\n","import GoogleSheetsService from './GoogleSheetsService.js';\n\nexport default function GoogleSheetsServiceWithServices(serviceManager, commandsManager, extensionManager) {\n  return {\n    name: 'GoogleSheetsService',\n    create: ({ configuration = {} }) => {\n      return new GoogleSheetsService(serviceManager, commandsManager, extensionManager);\n    },\n  }\n};\n","import CacheAPIService from './CacheAPIService';\n\nexport default function ExtendedCacheAPIService(servicesManager, commandsManager, extensionManager) {\n  return {\n    name: 'CacheAPIService',\n    create: ({ configuration = {} }) => {\n      return new CacheAPIService(servicesManager, commandsManager, extensionManager);\n    },\n  };\n}\n"],"names":["formatDate","utils","PanelStudyBrowserTracking","_ref","MeasurementService","DisplaySetService","UIDialogService","UINotificationService","getImageSrc","getStudiesForPatientByStudyInstanceUID","requestDisplaySetCreationForStudy","dataSource","StudyInstanceUIDs","useImageViewer","activeViewportId","viewports","numCols","numRows","viewportGridService","useViewportGrid","activeTabName","setActiveTabName","useState","expandedStudyInstanceUIDs","setExpandedStudyInstanceUIDs","studyDisplayList","setStudyDisplayList","displaySets","setDisplaySets","thumbnailImageSrcMap","setThumbnailImageSrcMap","jumpToDisplaySet","setJumpToDisplaySet","activeViewportDisplaySetInstanceUIDs","displaySetInstanceUIDs","isSingleViewport","useEffect","added","EVENTS","MEASUREMENT_ADDED","addedRaw","RAW_MEASUREMENT_ADDED","subscriptions","forEach","evt","push","subscribe","_ref2","source","measurement","referenceSeriesUID","SeriesInstanceUID","referenceStudyUID","StudyInstanceUID","unsubscribe","unsub","sid","async","actuallyMappedStudies","map","study","AccessionNumber","accession","StudyDate","date","StudyDescription","description","NumInstances","instances","ModalitiesInStudy","modalities","PatientID","mrn","PatientName","patientName","studyInstanceUid","StudyTime","time","qidoStudy","numInstances","fetchStudiesForPatient","activeDisplaySets","newImageSrcEntry","displaySet","getDisplaySetByUID","dSet","displaySetInstanceUID","imageIds","getImageIdsForDisplaySet","imageId","Math","floor","length","prevState","mappedDisplaySets","_mapDisplaySets","SubscriptionDisplaySetsAdded","DISPLAY_SETS_ADDED","data","displaySetsAdded","options","madeInClient","SubscriptionDisplaySetsChanged","DISPLAY_SETS_CHANGED","changedDisplaySets","tabs","primaryStudyInstanceUIDs","primaryStudies","recentStudies","allStudies","displaySetsForStudy","filter","ds","tabStudy","sortBySeriesDate","Object","assign","includes","_byDate","a","b","dateA","Date","parse","name","label","studies","sort","studyA","studyB","_createStudyBrowserTabs","element","document","getElementById","scrollIntoView","behavior","thumbnailLocation","t","s","d","tabName","_findTabAndStudyOfDisplaySet","console","warn","updatedExpandedStudyInstanceUIDs","React","StudyBrowser","onClickStudy","shouldCollapseStudy","stdyUid","onClickTab","clickedTabName","onClickThumbnail","onDoubleClickThumbnail","setDisplaySetsForViewport","viewportId","activeDisplaySetInstanceUIDs","propTypes","PropTypes","isRequired","thumbnailDisplaySets","thumbnailNoImageDisplaySets","imageSrc","componentType","Modality","thumbnailNoImageModalities","_getComponentType","viewportIdentificator","reduce","acc","viewportData","index","viewportLabel","array","thumbnailProps","SeriesDescription","seriesNumber","String","SeriesNumber","modality","seriesDate","SeriesDate","numImageFrames","dragData","type","reject","series","canReject","onReject","create","id","centralize","isDraggable","showOverlay","content","Dialog","contentProps","title","body","className","actions","text","classes","onClose","dismiss","onShow","querySelector","focus","onSubmit","action","_ref3","deleteDisplaySet","show","message","error","cornerstone","Promise","resolve","canvas","createElement","utilities","loadImageToCanvas","then","toDataURL","catch","some","retrieve","metadata","WrappedPanelStudyBrowserTracking","commandsManager","extensionManager","servicesManager","getActiveDataSource","utilityModule","getModuleEntry","exports","_getStudyForPatientUtility","_getStudiesForPatientByStudyInstanceUID","bind","_getImageSrcFromImageId","getCornerstoneLibraries","getImageSrcFromImageId","ex","Error","_createGetImageSrcFromImageIdFn","_requestDisplaySetCreationForStudy","services","downloadCSVReport","DISPLAY_STUDY_SUMMARY_INITIAL_VALUE","key","undefined","PanelMeasurementTableTracking","viewportGrid","measurementChangeTimestamp","setMeasurementsUpdated","now","toString","debouncedMeasurementChangeTimestamp","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","displayStudySummary","setDisplayStudySummary","displayMeasurements","setDisplayMeasurements","mappedMeasurements","getMeasurements","m","types","SOPInstanceUID","DicomMetadataStore","getInstance","getDisplaySetsForSeries","images","displayText","uid","measurementType","isActive","_mapMeasurementToDisplay","VALUE_TYPES","updated","MEASUREMENT_UPDATED","removed","MEASUREMENT_REMOVED","cleared","MEASUREMENTS_CLEARED","jumpToImage","jumpToMeasurement","onMeasurementItemClickHandler","_ref6","measurements","find","onMeasurementDeleteHandler","_ref7","remove","displayMeasurementsWithoutFindings","dm","POINT","additionalFindings","StudySummary","MeasurementTable","amount","onClick","onEdit","getMeasurement","onSubmitHandler","_ref4","update","noCloseButton","_ref5","setValue","Input","autoFocus","containerClassName","onChange","event","persist","target","onKeyPress","onDelete","RatingSelector","formIndex","defaultValue","labels","precision","max","getKeyFromValue","v","obj","keys","idx","ele","Number","val","setVal","hover","setHover","Paper","Typography","sx","fontSize","color","gutterBottom","variant","component","Rating","newValue","onChangeActive","newHover","emptyIcon","StarIcon","style","opacity","GridSelector","cols","Boolean","all","one","i","ch","concat","chunk","RadioGroup","row","FormControlLabel","control","Radio","CheckboxLabels","checked","FormGroup","Checkbox","Textarea","rows","debouncedOnChange","useMemo","debounce","TextField","inputProps","multiline","fullWidth","margin","size","DisplayValue","display","marginRight","UserProfile","getDateText","lastUpdated","days","hours","minutes","cd","h","round","toLocaleDateString","year","month","day","JSON","e","CardHeader","overflow","avatar","Avatar","imgProps","crossOrigin","referrerPolicy","src","picture","email","subheader","formTemplate","formValue","setFormValue","onChangeHandler","newFormValue","inputs","template","PanelForm","GoogleSheetsService","setFormTemplate","getFormTemplate","getFormValue","setError","firstLoad","setFirstLoad","initLoading","setInitLoading","loading","setLoading","onNext","getRow","onPrevious","debouncedOnNext","debouncedOnPrevious","GOOGLE_SHEETS_CHANGE","GOOGLE_SHEETS_ERROR","writeFormToRow","values","LinearProgress","height","FormGeneratorComponent","ButtonGroup","LoadingButton","loadingPosition","startIcon","ArrowBack","endIcon","ArrowForward","PanelFormAndMeasurementTable","overflowY","Divider","background","iconName","iconLabel","Component","OHIFCornerstoneViewport","props","fallback","_extends","disableViewportOrientationMarkers","breastProtocol","locked","hasUpdatedPriorsInformation","createdDate","modifiedDate","availableTo","editableBy","protocolMatchingRules","displaySetSelectors","LMLO","seriesMatchingRules","LCC","RMLO","RCC","toolGroupIds","stages","viewportStructure","properties","columns","viewportOptions","toolGroupId","numberOfPriorsReferenced","protocol","getImageId","instance","frame","config","thumbnail","url","renderingAttr","uri","baseWadoRsUri","wadoRoot","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","getWADORSImageId","wadouri","params","paramString","join","wadoUriRoot","buildInstanceWadoUrl","metadataProvider","MetadataProvider","mappings","patientId","_store","urls","studyInstanceUIDMap","Map","getMetaDataByURL","metaData","getInstanceUrl","prefix","modifiedUrl","replace","getMetadataFromRows","seriesuidArray","filteredRows","_","x","rowsByStudy","studyuid","studyNumInstances","parseInt","SeriesTime","isNaN","PatientSex","PatientWeight","PatientAge","Modalities","filesFromStudyInstanceUID","bucketName","studyuids","headers","studyMetadata","apiUrl","response","fetch","res","json","items","prefixes","encodeURIComponent","folderPath","findStudies","aStudy","_dicomJsonConfig","createDicomJSONApi","dicomJsonConfig","init","implementation","updateConfig","dicomWebConfig","initialize","query","get","UserAuthenticationService","getAll","getAuthorizationHeader","naturalizedDicom","addImageIdToUIDs","set","mapParams","search","entries","param","mappedParam","processResults","debug","directURL","customSort","arguments","seriesSummaryMetadata","seriesSummary","addSeriesMetadata","numberOfSeries","naturalizedInstances","addInstances","getStudy","isLoaded","store","dicom","NumberOfFrames","getImageIdsForInstance","getStudyInstanceUIDs","IWebApiDataSource","createDataSource","packageJson","letters","letter_1","letter_2","alphabet","GOOGLE_SHEETS_DESTROY","convertFormValues","constructor","serviceManager","this","listeners","api_key","sheetId","sheetName","settings","formHeader","studyUIDToIndex","pubSubServiceInterface","cacheNearbyStudyInstanceUIDs","bufferBack","bufferFront","CacheAPIService","min","urlIndex","findIndex","slice","URLSearchParams","split","cacheStudy","setFormByStudyInstanceUID","setFormByIndex","rowValues","readFormValue","_broadcastEvent","user","getUser","window","location","readRange","prev","curr","colIndex","header","col","order","baseUrl","Authorization","writeRange","range","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","send","stringify","majorDimension","colName","profile","delta","HangingProtocolService","href","run","activeStudy","getActiveDisplaySets","nextParams","nextURL","history","replaceState","setViewedStudy","destroy","CROP_DISPLAY_AREA_INIT","CropDisplayAreaService","tf","CornerstoneEventTarget","addEventListener","CS_EVENTS","STACK_VIEWPORT_NEW_STACK","handleBreastDensityHP","cornerstoneViewportService","detail","enabledElement","getEnabledElement","viewport","voiRange","invert","getProperties","cutoff","lower","upper","viewportInfo","getViewportInfo","matchedDisplaySetIndex","Array","from","displaySetMatchDetails","displayset","matchedDisplaySet","imageData","getImageData","scalarData","dimensions","bboxWidth","bboxHeight","width","mask","Float32Array","greater","widthBool","any","heightBool","left","argMax","right","reverse","mul","add","top","bottom","sub","dataSync","areaZoom","sWidth","sHeight","setDisplayArea","imageArea","imageCanvasPoint","canvasPoint","imagePoint","storeAsInitialCamera","getOptions","internal","LOCAL_EVENTS","storageUsage","storageQuota","dataSources","eventTarget","handleQuotaExceededWriteError","navigator","storage","estimate","log","usage","quota","persisted","persistent","flatMap","serie","getScope","cache","caches","scope","match","ignoreVary","ignoreMethod","ignoreSearch","req","Request","toUTCString","put","cacheImageIds","cacheSeries","sendRequest","imageLoader","requestType","Enums","Prefetch","preScale","enabled","useRGBA","additionalDetails","imageLoadPoolManager","addRequest","cacheMissingStudyImageIds","existingStudyInstanceUIDs","indexOf","k","lastViewed","utctime","timeNow","delete","err","removeEventListener","getDataSourcesModule","getHangingProtocolModule","getPanelModule","getViewportModule","preRegistration","registerService","configuration","addCustomAttribute","others","CodeValue"],"sourceRoot":""}